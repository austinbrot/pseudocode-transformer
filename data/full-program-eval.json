{"translation": {"en": "let a , b , c , d , e be integers", "c++": "int a , b , c , d , e ;"}}
{"translation": {"en": "read a [ENDL] read b [ENDL] read c [ENDL] read d [ENDL] read e [ENDL] if ( a + b + c + d + e ) modulo 5 is not 0 or ( a + b + c + d + e ) / 5 is 0 [ENDL] print - 1 [ENDL] else do the following [ENDL] print ( a + b + c + d + e ) / 5 [ENDL] declare integer variable sum = 0 and an array of integers arr with size 5", "c++": "int main() { cin >> a ; cin >> b ; cin >> c ; cin >> d ; cin >> e ; if ( ( a + b + c + d + e ) % 5 != 0 || ( a + b + c + d + e ) / 5 == 0 ) cout << - 1 << endl ; else cout << ( a + b + c + d + e ) / 5 << endl ; int arr [ 5 ] , sum = 0 ; } return 0; }"}}
{"translation": {"en": "for i = 0 to 5 exclusive [ENDL] read arr [ i ] [ENDL] increase sum by arr [ i ] [ENDL] float ans = sum / 5 [ENDL] if sum = 0 [ENDL] print - 1 [ENDL] else if ans = int ( ans ) [ENDL] print int ( ans ) [ENDL] else [ENDL] print - 1 [ENDL] cmp is a boolean function with integer arguments a and b", "c++": "int main() { for ( int i = 0 ; i < 5 ; i ++ ) cin >> arr [ i ] ; sum += arr [ i ] ; float ans = float ( sum ) / 5 ; } if ( sum == 0 ) cout << - 1 << endl ; else if ( ans == int ( ans ) ) cout << int ( ans ) << endl ; else cout << - 1 << endl ; bool cmp ( int a , int b ) } return 0; }"}}
{"translation": {"en": "return a < b [ENDL] declare integer variable sum = 0 [ENDL] create integer n [ENDL] for integer i = 0 to 5 exclusive [ENDL] read n [ENDL] increase sum by n [ENDL] if sum = 0 [ENDL] print - 1 [ENDL] if sum % 5 = 0 [ENDL] print sum / 5 [ENDL] else [ENDL] print - 1 [ENDL] x , i = int", "c++": "return a < b ; int sum = 0 ; } int main() { int n ; for ( int i = 0 ; i < 5 ; i ++ ) cin >> n ; sum += n ; if ( sum == 0 ) } cout << - 1 << endl ; if ( sum % 5 == 0 ) return 0; } cout << sum / 5 << endl ; else cout << - 1 << endl ; int x , i ; }"}}
{"translation": {"en": "sum = int with sum = 0 [ENDL] for i = 0 to 5 [ENDL] read x [ENDL] add x to sum [ENDL] if sum is not a multiple of or if sum equals 0 [ENDL] print \" - 1 \" [ENDL] else [ENDL] print sum / 5 [ENDL] create int sum and a , set sum to 0", "c++": "int main() { int sum = 0 ; for ( i = 0 ; i < 5 ; i ++ ) cin >> x ; sum = sum + x ; if ( sum % 5 != 0 || sum == 0 ) } cout << \" -1 \" << endl ; else cout << sum / 5 << endl ; int sum = 0 , a ; } return 0; }"}}
{"translation": {"en": "for i = 0 to 5 exclusive [ENDL] read a [ENDL] set sum to sum + a [ENDL] if sum equal to 0 [ENDL] print - 1 [ENDL] else if sum mod 5 = 0 [ENDL] print sum / 5 and a newline [ENDL] otherwise [ENDL] print - 1 [ENDL] create int a and i", "c++": "int main() { for ( int i = 0 ; i < 5 ; i ++ ) cin >> a ; sum += a ; if ( sum == 0 ) } cout << - 1 << endl ; else if ( sum % 5 == 0 ) cout << sum / 5 << endl ; else cout << - 1 << endl ; int a , i ; return 0; }"}}
{"translation": {"en": "set sum to 0 [ENDL] for i = 0 to 5 exclusive [ENDL] read a [ENDL] sum = sum + a [ENDL] if sum mod 5 is different from 0 or sum = 0 [ENDL] print - 1 [ENDL] else [ENDL] print sum / 5 and a newline [ENDL] create int array a of length 1005", "c++": "int main() { int sum = 0 ; for ( i = 0 ; i < 5 ; i ++ ) cin >> a ; sum = sum + a ; if ( sum % 5 != 0 || sum == 0 ) } cout << \" -1 \" << endl ; else cout << sum / 5 << endl ; int a [ 1005 ] ; } return 0; }"}}
{"translation": {"en": "ans = 0 [ENDL] for i = 0 to 5 exclusive [ENDL] read a [ i ] [ENDL] ans = ans + a [ i ] [ENDL] if ans equal to 0 [ENDL] print - 1 [ENDL] else if ans mod 5 = 0 [ENDL] print ans / 5 and a newline [ENDL] else [ENDL] print - 1 [ENDL] declare integers sum , c1 , c2 , c3 , c4 and c5", "c++": "int ans = 0 ; int main() { for ( int i = 0 ; i < 5 ; i ++ ) cin >> a [ i ] ; ans += a [ i ] ; if ( ans == 0 ) } cout << \" -1 \" << endl ; else if ( ans % 5 == 0 ) cout << ans / 5 << endl ; else cout << \" -1 \" << endl ; int sum , c1 , c2 , c3 , c4 , c5 ; return 0; }"}}
{"translation": {"en": "read c1 , c2 , c3 , c4 and c5 [ENDL] sum = c1 + c2 + c3 + c4 + c5 [ENDL] if sum ! = 0 & & sum % 5 = 0 [ENDL] print sum / 5 [ENDL] else [ENDL] print \" - 1 \" [ENDL] a , b , c , d , e = int", "c++": "int main() { cin >> c1 >> c2 >> c3 >> c4 >> c5 ; sum = c1 + c2 + c3 + c4 + c5 ; if ( sum != 0 && sum % 5 == 0 ) cout << sum / 5 << endl ; else cout << \" -1 \" << endl ; int a , b , c , d , e ; } }"}}
{"translation": {"en": "loop while reading a then b then c then d then e [ENDL] ans = int with ans = 0 [ENDL] set ans to a + b + c + d + e [ENDL] if ans is a multiple of 5 and not 0 [ENDL] print ans / 5 [ENDL] else [ENDL] print - 1 [ENDL] create integers a , b , c , d , e and sum", "c++": "int main() { while ( cin >> a >> b >> c >> d >> e ) int ans = 0 ; ans = a + b + c + d + e ; if ( ans % 5 == 0 && ans != 0 ) cout << ans / 5 << endl ; else cout << - 1 << endl ; int a , b , c , d , e , sum ; } return 0; }"}}
{"translation": {"en": "read a , b , c , d and e [ENDL] set sum to a + b + c + d + e [ENDL] if sum > 0 & & sum % 5 = 0 [ENDL] print sum / 5 [ENDL] else [ENDL] print \" - 1 \" [ENDL] create int x and sum , sum = 0", "c++": "int main() { cin >> a >> b >> c >> d >> e ; sum = a + b + c + d + e ; if ( sum > 0 && sum % 5 == 0 ) cout << sum / 5 << endl ; else cout << \" -1 \" << endl ; int x , sum = 0 ; }"}}
{"translation": {"en": "for i = 0 to 5 exclusive [ENDL] read x [ENDL] sum = sum + x [ENDL] if sum mod 5 is different from 0 or sum = 0 [ENDL] print - 1 [ENDL] else [ENDL] print sum / 5 and a newline [ENDL] declare integer sum = 0 and an array of integers a with size 5", "c++": "int main() { for ( int i = 0 ; i < 5 ; i ++ ) cin >> x ; sum = sum + x ; if ( sum % 5 != 0 || sum == 0 ) } cout << - 1 << endl ; else cout << sum / 5 << endl ; int a [ 5 ] , sum = 0 ; } }"}}
{"translation": {"en": "for integer i = 0 to 5 exclusive [ENDL] read a [ i ] [ENDL] increase sum by a [ i ] [ENDL] if sum modulo 5 = 0 & & sum is not 0 [ENDL] print sum / 5 [ENDL] else [ENDL] print - 1 [ENDL] create int a , n and total with n = 5 and total = 0", "c++": "int main() { for ( int i = 0 ; i < 5 ; i ++ ) cin >> a [ i ] ; sum += a [ i ] ; if ( sum % 5 == 0 && sum != 0 ) } cout << sum / 5 << endl ; else cout << - 1 << endl ; int a , n = 5 , total = 0 ; } }"}}
{"translation": {"en": "while decrement n [ENDL] read a [ENDL] set total to total + a [ENDL] if total = 0 [ENDL] print - 1 [ENDL] else if total mod 5 = 0 [ENDL] print total / 5 [ENDL] otherwise [ENDL] print - 1 [ENDL] print a newline [ENDL] declare integer variables c1 , c2 , c3 , c4 and c5", "c++": "int main() { while ( n -- ) cin >> a ; total += a ; if ( total == 0 ) } cout << - 1 ; else if ( total % 5 == 0 ) cout << ( total / 5 ) ; else cout << - 1 ; cout << endl ; } int c1 , c2 , c3 , c4 , c5 ; return 0; }"}}
{"translation": {"en": "read c1 , c2 , c3 , c4 and c5 [ENDL] create integer m = c1 + c2 + c3 + c4 + c5 [ENDL] if m modulo 5 is 0 and m is not 0 [ENDL] print m / 5 [ENDL] else [ENDL] print - 1 [ENDL] create long long array arr with 1000000 elements", "c++": "int main() { cin >> c1 >> c2 >> c3 >> c4 >> c5 ; int m = c1 + c2 + c3 + c4 + c5 ; if ( m % 5 == 0 && m != 0 ) cout << m / 5 << endl ; else cout << - 1 << endl ; long long arr [ 1000000 ] ; } return 0; }"}}
{"translation": {"en": "create set of long longs s [ENDL] mm = map from string to string [ENDL] declare string array ss with size 100000 [ENDL] declare chara array ch with size 100000 [ENDL] create integers a and res where res = 0 [ENDL] for integer i = 0 to 5 exclusive [ENDL] read a [ENDL] increase res by a [ENDL] if res = 0 | | res % 5 ! = 0 [ENDL] print - 1 [ENDL] print res / 5 [ENDL] declare integer variables a and sum", "c++": "set < long long > s ; map < string , string > mm ; string ss [ 100000 ] ; char ch [ 100000 ] ; int a , res = 0 ; int main() { for ( int i = 0 ; i < 5 ; i ++ ) cin >> a ; res += a ; if ( res == 0 || res % 5 != 0 ) } cout << - 1 << endl ; cout << res / 5 << endl ; return 0; } int a , sum ; }"}}
{"translation": {"en": "for integer i = 0 to 5 exclusive [ENDL] read a [ENDL] increase sum by a [ENDL] if sum = 0 [ENDL] print - 1 [ENDL] if sum % 5 = 0 [ENDL] print sum / 5 [ENDL] print - 1 [ENDL] create integers a , b , c , d and e", "c++": "for ( int i = 0 ; i < 5 ; i ++ ) int main() { cin >> a ; sum += a ; if ( sum == 0 ) } cout << - 1 << endl ; if ( sum % 5 == 0 ) return 0; } cout << sum / 5 << endl ; cout << - 1 << endl ; return 0; } int a , b , c , d , e ; }"}}
{"translation": {"en": "read a , b , c , d and e [ENDL] declare integer s = sum of a , b , c , d and e [ENDL] if s modulo 5 is not 0 or s is 0 [ENDL] print \" - 1 \" [ENDL] else [ENDL] print s / 5 [ENDL] let s , c be integers with s equal to 0", "c++": "int main() { cin >> a >> b >> c >> d >> e ; int s = a + b + c + d + e ; if ( s % 5 != 0 || s == 0 ) cout << \" -1 \" << endl ; else cout << s / 5 << endl ; int s = 0 , c ; }"}}
{"translation": {"en": "for i = 0 to 5 exclusive [ENDL] read c [ENDL] increase s by c [ENDL] if s is not a multiple of 5 or not s do the following [ENDL] print - 1 [ENDL] else do the following [ENDL] print s / 5 [ENDL] set int s to 0 , c", "c++": "int main() { for ( int i = 0 ; i < 5 ; i ++ ) cin >> c ; s += c ; if ( s % 5 || ! s ) } cout << - 1 << endl ; else cout << s / 5 << endl ; int s = 0 , c ; }"}}
{"translation": {"en": "for i = 0 to less than 5 do the following [ENDL] read c [ENDL] s equals s plus c [ENDL] if s modulo 5 or not s is true [ENDL] output - 1 [ENDL] else [ENDL] output s / 5 [ENDL] MOD = constant integer with value of 1e9 + 7", "c++": "int main() { for ( int i = 0 ; i < 5 ; i ++ ) cin >> c ; s += c ; if ( s % 5 || ! s ) } cout << - 1 << endl ; else cout << s / 5 << endl ; const int MOD = 1e9 + 7 ; }"}}
{"translation": {"en": "in function pow that returns a long long and takes arguments a , b = long long [ENDL] ans = long long with value of 1 [ENDL] while b is not 0 [ENDL] if b bitwise and 1 is true then set ans to ( ans * a ) mod MOD [ENDL] set b to b / 2 [ENDL] set a to ( a * a ) mod MOD [ENDL] return ans [ENDL] c1 , c2 , c3 , c4 , c5 = integers [ENDL] read c1 , c2 , c3 , c4 and c5 [ENDL] s = integer with value of c1 + c2 + c3 + c4 + c5 [ENDL] if s equals 0 [ENDL] print - 1 [ENDL] else [ENDL] if s mod 5 equals 0 [ENDL] print s / 5 [ENDL] else [ENDL] print - 1 [ENDL] x , r = integer with r = 0", "c++": "long long pow ( long long a , long long b ) long long ans = 1 ; while ( b ) if ( b & 1 ) ans = ( ans * a ) % MOD ; b /= 2 ; a = ( a * a ) % MOD ; return ans ; } int c1 , c2 , c3 , c4 , c5 ; } int main() { cin >> c1 >> c2 >> c3 >> c4 >> c5 ; int s = c1 + c2 + c3 + c4 + c5 ; if ( s == 0 ) cout << \" -1 \" << endl ; else return 0; if ( s % 5 == 0 ) cout << s / 5 << endl ; else cout << \" -1 \" << endl ; int x , r = 0 ; } return 0; }"}}
{"translation": {"en": "for i = 0 to 4 [ENDL] read x [ENDL] r = r + x [ENDL] if ( r modulo 5 is 0 and r > 0 ) , print r / 5 else print - 1 [ENDL] integers = a , b , c , d , e", "c++": "int main() { for ( int i = 0 ; i < 5 ; ++ i ) cin >> x ; r += x ; cout << ( ( r % 5 == 0 && r > 0 ) ? r / 5 : - 1 ) << endl ; } int a , b , c , d , e ; return 0; }"}}
{"translation": {"en": "read a , b , c , d , e [ENDL] set int sum to a + b + c + d + e [ENDL] if sum is 0 then do the following [ENDL] output - 1 [ENDL] else if sum modulo 5 is 0 then [ENDL] output sum / 5 [ENDL] else [ENDL] output - 1 [ENDL] a , b , c , d , e = integers", "c++": "int main() { cin >> a >> b >> c >> d >> e ; int sum = a + b + c + d + e ; if ( sum == 0 ) cout << - 1 << endl ; else if ( sum % 5 == 0 ) cout << sum / 5 << endl ; else cout << - 1 << endl ; int a , b , c , d , e ; return 0; }"}}
{"translation": {"en": "Read a [ENDL] Read b [ENDL] Read c [ENDL] Read d [ENDL] Read e [ENDL] if ( a + b + c + d + e ) modulo 5 is not 0 OR ( a + b + c + d + e ) / 5 is 0 [ENDL] print - 1 and a new line [ENDL] else do the following [ENDL] print ( a + b + c + d + e ) / 5 and a new line [ENDL] set const int N to 1e6 + 5", "c++": "int main() { cin >> a ; cin >> b ; cin >> c ; cin >> d ; cin >> e ; if ( ( a + b + c + d + e ) % 5 != 0 || ( a + b + c + d + e ) / 5 == 0 ) cout << - 1 << endl ; else cout << ( a + b + c + d + e ) / 5 << endl ; const int N = 1e6 + 5 ; } return 0; }"}}
{"translation": {"en": "set int s to 0 [ENDL] for i = 0 to i is less than 5 do the following [ENDL] integers = x [ENDL] read x [ENDL] s equals s plus x [ENDL] if s is 0 or ( s modulo 5 ) is not 0 , then do the following [ENDL] output - 1 [ENDL] else [ENDL] output s / 5 [ENDL] c1 , c2 , c3 , c4 , c5 = int", "c++": "int s = 0 ; int main() { for ( int i = 0 ; i < 5 ; i ++ ) int x ; cin >> x ; s += x ; if ( s == 0 || ( s % 5 ) ) } cout << \" -1 \" << endl ; else cout << s / 5 << endl ; int c1 , c2 , c3 , c4 , c5 ; return 0; }"}}
{"translation": {"en": "loop while reading c1 then c2 then c3 then c4 then c5 [ENDL] s = int with s = 0 [ENDL] set s to c1 + c2 + c3 + c4 + c5 [ENDL] if s equals 0 [ENDL] print \" - 1 \" [ENDL] else [ENDL] if s is a multiple of 5 [ENDL] print s / 5 [ENDL] else [ENDL] print \" - 1 \" [ENDL] set int a [ 6 ] , i , j , sum to 0", "c++": "int main() { while ( cin >> c1 >> c2 >> c3 >> c4 >> c5 ) int s = 0 ; s = c1 + c2 + c3 + c4 + c5 ; if ( s == 0 ) cout << \" -1\\n \" ; else if ( s % 5 == 0 ) cout << s / 5 << \" \\n \" ; else cout << \" -1\\n \" ; int a [ 6 ] , i , j , sum = 0 ; } } return 0; }"}}
{"translation": {"en": "for = 0 to less than 5 do the following [ENDL] read a [ i ] [ENDL] set sum to sum + a [ i ] [ENDL] set int res to sum / 5 [ENDL] if sum = 0 or sum modulo 5 is not equal to 0 then do [ENDL] output - 1 [ENDL] else if sum modulo 5 equals 0 [ENDL] output res [ENDL] create integer array c with size 10", "c++": "int main() { for ( i = 0 ; i < 5 ; i ++ ) cin >> a [ i ] ; sum = sum + a [ i ] ; int res = sum / 5 ; } if ( sum == 0 || sum % 5 != 0 ) cout << \" -1 \" << endl ; else if ( sum % 5 == 0 ) cout << res << endl ; int c [ 10 ] ; return 0; }"}}
{"translation": {"en": "create integers b , sum , i with b = 0 , sum = 0 , i = 0 [ENDL] for i = 0 to 5 exclusive [ENDL] read c [ i ] [ENDL] set sum to sum + c [ i ] [ENDL] if sum is 0 [ENDL] print \" - 1 \" print newline [ENDL] else if sum % 5 is 0 [ENDL] print sum / 5 print newline [ENDL] else [ENDL] print \" - 1 \" print newline [ENDL] num = integer array of size 5 , sum = integer with sum = 0", "c++": "int b = 0 , sum = 0 , i = 0 ; int main() { for ( i = 0 ; i < 5 ; i ++ ) cin >> c [ i ] ; sum = sum + c [ i ] ; if ( sum == 0 ) } cout << \" -1 \" << endl ; else if ( sum % 5 == 0 ) cout << sum / 5 << endl ; else cout << \" -1 \" << endl ; int num [ 5 ] , sum = 0 ; } return 0; }"}}
{"translation": {"en": "for i = 0 to 4 [ENDL] read num [ i ] [ENDL] sum = sum + num [ i ] [ENDL] if sum modulo 5 is 0 and sum is not 0 [ENDL] print sum / 5 [ENDL] else [ENDL] print - 1 [ENDL] create integers a , b , c , d , e", "c++": "int main() { for ( int i = 0 ; i < 5 ; i ++ ) cin >> num [ i ] ; sum += num [ i ] ; if ( sum % 5 == 0 && sum != 0 ) } cout << sum / 5 << endl ; else cout << \" -1 \" << endl ; int a , b , c , d , e ; }"}}
{"translation": {"en": "read a [ENDL] read b [ENDL] read c [ENDL] read d [ENDL] read e [ENDL] if ( a + b + c + d + e ) % 5 is not 0 or ( a + b + c + d + e ) / 5 is 0 [ENDL] print - 1 print newline [ENDL] else [ENDL] print ( a + b + c + d + e ) / 5 print newline [ENDL] declare function fastIo with return type void", "c++": "int main() { cin >> a ; cin >> b ; cin >> c ; cin >> d ; cin >> e ; if ( ( a + b + c + d + e ) % 5 != 0 || ( a + b + c + d + e ) / 5 == 0 ) cout << - 1 << endl ; else cout << ( a + b + c + d + e ) / 5 << endl ; void fastIo ( ) { } } return 0; }"}}
{"translation": {"en": "call function fastIo [ENDL] create integer sum = 0 [ENDL] for i = 0 to 5 exclusive [ENDL] let temp be int [ENDL] read temp [ENDL] add temp to sum [ENDL] if ( sum mod 5 equals 0 ) and sum is greater or equal to 5 [ENDL] print sum divided by 5 [ENDL] else [ENDL] print \" - 1 \" [ENDL] declare integers n , m", "c++": "fastIo ( ) ; int main() { int sum = 0 ; for ( int i = 0 ; i < 5 ; i ++ ) int temp ; cin >> temp ; sum += temp ; if ( sum % 5 == 0 && sum >= 5 ) } cout << sum / 5 << endl ; else cout << \" -1 \" << endl ; int n , m ; return 0; }"}}
{"translation": {"en": "declare integer count = 0 [ENDL] read n and m [ENDL] for a = 0 , increment a [ENDL] if a * a is greater than n , end loop [ENDL] for b = 0 , incrementing b [ENDL] if a + b * b is greater than m , end loop [ENDL] if a * a + b is n and a + b * b is m , increment count [ENDL] print count and ' \\ n ' [ENDL] declare long long int variables n and m", "c++": "int main() { int count = 0 ; cin >> n >> m ; for ( int a = 0 ; ; a ++ ) if ( a * a > n ) break ; for ( int b = 0 ; ; b ++ ) if ( a + b * b > m ) break ; if ( a * a + b == n && a + b * b == m ) count ++ ; cout << count << ' \\n ' ; } } long long int n , m ; return 0; }"}}
{"translation": {"en": "read standard input to n and m [ENDL] create long long integer c = 0 [ENDL] for i = 0 to 1000 inclusive [ENDL] in a for loop , change j from 0 to 1000 inclusive [ENDL] if i * i + j = n and i + j * j is equal to m , add 1 to the variable c [ENDL] print c and \" \\ n \" to the standard output [ENDL] n , m = integers", "c++": "cin >> n >> m ; int main() { long long int c = 0 ; for ( long long int i = 0 ; i <= 1000 ; i ++ ) for ( long long int j = 0 ; j <= 1000 ; j ++ ) if ( i * i + j == n && i + j * j == m ) { c ++ ; } cout << c << \" \\n \" ; } } int n , m ; return 0; }"}}
{"translation": {"en": "pair1 , pair2 = integers with both having value of 0 [ENDL] min , max = integers [ENDL] count = integer with value of 0 [ENDL] read n and m [ENDL] if n is greater than m [ENDL] set max to n [ENDL] set min to m [ENDL] else [ENDL] set max to m [ENDL] set min to n [ENDL] for i = 0 to max inclusive [ENDL] for j = max to 0 inclusive decreasing [ENDL] if ( i * i ) + j equals n and i + ( j * j ) equals m then add 1 to count [ENDL] print count [ENDL] declare new int variables n and m", "c++": "int main() { int pair1 = 0 , pair2 = 0 ; int min , max ; int count = 0 ; cin >> n >> m ; if ( n > m ) max = n ; min = m ; else max = m ; min = n ; for ( int i = 0 ; i <= max ; i ++ ) } for ( int j = max ; j >= 0 ; j -- ) if ( ( ( i * i ) + j == n ) && ( i + ( j * j ) == m ) ) { count ++ ; } cout << count << endl ; } } int n , m ; return 0; }"}}
{"translation": {"en": "read n and m from the user input [ENDL] create new integer called cnt with value 0 [ENDL] for i from 0 to n inclusive incrementing i [ENDL] new integer variable k = n - i * i [ENDL] increment cnt by one if k squared + i = m [ENDL] print cnt and ' \\ n ' [ENDL] let l , n , i , j , m , and cnt be ints with cnt = 0", "c++": "int main() { cin >> n >> m ; int cnt = 0 ; for ( int i = 0 ; i * i <= n ; i ++ ) int k = n - i * i ; if ( k * k + i == m ) { cnt ++ ; } cout << cnt << ' \\n ' ; } int l , n , i , j , m , cnt = 0 ; return 0; }"}}
{"translation": {"en": "read n and m [ENDL] for i = 0 to 1000 inclusive [ENDL] for j = 0 to 1000 inclusive [ENDL] if i * i + j is n and i + j * j is m then increment cnt [ENDL] print cnt [ENDL] create ints n and m", "c++": "int main() { cin >> n >> m ; for ( i = 0 ; i <= 1000 ; i ++ ) for ( j = 0 ; j <= 1000 ; j ++ ) if ( ( i * i + j == n ) && ( i + j * j == m ) ) cnt ++ ; cout << cnt << endl ; } } int n , m ; }"}}
{"translation": {"en": "read n and m [ENDL] let p = 0 be an integer [ENDL] for a = 0 to a = 1000 exclusive [ENDL] for b = 0 to b = 1000 exclusive [ENDL] if a * a + b equals n and a + b * b equals m then increment p [ENDL] print p [ENDL] declare integers n , m , i , x , a , b , c = 0", "c++": "int main() { cin >> n >> m ; int p = 0 ; for ( int a = 0 ; a < 1000 ; a ++ ) for ( int b = 0 ; b < 1000 ; b ++ ) if ( a * a + b == n && a + b * b == m ) { p ++ ; } cout << p << endl ; } } int n , m , i , x , a , b , c = 0 ; return 0; }"}}
{"translation": {"en": "read n , m [ENDL] let x be square root of n [ENDL] for i = 0 to x inclusive [ENDL] let b be n - i * i [ENDL] let a be m - b * b [ENDL] if a is i , increment c [ENDL] print c and newline [ENDL] new integer constant M = 100000 + 5", "c++": "int main() { cin >> n >> m ; x = sqrt ( n ) ; for ( i = 0 ; i <= x ; i ++ ) b = n - i * i ; a = m - b * b ; if ( a == i ) { c ++ ; } cout << c << endl ; } const int M = 100000 + 5 ; return 0; }"}}
{"translation": {"en": "declare new integers n and m [ENDL] read from the input to n and m [ENDL] create variable ans = 0 with type int [ENDL] for integer a = 0 to 1000 inclusive [ENDL] for integer b = 0 to 1000 inclusive incrementing b [ENDL] if a * a + b = n and a + b * b is equal to m , increment ans [ENDL] print ans [ENDL] a , b , count , i , c and y are integers with count = 0", "c++": "int n , m ; int main() { cin >> n >> m ; int ans = 0 ; for ( int a = 0 ; a <= 1000 ; a ++ ) for ( int b = 0 ; b <= 1000 ; b ++ ) if ( a * a + b == n && a + b * b == m ) { ans ++ ; } cout << ans << endl ; } } int a , b , count = 0 , i , c , y ; return 0; }"}}
{"translation": {"en": "read user input to a and b [ENDL] assign the square root of a to c [ENDL] start for loop from i = 0 to c inclusive [ENDL] change the value of y to a - ( i * i ) [ENDL] if i + y squared is equal to b , increment count [ENDL] print count [ENDL] a = two dimensional int array of sizes 1001 and 1001", "c++": "int main() { cin >> a >> b ; c = sqrt ( a ) ; for ( i = 0 ; i <= c ; i ++ ) y = ( a - ( i * i ) ) ; if ( i + ( y * y ) == b ) { count ++ ; } cout << count << endl ; } int a [ 1001 ] [ 1001 ] ; return 0; }"}}
{"translation": {"en": "n , m , i , j , cnt = int with cnt = 0 [ENDL] read n then m [ENDL] for i = 0 to n inclusive [ENDL] for j = 0 to m inclusive [ENDL] if i * i + j is n and i + j * j is m set a [ i ] [ j ] to 1 [ENDL] for i = 0 to 1001 [ENDL] for j = 0 to 1001 [ENDL] if a [ i ] [ j ] increment cnt [ENDL] print cnt [ENDL] n , m = integers", "c++": "int n , m , i , j , cnt = 0 ; int main() { cin >> n >> m ; for ( i = 0 ; i <= n ; i ++ ) for ( j = 0 ; j <= m ; j ++ ) if ( i * i + j == n && i + j * j == m ) a [ i ] [ j ] = 1 ; for ( i = 0 ; i < 1001 ; i ++ ) } } for ( j = 0 ; j < 1001 ; j ++ ) if ( a [ i ] [ j ] ) cnt ++ ; cout << cnt << endl ; } } int n , m ; return 0; }"}}
{"translation": {"en": "ans = integer with ans = 0 [ENDL] read n , m [ENDL] for i = 0 to 1000 [ENDL] for j = 0 to 1000 [ENDL] if ( ( ( i * i ) + j ) is n and ( i + ( j * j ) ) is m ) , increment ans [ENDL] print ans [ENDL] TESTS = 1", "c++": "int main() { int ans = 0 ; cin >> n >> m ; for ( int i = 0 ; i <= 1000 ; i ++ ) for ( int j = 0 ; j <= 1000 ; j ++ ) if ( ( ( i * i ) + j ) == n && ( i + ( j * j ) ) == m ) { ans ++ ; } cout << ans << endl ; } } int TESTS = 1 ; return 0; }"}}
{"translation": {"en": "while decremented TESTS is not 0 [ENDL] count = 0 , n , m , i , j = int [ENDL] read n , m [ENDL] for i = 0 to sqrt ( n ) inclusive [ENDL] for j = 0 to sqrt ( m ) inclusive [ENDL] if i * i + j is n and i + j * j is m increment count [ENDL] print count [ENDL] N , M = integers", "c++": "int main() { while ( TESTS -- ) int count = 0 , n , m , i , j ; cin >> n >> m ; for ( i = 0 ; i <= sqrt ( n ) ; i ++ ) for ( j = 0 ; j <= sqrt ( m ) ; j ++ ) if ( i * i + j == n && i + j * j == m ) count ++ ; cout << count << ' \\n ' ; } } int N , M ; } return 0; }"}}
{"translation": {"en": "read N , M [ENDL] ans = integer with ans = 0 [ENDL] for i = 0 to 1000 [ENDL] for j = 0 to 1000 [ENDL] if ( ( i * i + j is N ) and ( j * j + i is M ) ) , increment ans [ENDL] print ans [ENDL] n , m , i , b = int , sum = 0", "c++": "int main() { cin >> N >> M ; int ans = 0 ; for ( int i = 0 ; i < 1001 ; ++ i ) for ( int j = 0 ; j < 1001 ; ++ j ) if ( ( i * i + j == N ) && ( j * j + i == M ) ) ++ ans ; cout << ans << endl ; } } int n , m , sum = 0 , i , b ; }"}}
{"translation": {"en": "read n , m [ENDL] for i = 0 to sqrt ( n ) inclusive while i < = m [ENDL] b = n - i * i [ENDL] if i + b * b is m increment sum [ENDL] print sum [ENDL] n , m = long long int", "c++": "int main() { cin >> n >> m ; for ( i = 0 ; i * i <= n && i <= m ; ++ i ) b = n - i * i ; if ( i + b * b == m ) { sum += 1 ; } cout << sum << endl ; } long long int n , m ; return 0; }"}}
{"translation": {"en": "read n , m [ENDL] cp = n [ENDL] sq = long long int [ENDL] count = 0 [ENDL] while n is not - 1 [ENDL] sq = int ( sqrt ( n ) ) [ENDL] if sq * sq is n [ENDL] a = sq [ENDL] b = cp - n [ENDL] if a + b * b is m increment count [ENDL] decrement n [ENDL] print count [ENDL] n , m , i , a , b = int , cnt = 0", "c++": "int main() { cin >> n >> m ; long long int cp = n ; long long int sq ; long long int count = 0 ; while ( n != - 1 ) sq = int ( sqrt ( n ) ) ; if ( sq * sq == n ) long long int a = sq ; long long int b = cp - n ; if ( a + ( b * b ) == m ) count ++ ; n -- ; } cout << count << endl ; } int n , m , i , a , b , cnt = 0 ; return 0; }"}}
{"translation": {"en": "read n , m [ENDL] i = 0 [ENDL] while i < = sqrt ( n ) [ENDL] a = i [ENDL] b = n - ( a * a ) [ENDL] if b > = 0 [ENDL] if a + b * b is m increment cnt [ENDL] increment i [ENDL] print cnt [ENDL] maxn = const integer with maxn = 105", "c++": "int main() { cin >> n >> m ; i = 0 ; while ( i <= sqrt ( n ) ) a = i ; b = n - ( a * a ) ; if ( b >= 0 ) if ( ( a + ( b * b ) ) == m ) cnt ++ ; i ++ ; } cout << cnt << endl ; } const int maxn = 105 ; return 0; }"}}
{"translation": {"en": "n , m = integers [ENDL] a , b = integers [ENDL] ans = integer with ans = 0 [ENDL] read n , m [ENDL] for i = 0 to 1000 [ENDL] for j = 0 to 1000 [ENDL] if ( i * i + j is n and i + j * j is m ) , increment ans [ENDL] print ans [ENDL] n , m = int", "c++": "int n , m ; int a , b ; int ans = 0 ; cin >> n >> m ; int main() { for ( int i = 0 ; i <= 1000 ; i ++ ) for ( int j = 0 ; j <= 1000 ; j ++ ) if ( i * i + j == n && i + j * j == m ) ans ++ ; cout << ans << endl ; } } int n , m ; return 0; }"}}
{"translation": {"en": "read n and m [ENDL] c = 0 = int [ENDL] for a = 0 to 1000 inclusive [ENDL] for b = 0 to 1000 inclusive [ENDL] if a ^ 2 _ b = n and b ^ 2 + a = m then increment c [ENDL] print c [ENDL] declare min taking in ints a and b and returning integer", "c++": "int main() { cin >> n >> m ; int c = 0 ; for ( int a = 0 ; a <= 1000 ; a ++ ) for ( int b = 0 ; b <= 1000 ; b ++ ) if ( a * a + b == n && b * b + a == m ) c ++ ; cout << c << endl ; } } int min ( int a , int b ) return 0; }"}}
{"translation": {"en": "return a if a is less than b or b if not [ENDL] create ints m and n [ENDL] read m and n [ENDL] create integer c = min ( m , n ) [ENDL] make int counter = 0 [ENDL] for i = 0 to c [ENDL] for j = 0 to c [ENDL] if i * i + j is equal to m and i + j * j is equal to n , increment counter [ENDL] print counter [ENDL] a is a new 2d array of integers with size 1001 by 1001", "c++": "return ( a < b ) ? a : b ; int m , n ; } int main() { cin >> m >> n ; int c = min ( m , n ) ; int counter = 0 ; for ( int i = 0 ; i <= c ; i ++ ) for ( int j = 0 ; j <= c ; j ++ ) if ( i * i + j == m && i + j * j == n ) counter ++ ; cout << counter << endl ; } } int a [ 1001 ] [ 1001 ] ; }"}}
{"translation": {"en": "n , m , i , j and cnt are ints with cnt = 0 [ENDL] read input to n and m [ENDL] in a for loop , change i from 0 to n inclusive incrementing i [ENDL] for j = 0 to m inclusive [ENDL] set a [ i ] [ j ] to 1 if i * i + j is equal to n and i + j * j is equal to m [ENDL] for i = 0 to 1001 exclusive [ENDL] start for loop from j = 0 to 1001 exclusive [ENDL] if a [ i ] [ j ] ! = 0 , increment cnt [ENDL] print cnt [ENDL] create integers n and m", "c++": "int n , m , i , j , cnt = 0 ; int main() { cin >> n >> m ; for ( i = 0 ; i <= n ; i ++ ) for ( j = 0 ; j <= m ; j ++ ) if ( i * i + j == n && i + j * j == m ) a [ i ] [ j ] = 1 ; for ( i = 0 ; i < 1001 ; i ++ ) } } for ( j = 0 ; j < 1001 ; j ++ ) if ( a [ i ] [ j ] ) cnt ++ ; cout << cnt << endl ; } } int n , m ; return 0; }"}}
{"translation": {"en": "read n and m [ENDL] let cnt = 0 be an integer [ENDL] for i = 0 while i is less than or equal to n and less than or equal to m [ENDL] let b = n - i * i [ENDL] if b is positive or 0 and i + b * b is equal to m then increment cnt [ENDL] print cnt [ENDL] create integers n and m", "c++": "int main() { cin >> n >> m ; int cnt = 0 ; for ( int i = 0 ; i <= n && i <= m ; i ++ ) int b = n - i * i ; if ( b >= 0 && i + b * b == m ) cnt ++ ; cout << cnt << endl ; } int n , m ; return 0; }"}}
{"translation": {"en": "read variables n and m from the input [ENDL] declare new integer variable c = 0 [ENDL] in a for loop , change i from 0 to 1000 inclusive [ENDL] start for loop from j = 0 to 1000 inclusive incrementing j [ENDL] p is a new integer variable with value i squared + j [ENDL] new integer q with value i + j squared [ENDL] if p is equal to n and q is equal to m , increment c [ENDL] print c [ENDL] declare integers n , m", "c++": "int main() { cin >> n >> m ; int c = 0 ; for ( int i = 0 ; i <= 1000 ; i ++ ) for ( int j = 0 ; j <= 1000 ; j ++ ) int p = i * i + j ; int q = i + j * j ; if ( p == n && q == m ) { c ++ ; } cout << c << endl ; } } int n , m ; }"}}
{"translation": {"en": "read n and m [ENDL] declare integer res = 0 [ENDL] for i = 0 to 100 exclusive [ENDL] for j = 0 to 100 exclusive [ENDL] if ( i * i + j is n and i + j * j is m , increment res [ENDL] print res and newline [ENDL] i , s , j , k , l , n , m = integers with s = 0 , j = 0 , k = 0", "c++": "int main() { cin >> n >> m ; int res = 0 ; for ( int i = 0 ; i < 100 ; i ++ ) for ( int j = 0 ; j < 100 ; j ++ ) if ( i * i + j == n && i + j * j == m ) res ++ ; cout << res << endl ; } } long long int i , s = 0 , j = 0 , k = 0 , l , n , m ; }"}}
{"translation": {"en": "Read m , n [ENDL] for i = 0 to m exclusive [ENDL] for j = 0 to n exclusive [ENDL] set k to i * i + j [ENDL] set l to i + j * j [ENDL] if k is n and l is m , then increment s [ENDL] print s and a new line [ENDL] n , m = integers", "c++": "int main() { cin >> m >> n ; for ( i = 0 ; i <= m ; i ++ ) for ( j = 0 ; j <= n ; j ++ ) k = i * i + j ; l = i + j * j ; if ( k == n && l == m ) s ++ ; cout << s << endl ; } } int n , m ; return 0; }"}}
{"translation": {"en": "read n , m [ENDL] solu = integer with solu = 0 [ENDL] for i = 0 to 1000 [ENDL] for j = 0 to 1000 [ENDL] if ( pow ( i , 2 ) + j is n and i + pow ( j , 2 ) is m ) , increment solu [ENDL] print solu [ENDL] create int n and m", "c++": "int main() { cin >> n >> m ; int solu = 0 ; for ( int i = 0 ; i <= 1000 ; i ++ ) for ( int j = 0 ; j <= 1000 ; j ++ ) if ( pow ( i , 2 ) + j == n && i + pow ( j , 2 ) == m ) solu ++ ; cout << solu << endl ; } } int n , m ; return 0; }"}}
{"translation": {"en": "read n and m [ENDL] counter = 0 [ENDL] for a = 0 to m inclusive [ENDL] for b = 0 to n inclusive [ENDL] if a * a + b = n and a + b * b = m , increment counter [ENDL] print counter [ENDL] create int n and m", "c++": "int main() { cin >> n >> m ; int counter = 0 ; for ( int a = 0 ; a <= m ; a ++ ) for ( int b = 0 ; b <= n ; b ++ ) if ( a * a + b == n && a + b * b == m ) counter ++ ; cout << counter << endl ; int n , m ; return 0; }"}}
{"translation": {"en": "read n and m [ENDL] inte_pair = 0 [ENDL] for i = 0 to n inclusive and m inclusive [ENDL] for j = 0 to n and m inclusive [ENDL] if ( i * i ) + j = n and i + ( j * j ) = m , increment inte_pair [ENDL] print inte_pair [ENDL] n , k , i , m , j = int with k = 0", "c++": "int main() { cin >> n >> m ; int inte_pair = 0 ; for ( int i = 0 ; i <= n && i <= m ; i ++ ) for ( int j = 0 ; j <= n && j <= m ; j ++ ) if ( ( i * i ) + j == n && i + ( j * j ) == m ) inte_pair ++ ; cout << inte_pair << endl ; int n , k = 0 , i , m , j ; }"}}
{"translation": {"en": "read n then m [ENDL] iterate i while i * i < = n [ENDL] iterate j while j * j < = m [ENDL] if i * i + j is n and j * j + i is m increment k [ENDL] print k [ENDL] double integers = EPS = 1e - 9", "c++": "cin >> n >> m ; int main() { for ( i = 0 ; i * i <= n ; i ++ ) for ( j = 0 ; j * j <= m ; j ++ ) if ( i * i + j == n && j * j + i == m ) k ++ ; cout << k << endl ; double EPS = 1e-9 ; return 0; }"}}
{"translation": {"en": "INFF set to 1000000000000000005LL = long long integer [ENDL] integers = n , m [ENDL] read n , m [ENDL] integer c = 0 [ENDL] for a = 0 to less than or equal to sqrt ( n ) do the following [ENDL] for b = 0 to less than or equal to sqrt ( m ) do the following [ENDL] if a squared + b is n and a + b squared is m then add one to c [ENDL] output c [ENDL] let n , m be integers", "c++": "long long INFF = 1000000000000000005LL ; int n , m ; int main() { cin >> n >> m ; int c = 0 ; for ( int a = 0 ; a <= sqrt ( n ) ; ++ a ) for ( int b = 0 ; b <= sqrt ( m ) ; ++ b ) if ( ( a * a + b == n ) && ( a + b * b == m ) ) { c ++ ; } cout << c << ' \\n ' ; } } int n , m ; return 0; }"}}
{"translation": {"en": "while read n , m [ENDL] let ans be a integer with ans = 0 [ENDL] for a = 0 to 1000 inclusive [ENDL] for b = 0 to 1000 inclusive [ENDL] if a * a + b is equal to n and b * b + a is equal to m , increment ans by 1 [ENDL] print ans and newline [ENDL] let m , n , a , b be integers", "c++": "int main() { while ( cin >> n >> m ) int ans = 0 ; for ( int a = 0 ; a <= 1000 ; a ++ ) for ( int b = 0 ; b <= 1000 ; b ++ ) if ( a * a + b == n && b * b + a == m ) ans ++ ; cout << ans << endl ; } } int m , n , a , b ; } return 0; }"}}
{"translation": {"en": "let fit be a integer function [ENDL] let f1 , f2 be integers with f1 = a * a + b , f2 = a + b * b [ENDL] if f1 is equal to n and f2 is equal to m [ENDL] else if f1 is greater than n [ENDL] return 1 [ENDL] else if f2 is greater than m [ENDL] return 1 [ENDL] return - 1 [ENDL] read n , m [ENDL] let cnt be a integer with cnt = 0 [ENDL] for a = 0 to 31 inclusive [ENDL] for b = 0 to 31 inclusive [ENDL] if fit ( ) is equal to 0 [ENDL] increment cnt by 1 [ENDL] else if fit ( ) is equal to 1 [ENDL] stop [ENDL] print cnt and newline [ENDL] define new integer n", "c++": "int fit ( ) int f1 = a * a + b , f2 = a + b * b ; if ( f1 == n && f2 == m ) else if ( f1 > n ) return 0; return 1 ; else if ( f2 > m ) return 1 ; return - 1 ; cin >> n >> m ; } int main() { int cnt = 0 ; for ( a = 0 ; a <= 31 ; a ++ ) for ( b = 0 ; b <= 31 ; b ++ ) if ( fit ( ) == 0 ) cnt ++ ; else if ( fit ( ) == 1 ) break ; cout << cnt << endl ; } int n ; return 0; }"}}
{"translation": {"en": "read n from the user input [ENDL] change n to n - 10 [ENDL] if n is equal to 10 , return cout < < 15 < < endl , 0 [ENDL] if 1 < = n < = 11 , return cout < < 4 < < endl , 0 [ENDL] print 0 [ENDL] integer as n", "c++": "int main() { cin >> n ; n -= 10 ; if ( n == 10 ) return cout << 15 << endl , 0 ; if ( n <= 11 && n >= 1 ) return cout << 4 << endl , 0 ; cout << 0 << endl ; int n ; }"}}
{"translation": {"en": "read n [ENDL] if n is less than or equal to 10 then do the following [ENDL] output 0 [ENDL] else [ENDL] if n > = 11 and n is less than or equal to 19 then do the following [ENDL] output 4 [ENDL] else if n is 20 then do the following [ENDL] output 15 [ENDL] else if n is 21 then do the following [ENDL] output 4 [ENDL] else if n is greater than 21 then do the following [ENDL] output 0 [ENDL] let n be a integer", "c++": "int main() { cin >> n ; if ( n <= 10 ) cout << \" 0 \" << endl ; else if ( n >= 11 && n <= 19 ) cout << \" 4 \" << endl ; else if ( n == 20 ) cout << \" 15 \" << endl ; else if ( n == 21 ) cout << \" 4 \" << endl ; else if ( n > 21 ) cout << \" 0 \" << endl ; int n ; } }"}}
{"translation": {"en": "read n [ENDL] if n < = 10 or n is greater than 21 [ENDL] print 0 and newline [ENDL] else if n equals 20 [ENDL] print 15 and newline [ENDL] else do the following [ENDL] print 4 and newline [ENDL] declare integer n", "c++": "int main() { cin >> n ; if ( n <= 10 || n > 21 ) cout << 0 << endl ; else if ( n == 20 ) cout << 15 << endl ; else cout << 4 << endl ; int n ; } return 0; }"}}
{"translation": {"en": "read n [ENDL] if n is less than or equal to 10 or n is greater than or equal to 22 [ENDL] print ' 0 ' , newline [ENDL] else if n is 20 [ENDL] print \" 15 \" , newline [ENDL] else [ENDL] print ' 4 ' , newline [ENDL] declare integer a", "c++": "int main() { cin >> n ; if ( n <= 10 || n >= 22 ) cout << ' 0 ' << endl ; else if ( n == 20 ) cout << \" 15 \" << endl ; else cout << ' 4 ' << endl ; int a ; return 0; }"}}
{"translation": {"en": "read a [ENDL] let a be a - 10 [ENDL] if a is 10 [ENDL] print ( 4 * 3 ) + 3 , newline [ENDL] else if a is greater than 0 and a is less than 12 [ENDL] print 4 , newline [ENDL] else [ENDL] print 0 , newline [ENDL] n is an integer", "c++": "int main() { cin >> a ; a = a - 10 ; if ( a == 10 ) cout << ( 4 * 3 ) + 3 << endl ; else if ( a > 0 && a < 12 ) cout << 4 << endl ; else cout << 0 << endl ; int n ; } return 0; }"}}
{"translation": {"en": "read n [ENDL] if n is less than 11 [ENDL] print 0 and endline [ENDL] else if n equals 11 or 21 [ENDL] print 4 and endline [ENDL] else if n is between 12 and 19 inclusive [ENDL] print 4 and endline [ENDL] else if n equals 20 [ENDL] print 15 and endline [ENDL] else [ENDL] print 0 and endline [ENDL] create integer N", "c++": "int main() { cin >> n ; if ( n < 11 ) cout << 0 << endl ; else if ( n == 11 || n == 21 ) cout << 4 << endl ; else if ( n >= 12 && n <= 19 ) cout << 4 << endl ; else if ( n == 20 ) cout << 15 << endl ; else cout << 0 << endl ; int N ; }"}}
{"translation": {"en": "read N [ENDL] if N is greater than 21 [ENDL] print ' 0 ' [ENDL] if n is equal to 21 [ENDL] print ' 4 ' [ENDL] if n - 10 is equal to 10 [ENDL] print \" 15 \" [ENDL] if N is less than 20 and N is greater than 10 [ENDL] print \" 4 \" [ENDL] else do [ENDL] show \" 0 \" [ENDL] n , cards = integers with cards = 0", "c++": "cin >> N ; int main() { if ( N > 21 ) cout << ' 0 ' << endl ; if ( N == 21 ) return 0; } cout << ' 4 ' << endl ; if ( N - 10 == 10 ) return 0; } cout << \" 15 \" << endl ; if ( N < 20 && N > 10 ) return 0; } cout << \" 4 \" << endl ; else cout << \" 0 \" << endl ; int n , cards = 0 ; } return 0; }"}}
{"translation": {"en": "Read n [ENDL] set n to n - 10 [ENDL] if n is greater than or equal to 1 and n is less than 10 [ENDL] set cards to 4 [ENDL] else if n is equal to 10 [ENDL] set cards to 15 [ENDL] else if n is equal to 11 [ENDL] set cards to 4 [ENDL] else do the following [ENDL] set cards to 0 [ENDL] print cards and a new line [ENDL] create int n , i , n1", "c++": "int main() { cin >> n ; n -= 10 ; if ( n >= 1 && n < 10 ) cards = 4 ; else if ( n == 10 ) cards = 15 ; else if ( n == 11 ) cards = 4 ; else cards = 0 ; cout << cards << endl ; int n , i , n1 ; return 0; }"}}
{"translation": {"en": "read n [ENDL] i = 10 [ENDL] if n < = 10 [ENDL] set n1 to 0 [ENDL] else [ENDL] if n < = 19 [ENDL] assign 4 to n1 [ENDL] else if n = 20 [ENDL] set n1 to 15 [ENDL] else if n = 21 [ENDL] assign 4 to n1 [ENDL] else [ENDL] set n1 = 0 [ENDL] print n1 [ENDL] let n be a integer", "c++": "int main() { cin >> n ; i = 10 ; if ( n <= 10 ) n1 = 0 ; else if ( n <= 19 ) n1 = 4 ; else if ( n == 20 ) n1 = 15 ; else if ( n == 21 ) n1 = 4 ; else n1 = 0 ; cout << n1 << endl ; } } int n ; }"}}
{"translation": {"en": "while read n [ENDL] if n is less than or equal to 10 or greater than or equal to 22 , [ENDL] print 0 and newline [ENDL] else if n equals 20 [ENDL] print 15 and newline [ENDL] else [ENDL] print 4 and newline [ENDL] create new integer n", "c++": "int main() { while ( cin >> n ) if ( n <= 10 || n >= 22 ) cout << \" 0 \" << endl ; else if ( n == 20 ) cout << \" 15 \" << endl ; else cout << \" 4 \" << endl ; int n ; } } return 0; }"}}
{"translation": {"en": "read variable n from the input [ENDL] if n < = 10 or n > 21 [ENDL] print 0 [ENDL] else if n is equal to 20 [ENDL] print 15 to the standard output [ENDL] else [ENDL] print 4 [ENDL] let n be a integer", "c++": "int main() { cin >> n ; if ( n <= 10 || n > 21 ) cout << 0 << endl ; else if ( n == 20 ) cout << 15 << endl ; else cout << 4 << endl ; int n ; } return 0; }"}}
{"translation": {"en": "read n [ENDL] if n < = 10 or n > = 22 , print 0 and newline [ENDL] if n > = 11 and n < = 19 , print 4 and newline [ENDL] if n equals 20 , print 15 and newline [ENDL] if n equals 21 , print 4 and newline [ENDL] create integer variable with name n", "c++": "int main() { cin >> n ; if ( n <= 10 || n >= 22 ) { cout << \" 0 \" << endl ; } if ( n >= 11 && n <= 19 ) { cout << \" 4 \" << endl ; } if ( n == 20 ) { cout << \" 15 \" << endl ; } if ( n == 21 ) { cout << \" 4 \" << endl ; } int n ; return 0; }"}}
{"translation": {"en": "read user input to n [ENDL] if n < = 10 or n > 21 [ENDL] print 0 [ENDL] else if n - 10 is less than 10 [ENDL] print 4 [ENDL] else if n - 10 is equal to 10 [ENDL] print 15 [ENDL] else [ENDL] print 4 to the standard output [ENDL] integer as a", "c++": "int main() { cin >> n ; if ( n <= 10 || n > 21 ) cout << 0 << endl ; else if ( n - 10 < 10 ) cout << 4 << endl ; else if ( n - 10 == 10 ) cout << 15 << endl ; else cout << 4 << endl ; int a ; }"}}
{"translation": {"en": "read a [ENDL] if a - 10 is less than or equal to 0 or a - 10 > 11 then do the following [ENDL] output 0 [ENDL] else if a - 10 is greater than 1 or a - 10 is less than or equal to 9 then do the following [ENDL] output 4 [ENDL] else [ENDL] output 15 [ENDL] declare new integer variables n and m", "c++": "int main() { cin >> a ; if ( a - 10 <= 0 || a - 10 > 11 ) cout << 0 << endl ; else if ( ( a - 10 >= 1 && a - 10 <= 9 ) || a - 10 == 11 ) cout << 4 << endl ; else cout << 15 << endl ; int n , m ; }"}}
{"translation": {"en": "loop , reading n from the input [ENDL] change m to n - 10 [ENDL] if m > 0 and m < 10 [ENDL] print ' 4 ' [ENDL] else if m = 0 [ENDL] print ' 0 ' [ENDL] else if m is equal to 10 [ENDL] print \" 15 \" [ENDL] else if m = 11 [ENDL] print ' 4 ' [ENDL] else [ENDL] print ' 0 ' [ENDL] n = int", "c++": "int main() { while ( cin >> n ) m = n - 10 ; if ( m > 0 && m < 10 ) cout << ' 4 ' << endl ; else if ( m == 0 ) cout << ' 0 ' << endl ; else if ( m == 10 ) cout << \" 15 \" << endl ; else if ( m == 11 ) cout << ' 4 ' << endl ; else cout << ' 0 ' << endl ; int n ; } return 0; }"}}
{"translation": {"en": "read n [ENDL] if n < = 10 [ENDL] print 0 [ENDL] else if n < 20 [ENDL] print 4 [ENDL] else if n is 20 [ENDL] print 15 [ENDL] else if n is 21 [ENDL] print 4 [ENDL] else [ENDL] print 0 [ENDL] create new vector of long longs v", "c++": "int main() { cin >> n ; if ( n <= 10 ) cout << 0 << endl ; else if ( n < 20 ) cout << 4 << endl ; else if ( n == 20 ) cout << 15 << endl ; else if ( n == 21 ) cout << 4 << endl ; else cout << 0 << endl ; vector < long long > v ; } return 0; }"}}
{"translation": {"en": "define new integer called n [ENDL] read standard input to n [ENDL] if n < = 10 or n > 21 [ENDL] print 0 [ENDL] decrease n by 10 [ENDL] if n = 10 [ENDL] print 15 to the output [ENDL] else [ENDL] print 4 [ENDL] n = int", "c++": "int n ; int main() { cin >> n ; if ( n <= 10 || n > 21 ) cout << 0 << endl ; n -= 10 ; return 0; } if ( n == 10 ) cout << 15 << endl ; else cout << 4 << endl ; int n ; } return 0; }"}}
{"translation": {"en": "read n [ENDL] if n < = 10 [ENDL] print 0 [ENDL] else [ENDL] if n is between 11 and 19 both inclusive [ENDL] print 4 [ENDL] else [ENDL] if n = 20 [ENDL] print 15 [ENDL] else if n = 21 [ENDL] print 4 [ENDL] else [ENDL] print 0 [ENDL] integer as n", "c++": "int main() { cin >> n ; if ( n <= 10 ) cout << 0 << \" \\n \" ; else if ( n >= 11 && n <= 19 ) cout << 4 << \" \\n \" ; else if ( n == 20 ) cout << 15 << \" \\n \" ; else if ( n == 21 ) cout << 4 << \" \\n \" ; else cout << 0 << \" \\n \" ; int n ; } } return 0; }"}}
{"translation": {"en": "while reading input n [ENDL] if n is less than 10 or n > 21 then do the following [ENDL] output 0 [ENDL] else if n is 20 then do the following [ENDL] output 15 [ENDL] else if n is 10 then do the following [ENDL] output 0 [ENDL] else [ENDL] output 4 [ENDL] let n be a integer", "c++": "int main() { while ( cin >> n ) if ( n < 10 || n > 21 ) cout << 0 << endl ; else if ( n == 20 ) cout << 15 << endl ; else if ( n == 10 ) cout << 0 << endl ; else cout << 4 << endl ; int n ; } } return 0; }"}}
{"translation": {"en": "read n [ENDL] decrement n by 10 [ENDL] if n < = 0 [ENDL] print 0 and newline [ENDL] else if n < = 9 [ENDL] print 4 and newline [ENDL] else if n equals 10 [ENDL] print 15 and newline [ENDL] else if n equals 11 [ENDL] print 4 and newline [ENDL] else do the following [ENDL] print 0 and newline [ENDL] integer as n", "c++": "cin >> n ; int main() { n -= 10 ; if ( n <= 0 ) cout << 0 << endl ; else if ( n <= 9 ) cout << 4 << endl ; else if ( n == 10 ) cout << 15 << endl ; else if ( n == 11 ) cout << 4 << endl ; else cout << 0 << endl ; int n ; }"}}
{"translation": {"en": "read n [ENDL] if n is less than or equal to 10 or n > 21 then do the following [ENDL] output 0 [ENDL] else if n is 20 then do the following [ENDL] output 15 [ENDL] else [ENDL] output 4 [ENDL] n = int", "c++": "int main() { cin >> n ; if ( n <= 10 || n > 21 ) cout << 0 << endl ; else if ( n == 20 ) cout << 15 << endl ; else cout << 4 << endl ; int n ; }"}}
{"translation": {"en": "read n [ENDL] if n < = 10 [ENDL] print 0 [ENDL] else if n = 11 [ENDL] print 4 [ENDL] else if n > = 12 AND n < = 19 [ENDL] print 4 [ENDL] else if n = 20 [ENDL] print 15 [ENDL] else if n = 21 [ENDL] print 4 [ENDL] else if n > = 22 [ENDL] print 0 [ENDL] n = int", "c++": "int main() { cin >> n ; if ( n <= 10 ) cout << \" 0\\n \" ; else if ( n == 11 ) return 0; cout << \" 4\\n \" ; else if ( n >= 12 and n <= 19 ) return 0; cout << \" 4\\n \" ; else if ( n == 20 ) return 0; cout << \" 15\\n \" ; else if ( n == 21 ) cout << \" 4\\n \" ; else if ( n >= 22 ) return 0; cout << \" 0\\n \" ; int n ; return 0; } return 0; }"}}
{"translation": {"en": "read n [ENDL] if n < = 10 or n > 21 [ENDL] print 0 [ENDL] else if n is 20 [ENDL] print 15 [ENDL] else [ENDL] print 4 [ENDL] n = integer", "c++": "int main() { cin >> n ; if ( n <= 10 || n > 21 ) cout << 0 << endl ; else if ( n == 20 ) cout << 15 << endl ; else cout << 4 << endl ; int n ; } return 0; }"}}
{"translation": {"en": "while reading values n [ENDL] if n is less than 20 and n is greater than 10 OR n is equal to 21 [ENDL] print 4 and a new line [ENDL] else if n is less than or equal to 10 OR n is greater than 21 [ENDL] print 0 and a new line [ENDL] else do the following [ENDL] print 15 and a new line [ENDL] n = integer", "c++": "int main() { while ( cin >> n ) if ( ( n < 20 && n > 10 ) || n == 21 ) cout << \" 4 \" << endl ; else if ( n <= 10 || n > 21 ) cout << \" 0 \" << endl ; else cout << \" 15 \" << endl ; int n ; } return 0; }"}}
{"translation": {"en": "Read n [ENDL] if n is less than 11 [ENDL] print 0 and a new line [ENDL] else if n is less than 20 [ENDL] print 15 and a new line [ENDL] else if n is less than 21 [ENDL] print 0 and a new line [ENDL] else do the following [ENDL] print 4 and a new line [ENDL] n is a new integer variable", "c++": "int main() { cin >> n ; if ( n < 11 ) cout << 0 << endl ; else if ( n == 20 ) cout << 15 << endl ; else if ( n > 21 ) cout << 0 << endl ; else cout << 4 << endl ; int n ; return 0; }"}}
{"translation": {"en": "read n from the user input [ENDL] declare new integer required with value n - 10 [ENDL] if required < = 0 [ENDL] print \" 0 \" to the standard output [ENDL] else if required > = 1 and required < = 9 [ENDL] print \" 4 \" to the output [ENDL] else if required = 10 [ENDL] print \" 15 \" to the stdou [ENDL] else if required = 11 [ENDL] print \" 4 \" [ENDL] else if required > = 12 [ENDL] print \" 0 \" [ENDL] create integer n", "c++": "int main() { cin >> n ; int required = n - 10 ; if ( required <= 0 ) cout << \" 0 \" << endl ; else if ( required >= 1 && required <= 9 ) cout << \" 4 \" << endl ; else if ( required == 10 ) cout << \" 15 \" << endl ; else if ( required == 11 ) cout << \" 4 \" << endl ; else if ( required >= 12 ) cout << \" 0 \" << endl ; int n ; } return 0; }"}}
{"translation": {"en": "read n and while it ' s truthy , print ( n > 10 & & n < 22 ) * 4 + ( n = = 20 ) * 11 [ENDL] n is an integer", "c++": "while ( cin >> n ) { cout << ( n > 10 && n < 22 ) * 4 + ( n == 20 ) * 11 << endl ; } int main() { int n ; return 0; }"}}
{"translation": {"en": "read n [ENDL] if n is less than or equals 10 [ENDL] print 0 and endline [ENDL] else if n is between 11 and 19 exclusive [ENDL] print 4 and endline [ENDL] else if n equals 20 [ENDL] print 15 and endline [ENDL] else if n equals 21 [ENDL] print 4 and endline [ENDL] else [ENDL] print 0 and endline [ENDL] make int n", "c++": "int main() { cin >> n ; if ( n <= 10 ) cout << 0 << endl ; else if ( n > 10 && n <= 19 ) cout << 4 << endl ; else if ( n == 20 ) cout << 15 << endl ; else if ( n == 21 ) cout << 4 << endl ; else cout << 0 << endl ; int n ; }"}}
{"translation": {"en": "read n [ENDL] if n is less than or equal to 10 or n - 10 is greater than or equal to 12 [ENDL] display \" 0 \" [ENDL] if n - 10 is equal to 1 or n - 10 is equal to 11 [ENDL] show 4 [ENDL] else if n - 10 is 10 [ENDL] display 15 [ENDL] else [ENDL] show 4 [ENDL] n , i , j , temp , result and imin are integers with imin = 10000000", "c++": "int main() { cin >> n ; if ( n <= 10 || n - 10 >= 12 ) cout << \" 0 \" << endl ; if ( n - 10 == 1 || n - 10 == 11 ) return 0; } cout << 4 << endl ; else if ( n - 10 == 10 ) cout << 15 << endl ; else cout << 4 << endl ; int n , i , j , temp , result , imin = 10000000 ; } return 0; }"}}
{"translation": {"en": "create new vector of integers a [ENDL] read n from the input [ENDL] add 1 as a new element to a [ENDL] in a for loop , change i from 1 to n inclusive [ENDL] read variable temp from the input [ENDL] push temp into a [ENDL] in a for loop , change i from 1 to n inclusive [ENDL] assign 0 to result [ENDL] for j from 1 to n inclusive , increase result by 2 * a [ j ] * ( abs ( i - j ) + abs ( j - 1 ) + abs ( i - 1 ) ) [ENDL] change the value of imin to min of imin and result [ENDL] print imin [ENDL] create new integer variable n", "c++": "int main() { vector < int > a ; cin >> n ; a . push_back ( 1 ) ; for ( i = 1 ; i <= n ; i ++ ) cin >> temp ; a . push_back ( temp ) ; for ( i = 1 ; i <= n ; i ++ ) } result = 0 ; for ( j = 1 ; j <= n ; j ++ ) { result += 2 * a [ j ] * ( abs ( i - j ) + abs ( j - 1 ) + abs ( i - 1 ) ) ; } imin = min ( imin , result ) ; cout << imin << endl ; } int n ; return 0; }"}}
{"translation": {"en": "read n and keep looping [ENDL] create new array of integers a with 105 elements [ENDL] start for loop from i = 1 to n inclusive , read standard input to a [ i ] on each loop [ENDL] Min is a new integer variable = 0x3f3f3f3f [ENDL] loop through i from i to n inclusive [ENDL] ans is a new integer = 0 [ENDL] change j in a loop from 1 to n inclusive [ENDL] if j is greater than i [ENDL] increase ans by ( j - 1 ) * 4 * a [ j ] [ENDL] else [ENDL] change ans to ans + ( i - 1 ) * 4 * a [ j ] [ENDL] change Min to min of Min and ans [ENDL] print Min [ENDL] n = int", "c++": "int main() { while ( cin >> n ) int a [ 105 ] ; for ( int i = 1 ; i <= n ; i ++ ) cin >> a [ i ] ; int Min = 0x3f3f3f3f ; for ( int i = 1 ; i <= n ; i ++ ) int ans = 0 ; for ( int j = 1 ; j <= n ; j ++ ) if ( j > i ) ans += ( j - 1 ) * 4 * a [ j ] ; else ans += ( i - 1 ) * 4 * a [ j ] ; Min = min ( Min , ans ) ; } cout << Min << endl ; } int n ; } return 0; }"}}
{"translation": {"en": "read n [ENDL] a = int array of size n [ENDL] read n values into a [ENDL] mini = int with mini = 100000000 [ENDL] for i = 0 to n [ENDL] temp = int with temp = 0 [ENDL] for j = 0 to n increment temp by ( absolute of ( i - j ) + j + i ) * a [ j ] * 2 [ENDL] set mini to min of mini , temp [ENDL] print mini [ENDL] n = integer", "c++": "int main() { cin >> n ; int a [ n ] ; for ( int i = 0 ; i < n ; i ++ ) cin >> a [ i ] ; int mini = 100000000 ; for ( int i = 0 ; i < n ; i ++ ) int temp = 0 ; for ( int j = 0 ; j < n ; j ++ ) { temp += ( abs ( i - j ) + j + i ) * a [ j ] * 2 ; } mini = min ( mini , temp ) ; cout << mini << endl ; } int n ; return 0; }"}}
{"translation": {"en": "arr = integer array of size 10010 [ENDL] ans = integer with ans = 1000000000 [ENDL] read n [ENDL] for i = 1 to n , read arr [ i ] [ENDL] for i = 1 to n [ENDL] x = intege with x = i [ENDL] cost = integer with cost = 0 [ENDL] for j = 1 to n [ENDL] cost = cost + abs ( x - j ) * arr [ j ] [ENDL] cost = cost + ( ( j - 1 ) * arr [ j ] ) [ENDL] cost = cost + ( x - 1 ) * arr [ j ] [ENDL] cost = cost + ( x - 1 ) * arr [ j ] [ENDL] cost = cost + ( ( j - 1 ) * arr [ j ] ) [ENDL] cost = cost + abs ( x - j ) * arr [ j ] [ENDL] if ( cost < ans ) , ans = cost [ENDL] print ans [ENDL] declare gcd with long long integers a , b as arguments , returning long long integer", "c++": "int main() { int arr [ 10010 ] ; int ans = 1000000000 ; cin >> n ; for ( int i = 1 ; i <= n ; i ++ ) cin >> arr [ i ] ; for ( int i = 1 ; i <= n ; i ++ ) int x = i ; int cost = 0 ; for ( int j = 1 ; j <= n ; j ++ ) cost += abs ( x - j ) * arr [ j ] ; cost += ( ( j - 1 ) * arr [ j ] ) ; cost += ( x - 1 ) * arr [ j ] ; cost += ( x - 1 ) * arr [ j ] ; cost += ( ( j - 1 ) * arr [ j ] ) ; cost += abs ( x - j ) * arr [ j ] ; if ( cost < ans ) { ans = cost ; } } cout << ans << endl ; } long long int gcd ( long long int a , long long int b ) return 0; }"}}
{"translation": {"en": "if a is 0 , return b [ENDL] return result of run gcd with b % a , a as arguments from function [ENDL] declare factorial with unsigned long long integer n as argument , returning unsigned long long integer [ENDL] if n is 0 , return 1 [ENDL] return n * result of run factorial ( n - 1 ) [ENDL] declare long long integer array nCr size 1001 by 1001 [ENDL] declare combi with no arguments , returning void [ENDL] for i = 1 to 1000 inclusive [ENDL] let nCr [ 0 ] [ i ] be 0 [ENDL] let nCr [ i ] [ 0 ] be 1 [ENDL] for i = 1 to 1000 inclusive [ENDL] for j = 1 to 1000 inclusive [ENDL] if i is less than j [ENDL] end loop iteration [ENDL] else if i is j [ENDL] let nCr [ i ] [ j ] be 1 [ENDL] else [ENDL] let nCr [ i ] [ j ] be nCr [ i - 1 ] [ j ] + nCr [ i - 1 ] [ j - 1 ] [ENDL] declare long long integer n [ENDL] read n [ENDL] declare long long integer array arr size n [ENDL] for i = 0 to n exclusive , read arr [ i ] [ENDL] declare long long integer min = LONG_MAX [ENDL] for i = 0 to n exclusive [ENDL] declare long long integer cost = 0 [ENDL] for j = 0 to n exclusive , increment cost by arr [ j ] * ( absolute value of ( i - j ) + j + i + i + j + absolute value of ( j - 1 ) ) [ENDL] if cost is less than min , let min be cost [ENDL] print min and newline [ENDL] s , n and m are ints with s = 0", "c++": "if ( a == 0 ) return b ; return gcd ( b % a , a ) ; unsigned long long int factorial ( unsigned long long int n ) } if ( n == 0 ) return 1 ; return n * factorial ( n - 1 ) ; long long int nCr [ 1001 ] [ 1001 ] ; } void combi ( ) for ( int i = 1 ; i <= 1000 ; i ++ ) nCr [ 0 ] [ i ] = 0 ; nCr [ i ] [ 0 ] = 1 ; for ( int i = 1 ; i <= 1000 ; i ++ ) } for ( int j = 1 ; j <= 1000 ; j ++ ) if ( i < j ) continue ; else if ( i == j ) nCr [ i ] [ j ] = 1 ; else nCr [ i ] [ j ] = nCr [ i - 1 ] [ j ] + nCr [ i - 1 ] [ j - 1 ] ; long long int n ; } } } } int main() { cin >> n ; long long int arr [ n ] ; for ( long long int i = 0 ; i < n ; i ++ ) { cin >> arr [ i ] ; } long long int min = LONG_MAX ; for ( long long int i = 0 ; i < n ; i ++ ) long long int cost = 0 ; for ( long long int j = 0 ; j < n ; j ++ ) { cost += ( arr [ j ] * ( abs ( i - j ) + j + i + i + j + abs ( j - i ) ) ) ; } if ( cost < min ) min = cost ; cout << min << endl ; } int s = 0 , n , m ; return 0; }"}}
{"translation": {"en": "read input to n [ENDL] in a for loop , change i from 0 to n exclusive incrementing i [ENDL] read variable m from the input [ENDL] assign the new value = s + i * 4 * m to s [ENDL] print s [ENDL] function init", "c++": "int main() { cin >> n ; for ( int i = 0 ; i < n ; i ++ ) cin >> m ; s = s + i * 4 * m ; cout << s << endl ; } void init ( ) { } ; return 0; }"}}
{"translation": {"en": "a = integer array of size 1000 [ENDL] n = integer [ENDL] read n [ENDL] for i = 1 to n , read a [ i ] [ENDL] sum = long long with sum = 0 [ENDL] for i = 1 to n , sum = sum + 4 * ( i - 1 ) * a [ i ] [ENDL] print sum [ENDL] create long long ints i , j and t", "c++": "int a [ 1000 ] ; int n ; int main() { cin >> n ; for ( int i = 1 ; i <= n ; i ++ ) cin >> a [ i ] ; long long sum = 0 ; for ( int i = 1 ; i <= n ; i ++ ) sum += 4 * ( i - 1 ) * a [ i ] ; cout << sum << endl ; long long int i , j , t ; return 0; }"}}
{"translation": {"en": "n is a new long long [ENDL] read input to n [ENDL] a is a new array of long long integers with size n [ENDL] in a for loop , change i from 0 to n exclusive , read user input to a [ i ] on each loop [ENDL] x is a new array of long long integers with size n filled with 0 [ENDL] in a for loop , change i from 0 to n exclusive [ENDL] start for loop from j = 0 to n exclusive , changing x [ i ] to x [ i ] + a [ j ] * ( ( abs ( i - j ) + abs ( j ) + abs ( i ) + abs ( i ) + abs ( j ) + abs ( j - i ) ) ) on each loop [ENDL] sort x from index 0 to n [ENDL] print x [ 0 ] [ENDL] declare integer variables n and ans", "c++": "long long int n ; int main() { cin >> n ; long long int a [ n ] ; for ( i = 0 ; i < n ; i ++ ) cin >> a [ i ] ; long long int x [ n ] = { 0 } ; for ( i = 0 ; i < n ; i ++ ) for ( j = 0 ; j < n ; j ++ ) { x [ i ] += a [ j ] * ( ( abs ( i - j ) + abs ( j ) + abs ( i ) + abs ( i ) + abs ( j ) + abs ( j - i ) ) ) ; } sort ( x , x + n ) ; } cout << x [ 0 ] << endl ; int n , ans ; }"}}
{"translation": {"en": "a is a new array of integers with 10010 elements [ENDL] read variable n from the input [ENDL] in a for loop , change i from 1 to n inclusive [ENDL] read a [ i ] from the user input [ENDL] increase ans by a [ i ] * ( i - 1 ) * 4 [ENDL] print ans [ENDL] pi is a new constant integer = acos of - 1", "c++": "int a [ 10010 ] ; cin >> n ; int main() { for ( int i = 1 ; i <= n ; ++ i ) cin >> a [ i ] ; ans += a [ i ] * ( i - 1 ) * 4 ; cout << ans << endl ; } const int pi = acos ( - 1 ) ; return 0; }"}}
{"translation": {"en": "declare integer variable n [ENDL] read from the input to n [ENDL] declare new integers ele , flag = 0 and k = 1 ; create an integer array a with 200 elements [ENDL] for i from 1 to n inclusive , read a [ i ] from the input [ENDL] for integer i = 1 to n inclusive , add ( 4 * i - 4 ) * a [ i ] to ele [ENDL] print ele to the standard output [ENDL] create const long long int M = 998244353", "c++": "int n ; int main() { cin >> n ; int a [ 200 ] , k = 1 , ele = 0 , flag = 0 ; for ( int i = 1 ; i <= n ; ++ i ) { cin >> a [ i ] ; } for ( int i = 1 ; i <= n ; ++ i ) { ele += ( 4 * i - 4 ) * a [ i ] ; } cout << ele << endl ; const long long M = 998244353 ; }"}}
{"translation": {"en": "make constant long long oo = 1e13 [ENDL] create int array a of size 1010 [ENDL] make int n [ENDL] read n [ENDL] for i = 1 to n , read a [ i ] [ENDL] make int ans = 1e9 [ENDL] for x = 1 to n [ENDL] let int sum = 0 [ENDL] for j = 1 to n , add ( ( abs ( j - x ) + j - 1 + x - 1 ) * 2 ) * a [ j ] to sum [ENDL] set ans to min of ans and sum [ENDL] print ans [ENDL] create ints n and max1 and int array a of size 1000", "c++": "const long long oo = 1e13 ; int a [ 1010 ] ; int n ; int main() { cin >> n ; for ( int i = 1 ; i <= n ; ++ i ) { cin >> a [ i ] ; } int ans = 1e9 ; for ( int x = 1 ; x <= n ; ++ x ) int sum = 0 ; for ( int j = 1 ; j <= n ; ++ j ) { sum += ( ( abs ( j - x ) + j - 1 + x - 1 ) * 2 ) * a [ j ] ; } ans = min ( ans , sum ) ; cout << ans << endl ; } int n , a [ 1000 ] , max1 ; }"}}
{"translation": {"en": "read n [ENDL] for i = 1 to n , read a [ i ] [ENDL] for i = 1 to n [ENDL] make integer sum = 0 [ENDL] for j = 1 to n , add ( fabs ( i * 1 . 0 - j * 1 . 0 ) + j - 1 + i - 1 ) * 2 * a [ j ] to sum [ENDL] if i is equal to 1 [ENDL] set max1 to sum [ENDL] else do [ENDL] set max1 to min of max1 and sum [ENDL] print max1 [ENDL] declare integer variable n", "c++": "int main() { cin >> n ; for ( int i = 1 ; i <= n ; i ++ ) cin >> a [ i ] ; for ( int i = 1 ; i <= n ; i ++ ) int sum = 0 ; for ( int j = 1 ; j <= n ; j ++ ) { sum += ( fabs ( i * 1.0 - j * 1.0 ) + j - 1 + i - 1 ) * 2 * a [ j ] ; } if ( i == 1 ) max1 = sum ; else max1 = min ( max1 , sum ) ; cout << max1 << endl ; } int n ; return 0; }"}}
{"translation": {"en": "read input to n [ENDL] declare integer variable with name value [ENDL] create integer ans = 0 [ENDL] repeat the loop n times , incrementing i by 1 , starting from 0 [ENDL] read value [ENDL] add i * 4 * value to ans [ENDL] print ans [ENDL] n , i , j , m , t , x , y = integers", "c++": "int main() { cin >> n ; int value ; int ans = 0 ; for ( int i = 0 ; i < n ; i ++ ) cin >> value ; ans += i * 4 * value ; cout << ans << endl ; } int n , i , j , m , t , x , y ; }"}}
{"translation": {"en": "a = integer array of size 110 [ENDL] read n [ENDL] for i = 0 to n exclusive , read a [ i ] [ENDL] m = - 1 [ENDL] for i = 1 to n [ENDL] x = 0 [ENDL] for j = 0 to n exclusive [ENDL] y = i - ( j + 1 ) [ENDL] if ( y < 0 ) , y = - y [ENDL] y = y + j + i - 1 [ENDL] x = x + y * a [ j ] * 2 [ENDL] if ( x < m or m is - 1 ) , m = x [ENDL] print m [ENDL] let N , A , sum ints", "c++": "int main() { int a [ 110 ] ; cin >> n ; for ( i = 0 ; i < n ; i ++ ) { cin >> a [ i ] ; } m = - 1 ; for ( i = 1 ; i <= n ; i ++ ) x = 0 ; for ( j = 0 ; j < n ; j ++ ) y = i - ( j + 1 ) ; if ( y < 0 ) y = - y ; y += j + i - 1 ; x += y * a [ j ] * 2 ; if ( x < m || m == - 1 ) { m = x ; } } cout << m << endl ; } int N , A , sum ; return 0; }"}}
{"translation": {"en": "read N [ENDL] for i from 0 to N exclusive [ENDL] read A [ENDL] add 4 * A * i to sum [ENDL] print sum [ENDL] make ints n , sum = 0 , i , m , and j", "c++": "cin >> N ; int main() { for ( int i = 0 ; i < N ; i ++ ) cin >> A ; sum += 4 * A * i ; cout << sum << ' \\n ' ; } int n , sum = 0 , i , m , j ; }"}}
{"translation": {"en": "read n [ENDL] create int pointer p = new int [ n ] [ENDL] for i = 0 to n exclusive , read p [ i ] [ENDL] create integer pointer h = new int [ n ] [ENDL] for i = 0 to n exclusive [ENDL] for j = i + 1 to n exclusive , set sum to sum + 4 * j * p [ j ] [ENDL] for m = i - 1 to 0 exclusive by decreasing by 1 , set sum to sum + 4 * i * p [ m ] * 4 [ENDL] set sum to i * 4 * p [ i ] + sum [ENDL] set h [ i ] to sum [ENDL] set sum to 0 [ENDL] for i = 1 to n exclusive [ENDL] if h [ 0 ] is greater than h [ i ] [ENDL] create integer t [ENDL] set t to h [ 0 ] [ENDL] set h [ 0 ] to h [ i ] [ENDL] set h [ i ] to t [ENDL] display h [ 0 ] [ENDL] declare constant integer M = 105", "c++": "int main() { cin >> n ; int * p = new int [ n ] ; for ( i = 0 ; i < n ; i ++ ) cin >> p [ i ] ; int * h = new int [ n ] ; for ( i = 0 ; i < n ; i ++ ) for ( j = i + 1 ; j < n ; j ++ ) sum = sum + 4 * j * p [ j ] ; for ( m = i - 1 ; m > 0 ; m -- ) sum = sum + 4 * i * p [ m ] * 4 ; sum = i * 4 * p [ i ] + sum ; h [ i ] = sum ; sum = 0 ; for ( i = 1 ; i < n ; i ++ ) } if ( h [ 0 ] > h [ i ] ) int t ; t = h [ 0 ] ; h [ 0 ] = h [ i ] ; h [ i ] = t ; cout << h [ 0 ] << endl ; } const int M = 105 ; return 0; }"}}
{"translation": {"en": "declare integer array a size M [ENDL] declare integer n [ENDL] read n [ENDL] declare integer Min = 0x3f3f3f3f [ENDL] for i = 1 to n inclusive , read a [ i ] [ENDL] for i = 1 to n inclusive [ENDL] declare integer sum = 0 [ENDL] for j = 1 to n inclusive , increment sum by ( absolute value of ( i - j ) - 2 + j + i ) * a [ j ] * 2 [ENDL] let min be minimum of sum and Min [ENDL] print Min and newline [ENDL] maxn = 1e4 + 5 = int const", "c++": "int a [ M ] ; int n ; int main() { cin >> n ; int Min = 0x3f3f3f3f ; for ( int i = 1 ; i <= n ; i ++ ) cin >> a [ i ] ; for ( int i = 1 ; i <= n ; i ++ ) int sum = 0 ; for ( int j = 1 ; j <= n ; j ++ ) { sum += ( abs ( i - j ) - 2 + j + i ) * a [ j ] * 2 ; } Min = min ( sum , Min ) ; cout << Min << endl ; } const int maxn = 1e4 + 5 ; return 0; }"}}
{"translation": {"en": "let num be an int array of size maxn with num [ 0 ] = 0 [ENDL] let n , ans be ints with ans = 10000000 [ENDL] read n [ENDL] read the first n + 1 elements of num [ENDL] for i = 1 to n inclusive [ENDL] cnt = 0 = int [ENDL] for j = 1 to n inclusve , increment cnt by 2 * num [ j ] * ( abs of ( i - j ) + abs of ( j - 1 ) + abs of ( 1 - i ) [ENDL] set ans to the min of cnt and ans [ENDL] print ans [ENDL] n = int", "c++": "int num [ maxn ] = { 0 } ; int n , ans = 10000000 ; cin >> n ; int main() { for ( int i = 1 ; i <= n ; i ++ ) cin >> num [ i ] ; for ( int i = 1 ; i <= n ; i ++ ) int cnt = 0 ; for ( int j = 1 ; j <= n ; j ++ ) cnt += 2 * num [ j ] * ( abs ( i - j ) + abs ( j - 1 ) + abs ( 1 - i ) ) ; ans = min ( cnt , ans ) ; cout << ans << endl ; } int n ; return 0; }"}}
{"translation": {"en": "while reading n [ENDL] a = int array of length 105 [ENDL] read a from 1 to n inclusive [ENDL] Min = 0x3f3f3f3f = int [ENDL] for i = 1 to n inclusive [ENDL] ans = 0 = int [ENDL] for j = 1 to n inclusive [ENDL] if j > i [ENDL] increment ans by ( j - 1 ) * 4 * a at j [ENDL] else [ENDL] increment ans by ( i - 1 ) * 4 * a at j [ENDL] set Min to the minimum between Min and ans [ENDL] print Min [ENDL] declare init", "c++": "int main() { while ( cin >> n ) int a [ 105 ] ; for ( int i = 1 ; i <= n ; i ++ ) cin >> a [ i ] ; int Min = 0x3f3f3f3f ; for ( int i = 1 ; i <= n ; i ++ ) int ans = 0 ; for ( int j = 1 ; j <= n ; j ++ ) if ( j > i ) ans += ( j - 1 ) * 4 * a [ j ] ; else ans += ( i - 1 ) * 4 * a [ j ] ; Min = min ( Min , ans ) ; } cout << Min << endl ; } void init ( ) { } ; } return 0; }"}}
{"translation": {"en": "create integer a of size 1000 [ENDL] make integer n [ENDL] read n [ENDL] for i = 1 to n , read a [ i ] [ENDL] create long long sum = 0 [ENDL] for i = 1 to n , add 4 * ( i - 1 ) * a [ i ] to sum [ENDL] print sum [ENDL] declare new constant integer maxn with value 1e5 + 5", "c++": "int a [ 1000 ] ; int n ; int main() { cin >> n ; for ( int i = 1 ; i <= n ; i ++ ) cin >> a [ i ] ; long long sum = 0 ; for ( int i = 1 ; i <= n ; i ++ ) sum += 4 * ( i - 1 ) * a [ i ] ; cout << sum << endl ; const int maxn = 1e5 + 5 ; return 0; }"}}
{"translation": {"en": "num is a new array of integers with size maxn [ENDL] let n and ans be ints with ans = 1000000000 [ENDL] read standard input to n [ENDL] read n elements from the input to array num [ENDL] for integer i = 1 to n inclusive incrementing i [ENDL] declare integer cnt with value 0 [ENDL] in a for loop , change j from 1 to n inclusive , increasing cnt by 2 * num [ j ] * ( abs ( i - j ) + abs ( j - 1 ) + abs ( 1 - i ) ) on each loop [ENDL] change the value of ans to min of cnt and ans [ENDL] print ans [ENDL] n = int", "c++": "int num [ maxn ] = { 0 } ; int n , ans = 1000000000 ; cin >> n ; int main() { for ( int i = 1 ; i <= n ; i ++ ) cin >> num [ i ] ; for ( int i = 1 ; i <= n ; i ++ ) int cnt = 0 ; for ( int j = 1 ; j <= n ; j ++ ) cnt += 2 * num [ j ] * ( abs ( i - j ) + abs ( j - 1 ) + abs ( 1 - i ) ) ; ans = min ( cnt , ans ) ; cout << ans << endl ; } int n ; return 0; }"}}
{"translation": {"en": "read n [ENDL] a = int array of size n [ENDL] read n values into a [ENDL] ans = int with ans = 2e6 [ENDL] for i = 0 to n [ENDL] cur = int with cur = 0 [ENDL] for j = 0 to n [ENDL] d1 = int with d1 = i - j [ENDL] if d1 < 0 set d1 to - d1 [ENDL] increment cur by 2 * ( d1 + i + j ) * a [ j ] [ENDL] if cur < ans set ans to cur [ENDL] print ans [ENDL] n , i , sum , minm , x = long long int", "c++": "int main() { cin >> n ; int a [ n ] ; for ( int i = 0 ; i < n ; i ++ ) { cin >> a [ i ] ; } int ans = 2e6 ; for ( int i = 0 ; i < n ; i ++ ) int cur = 0 ; for ( int j = 0 ; j < n ; j ++ ) int d1 = i - j ; if ( d1 < 0 ) { d1 = - d1 ; } cur += 2 * ( d1 + i + j ) * a [ j ] ; if ( cur < ans ) { ans = cur ; } } cout << ans << endl ; } long long int n , i , sum , minm , x ; return 0; }"}}
{"translation": {"en": "minm = 100000000 [ENDL] read n [ENDL] a = int array of size n + 1 [ENDL] for i = 1 to n inclusive read a [ i ] [ENDL] for x = 1 to n inclusive [ENDL] set sum to 0 [ENDL] for i = 1 to n inclusive set sum to sum + ( absolute of ( i - x ) + i - 1 + ( x - 1 ) ) * a [ i ] * 2 [ENDL] if sum < minm set minm to sum [ENDL] print minm [ENDL] let n be a integer", "c++": "int main() { minm = 100000000 ; cin >> n ; int a [ n + 1 ] ; for ( i = 1 ; i <= n ; i ++ ) cin >> a [ i ] ; for ( x = 1 ; x <= n ; x ++ ) sum = 0 ; for ( i = 1 ; i <= n ; i ++ ) { sum = sum + ( abs ( i - x ) + i - 1 + ( x - 1 ) ) * a [ i ] * 2 ; } if ( sum < minm ) minm = sum ; cout << minm << endl ; } int n ; }"}}
{"translation": {"en": "read n [ENDL] let ans be a integer with ans = ( int ) 10e9 [ENDL] arr = array of integers of length n [ENDL] for i = 0 to n exclusive [ENDL] let a be a integer [ENDL] read a [ENDL] arr [ i ] is equal to a [ENDL] let x be a integer with x = 1 [ENDL] while x < = n [ENDL] let cost be a integer with cost = 0 [ENDL] for i = 0 to n exclusive [ENDL] let l be a integer with l = i + 1 [ENDL] cost = cost + absolute value of ( x - l ) + absolute value of ( l - 1 ) + absolute value of ( x - 1 ) ) * 2 * arr [ i ] [ENDL] ans = minimum of ans , cost [ENDL] increment x by 1 [ENDL] print ans and newline [ENDL] maxn = const integer with maxn = 200005", "c++": "int main() { cin >> n ; int ans = ( int ) 10e9 ; int arr [ n ] ; for ( int i = 0 ; i < n ; i ++ ) int a ; cin >> a ; arr [ i ] = a ; int x = 1 ; } while ( x <= n ) int cost = 0 ; for ( int i = 0 ; i < n ; i ++ ) int l = i + 1 ; cost += ( abs ( x - l ) + abs ( l - 1 ) + abs ( x - 1 ) ) * 2 * arr [ i ] ; ans = min ( ans , cost ) ; } x ++ ; cout << ans << endl ; } const int maxn = 200005 ; }"}}
{"translation": {"en": "maxm = const integer with maxm = maxn * 2 [ENDL] inf = const integer with inf = 0x3f3f3f3f [ENDL] mod = const long long with mod = 998244353 [ENDL] function init [ENDL] n = integer [ENDL] a = long long array of size 105 [ENDL] call init [ENDL] read n [ENDL] ans = long long with ans = 1e18 [ENDL] for i = 1 to n , read a [ i ] [ENDL] for i = 1 to n [ENDL] tmp = long long with tmp = 0 [ENDL] for j = 1 to n , tmp = tmp + a [ j ] * 4 * ( ( i - 1 ) * 2 + ( j - 1 ) ) [ENDL] ans = min of ans and tmp [ENDL] print ans [ENDL] declare string s", "c++": "const int maxm = maxn * 2 ; const int inf = 0x3f3f3f3f ; const long long mod = 998244353 ; void init ( ) { } int n ; long long a [ 105 ] ; init ( ) ; int main() { cin >> n ; long long ans = 1e18 ; for ( int i = 1 ; i <= n ; i ++ ) { cin >> a [ i ] ; } for ( int i = 1 ; i <= n ; i ++ ) long long tmp = 0 ; for ( int j = 1 ; j <= n ; j ++ ) { tmp += a [ j ] * 4 * ( ( i - 1 ) * 2 + ( j - 1 ) ) ; } ans = min ( ans , tmp ) ; cout << ans << endl ; } string s ; return 0; }"}}
{"translation": {"en": "read s [ENDL] let s be ' # ' + s [ENDL] declare integer n = length of s - 1 [ENDL] declare integer cnt = 0 [ENDL] for i = 1 to i + i is less than or equal to n , incrementing i [ENDL] if s [ i ] is not s [ n - i + 1 ] , increment cnt [ENDL] if ( cnt is less than or equal to 1 and ( n bitwise and 1 ) ) or cnt is 1 [ENDL] print \" YES \" [ENDL] else [ENDL] print \" NO \" [ENDL] create string x", "c++": "int main() { cin >> s ; s = ' # ' + s ; int n = s . length ( ) - 1 ; int cnt = 0 ; for ( int i = 1 ; i + i <= n ; ++ i ) if ( s [ i ] != s [ n - i + 1 ] ) ++ cnt ; if ( ( cnt <= 1 && ( n & 1 ) ) || cnt == 1 ) puts ( \" YES \" ) ; else puts ( \" NO \" ) ; string x ; return 0; }"}}
{"translation": {"en": "read x [ENDL] c = 0 [ENDL] for i = 0 to length of x - exclusive and for j = length of x - 1 exclusive [ENDL] if x [ i ] different from x [ j ] , increment c [ENDL] if c = 2 or c = 0 and length of x is odd [ENDL] print YES [ENDL] else [ENDL] print NO [ENDL] s = string", "c++": "int main() { cin >> x ; int c = 0 ; for ( int i = 0 , j = x . length ( ) - 1 ; i < x . length ( ) ; i ++ , j -- ) if ( x [ i ] != x [ j ] ) c ++ ; if ( c == 2 || ( c == 0 && x . length ( ) % 2 != 0 ) ) } cout << \" YES \" << endl ; else cout << \" NO \" << endl ; string s ; return 0; }"}}
{"translation": {"en": "while read s [ENDL] c = 0 [ENDL] n = s [ENDL] for i = 0 to length of s / 2 exclusive [ENDL] reverse s [ENDL] if s [ i ] is not s [ length of s - i - 1 ] increment c [ENDL] if length of s is even and c is 1 [ENDL] print YES [ENDL] else if length of s is odd and c < = 1 [ENDL] print YES [ENDL] else [ENDL] print NO [ENDL] create constant int MOD = 998244353", "c++": "int main() { while ( cin >> s ) int c = 0 ; string n = s ; for ( int i = 0 ; i < ( s . length ( ) ) / 2 ; i ++ ) reverse ( s . begin ( ) , s . end ( ) ) ; if ( s [ i ] != s [ s . length ( ) - i - 1 ] ) { c ++ ; } if ( ( s . length ( ) ) % 2 == 0 && c == 1 ) } cout << \" YES \" << endl ; else if ( ( s . length ( ) ) % 2 == 1 && c <= 1 ) cout << \" YES \" << endl ; else cout << \" NO \" << endl ; const int MOD = 998244353 ; } return 0; }"}}
{"translation": {"en": "make const int MAX = 200001 [ENDL] create int array An of size MAX [ENDL] make integer array book of size MAX [ENDL] let string str [ENDL] read str [ENDL] create int sum = 0 [ENDL] make integer n = str . length ( ) [ENDL] for i = 0 to n / 2 exclusive [ENDL] if str [ i ] is not equal to str [ n - 1 - i ] , increment sum [ENDL] if sum is 1 [ENDL] print \" YES \" [ENDL] otherwise [ENDL] if sum is 0 and n % 2 [ENDL] display \" YES \" [ENDL] otherwise do [ENDL] show \" NO \" [ENDL] declare new string variables s and t", "c++": "const int MAX = 200001 ; int An [ MAX ] ; int book [ MAX ] ; string str ; int main() { cin >> str ; int sum = 0 ; int n = str . length ( ) ; for ( int i = 0 ; i < n / 2 ; i ++ ) if ( str [ i ] != str [ n - 1 - i ] ) sum ++ ; if ( sum == 1 ) } cout << \" YES \" << endl ; else if ( sum == 0 && n % 2 ) cout << \" YES \" << endl ; else cout << \" NO \" << endl ; string s , t ; } return 0; }"}}
{"translation": {"en": "read s from the input [ENDL] assign s to t [ENDL] reverse s [ENDL] create integer d = 0 [ENDL] for integer i = 0 to length of s / 2 exclusive incrementing i [ENDL] increment d if s [ i ] ! = t [ i ] [ENDL] print \" YES \" if d = 0 or 2 and s is odd , otherwise print \" NO \" [ENDL] declare string str", "c++": "int main() { cin >> s ; t = s ; reverse ( s . begin ( ) , s . end ( ) ) ; int d = 0 ; for ( int i = 0 ; i < s . length ( ) / 2 ; i ++ ) if ( s [ i ] != t [ i ] ) d ++ ; puts ( ( d == 1 or d == 0 and s . length ( ) % 2 != 0 ) ? \" YES \" : \" NO \" ) ; string str ; return 0; }"}}
{"translation": {"en": "read str [ENDL] declare integer diff = 0 [ENDL] for i = 0 to size of str exclusive , increment diff by ( str [ i ] is not str [ size of str - 1 - i ] ) [ENDL] if diff is 2 or diff is 0 and size of str % 2 is 1 [ENDL] print \" YES \\ n \" [ENDL] else [ENDL] print \" NO \\ n \" [ENDL] create string s", "c++": "int main() { cin >> str ; int diff = 0 ; for ( int i = 0 ; i < str . size ( ) ; i ++ ) { diff += str [ i ] != str [ str . size ( ) - 1 - i ] ; } if ( diff == 2 || diff == 0 && str . size ( ) % 2 == 1 ) cout << \" YES\\n \" ; else cout << \" NO\\n \" ; string s ; return 0; }"}}
{"translation": {"en": "read s [ENDL] set d to 0 [ENDL] for i = 0 to size of s exclusive , d = d + s [ i ] different from s [ s . size ( ) - 1 - i ] [ENDL] if d = 2 or d = 0 and size of s mod 2 = 1 [ENDL] print YES [ENDL] else [ENDL] print NO [ENDL] declare string s", "c++": "int main() { cin >> s ; int d = 0 ; for ( int i = 0 ; i < s . size ( ) ; ++ i ) { d += s [ i ] != s [ s . size ( ) - 1 - i ] ; } if ( d == 2 || ( d == 0 && s . size ( ) % 2 == 1 ) ) cout << \" YES \" << endl ; else cout << \" NO \" << endl ; string s ; return 0; }"}}
{"translation": {"en": "declare inline check with string s as argument , returning integer [ENDL] declare string ss = s [ENDL] reverse sort from beginning of s to end of s [ENDL] return s is ss [ENDL] read s [ENDL] if result of run check ( s ) is true [ENDL] if size of s % 2 is 0 [ENDL] print \" NO \" [ENDL] else [ENDL] print \" YES \" [ENDL] declare integer len = size of s [ENDL] if len % 2 is 0 [ENDL] let len be len / 2 - 1 [ENDL] else [ENDL] let len be len / 2 [ENDL] for i = 0 to len inclusive [ENDL] if s [ i ] is not s [ size of s - 1 - i ] [ENDL] let s [ i ] be s [ size of s - 1 - i ] [ENDL] if result of run check ( s ) is true [ENDL] print \" YES \" [ENDL] else [ENDL] print \" NO \" [ENDL] declare string s", "c++": "inline int check ( string s ) string ss = s ; reverse ( s . begin ( ) , s . end ( ) ) ; return s == ss ; cin >> s ; } int main() { if ( check ( s ) ) if ( s . size ( ) % 2 == 0 ) puts ( \" NO \" ) ; else puts ( \" YES \" ) ; int len = s . size ( ) ; return 0; } if ( len % 2 == 0 ) len = len / 2 - 1 ; else len = len / 2 ; for ( int i = 0 ; i <= len ; ++ i ) if ( s [ i ] != s [ s . size ( ) - 1 - i ] ) s [ i ] = s [ s . size ( ) - 1 - i ] ; if ( check ( s ) ) puts ( \" YES \" ) ; else return 0; puts ( \" NO \" ) ; string s ; return 0; } } } return 0; }"}}
{"translation": {"en": "read s [ENDL] for i = 0 to size of s exclusive [ENDL] declare character c = s [ i ] [ENDL] for j = 0 to 26 exclusive [ENDL] if ' a ' + j is c , end current loop [ENDL] let s [ i ] be ' a ' + j [ENDL] declare integer k [ENDL] for k = 0 to size of k exclusive [ENDL] if s [ k ] is not s [ size of s - 1 - k ] end current loop [ENDL] if k is size of s [ENDL] print \" YES \" and newline [ENDL] let s [ i ] be c [ENDL] print \" NO \" and newline [ENDL] declare ispalindrome taking in string s and returning bool", "c++": "cin >> s ; int main() { for ( int i = 0 ; i < s . size ( ) ; i ++ ) char c = s [ i ] ; for ( int j = 0 ; j < 26 ; j ++ ) if ( ' a ' + j == c ) { continue ; } s [ i ] = ' a ' + j ; int k ; for ( k = 0 ; k < s . size ( ) ; k ++ ) if ( s [ k ] != s [ s . size ( ) - 1 - k ] ) { break ; } if ( k == s . size ( ) ) } cout << \" YES \" << endl ; s [ i ] = c ; return 0; } } cout << \" NO \" << endl ; } bool ispalindrome ( string s ) return 0; }"}}
{"translation": {"en": "make string t = s [ENDL] reverse s [ENDL] return the result of s = = t [ENDL] make string s [ENDL] read s [ENDL] if ispalindrome ( s ) returns true [ENDL] if s . size ( ) % 2 is truthy [ENDL] display \" YES \" [ENDL] else do [ENDL] print \" NO \" [ENDL] for i = 0 to s . size ( ) / 2 exclusive [ENDL] make string t = s [ENDL] set t [ i ] to t [ t . size ( ) - i - 1 ] [ENDL] if ispalindrome ( t ) is true [ENDL] show \" YES \" [ENDL] display \" NO \" [ENDL] A is a new array of long longs with size 26 filled with 0", "c++": "string t = s ; reverse ( s . begin ( ) , s . end ( ) ) ; return s == t ; string s ; } int main() { cin >> s ; if ( ispalindrome ( s ) ) if ( s . size ( ) % 2 ) puts ( \" YES \" ) ; else return 0; puts ( \" NO \" ) ; for ( int i = 0 ; i < s . size ( ) / 2 ; i ++ ) return 0; } } string t = s ; t [ i ] = t [ t . size ( ) - i - 1 ] ; if ( ispalindrome ( t ) ) puts ( \" YES \" ) ; puts ( \" NO \" ) ; return 0; } } long long A [ 26 ] = { 0 } ; return 0; }"}}
{"translation": {"en": "declare new string s [ENDL] read s from the user input [ENDL] declare new long long called n [ENDL] new long long c = 0 [ENDL] in a for loop , change i from 0 to n / 2 exclusive with step = 1 [ENDL] if s [ i ] ! = s [ n - 1 - i ] , increment c [ENDL] if c is equal to 1 [ENDL] print \" YES \" [ENDL] print \" \\ n \" [ENDL] else if c = 0 and n is odd [ENDL] print \" YES \" to the standard output [ENDL] print \" \\ n \" [ENDL] else [ENDL] print \" NO \" [ENDL] print \" \\ n \" to the stdout [ENDL] function ispalindrome with string argument s that returns bool", "c++": "int main() { string s ; cin >> s ; long long n = ( int ) s . length ( ) ; long long c = 0 ; for ( long long i = 0 ; i < n / 2 ; i ++ ) if ( s [ i ] != s [ n - 1 - i ] ) c ++ ; if ( c == 1 ) } cout << \" YES \" << \" \\n \" ; else if ( c == 0 && n % 2 == 1 ) cout << \" YES \" << \" \\n \" ; else cout << \" NO \" << \" \\n \" ; bool ispalindrome ( string s ) return 0; }"}}
{"translation": {"en": "create string variable t = s [ENDL] reverse s [ENDL] return s = t [ENDL] create new string variable s [ENDL] read s from the input [ENDL] if length of s is odd and ispalindrome ( s ) is true [ENDL] print \" YES \" to standard output [ENDL] if length of s is even and ispalindrome ( s ) returns true [ENDL] print \" NO \" [ENDL] declare integer err with value 0 [ENDL] for integer i = 0 to length of s / 2 exclusive incrementing i [ENDL] if s [ i ] ! = s [ length of s - i - 1 ] , increment err by one [ENDL] if err is equal to 1 [ENDL] print \" YES \" to standard output [ENDL] print \" NO \" to stdout [ENDL] s is a new array of characters with 16 elements", "c++": "string t = s ; reverse ( s . begin ( ) , s . end ( ) ) ; return s == t ; string s ; } int main() { cin >> s ; if ( s . size ( ) % 2 && ispalindrome ( s ) ) puts ( \" YES \" ) ; if ( s . size ( ) % 2 == 0 && ispalindrome ( s ) ) return 0; } puts ( \" NO \" ) ; int err = 0 ; return 0; } for ( int i = 0 ; i < s . size ( ) / 2 ; i ++ ) if ( s [ i ] != s [ s . size ( ) - i - 1 ] ) err ++ ; if ( err == 1 ) puts ( \" YES \" ) ; puts ( \" NO \" ) ; return 0; } char s [ 16 ] ; return 0; }"}}
{"translation": {"en": "declare integer variables i , count and n where count = 0 [ENDL] read s [ENDL] change the value of n to length of s [ENDL] start for loop from i = 0 to n / 2 exclusive incrementing i [ENDL] increment count if s [ i ] ! = s [ n - 1 - i ] [ENDL] if n is odd [ENDL] if count < = 1 [ENDL] print \" YES \" [ENDL] else [ENDL] print \" NO \" [ENDL] else [ENDL] if count is equal to 1 [ENDL] print \" YES \" [ENDL] else [ENDL] print \" NO \" [ENDL] s is a new string", "c++": "int main() { int i , count = 0 , n ; cin >> s ; n = strlen ( s ) ; for ( i = 0 ; i < n / 2 ; i ++ ) if ( s [ i ] != s [ n - 1 - i ] ) count ++ ; if ( n % 2 ) } if ( count <= 1 ) cout << \" YES \" << endl ; else cout << \" NO \" << endl ; else if ( count == 1 ) cout << \" YES \" << endl ; else cout << \" NO \" << endl ; string s ; } return 0; }"}}
{"translation": {"en": "read standard input to s [ENDL] create new integers count = 0 and l = length of s - 1 [ENDL] start for loop from i = 0 to length of s / 2 exclusive [ENDL] if s [ i ] ! = s [ l - i ] , increment count [ENDL] if length of s is even and count is 1 [ENDL] print \" YES \" [ENDL] else if length of s is odd and ( count is 1 or 0 ) [ENDL] print \" YES \" to the standard output [ENDL] else [ENDL] print \" NO \" [ENDL] declare string s", "c++": "int main() { cin >> s ; int count = 0 , l = s . size ( ) - 1 ; for ( int i = 0 ; i < s . size ( ) / 2 ; i ++ ) if ( s [ i ] != s [ l - i ] ) { count ++ ; } if ( s . size ( ) % 2 == 0 && count == 1 ) } cout << \" YES \" << endl ; else if ( s . size ( ) % 2 == 1 && ( count == 1 || count == 0 ) ) cout << \" YES \" << endl ; else cout << \" NO \" << endl ; string s ; } }"}}
{"translation": {"en": "declare integer ans = 0 [ENDL] declare integer i = 0 [ENDL] read s [ENDL] if size of s is 1 [ENDL] print \" YES \" and newline [ENDL] for j = size of s - 1 to size of s / 2 , decrementing j [ENDL] if s [ i ] is not s [ j ] [ENDL] for c = ' a ' to ' z ' inclusive [ENDL] if c is s [ i ] or c is s [ j ] [ENDL] increment ans [ENDL] end loop [ENDL] let i be i + 1 [ENDL] if size of s % 2 is 0 [ENDL] if ans is 0 or ans is greater than 1 [ENDL] print \" NO \" and newline [ENDL] if ans is greater than 1 [ENDL] print \" NO \" and newline [ENDL] print \" YES \" and newline [ENDL] s = string", "c++": "int ans = 0 ; int i = 0 ; cin >> s ; int main() { if ( s . size ( ) == 1 ) cout << \" YES \" << endl ; for ( int j = s . size ( ) - 1 ; j >= s . size ( ) / 2 ; j -- ) return 0; } if ( s [ i ] != s [ j ] ) for ( char c = ' a ' ; c <= ' z ' ; c ++ ) if ( c == s [ i ] || c == s [ j ] ) ans ++ ; break ; i = i + 1 ; } } } if ( s . size ( ) % 2 == 0 ) } if ( ans == 0 || ans > 1 ) cout << \" NO \" << endl ; if ( ans > 1 ) return 0; } } cout << \" NO \" << endl ; cout << \" YES \" << endl ; return 0; } string s ; return 0; }"}}
{"translation": {"en": "read s [ENDL] count = integer = 1 , l = integer = size of s - 1 [ENDL] for i = 0 to size of s / 2 exclusive [ENDL] if s [ i ] is not s [ i - 1 ] , then increase count by 1 [ENDL] if count is 1 [ENDL] print YES [ENDL] else if size of s is odd and count is 0 [ENDL] print YES [ENDL] else [ENDL] print NO [ENDL] create string s", "c++": "int main() { cin >> s ; int count = 0 , l = s . size ( ) - 1 ; for ( int i = 0 ; i < s . size ( ) / 2 ; i ++ ) if ( s [ i ] != s [ l - i ] ) { count ++ ; } if ( count == 1 ) } cout << \" YES \" << endl ; else if ( s . size ( ) % 2 == 1 && count == 0 ) cout << \" YES \" << endl ; else cout << \" NO \" << endl ; string s ; } }"}}
{"translation": {"en": "read s [ENDL] create int l , i , j and k , set l to size of s exclusive [ENDL] for i = 0 to l exclusive [ENDL] set c to s [ i ] [ENDL] for j = 0 to 26 exclusive [ENDL] if j = c - a , continue [ENDL] set s [ i ] to j + a [ENDL] for k = 0 to l exclusive [ENDL] if s [ k ] different from s [ l - k - 1 ] [ENDL] if k > = l [ENDL] print YES [ENDL] set s [ i ] = c [ENDL] print NO [ENDL] make constant long long integer INF = 2000000000000000000LL", "c++": "int main() { cin >> s ; int l = s . size ( ) , i , j , k ; for ( i = 0 ; i < l ; i ++ ) char c = s [ i ] ; for ( j = 0 ; j < 26 ; j ++ ) if ( j == c - ' a ' ) continue ; s [ i ] = j + ' a ' ; for ( k = 0 ; k < l ; k ++ ) if ( s [ k ] != s [ l - k - 1 ] ) break ; if ( k >= l ) cout << \" YES \" << endl ; s [ i ] = c ; return 0; } } cout << \" NO \" << endl ; } const long long int INF = 2000000000000000000LL ; return 0; }"}}
{"translation": {"en": "let const int MOD = 10000007 [ENDL] make int array a of size 1000006 [ENDL] let string r [ENDL] delcare ispal taking in string s and returning bool [ENDL] set r to s [ENDL] reverse contents of r [ENDL] if s is equal to r [ENDL] return true [ENDL] else do [ENDL] return false [ENDL] make string s [ENDL] read s [ENDL] make ints n = s . size ( ) and cnt = 0 [ENDL] for i = 0 to n / 2 exclusive [ENDL] make char samne = s [ i ] [ENDL] let char pichone = s [ n - ( i + 1 ) ] [ENDL] if samne is not pichone , increment cnt [ENDL] if cnt is equal to 0 and ispal ( s ) returns truthy and n modulo 2 is 0 [ENDL] print \" NO \" [ENDL] print \" \\ n \" [ENDL] end statement [ENDL] else if cnt is more than 1 [ENDL] print \" NO \" [ENDL] print \" \\ n \" [ENDL] end statement [ENDL] else do [ENDL] print \" YES \" [ENDL] print \" \\ n \" [ENDL] ; [ENDL] declare string s", "c++": "const int MOD = 10000007 ; int a [ 1000006 ] ; string r ; bool ispal ( string s ) r = s ; reverse ( r . begin ( ) , r . end ( ) ) ; if ( s == r ) return true ; else return false ; string s ; } } int main() { cin >> s ; int n = s . size ( ) , cnt = 0 ; for ( int i = 0 ; i < n / 2 ; i ++ ) char samne = s [ i ] ; char pichone = s [ n - ( i + 1 ) ] ; if ( samne != pichone ) cnt ++ ; if ( cnt == 0 && ispal ( s ) && n % 2 == 0 ) } cout << \" NO \" << \" \\n \" ; ; else if ( cnt > 1 ) cout << \" NO \" << \" \\n \" ; ; else cout << \" YES \" << \" \\n \" ; ; string s ; } return 0; }"}}
{"translation": {"en": "read s [ENDL] declare integer y = size of s - 1 [ENDL] declare integer sum = 0 [ENDL] for i = 0 to size of s / 2 exclusive [ENDL] if s [ i ] is not s [ y ] , increment sum [ENDL] if sum is 2 [ENDL] print \" NO \" and newline [ENDL] decrement y [ENDL] if sum is 1 [ENDL] print \" YES \" and newline [ENDL] else if sum is 0 and size of s % 2 is not 0 [ENDL] print \" YES \" and newline [ENDL] else [ENDL] print \" NO \" and newline [ENDL] make string str", "c++": "int main() { cin >> s ; int y = s . size ( ) - 1 ; int sum = 0 ; for ( int i = 0 ; i < s . size ( ) / 2 ; i ++ ) if ( s [ i ] != s [ y ] ) { sum ++ ; } if ( sum == 2 ) cout << \" NO \" << endl ; y -- ; return 0; } if ( sum == 1 ) } cout << \" YES \" << endl ; else if ( sum == 0 && s . size ( ) % 2 != 0 ) cout << \" YES \" << endl ; else cout << \" NO \" << endl ; string str ; }"}}
{"translation": {"en": "read str [ENDL] let integer d = 0 [ENDL] for i = 0 to str . size ( ) exclusive , set d to d + str [ i ] ! = str [ str . size ( ) - 1 - i ] [ENDL] if d is 2 or if d is 0 and size of str % 2 is truthy [ENDL] print \" YES \" [ENDL] else do [ENDL] print \" NO \" [ENDL] create integers y , b , r", "c++": "int main() { cin >> str ; int d = 0 ; for ( int i = 0 ; i < str . size ( ) ; i ++ ) d += str [ i ] != str [ str . size ( ) - 1 - i ] ; if ( d == 2 || ( d == 0 && str . size ( ) % 2 ) ) cout << \" YES \" << endl ; else cout << \" NO \" << endl ; int y , b , r ; return 0; }"}}
{"translation": {"en": "read y read b read r [ENDL] for i = r to 3 inclusive , decrementing i [ENDL] if b is greater than or equal to ( i - 1 ) and y is greater than or equal to ( i - 2 ) [ENDL] print i + i - 1 + i - 2 print newline [ENDL] break loop [ENDL] create integers b , y , r", "c++": "int main() { while ( cin >> y >> b >> r ) for ( int i = r ; i >= 3 ; i -- ) if ( b >= ( i - 1 ) && y >= ( i - 2 ) ) cout << i + i - 1 + i - 2 << endl ; break ; int b , y , r ; } } } return 0; }"}}
{"translation": {"en": "read r read y read b [ENDL] create integer array arr with size 3 , with arr = { r , y - 1 , b - 2 } [ENDL] create integermin with min = 200 [ENDL] for i = 0 to 3 exclusive [ENDL] if min is greater than or equal to arr [ i ] , set min to arr [ i ] [ENDL] print 3 * min + 3 print newline [ENDL] declare integer variables y , b , r and m", "c++": "int main() { cin >> r >> y >> b ; int arr [ 3 ] = { r , y - 1 , b - 2 } ; int min = 200 ; for ( int i = 0 ; i < 3 ; i ++ ) if ( min > arr [ i ] ) { min = arr [ i ] ; } cout << 3 * min + 3 << endl ; } int y , b , r , m ; }"}}
{"translation": {"en": "read y , b and r [ENDL] if b < = r - 1 and y > = b - 1 [ENDL] m = 3 * b [ENDL] else if b < = r - 1 and y is less than b - 1 [ENDL] m = 3 * ( y + 1 ) [ENDL] else if b > r - 1 and y > = r - 2 [ENDL] m = 3 * ( r - 1 ) [ENDL] else if b > r - 1 and y is less than r - 2 [ENDL] m = 3 * ( y + 1 ) [ENDL] print m [ENDL] create integers a , b , c , d , e , f , g", "c++": "int main() { cin >> y >> b >> r ; if ( b <= r - 1 && y >= b - 1 ) m = 3 * b ; else if ( b <= r - 1 && y < b - 1 ) m = 3 * ( y + 1 ) ; else if ( b > r - 1 && y >= r - 2 ) m = 3 * ( r - 1 ) ; else if ( b > r - 1 && y < r - 2 ) m = 3 * ( y + 1 ) ; cout << m << endl ; int a , b , c , d , e , f , g ; return 0; }"}}
{"translation": {"en": "read a read b read c [ENDL] set e to a , set f to b , set g to c [ENDL] set d to minimum of a and b [ENDL] set d to minimum of d and c [ENDL] set d to minimum of d and a [ENDL] if d is a [ENDL] set b to a + 1 [ENDL] set c to a + 2 [ENDL] else if d is b [ENDL] set a to b - 1 [ENDL] set c to b + 1 [ENDL] else if d is c [ENDL] set a to c - 2 [ENDL] set b to c - 1 [ENDL] while a is greater than e or b is greater than f or c is greater than g [ENDL] decrement a [ENDL] decrement b [ENDL] decrement c [ENDL] print a + b + c print newline [ENDL] create integers a , b and c", "c++": "int main() { cin >> a >> b >> c ; e = a , f = b , g = c ; d = min ( a , b ) ; d = min ( d , c ) ; d = min ( d , a ) ; if ( d == a ) b = a + 1 ; c = a + 2 ; else if ( d == b ) a = b - 1 ; c = b + 1 ; else if ( d == c ) a = c - 2 ; b = c - 1 ; while ( a > e || b > f || c > g ) } a -- ; b -- ; c -- ; cout << a + b + c << endl ; } int a , b , c ; return 0; }"}}
{"translation": {"en": "read a , b and c [ENDL] create integer a with a = 0 [ENDL] subtract 2 from c [ENDL] decrement b by 1 [ENDL] print ( the minimum of a ( and the minimum of b and c ) ) * 3 + 3 [ENDL] create integers y , b , r", "c++": "int main() { cin >> a >> b >> c ; int ans = 0 ; c -= 2 ; b -= 1 ; cout << min ( a , min ( b , c ) ) * 3 + 3 << endl ; int y , b , r ; return 0; }"}}
{"translation": {"en": "read y read b read r [ENDL] create integers mx with minimum of ( y + 2 and minimum of ( b + 1 and r ) ) [ENDL] print mx * 3 - 3 print \" \\ n \" [ENDL] color = integer array of length 3", "c++": "int main() { cin >> y >> b >> r ; int mx = min ( y + 2 , min ( b + 1 , r ) ) ; cout << mx * 3 - 3 << \" \\n \" ; int color [ 3 ] ; return 0; }"}}
{"translation": {"en": "for i = 0 to 3 exclusive read color [ i ] [ENDL] min , no = integers [ENDL] if color [ 0 ] is less than color [ 1 ] - 1 [ENDL] set min to color [ 0 ] + 2 [ENDL] set no to 0 [ENDL] else [ENDL] set min to color [ 1 ] + 1 [ENDL] set no to 1 [ENDL] if color [ 2 ] is less than min then set no to 2 [ENDL] print color [ no ] * 3 - ( no - 1 ) * 3 [ENDL] function min with integer arguments x , y and z that returns integer", "c++": "int main() { for ( int i = 0 ; i < 3 ; i ++ ) { cin >> color [ i ] ; } int min , no ; if ( color [ 0 ] < color [ 1 ] - 1 ) min = color [ 0 ] + 2 ; no = 0 ; else min = color [ 1 ] + 1 ; no = 1 ; if ( color [ 2 ] < min ) { no = 2 ; } } cout << color [ no ] * 3 - ( no - 1 ) * 3 << endl ; int min ( int x , int y , int z ) }"}}
{"translation": {"en": "create integer t = 0 [ENDL] if x is less than y [ENDL] if x is less than z [ENDL] set t to 1 [ENDL] else [ENDL] t = - 1 [ENDL] else [ENDL] if y is less than z [ENDL] set t to 0 [ENDL] else [ENDL] t = - 1 [ENDL] return t [ENDL] declare integer variables y , b and r [ENDL] create integer sum = 0 [ENDL] read y , b and r [ENDL] if y = b & & b = r & & r = y , set sum = 3 * ( y - 1 ) [ENDL] assign min of y , b and r to new integer x [ENDL] if x = 1 [ENDL] if ( b - y ) > = 1 & & ( r - y ) > = 2 [ENDL] sum = ( y + 1 ) * 3 [ENDL] else [ENDL] decrement y while ! ( ( b - y ) > = 1 & & ( r - y ) > = 2 ) [ENDL] sum = ( y + 1 ) * 3 [ENDL] else if x = 0 [ENDL] if b = r [ENDL] sum = 3 * ( b - 1 ) [ENDL] else [ENDL] sum = 3 * b [ENDL] else [ENDL] sum = ( r - 1 ) * 3 [ENDL] print sum [ENDL] create integers a , b , c , s with s = 0", "c++": "int t = 0 ; if ( x < y ) if ( x < z ) t = 1 ; else t = - 1 ; else } if ( y < z ) t = 0 ; else t = - 1 ; return t ; } int y , b , r ; } int main() { int sum = 0 ; cin >> y >> b >> r ; if ( y == b && b == r && r == y ) { sum = 3 * ( y - 1 ) ; } int x = min ( y , b , r ) ; if ( x == 1 ) if ( ( b - y ) >= 1 && ( r - y ) >= 2 ) sum = ( y + 1 ) * 3 ; else while ( ! ( ( b - y ) >= 1 && ( r - y ) >= 2 ) ) { y -- ; } sum = ( y + 1 ) * 3 ; else if ( x == 0 ) } if ( b == r ) sum = 3 * ( b - 1 ) ; else sum = 3 * b ; else } sum = ( r - 1 ) * 3 ; cout << sum << endl ; } int a , b , c , s = 0 ; return 0; }"}}
{"translation": {"en": "read a read b read c [ENDL] while 1 is true [ENDL] if b is greater than or equal to a + 1 [ENDL] if c is greater than or equal to a + 2 [ENDL] set s to a + a + 1 + a + 2 [ENDL] break loop [ENDL] decrement a [ENDL] print s print newline [ENDL] y , b , r are integers", "c++": "int main() { cin >> a >> b >> c ; while ( 1 ) if ( b >= a + 1 ) if ( c >= a + 2 ) s = a + a + 1 + a + 2 ; break ; a -- ; } } cout << s << endl ; } int y , b , r ; return 0; }"}}
{"translation": {"en": "read y , b , r [ENDL] If y < 1 or y > 100 or b < 2 or b > 100 or r < 3 or r > 100 , return 0 [ENDL] y1 , y2 , b1 , b2 , r1 , r2 are integers [ENDL] assign y1 to y + 1 [ENDL] assign y2 to y + 2 [ENDL] assign b1 to b - 1 [ENDL] assign b2 to b + 1 [ENDL] assign r1 to r - 2 [ENDL] assign r2 to r - 1 [ENDL] if y1 < = b and y2 < = r , do the following [ENDL] print y + y1 + y2 and a new line [ENDL] else if b1 < = y and b2 < = r , , do the following [ENDL] print b + b1 + b2 and a new line [ENDL] else if r1 < = y and r2 < = b , , do the following [ENDL] print r1 + r2 + r and a new line [ENDL] y , b , r , ans = integers", "c++": "int main() { cin >> y >> b >> r ; if ( y < 1 || y > 100 || b < 2 || b > 100 || r < 3 || r > 100 ) { return 0 ; } int y1 , y2 , b1 , b2 , r1 , r2 ; y1 = y + 1 ; y2 = y + 2 ; b1 = b - 1 ; b2 = b + 1 ; r1 = r - 2 ; r2 = r - 1 ; if ( y1 <= b && y2 <= r ) cout << y + y1 + y2 << endl ; else if ( b1 <= y && b2 <= r ) cout << b + b1 + b2 << endl ; else if ( r1 <= y && r2 <= b ) cout << r1 + r2 + r << endl ; int y , b , r , ans ; return 0; }"}}
{"translation": {"en": "read y and b and r [ENDL] if r - 2 ! = 0 and r - 2 < = y and r - 1 < = b [ENDL] set ans = 3 * r - 3 [ENDL] else if b + 1 < = r and b - 1 ! = 0 and b - 1 < increment y [ENDL] set ans = 3 * b [ENDL] else [ENDL] set ans = 3 * y + 3 [ENDL] print ans [ENDL] create integers y , b , r", "c++": "int main() { cin >> y >> b >> r ; if ( r - 2 != 0 && r - 2 <= y && r - 1 <= b ) ans = 3 * r - 3 ; else if ( b + 1 <= r && b - 1 != 0 && b - 1 < + y ) ans = 3 * b ; else ans = 3 * y + 3 ; cout << ans << endl ; int y , b , r ; return 0; }"}}
{"translation": {"en": "read y read b read r [ENDL] while y is greater than r - 2 or y is greater than b - 1 , decrement y [ENDL] while b is greater than y + 1 , decrement b [ENDL] while r is greater than b + 1 , decrement r [ENDL] print y + r + b print ' \\ n ' [ENDL] create integers y , b , r", "c++": "int main() { cin >> y >> b >> r ; while ( y > r - 2 || y > b - 1 ) y -- ; while ( b > y + 1 ) b -- ; while ( r > b + 1 ) r -- ; cout << y + r + b << ' \\n ' ; int y , b , r ; return 0; }"}}
{"translation": {"en": "read y read b read r [ENDL] print 3 * minimum of ( minimum of ( b + 1 and r ) and y + 2 ) - 3 print newline [ENDL] let y , b , r be integers", "c++": "int main() { cin >> y >> b >> r ; cout << 3 * min ( min ( b + 1 , r ) , y + 2 ) - 3 << endl ; int y , b , r ; return 0; }"}}
{"translation": {"en": "read y , b and r [ENDL] for ( int i is equal to r , i greater than or equal to 3 , i - - ) [ENDL] if ( i less than or equal to r and i - 1 less than or equal to b and i - 2 less than or equal to y ) [ENDL] print 3 * i - 3 and newline [ENDL] stop [ENDL] y , b , r = integers", "c++": "int main() { cin >> y >> b >> r ; for ( int i = r ; i >= 3 ; i -- ) if ( i <= r && i - 1 <= b && i - 2 <= y ) cout << 3 * i - 3 << endl ; break ; int y , b , r ; } } return 0; }"}}
{"translation": {"en": "Read y , b , r [ENDL] for i = y to 1 exclusive [ENDL] ty = integers and set to i [ENDL] tb = integers and set to i + 1 [ENDL] tc = integers and set to i + 2 [ENDL] if tb is less than or equal to b and tc is less than or equal to r [ENDL] print ty + tb + tc and a new line [ENDL] create integers y , b , r", "c++": "int main() { cin >> y >> b >> r ; for ( int i = y ; i >= 1 ; i -- ) int ty = i ; int tb = i + 1 ; int tc = i + 2 ; if ( tb <= b && tc <= r ) cout << ty + tb + tc << endl ; int y , b , r ; return 0; } } }"}}
{"translation": {"en": "read y read b read r [ENDL] print minimum of ( y and minimum of b - 1 and r - 2 ) * 3 + 3 print newline [ENDL] a , b , c = int", "c++": "int main() { cin >> y >> b >> r ; cout << min ( y , min ( b - 1 , r - 2 ) ) * 3 + 3 << endl ; int a , b , c ; return 0; }"}}
{"translation": {"en": "read a , b , c [ENDL] d = min ( a + 1 , min ( b , c - 1 ) ) [ENDL] print 3 * d [ENDL] create 64 bit integers a , b , c", "c++": "int main() { cin >> a >> b >> c ; int d = min ( a + 1 , min ( b , c - 1 ) ) ; cout << 3 * d << endl ; int64_t a , b , c ; return 0; }"}}
{"translation": {"en": "read a read b read c [ENDL] print 3 * minimum of ( a + 1 and minimum of ( b and c - 1 ) ) print newline [ENDL] create integers a , b , c", "c++": "int main() { cin >> a >> b >> c ; cout << 3 * min ( a + 1 , min ( b , c - 1 ) ) << endl ; int a , b , c ; return 0; }"}}
{"translation": {"en": "read a read b read c [ENDL] if b is greater than or equal to c - 1 and a is greater than or equal to c - 2 [ENDL] print 3 * c - 3 print newline [ENDL] else if b is less than c - 1 and a is greater than or equal to c - 2 [ENDL] print 3 * b print newline [ENDL] else if b is greater than or equal to c - 1 and a is less than c - 2 [ENDL] print 3 * a + 3 print newline [ENDL] else [ENDL] if a is less than b - 1 [ENDL] print 3 * a + 3 print newline [ENDL] else [ENDL] print 3 * b print newline [ENDL] declare integer variables y , b and r", "c++": "int main() { cin >> a >> b >> c ; if ( b >= c - 1 && a >= c - 2 ) cout << 3 * c - 3 << endl ; else if ( b < c - 1 && a >= c - 2 ) cout << 3 * b << endl ; else if ( b >= c - 1 && a < c - 2 ) cout << 3 * a + 3 << endl ; else if ( a <= b - 1 ) cout << 3 * a + 3 << endl ; else cout << 3 * b << endl ; int y , b , r ; } return 0; }"}}
{"translation": {"en": "read y , b and r [ENDL] for integer i = r to 3 inclusive counting down by 1 [ENDL] if i < = b + 1 and i < = y + 2 [ENDL] let ans be integer = i [ENDL] print 3 * ans - 3 and a new line [ENDL] y , b , r = integers", "c++": "int main() { cin >> y >> b >> r ; for ( int i = r ; i >= 3 ; i -- ) if ( i <= b + 1 && i <= y + 2 ) int ans = i ; cout << 3 * ans - 3 << endl ; int y , b , r ; return 0; } } }"}}
{"translation": {"en": "read y and b and r [ENDL] for i = y to 0 inclusive [ENDL] if i + 1 < = b and i + 2 < = r [ENDL] print 3 * i + 3 [ENDL] in function min", "c++": "int main() { cin >> y >> b >> r ; for ( int i = y ; i >= 0 ; i -- ) if ( i + 1 <= b && i + 2 <= r ) cout << 3 * i + 3 << endl ; int min ( int a , int b ) return 0; } } return 0; }"}}
{"translation": {"en": "if a is less than b return a [ENDL] return b [ENDL] create integers a , b and c [ENDL] read a , b and c [ENDL] set x to min of a and min of b - 1 and c - 2 [ENDL] print x + x + 1 + x + 2 and new line [ENDL] create integers y , r , b , ans", "c++": "if ( a < b ) return a ; return b ; int a , b , c ; } int main() { cin >> a >> b >> c ; int x = min ( a , min ( b - 1 , c - 2 ) ) ; cout << x + x + 1 + x + 2 << endl ; int y , r , b , ans ; }"}}
{"translation": {"en": "while read y read b read r is true [ENDL] create integer ans with ans = minimum of ( y + 2 and minimum of ( b + 1 and r ) ) * 3 [ENDL] print ans - 3 print newline [ENDL] a , b , c = integers", "c++": "int main() { while ( cin >> y >> b >> r ) int ans = min ( y + 2 , min ( b + 1 , r ) ) * 3 ; cout << ans - 3 << endl ; int a , b , c ; } return 0; }"}}
{"translation": {"en": "read a , b , c [ENDL] set ans = 0 [ENDL] set c = c - 2 [ENDL] set b = b - 1 [ENDL] print min between a and ( min between b and c ) * 3 + 3 [ENDL] Variable M is set to 1000000007", "c++": "int main() { cin >> a >> b >> c ; int ans = 0 ; c -= 2 ; b -= 1 ; cout << min ( a , min ( b , c ) ) * 3 + 3 << endl ; int M = 1000000007 ; return 0; }"}}
{"translation": {"en": "declare three integer variables named y , b , and r [ENDL] Let the user input values for y , b , and r [ENDL] decrease the value of b by 1 [ENDL] decrease the value of r by 2 [ENDL] take the minimum number between b and r , then take the minimum number between that and the value of y , then multiply that by 3 and then add 3 and display the output to the screen [ENDL] y , b , r = integers", "c++": "int y , b , r ; int main() { cin >> y >> b >> r ; b -- ; r -= 2 ; cout << 3 * min ( y , min ( b , r ) ) + 3 << endl ; int y , b , r ; return 0; }"}}
{"translation": {"en": "read y , b , r [ENDL] if y > = r set y = r - 2 [ENDL] if r - y = 1 decrement y [ENDL] if y > = b set y = b - 1 [ENDL] print y + ( y + 1 ) + ( y + 2 ) [ENDL] declare solve with no arguments , returning void", "c++": "int main() { cin >> y >> b >> r ; if ( y >= r ) y = r - 2 ; if ( r - y == 1 ) y -- ; if ( y >= b ) y = b - 1 ; cout << y + ( y + 1 ) + ( y + 2 ) << endl ; void solve ( ) ; return 0; }"}}
{"translation": {"en": "create long long t [ENDL] set t to 1 [ENDL] while decrement t is true , run solve [ENDL] declare solve with no arguments , returning void [ENDL] create long longs y , b , r [ENDL] read y read b read r [ENDL] create long long tt with tt = minimum of ( y and minimum of ( b - 1 and r - 2 ) ) [ENDL] print tt * 3 + 3 print ' \\ n ' [ENDL] y , b , r = integers", "c++": "long long t ; int main() { t = 1 ; while ( t -- ) solve ( ) ; void solve ( ) return 0; } long long y , b , r ; cin >> y >> b >> r ; long long tt = min ( y , min ( b - 1 , r - 2 ) ) ; cout << tt * 3 + 3 << ' \\n ' ; int y , b , r ; }"}}
{"translation": {"en": "while read y , b , and r [ENDL] for i = r to greater or equal than 3 [ENDL] if b is greater or equal than i - 1 and y is greater or equal than i - 2 [ENDL] print i + i - 1 + i - 2 and new line [ENDL] stop loop [ENDL] let a , b and c be integers", "c++": "int main() { while ( cin >> y >> b >> r ) for ( int i = r ; i >= 3 ; i -- ) if ( b >= ( i - 1 ) && y >= ( i - 2 ) ) cout << i + i - 1 + i - 2 << endl ; break ; int a , b , c ; } } } return 0; }"}}
{"translation": {"en": "read a , b and c [ENDL] increment a [ENDL] decrement c [ENDL] print min of ( min of a and c ) and b * 3 , and a new line [ENDL] create 64 bit integers a , b , c", "c++": "int main() { cin >> a >> b >> c ; a ++ ; c -- ; cout << min ( min ( a , c ) , b ) * 3 << endl ; int64_t a , b , c ; return 0; }"}}
{"translation": {"en": "read a read b read c [ENDL] print 3 * minimum of a + 1 and minimum of b and c - 1 , print newline [ENDL] create integers y , b , r", "c++": "int main() { cin >> a >> b >> c ; cout << 3 * min ( a + 1 , min ( b , c - 1 ) ) << endl ; int y , b , r ; return 0; }"}}
{"translation": {"en": "read y read b read r [ENDL] if y is less than 1 or y is greater than 100 or b is less than 2 or b is greater than 100 or r is less than 3 or r is greater than 100 , return 0 from function [ENDL] if y + 1 is less than or equal to b and y + 2 is less than or equal to r [ENDL] print 3 * y + 3 print newline [ENDL] else if b - 1 is less than or equal to y and b + 1 is less than or equal to r [ENDL] print 3 * b print newline [ENDL] else if r - 2 is less than or equal to y and r - 1 is less than or equal to b [ENDL] print 3 * r - 3 print newline [ENDL] create integers x , y , z", "c++": "int main() { cin >> y >> b >> r ; if ( y < 1 || y > 100 || b < 2 || b > 100 || r < 3 || r > 100 ) { return 0 ; } if ( y + 1 <= b && y + 2 <= r ) cout << 3 * y + 3 << endl ; else if ( b - 1 <= y && b + 1 <= r ) cout << 3 * b << endl ; else if ( r - 2 <= y && r - 1 <= b ) cout << 3 * r - 3 << endl ; int x , y , z ; return 0; }"}}
{"translation": {"en": "get x , y , z [ENDL] if x + 1 is equal to y and y + 1 equal to z then [ENDL] print x + y + z [ENDL] else do the following [ENDL] do the following indefinitely till break statement [ENDL] create integer a with a = z [ENDL] create integer b with b = z - 1 [ENDL] create integer c with c = z - 2 [ENDL] if a , b , c less than or equal to z , y , x respectively and c + 1 equal to b and b + 1 equal to a then [ENDL] print a + b + c [ENDL] break out of loop [ENDL] decrement z [ENDL] declare integer variables a , b and c", "c++": "int main() { cin >> x >> y >> z ; if ( x + 1 == y && y + 1 == z ) cout << x + y + z << endl ; else while ( 1 ) int a = z ; int b = z - 1 ; int c = z - 2 ; if ( ( a <= z && b <= y && c <= x ) && ( c + 1 == b && b + 1 == a ) ) cout << a + b + c << endl ; break ; z = z - 1 ; } int a , b , c ; } } }"}}
{"translation": {"en": "read from the input to a , b and c [ENDL] declare integer variable ans = 0 [ENDL] decrease c by 2 [ENDL] subtract 1 from b [ENDL] print ( min of a and ( min of b and c ) ) * 3 + 3 [ENDL] t = int", "c++": "int main() { cin >> a >> b >> c ; int ans = 0 ; c -= 2 ; b -= 1 ; cout << min ( a , min ( b , c ) ) * 3 + 3 << endl ; int t ; return 0; }"}}
{"translation": {"en": "read t [ENDL] for i = 0 to t [ENDL] L , v , l , r = int [ENDL] read L then v then l then r [ENDL] print L / v - r / v + ( l - 1 ) / v [ENDL] t = long long int", "c++": "int main() { cin >> t ; for ( int i = 0 ; i < t ; ++ i ) int L , v , l , r ; cin >> L >> v >> l >> r ; cout << L / v - r / v + ( l - 1 ) / v << endl ; long long int t ; } return 0; }"}}
{"translation": {"en": "read t [ENDL] while decremented value of t is not zero [ENDL] n , l , v , r = long long int [ENDL] read n , v , l , r [ENDL] a = n / v [ENDL] b = ( l - 1 ) / v [ENDL] c = r / v [ENDL] print a + b - c [ENDL] N is a new constant integer = 2e6 + 123", "c++": "int main() { cin >> t ; while ( t -- ) long long int n , l , v , r ; cin >> n >> v >> l >> r ; long long int a = ( n / v ) ; long long int b = ( l - 1 ) / v ; long long int c = ( r / v ) ; cout << a + b - c << \" \\n \" ; const int N = 2e6 + 123 ; } return 0; }"}}
{"translation": {"en": "INF is a new integer constant = 1e9 + 123 [ENDL] create constant integer variable called MOD = 1e9 + 7 [ENDL] declare constant double variable EPS with value 1e - 9 [ENDL] define function solve [ENDL] declare integer variables L , v , l , r and x [ENDL] read user input to L , v , l and r [ENDL] print ( L / v ) - ( ( r / v ) - ( ( l - 1 ) / v ) ) and ' \\ n ' to the standard output [ENDL] create integer variable t [ENDL] read variable t from the input [ENDL] while t is not 0 [ENDL] call method solve ( ) [ENDL] decrement t [ENDL] n = int", "c++": "const int INF = 1e9 + 123 ; const int MOD = 1e9 + 7 ; const double EPS = 1e-9 ; void solve ( ) int L , v , l , r , x ; cin >> L >> v >> l >> r ; cout << ( L / v ) - ( ( r / v ) - ( ( l - 1 ) / v ) ) << ' \\n ' ; int t ; } int main() { cin >> t ; while ( t ) solve ( ) ; -- t ; int n ; } return 0; }"}}
{"translation": {"en": "read n [ENDL] x , y , z , w = int [ENDL] for i = 0 to n exclusive [ENDL] ans = long long [ENDL] read x , y , z , w [ENDL] if z modulo y is 0 decrement z [ENDL] ans = x / y + z / y - w / y [ENDL] if y , z and w are the same increment ans [ENDL] print ans [ENDL] t = integer", "c++": "int main() { cin >> n ; int x , y , z , w ; for ( int i = 0 ; i < n ; i ++ ) long long ans ; cin >> x >> y >> z >> w ; if ( z % y == 0 ) z -- ; ans = x / y + z / y - w / y ; if ( y == z == w ) ans -- ; cout << ans << endl ; int t ; } return 0; }"}}
{"translation": {"en": "read t [ENDL] while t [ENDL] L , v , l , r = integers [ENDL] read L , v , l , r [ENDL] a = integer with a = r / v - l / v [ENDL] if l modulo v is 0 , increment a [ENDL] print L / v - a [ENDL] create long long ints n , m , p , q , r , s , t , u , v , w , x , y , z , L , l , i and j with p = 0", "c++": "int main() { cin >> t ; while ( t -- ) int L , v , l , r ; cin >> L >> v >> l >> r ; int a = r / v - l / v ; if ( l % v == 0 ) a ++ ; cout << L / v - a << endl ; long long int n , m , p = 0 , q , r , s , t , u , v , w , x , y , z , L , l , i , j ; } }"}}
{"translation": {"en": "read input to n [ENDL] start for loop from i = 1 to n inclusive [ENDL] read L , v , l and r from the input [ENDL] set x to L / v - r / v [ENDL] set y to ( l - 1 ) / v [ENDL] print x + y and ' \\ n ' [ENDL] let t be a integer", "c++": "int main() { cin >> n ; for ( i = 1 ; i <= n ; i ++ ) cin >> L >> v >> l >> r ; x = L / v - r / v ; y = ( l - 1 ) / v ; cout << x + y << ' \\n ' ; int t ; } }"}}
{"translation": {"en": "read t [ENDL] while t is decremented by 1 [ENDL] let d , v , l , r be long integers [ENDL] read d , v , l , r [ENDL] let count be a integer with count = d / v [ENDL] r is equal to v * ( r / v ) [ENDL] if l modulo v is not equal to 0 , l is equal to v * ( ( l / v ) + 1 ) [ENDL] print count - ( ( r - l ) / v ) - 1 and newline [ENDL] t , L , v , l , r , r1 , ans = integers", "c++": "int main() { cin >> t ; while ( t -- ) long long int d , v , l , r ; cin >> d >> v >> l >> r ; int count = d / v ; r = v * ( r / v ) ; if ( l % v != 0 ) l = v * ( ( l / v ) + 1 ) ; cout << count - ( ( r - l ) / v ) - 1 << endl ; int t , L , v , l , r , r1 , ans ; } return 0; }"}}
{"translation": {"en": "read t [ENDL] for i = 0 to t exclusive [ENDL] read L , v , l , r [ENDL] ans = ( l - 1 ) / v [ENDL] r1 = ( ( r / v ) + 1 ) * v [ENDL] if L > = r1 , then ans = ans + ( L - r1 ) / v + 1 [ENDL] print ans [ENDL] declare integer t", "c++": "int main() { cin >> t ; for ( int i = 0 ; i < t ; i ++ ) cin >> L >> v >> l >> r ; ans = ( l - 1 ) / v ; r1 = ( ( r / v ) + 1 ) * v ; if ( L >= r1 ) ans += ( L - r1 ) / v + 1 ; cout << ans << endl ; int t ; } }"}}
{"translation": {"en": "read t [ENDL] while decrement t is ture [ENDL] declare long integers L , v , l , r [ENDL] read L and v and l and r [ENDL] declare long integers tot = L / v [ENDL] declare long integers unseen = r / v - ( l - 1 ) / v [ENDL] print tot - unseen and newline [ENDL] declare integers t , L , v , l , r", "c++": "int main() { cin >> t ; while ( t -- ) long int L , v , l , r ; cin >> L >> v >> l >> r ; long int tot = L / v ; long int unseen = r / v - ( l - 1 ) / v ; cout << tot - unseen << endl ; int t , L , v , l , r ; } return 0; }"}}
{"translation": {"en": "read t [ENDL] while decrement t [ENDL] read L , v , l , r [ENDL] print L / v - r / v + l / v - ( 1 if l % v is 0 , else 0 ) , \" \\ n \" [ENDL] n , k , v , l , r = integer", "c++": "int main() { cin >> t ; while ( t -- ) cin >> L >> v >> l >> r ; cout << L / v - r / v + l / v - ( l % v == 0 ? 1 : 0 ) << \" \\n \" ; int n , k , v , l , r ; } return 0; }"}}
{"translation": {"en": "read n [ENDL] for i = 0 to n exclusive [ENDL] read k , v , l , r [ENDL] print the result of k / v + ( l - 1 ) / v - r / v [ENDL] create long long T , L , v , l , r , ans1 , ans2", "c++": "int main() { cin >> n ; for ( int i = 0 ; i < n ; i ++ ) cin >> k >> v >> l >> r ; cout << k / v + ( l - 1 ) / v - r / v << \" \\n \" ; long long T , L , v , l , r , ans1 , ans2 ; } return 0; }"}}
{"translation": {"en": "read T [ENDL] while decrement T [ENDL] read L , v , l and r [ENDL] set ans1 to L / v [ENDL] assign r / v - l / v to ans2 [ENDL] if l mod v = 0 , assign ans2 + 1 to ans2 [ENDL] print ans1 - ans2 [ENDL] i , j , k , n , m = long long integers , sum = long long integer = 0 , ans = long long integer = 0", "c++": "int main() { cin >> T ; while ( T -- ) cin >> L >> v >> l >> r ; ans1 = L / v ; ans2 = r / v - l / v ; if ( l % v == 0 ) ans2 += 1 ; cout << ans1 - ans2 << endl ; long long int i , j , k , sum = 0 , ans = 0 , n , m ; } }"}}
{"translation": {"en": "in function fastio that returns nothing [ENDL] in function solve that returns nothing [ENDL] L , v , l , r = long long integer [ENDL] read L , v , l , r [ENDL] n = L / v [ENDL] m = r / v - ( l - 1 ) / v [ENDL] print the result of n - m [ENDL] call fastio [ENDL] t = integer = 1 [ENDL] read t [ENDL] while looping decrease t by 1 , while in the loop call solve [ENDL] create new integer variable tc", "c++": "void fastio ( ) { } void solve ( ) long long int L , v , l , r ; cin >> L >> v >> l >> r ; n = L / v ; m = r / v - ( l - 1 ) / v ; cout << n - m << \" \\n \" ; fastio ( ) ; } int main() { int t = 1 ; cin >> t ; while ( t -- ) solve ( ) ; int tc ; return 0; }"}}
{"translation": {"en": "read variable tc from the input [ENDL] loop , decrementing tc , while it is not 0 [ENDL] declare int variables n , v , l and r [ENDL] read n , v , l and r from the user input [ENDL] create new integer variable t = n / v [ENDL] declare integer variable with name t1 with value ( r / v ) - ( ( l - 1 ) / v ) [ENDL] print t - t1 to the standard output [ENDL] declare long long variable called t", "c++": "int main() { cin >> tc ; while ( tc -- ) int n , v , l , r ; cin >> n >> v >> l >> r ; int t = n / v ; int t1 = ( ( r / v ) - ( ( l - 1 ) / v ) ) ; cout << t - t1 << endl ; long long t ; } return 0; }"}}
{"translation": {"en": "read t from the input [ENDL] while t ! = 0 , decrement it and continue the loop [ENDL] declare long long ints L , v , l and r [ENDL] read user input to L , v , l and r [ENDL] print L / v - ( r / v - ( l - 1 ) / v ) to the standard output [ENDL] create int int t , L , v , l , r", "c++": "int main() { cin >> t ; while ( t -- ) long long int L , v , l , r ; cin >> L >> v >> l >> r ; cout << L / v - ( r / v - ( l - 1 ) / v ) << endl ; int t , L , v , l , r ; } }"}}
{"translation": {"en": "read t [ENDL] for i = 0 to t exclusive [ENDL] read L , v , l , r [ENDL] print L / v - r / v + ( l - 1 ) / v [ENDL] t = long", "c++": "int main() { cin >> t ; for ( int i = 0 ; i < t ; i ++ ) cin >> L >> v >> l >> r ; cout << L / v - r / v + ( l - 1 ) / v << endl ; long t ; } }"}}
{"translation": {"en": "read t [ENDL] loop t times [ENDL] x , v , l , r = long [ENDL] read x then v then l then r [ENDL] ans = long with ans = x / v [ENDL] temp = long with temp = r / v - ( l - 1 ) / v [ENDL] decrement ans by temp [ENDL] print ans [ENDL] declare integers t , L , v , l , r", "c++": "int main() { cin >> t ; while ( t -- ) long x , v , l , r ; cin >> x >> v >> l >> r ; long ans = x / v ; long temp = r / v - ( l - 1 ) / v ; ans -= temp ; cout << ans << \" \\n \" ; int t , L , v , l , r ; } }"}}
{"translation": {"en": "read t [ENDL] while decrement t is true [ENDL] declare integers a = 0 , b = 0 , c = 0 , d = 0 [ENDL] read L and v and l and r [ENDL] let a be ( l - 1 ) / v [ENDL] let b be r / v [ENDL] let d be d - a [ENDL] let c be L / v [ENDL] print c - d , newline [ENDL] t = int", "c++": "int main() { cin >> t ; while ( t -- ) int a = 0 , b = 0 , c = 0 , d = 0 ; cin >> L >> v >> l >> r ; a = ( l - 1 ) / v ; b = r / v ; d = b - a ; c = L / v ; cout << c - d << endl ; int t ; } return 0; }"}}
{"translation": {"en": "L , v , l , r = long long [ENDL] read t [ENDL] loop t times [ENDL] ans = long long with ans = 0 [ENDL] read L then v then l then r [ENDL] set ans to ( l - 1 ) / v + L / v - r / v [ENDL] print ans [ENDL] declare constant integer variable INF with value 0x3f3f3f3f", "c++": "long long L , v , l , r ; cin >> t ; int main() { while ( t -- ) long long ans = 0 ; cin >> L >> v >> l >> r ; ans = ( l - 1 ) / v + L / v - r / v ; cout << ans << endl ; const int INF = 0x3f3f3f3f ; } }"}}
{"translation": {"en": "let t , v , l , r , L and cnt be ints with the value of cnt = 0 [ENDL] read variable t from the input [ENDL] loop , decrementing t , while it is not 0 [ENDL] read variables L , v , l and r from the input [ENDL] declare new integer ans = L / v - ( r / v - ( l - 1 ) / v ) [ENDL] print ans to the standard output [ENDL] let int t", "c++": "int t , v , l , r , L , cnt = 0 ; int main() { cin >> t ; while ( t -- ) cin >> L >> v >> l >> r ; int ans = L / v - ( r / v - ( l - 1 ) / v ) ; cout << ans << endl ; int t ; } return 0; }"}}
{"translation": {"en": "read t [ENDL] while t - - is truthy [ENDL] create long long ints l , v , a , and b [ENDL] read l , v , a , and b [ENDL] create long long int numOfLight = ( l / v ) - ( ( b / v ) - ( a - 1 ) / v ) [ENDL] print numOfLight [ENDL] make integer t", "c++": "int main() { cin >> t ; while ( t -- ) long long int l , v , a , b ; cin >> l >> v >> a >> b ; long long int numOfLight = ( l / v ) - ( ( b / v ) - ( a - 1 ) / v ) ; cout << numOfLight << endl ; int t ; } }"}}
{"translation": {"en": "read t [ENDL] while t - - is truthy [ENDL] create long long ints l , v , li , ri , val1 , val2 , val3 [ENDL] read l , v , li , and ri [ENDL] set val1 to l / v [ENDL] set val2 to li / v [ENDL] set val3 to ri / v [ENDL] if li modulo v is 0 , increment val3 [ENDL] set val3 to val3 - val2 [ENDL] set val1 to val1 - val3 [ENDL] print val1 [ENDL] declare long long array mz size 100005 = { }", "c++": "int main() { cin >> t ; while ( t -- ) long long l , v , li , ri , val1 , val2 , val3 ; cin >> l >> v >> li >> ri ; val1 = l / v ; val2 = li / v ; val3 = ri / v ; if ( li % v == 0 ) val3 ++ ; val3 -= val2 ; val1 -= val3 ; cout << val1 << endl ; long long mz [ 100005 ] = { } ; } }"}}
{"translation": {"en": "declare long long array ts size 100005 = { } [ENDL] declare long long T [ENDL] read T [ENDL] while decrement T is true [ENDL] declare long longs L , v , l , r , ans = 0 [ENDL] read L , v , l , r [ENDL] increment ans by L / v [ENDL] if r % v is not 0 , let r be r - r % v [ENDL] if l % v is not 0 , let l be l + ( v - l % v ) [ENDL] decrement ans by ( ( r - l ) / v + 1 ) [ENDL] print ans , newline [ENDL] t = int", "c++": "long long ts [ 100005 ] = { } ; long long T ; int main() { cin >> T ; while ( T -- ) long long L , v , l , r , ans = 0 ; cin >> L >> v >> l >> r ; ans += L / v ; if ( r % v != 0 ) r = r - r % v ; if ( l % v != 0 ) l = l + ( v - l % v ) ; ans -= ( ( r - l ) / v + 1 ) ; cout << ans << endl ; int t ; } }"}}
{"translation": {"en": "read t [ENDL] L , u , l , r = int [ENDL] res = vector of int [ENDL] for i = 0 to t exclusive [ENDL] read L , u , l , r [ENDL] curr = L / u [ENDL] subtract ( r / u - l / u + ( 1 if l modulo u is 0 ) ) from curr [ENDL] put curr at end of res [ENDL] for i = 0 to t exclusive print res [ i ] [ENDL] n , l1 , v1 , l2 , r , count = integers", "c++": "int main() { cin >> t ; int L , u , l , r ; vector < int > res ; for ( int i = 0 ; i < t ; i ++ ) cin >> L >> u >> l >> r ; int curr = L / u ; curr -= ( r / u - l / u + ( l % u == 0 ? 1 : 0 ) ) ; res . push_back ( curr ) ; for ( int i = 0 ; i < t ; i ++ ) { cout << res [ i ] << endl ; } } int n , l1 , v1 , l2 , r , count ; return 0; }"}}
{"translation": {"en": "read n [ENDL] for i = 0 to n exclusive [ENDL] read l1 , v1 , l2 , r [ENDL] print the result of ( l1 / v1 - ( r / v1 - ( l2 - 1 ) / v1 ) ) [ENDL] in function gcd with arguments long long x and long long y that returns a long long", "c++": "int main() { cin >> n ; for ( int i = 0 ; i < n ; i ++ ) cin >> l1 >> v1 >> l2 >> r ; cout << ( l1 / v1 - ( r / v1 - ( l2 - 1 ) / v1 ) ) << endl ; long long gcd ( long long x , long long y ) } }"}}
{"translation": {"en": "if y is 0 [ENDL] return x [ENDL] else [ENDL] return the result of calling gcd with arguments y and x modulo y [ENDL] in function long long expo with arguments of long long n , long long m , and long long p that returns a long long [ENDL] r = long long = 1 [ENDL] n = n modulo p [ENDL] while m > 0 [ENDL] if m modulo 2 is possible then r = ( r * n ) modulo p [ENDL] n = n squared modulo p [ENDL] m - m / 2 [ENDL] return r modulo p [ENDL] in function isPrime with an argument of a long long n that returns a boolean [ENDL] if n < = 1 then return false [ENDL] if n < = 3 then return true [ENDL] if n is even or n modulo 3 is 0 then return false [ENDL] for i = 5 , where i is square to n inclusive and i = i + 6 [ENDL] if n modulo i is 0 or n modulo ( i + 2 ) is 0 , then return false [ENDL] return true [ENDL] t = long long [ENDL] read t [ENDL] while looping decrease t by 1 [ENDL] a , b , c , d = long long [ENDL] read a , b , c , d [ENDL] print the result of ( a / b ) - ( ( d / b ) - ( c - 1 ) / b ) [ENDL] t = integer", "c++": "if ( y == 0 ) return x ; else return gcd ( y , x % y ) ; long long expo ( long long n , long long m , long long p ) } long long r = 1 ; n = n % p ; while ( m > 0 ) if ( m % 2 ) r = ( r * n ) % p ; n = ( n * n ) % p ; m = m / 2 ; return r % p ; } bool isPrime ( long long n ) } if ( n <= 1 ) return false ; if ( n <= 3 ) return true ; if ( n % 2 == 0 || n % 3 == 0 ) return false ; for ( long long i = 5 ; i * i <= n ; i = i + 6 ) if ( n % i == 0 || n % ( i + 2 ) == 0 ) return false ; return true ; long long t ; } int main() { cin >> t ; while ( t -- ) long long a , b , c , d ; cin >> a >> b >> c >> d ; cout << ( a / b ) - ( ( d / b ) - ( c - 1 ) / b ) << \" \\n \" ; int t ; } return 0; }"}}
{"translation": {"en": "read t [ENDL] l , v , x , y = long long integer [ENDL] while decrement t [ENDL] read l , v , x , y [ENDL] count = long long integer with count = 0 [ENDL] total = long long integer with total = l / v ; [ENDL] sub1 = long long integer with sub1 = y / v [ENDL] sub2 = long long integer with sub2 = x / v [ENDL] count = total - sub1 + sub2 [ENDL] if x modulo v is 0 , decrement count [ENDL] print count [ENDL] create integer t", "c++": "int main() { cin >> t ; long long int l , v , x , y ; while ( t -- ) cin >> l >> v >> x >> y ; long long int count = 0 ; long long int total = l / v ; long long int sub1 = y / v ; long long int sub2 = x / v ; count = total - sub1 + sub2 ; if ( x % v == 0 ) count -- ; cout << count << endl ; int t ; } }"}}
{"translation": {"en": "read t [ENDL] iterate t times [ENDL] create integers l , r , v , p [ENDL] read p , v , l and r [ENDL] declare integer ans and set it to p / v [ENDL] assign ans - ( r / v - ( l - 1 ) / v ) to ans [ENDL] print ans [ENDL] declare new int variables n and d", "c++": "int main() { cin >> t ; while ( t -- ) int l , r , v , p ; cin >> p >> v >> l >> r ; int ans = p / v ; ans -= r / v - ( l - 1 ) / v ; cout << ans << endl ; int n , d ; } return 0; }"}}
{"translation": {"en": "read n [ENDL] declare new 2d array of long longs a with size n by 4 [ENDL] start for loop from i = 0 to n exclusive [ENDL] in a for loop , change j from 0 to 4 exclusive , reading a [ i ] [ j ] from the user input on each loop [ENDL] in a for loop , change i from 0 to n exclusive [ENDL] change the value of d to ( a [ i ] [ 0 ] / a [ i ] [ 1 ] ) + ( ( a [ i ] [ 2 ] - 1 ) / a [ i ] [ 1 ] ) - ( a [ i ] [ 3 ] / a [ i ] [ 1 ] ) [ENDL] print d and \" \\ n \" [ENDL] declare integer T", "c++": "int main() { cin >> n ; long long a [ n ] [ 4 ] ; for ( int i = 0 ; i < n ; i ++ ) for ( int j = 0 ; j < 4 ; j ++ ) { cin >> a [ i ] [ j ] ; } for ( int i = 0 ; i < n ; i ++ ) } d = ( a [ i ] [ 0 ] / a [ i ] [ 1 ] ) + ( ( a [ i ] [ 2 ] - 1 ) / a [ i ] [ 1 ] ) - ( a [ i ] [ 3 ] / a [ i ] [ 1 ] ) ; cout << d << \" \\n \" ; int T ; } return 0; }"}}
{"translation": {"en": "read T [ENDL] declare L , v , l , r as long integers [ENDL] while decrement T is true [ENDL] read L , v , l , r [ENDL] declare nbr_lat = L / v as long integer [ENDL] declare long integer hidden = r / v - l / v [ENDL] if l % v is 0 , increment hidden [ENDL] print nbr_lat - hidden and newline [ENDL] create long long int t", "c++": "int main() { cin >> T ; long int L , v , l , r ; while ( T -- ) cin >> L >> v >> l >> r ; long int nbr_lat = L / v ; long int hidden = r / v - l / v ; if ( l % v == 0 ) hidden ++ ; cout << nbr_lat - hidden << endl ; long long int t ; } return 0; }"}}
{"translation": {"en": "read t [ENDL] create long long int dest , v , l and r [ENDL] while decrement t [ENDL] read dest , v , l and r [ENDL] set fin to dest / v [ENDL] fin1 = r / v [ENDL] fin2 = ( l - 1 ) / v [ENDL] print fin - fin1 + fin2 [ENDL] n , i = integers", "c++": "int main() { cin >> t ; long long int dest , v , l , r ; while ( t -- ) cin >> dest >> v >> l >> r ; long long int fin = dest / v ; long long int fin1 = r / v ; long long int fin2 = ( l - 1 ) / v ; cout << ( fin - fin1 + fin2 ) << endl ; int n , i ; } return 0; }"}}
{"translation": {"en": "Read n [ENDL] a = array of n integers [ENDL] Read n values into array a [ENDL] sort array elements of a in ascending order [ENDL] if n is equal to 1 [ENDL] print a [ 0 ] and a new line [ENDL] else if n is 3 [ENDL] print a [ 1 ] and a new line [ENDL] else do the following [ENDL] print a [ 2 ] and a new line [ENDL] b , c , d , i , n = integers and a = array of 10001 integers", "c++": "cin >> n ; int main() { int a [ n ] ; for ( i = 0 ; i < n ; i ++ ) { cin >> a [ i ] ; } sort ( a , a + n ) ; if ( n == 1 ) cout << a [ 0 ] << endl ; else if ( n == 3 ) return 0; cout << a [ 1 ] << endl ; else return 0; cout << a [ 2 ] << endl ; long long b , c , d , i , n , a [ 10001 ] ; } return 0; }"}}
{"translation": {"en": "Read n [ENDL] Read n values into array a [ENDL] sort array elements of a in ascending order [ENDL] print a [ n / 2 ] and a new line [ENDL] do nothing", "c++": "cin >> n ; int main() { for ( i = 0 ; i < n ; i ++ ) cin >> a [ i ] ; sort ( a , a + n ) ; cout << a [ n / 2 ] << endl ; ; return 0; }"}}
{"translation": {"en": "eps = 1e - 8 = const double [ENDL] maxn = 1e6 + 7 = const int [ENDL] pi = const double = acos ( - 1 ) [ENDL] inf = 0x3f3f3f3f = const int [ENDL] n = int [ENDL] a = int array length 10 [ENDL] read n [ENDL] read a from 1 to n inclusive [ENDL] sort a from 1 to n inclusive [ENDL] x = int = half of a [ n ] - a [ 1 ] ) [ENDL] print a at 1 + x [ENDL] n = integer", "c++": "const double eps = 1e-8 ; const int maxn = 1e6 + 7 ; const double pi = acos ( - 1 ) ; const int inf = 0x3f3f3f3f ; int n ; int a [ 10 ] ; cin >> n ; int main() { for ( int i = 1 ; i <= n ; i ++ ) { cin >> a [ i ] ; } sort ( a + 1 , a + n + 1 ) ; int x = ( a [ n ] - a [ 1 ] ) / 2 ; cout << a [ 1 ] + x << endl ; int n ; return 0; }"}}
{"translation": {"en": "Read n [ENDL] sum = integer with 0 [ENDL] for i = 0 to n exclusive [ENDL] a = integer [ENDL] Read a [ENDL] set sum to sum + a [ENDL] print sum / n and a new line [ENDL] declare new unsigned variable n", "c++": "int main() { cin >> n ; int sum = 0 ; for ( int i = 0 ; i < n ; i ++ ) int a ; cin >> a ; sum += a ; cout << ( sum / n ) << endl ; } unsigned n ; return 0; }"}}
{"translation": {"en": "read input to n [ENDL] vect is a new vector of integers with n elements [ENDL] define new long sum = 0 [ENDL] in a for loop , change i from 0 to n exclusive [ENDL] read vect [ i ] [ENDL] change sum to the sum of sum and vect [ i ] [ENDL] sort elements of vect from the index 0 to n [ENDL] new long avg = sum / n [ENDL] print avg [ENDL] n = integer , a = integer array of size 5", "c++": "int main() { cin >> n ; vector < int > vect ( n ) ; long sum = 0 ; for ( int i = 0 ; i < n ; i ++ ) cin >> vect [ i ] ; sum += vect [ i ] ; sort ( vect . begin ( ) , vect . begin ( ) + n ) ; } long avg = sum / n ; cout << avg << endl ; int n , a [ 5 ] ; return 0; }"}}
{"translation": {"en": "read n [ENDL] for 0 to n exclusive read a [ i ] [ENDL] sort ( a , a + n ) [ENDL] print a [ n / 2 ] [ENDL] nu = array of 100100 long long", "c++": "int main() { cin >> n ; for ( int i = 0 ; i < n ; i ++ ) cin >> a [ i ] ; sort ( a , a + n ) ; cout << a [ n / 2 ] << endl ; long long nu [ 100100 ] ; return 0; }"}}
{"translation": {"en": "n = integer [ENDL] read n [ENDL] sum = integer with sum = 0 [ENDL] for i = 0 to n exclusive [ENDL] b = integer [ENDL] read b [ENDL] sum = sum + b [ENDL] print sum / n [ENDL] a is an array of integers with size 100", "c++": "int n ; int main() { cin >> n ; int sum = 0 ; for ( int i = 0 ; i < n ; i ++ ) int b ; cin >> b ; sum += b ; cout << sum / n << endl ; } int a [ 100 ] ; return 0; }"}}
{"translation": {"en": "create integer variable with name n [ENDL] read n from the user input [ENDL] read n elements from the input to a in a for loop [ENDL] sort a from index 0 to n [ENDL] print a [ n / 2 ] [ENDL] in void function solve", "c++": "int n ; int main() { cin >> n ; for ( int i = 0 ; i < n ; ++ i ) { cin >> a [ i ] ; } sort ( a , a + n ) ; cout << a [ n / 2 ] << endl ; void solve ( ) return 0; }"}}
{"translation": {"en": "n = int [ENDL] read n [ENDL] a = int vector [ENDL] for i = 0 to n exclusive [ENDL] buff = int [ENDL] read buff [ENDL] push back buff into a [ENDL] sort a [ENDL] m = half of size of a = int [ENDL] print a at m [ENDL] call solve [ENDL] n , m , i , q , ii = long long and a , b = long long array of size 100001 each", "c++": "int n ; cin >> n ; vector < int > a ; for ( int i = 0 ; i < n ; ++ i ) int buff ; cin >> buff ; a . push_back ( buff ) ; sort ( ( a ) . begin ( ) , ( a ) . end ( ) ) ; } int m = a . size ( ) / 2 ; cout << a [ m ] << endl ; solve ( ) ; } int main() { long long n , m , i , a [ 100001 ] , b [ 100001 ] , q , ii ; return 0; }"}}
{"translation": {"en": "read n [ENDL] read n values int a [ENDL] sort a from index 0 to n [ENDL] print a [ n / 2 ] [ENDL] V = vector of integer", "c++": "cin >> n ; int main() { for ( i = 0 ; i < n ; i ++ ) cin >> a [ i ] ; sort ( a , a + n ) ; cout << a [ n / 2 ] << endl ; vector < int > V ; return 0; }"}}
{"translation": {"en": "n = integer [ENDL] read n [ENDL] while decrement n [ENDL] x = integer [ENDL] read x [ENDL] append x on V [ENDL] sort V . begin ( ) and V . end ( ) [ENDL] print V [ ( V . size ( ) / 2 ) ] [ENDL] n , i = integers and a = array of 10 integers", "c++": "int n ; int main() { cin >> n ; while ( n -- ) int x ; cin >> x ; V . push_back ( x ) ; sort ( V . begin ( ) , V . end ( ) ) ; } cout << V [ ( V . size ( ) / 2 ) ] << endl ; int n , i , a [ 10 ] ; return 0; }"}}
{"translation": {"en": "Read n [ENDL] Read n values into array a [ENDL] sort array elements of a in ascending order [ENDL] print a [ n / 2 + 1 ] and a new line [ENDL] n = integer", "c++": "cin >> n ; int main() { for ( i = 1 ; i <= n ; i ++ ) cin >> a [ i ] ; sort ( a + 1 , a + n + 1 ) ; cout << a [ n / 2 + 1 ] << endl ; int n ; return 0; }"}}
{"translation": {"en": "Read n [ENDL] year = array of n integers [ENDL] Read n values into array year [ENDL] sort array elements of year in ascending order [ENDL] print year [ n / 2 ] and a new line [ENDL] create constant double eps with value 1e - 8", "c++": "int main() { cin >> n ; int year [ n ] ; for ( int i = 0 ; i < n ; i ++ ) cin >> year [ i ] ; sort ( year , year + n ) ; cout << year [ n / 2 ] << endl ; const double eps = 1e-8 ; }"}}
{"translation": {"en": "create constant integer cakked maxn = 1e6 + 7 [ENDL] create constant double with name pi and value = acos of - 1 [ENDL] create new constant integer inf = 0x3f3f3f3f [ENDL] declare integer variable n [ENDL] a is a new array of integers with 10 elements [ENDL] read variable n from the input [ENDL] read input into sequential items of a n times , starting from the index 1 [ENDL] sort a from element 1 to n + 1 [ENDL] x is a new integer = ( a [ n ] - a [ 1 ] ) / 2 [ENDL] print a [ 1 ] + x [ENDL] MOD = const integer with MOD = 1000000007", "c++": "; const int maxn = 1e6 + 7 ; const double pi = acos ( - 1 ) ; const int inf = 0x3f3f3f3f ; int n ; int a [ 10 ] ; cin >> n ; int main() { for ( int i = 1 ; i <= n ; i ++ ) { cin >> a [ i ] ; } sort ( a + 1 , a + n + 1 ) ; int x = ( a [ n ] - a [ 1 ] ) / 2 ; cout << a [ 1 ] + x << endl ; const int MOD = 1000000007 ; return 0; }"}}
{"translation": {"en": "INF = const long long with INF = 1e18 [ENDL] t , m , n = long long [ENDL] A = vector of integer [ENDL] in the function solve that returns long long [ENDL] sort A . begin ( ) and A . end ( ) [ENDL] n = integer with n = A . size ( ) [ENDL] return A [ n / 2 ] [ENDL] read n [ENDL] resize n of A [ENDL] for i = 0 to n exclusive , read A [ i ] [ENDL] print solve [ENDL] create float n", "c++": "const long long INF = 1e18 ; long long t , m , n ; vector < int > A ; long long solve ( ) sort ( A . begin ( ) , A . end ( ) ) ; int n = A . size ( ) ; return A [ n / 2 ] ; cin >> n ; } int main() { A . resize ( n ) ; for ( int i = 0 ; i < n ; i ++ ) cin >> A [ i ] ; cout << solve ( ) << endl ; float n ; return 0; }"}}
{"translation": {"en": "read n [ENDL] create integers tmp and sum = 0 [ENDL] for i = 0 to i = n - 1 [ENDL] read tmp [ENDL] set sum to sum + tmp [ENDL] print the result of ceil of sum / n [ENDL] n = integer", "c++": "int main() { cin >> n ; int tmp , sum = 0 ; for ( int i = 0 ; i < n ; ++ i ) cin >> tmp ; sum += tmp ; cout << ceil ( sum / n ) << endl ; } int n ; }"}}
{"translation": {"en": "Read n [ENDL] sum = integer with 0 [ENDL] for i = 0 to n exclusive [ENDL] a = integer [ENDL] Read a [ENDL] set sum to sum + a [ENDL] print sum / n and a new line [ENDL] n = int", "c++": "int main() { cin >> n ; int sum = 0 ; for ( int i = 0 ; i < n ; i ++ ) int a ; cin >> a ; sum += a ; cout << sum / n << endl ; } int n ; }"}}
{"translation": {"en": "read n [ENDL] V = vector of n int [ENDL] for i = 0 to n exclusive read V [ i ] [ENDL] sort V [ENDL] print ( V [ 0 ] + V [ n - 1 ] ) / 2 [ENDL] let n , a , sum = 0 be integer", "c++": "int main() { cin >> n ; vector < int > V ( n ) ; for ( int i = 0 ; i < n ; ++ i ) cin >> V [ i ] ; sort ( V . begin ( ) , V . end ( ) ) ; cout << ( V [ 0 ] + V [ n - 1 ] ) / 2 << \" \\n \" ; int n , a , sum = 0 ; return 0; }"}}
{"translation": {"en": "read n [ENDL] for i = 0 to n exclusive [ENDL] read a [ENDL] sum + = a [ENDL] print sum and a new line [ENDL] create integer n", "c++": "int main() { cin >> n ; for ( int i = 0 ; i < n ; i ++ ) cin >> a ; sum += a ; cout << sum / n << endl ; } int n ; return 0; }"}}
{"translation": {"en": "read input to n [ENDL] create new vector of integers a with n elements [ENDL] for i = 0 to n exclusive , read a [ i ] from the user input [ENDL] sort vector a [ENDL] print a [ n / 2 ] [ENDL] create long long ints k , l , m , o , n , max = 0 and min = 0", "c++": "int main() { cin >> n ; vector < int > a ( n ) ; for ( int i = 0 ; i < n ; ++ i ) { cin >> a [ i ] ; } sort ( a . begin ( ) , a . end ( ) ) ; cout << a [ n / 2 ] << endl ; long long int k , l , m , o , n , max ( 0 ) , min ( 0 ) ; }"}}
{"translation": {"en": "read input to o [ENDL] for i from 0 to o exclusive incrementing i [ENDL] read user input to n [ENDL] if max is less than n , assign the new value = n to max [ENDL] if i = 0 , change min to n [ENDL] if min is greater than n , assign change min to n [ENDL] change the value of k to ( max - min ) / 2 [ENDL] print max - k to the standard output [ENDL] let maxn be a constant integer with maxn = 6", "c++": "int main() { cin >> o ; for ( int i = 0 ; i < o ; i ++ ) cin >> n ; if ( max < n ) { max = n ; } if ( i == 0 ) { min = n ; } if ( min > n ) { min = n ; } k = ( max - min ) / 2 ; } cout << max - k << endl ; const int maxn = 6 ; }"}}
{"translation": {"en": "A = array of integers of length maxn [ENDL] let N be a integer [ENDL] read N [ENDL] for i = 1 to N inclusive , read A [ i ] [ENDL] sort the values A + 1 and A + N + 1 [ENDL] let p be a integer with p = N / 2 [ENDL] if N modulo 2 is equal to 1 , increment p by 1 [ENDL] print A [ p ] and newline [ENDL] declare new integer variables n and i", "c++": "int A [ maxn ] ; int N ; int main() { cin >> N ; for ( int i = ( 1 ) ; i <= ( N ) ; i += ( 1 ) ) { cin >> A [ i ] ; } sort ( A + 1 , A + N + 1 ) ; int p = N / 2 ; if ( N % 2 == 1 ) { p ++ ; } cout << A [ p ] << \" \\n \" ; int n , i ; return 0; }"}}
{"translation": {"en": "read n from the input stream [ENDL] a is an array of integers with n elements [ENDL] read n elements from the input into a [ENDL] sort a [ENDL] print a [ n / 2 ] to the stdout [ENDL] n = integer", "c++": "cin >> n ; int main() { int a [ n ] ; for ( i = 0 ; i < n ; i ++ ) { cin >> a [ i ] ; } sort ( a , a + n ) ; cout << a [ n / 2 ] << endl ; int n ; return 0; }"}}
{"translation": {"en": "a = vector integer [ENDL] read n [ENDL] for i = 0 to n exclusive [ENDL] k = integer [ENDL] read k [ENDL] push back the element of a by 1 and insert a new element of k at the end of a [ENDL] min = max = integer = a [ 0 ] [ENDL] for i = 0 to size of a exclusive [ENDL] if a [ i ] > max , then max = a [ i ] [ENDL] if a [ i ] < min , then min = a [ i ] [ENDL] print min + ( max - min ) / 2 [ENDL] inf is a new constant integer with value 0x3f3f3f3f", "c++": "int main() { vector < int > a ; cin >> n ; for ( int i = 0 ; i < n ; i ++ ) int k ; cin >> k ; a . push_back ( k ) ; int min = a [ 0 ] , max = a [ 0 ] ; } for ( int i = 0 ; i < a . size ( ) ; i ++ ) if ( a [ i ] > max ) max = a [ i ] ; if ( a [ i ] < min ) min = a [ i ] ; cout << min + ( max - min ) / 2 << endl ; } const int inf = 0x3f3f3f3f ; return 0; }"}}
{"translation": {"en": "declare new constant integer MX = 1e5 + 5 [ENDL] create new int n and int array a with size 10 [ENDL] read n [ENDL] read n elements into a , starting from the index 1 [ENDL] sort a [ENDL] print a [ n / 2 + 1 ] to the standard output [ENDL] MAX = constant integer of value 1e10", "c++": "const int MX = 1e5 + 5 ; int n , a [ 10 ] ; cin >> n ; int main() { for ( int i = 1 ; i <= n ; i ++ ) cin >> a [ i ] ; sort ( a + 1 , a + n + 1 ) ; cout << a [ n / 2 + 1 ] << endl ; const int MAX = 1e10 ; return 0; }"}}
{"translation": {"en": "dict = set of integers [ENDL] n , j = integers [ENDL] read n [ENDL] arr = array of length 6 initialized to 0 [ENDL] for i = 0 to n exclusive read arr [ i ] [ENDL] for i = 0 to n exclusive [ENDL] if arr [ i ] is greater than 0 then insert arr [ i ] into dict [ENDL] set the first n elements of arr to 0 [ENDL] set j to 0 [ENDL] for it = the first element of dict until the last element of dict exclusive set arr [ j ] to be the value of it then add 1 to j [ENDL] print arr [ n / 2 ] [ENDL] a = array of 10 integers", "c++": "set < int > dict ; int n , j ; int main() { cin >> n ; int arr [ 6 ] = { 0 } ; for ( int i = 0 ; i < n ; i ++ ) { cin >> arr [ i ] ; } for ( int i = 0 ; i < n ; i ++ ) if ( arr [ i ] > 0 ) { dict . insert ( arr [ i ] ) ; } memset ( arr , 0 , n ) ; } j = 0 ; for ( set < int > :: iterator it = dict . begin ( ) ; it != dict . end ( ) ; ++ it ) arr [ j ++ ] = * it ; cout << arr [ n / 2 ] << endl ; int a [ 10 ] ; return 0; }"}}
{"translation": {"en": "n = integer [ENDL] Read n [ENDL] Read n values into array a [ENDL] sort array elements of a in ascending order [ENDL] print a [ n / 2 ] and a new line [ENDL] n = integer", "c++": "int n ; int main() { cin >> n ; for ( int i = 0 ; i < n ; i ++ ) cin >> a [ i ] ; sort ( a , a + n ) ; cout << a [ n / 2 ] << endl ; int n ; return 0; }"}}
{"translation": {"en": "Read n [ENDL] a = array of n + 2 integers [ENDL] set a [ 0 ] to 0 [ENDL] Read n values into array a [ENDL] sort array elements of a in ascending order [ENDL] k = integer , set to n / 2 [ENDL] if n modulo 2 , then increment k [ENDL] print a [ k ] and a new line [ENDL] y = array of integers of length 10", "c++": "int main() { cin >> n ; int a [ n + 2 ] ; a [ 0 ] = 0 ; for ( int i = 1 ; i <= n ; ++ i ) cin >> a [ i ] ; sort ( a , a + n + 1 ) ; int k = n / 2 ; if ( n % 2 ) k ++ ; cout << a [ k ] << endl ; int y [ 10 ] ; }"}}
{"translation": {"en": "let n be a integer [ENDL] read n [ENDL] for i = 1 to n inclusive , read y [ i ] [ENDL] sort the values y + 1 and y + n + 1 [ENDL] print y [ n / 2 + 1 ] and newline [ENDL] create int n", "c++": "int n ; int main() { cin >> n ; for ( int i = 1 ; i <= n ; i ++ ) cin >> y [ i ] ; sort ( y + 1 , y + n + 1 ) ; cout << y [ n / 2 + 1 ] << endl ; int n ; return 0; }"}}
{"translation": {"en": "read n [ENDL] create int ara [ n ] [ENDL] for i = 0 to n exclusive , read ara [ i ] [ENDL] sort elements between ara and ara + n [ENDL] if n = 1 [ENDL] print ara [ 0 ] [ENDL] else if n = 3 [ENDL] print ara [ 1 ] [ENDL] else [ENDL] print ara [ 2 ] [ENDL] print a new line [ENDL] declare new constant integer M with value 2e5 + 5", "c++": "int main() { cin >> n ; int ara [ n ] ; for ( int i = 0 ; i < n ; i ++ ) cin >> ara [ i ] ; sort ( ara , ara + n ) ; if ( n == 1 ) cout << ara [ 0 ] ; else if ( n == 3 ) cout << ara [ 1 ] ; else cout << ara [ 2 ] ; cout << endl ; const int M = 2e5 + 5 ; return 0; }"}}
{"translation": {"en": "create new constant integer inf with value 1e9 + 5 [ENDL] n is a new integer variable [ENDL] create new vector of integers v [ENDL] read variable n from the input [ENDL] for i from 0 to n exclusive [ENDL] create new integer variable t [ENDL] read variable t from the input [ENDL] add new element = t after the last element of v [ENDL] sort v from start to end [ENDL] print v [ n / 2 ] [ENDL] n = integer and y = array of 10 integers", "c++": "const int inf = 1e9 + 5 ; int n ; int main() { vector < int > v ; cin >> n ; for ( int i = 0 ; i < n ; i ++ ) int t ; cin >> t ; v . push_back ( t ) ; sort ( v . begin ( ) , v . end ( ) ) ; } cout << v [ n / 2 ] << endl ; int n , y [ 10 ] ; return 0; }"}}
{"translation": {"en": "Read n [ENDL] Read n values into array y [ENDL] sort array elements of y in ascending order [ENDL] print y [ n / 2 ] and a new line [ENDL] create variable n with type size_t", "c++": "int main() { cin >> n ; for ( int i = 0 ; i < n ; i ++ ) cin >> y [ i ] ; sort ( y , y + n ) ; cout << y [ n / 2 ] << endl ; size_t n ; }"}}
{"translation": {"en": "read input to n [ENDL] create new vector year with n elements of type of size_t [ENDL] read n elements into year in a loop [ENDL] sort year [ENDL] print year [ ( n - 1 ) / 2 ] [ENDL] n = int", "c++": "int main() { cin >> n ; vector < size_t > year ( n ) ; for ( size_t i = 0 ; i < n ; ++ i ) { cin >> year [ i ] ; } sort ( year . begin ( ) , year . end ( ) ) ; cout << year [ ( n - 1 ) / 2 ] << endl ; int n ; return 0; }"}}
{"translation": {"en": "read n [ENDL] arr = array of 10 int [ENDL] for i = 1 to n exclusive read arr [ i ] [ENDL] sort arr from position 1 to n + 1 [ENDL] if n is 1 [ENDL] print arr [ 1 ] [ENDL] else if n is 3 [ENDL] print arr [ 2 ] [ENDL] else [ENDL] print arr [ 3 ] [ENDL] declare long long unsigned variables n and k", "c++": "int main() { cin >> n ; int arr [ 10 ] ; for ( int i = 1 ; i <= n ; i ++ ) cin >> arr [ i ] ; sort ( arr + 1 , arr + n + 1 ) ; if ( n == 1 ) cout << arr [ 1 ] << endl ; else if ( n == 3 ) cout << arr [ 2 ] << endl ; else cout << arr [ 3 ] << endl ; long long unsigned n , k ; return 0; }"}}
{"translation": {"en": "read n and k [ENDL] declare long long unsigned variable mid = n / 2 [ENDL] if n modulo 2 is 1 , increment mid [ENDL] if k < = mid [ENDL] print ( k * 2 ) - 1 [ENDL] else [ENDL] print ( ( k - ( mid + 1 ) ) * 2 ) + 2 [ENDL] n , k , p , o = integers", "c++": "int main() { cin >> n >> k ; long long unsigned mid = n / 2 ; if ( n % 2 == 1 ) mid ++ ; if ( k <= mid ) cout << ( k * 2 ) - 1 << endl ; else cout << ( ( k - ( mid + 1 ) ) * 2 ) + 2 << endl ; long long n , k , p , o ; return 0; }"}}
{"translation": {"en": "Read n and k [ENDL] if n is even [ENDL] set p to n / 2 [ENDL] else do the following [ENDL] set p to n / 2 + 1 [ENDL] if k is less than or equal to p [ENDL] set o to ( k * 2 ) - 1 [ENDL] else do the following [ENDL] set o to ( k - p ) * 2 [ENDL] print o and a new line [ENDL] n , k , half = long long int", "c++": "int main() { cin >> n >> k ; if ( n % 2 == 0 ) p = n / 2 ; else p = n / 2 + 1 ; if ( k <= p ) } o = ( k * 2 ) - 1 ; else o = ( k - p ) * 2 ; cout << o << endl ; } long long int n , k , half ; return 0; }"}}
{"translation": {"en": "read n and k [ENDL] if n modulo 2 is 0 [ENDL] half = n / 2 [ENDL] else if n modulo 2 is 1 [ENDL] half = ( n + 1 ) / 2 [ENDL] if k < = half [ENDL] print 2 * k - 1 [ENDL] else if k > half [ENDL] print ( k - half ) * 2 [ENDL] declare long longs n , k , c , l and d", "c++": "int main() { cin >> n >> k ; if ( n % 2 == 0 ) half = n / 2 ; else if ( n % 2 == 1 ) half = ( n + 1 ) / 2 ; if ( k <= half ) } cout << 2 * k - 1 << endl ; else if ( k > half ) cout << ( k - half ) * 2 << endl ; long long n , k , c , l , d ; } return 0; }"}}
{"translation": {"en": "read n and k [ENDL] if n is even [ENDL] l = n / 2 [ENDL] else [ENDL] l = n / 2 + 1 [ENDL] if k < = l [ENDL] print 2 * k - 1 [ENDL] else [ENDL] if n is odd [ENDL] print 2 * k - n - 1 [ENDL] else [ENDL] print 2 * k - n [ENDL] create long long n , k", "c++": "int main() { cin >> n >> k ; if ( n % 2 == 0 ) l = n / 2 ; else l = n / 2 + 1 ; if ( k <= l ) } cout << 2 * k - 1 << endl ; else if ( n % 2 != 0 ) cout << 2 * k - n - 1 << endl ; else cout << 2 * k - n << endl ; long long n , k ; } } }"}}
{"translation": {"en": "read n , k [ENDL] if n is even [ENDL] if k is greater than n / 2 [ENDL] print ( k - ( n / 2 ) ) * 2 [ENDL] else do the following [ENDL] print k * 2 - 1 [ENDL] else do the following [ENDL] if k is greater than ( n ) / 2 + 1 [ENDL] print ( k - ( n / 2 + 1 ) ) * 2 [ENDL] else do the following [ENDL] print k * 2 - 1 [ENDL] create long long integers n and k", "c++": "int main() { cin >> n >> k ; if ( n % 2 == 0 ) if ( k > n / 2 ) cout << ( ( k ) - ( ( n / 2 ) ) ) * 2 << endl ; else cout << k * 2 - 1 << endl ; else } if ( k > ( n ) / 2 + 1 ) cout << ( ( k ) - ( ( n / 2 + 1 ) ) ) * 2 << endl ; else cout << k * 2 - 1 << endl ; long long int n , k ; } } }"}}
{"translation": {"en": "read n and k [ENDL] if k < = ( n + 1 ) / 2 [ENDL] print 2 * k - 1 [ENDL] else [ENDL] print 2 * ( k - ( n + 1 ) / 2 ) [ENDL] create long long integer number", "c++": "int main() { cin >> n >> k ; if ( k <= ( n + 1 ) / 2 ) cout << 2 * k - 1 << endl ; else cout << 2 * ( k - ( n + 1 ) / 2 ) << endl ; long long int number ; }"}}
{"translation": {"en": "declare long long integer variable position [ENDL] read number [ENDL] read position [ENDL] declare long long integer x [ENDL] if number is even [ENDL] if position < = number / 2 [ENDL] x = ( position * 2 ) - 1 [ENDL] else if position is greater than number / 2 [ENDL] x = ( position - ( number / 2 ) ) * 2 [ENDL] else if number is odd [ENDL] if position < = ( number + 1 ) / 2 [ENDL] x = ( position * 2 ) - 1 [ENDL] else if position is greater than ( number + 1 ) / 2 [ENDL] x = ( position - ( ( number + 1 ) / 2 ) ) * 2 [ENDL] print x [ENDL] declare long long integer variables n and k = 0", "c++": "int main() { long long int position ; cin >> number ; cin >> position ; long long int x ; if ( number % 2 == 0 ) if ( position <= number / 2 ) x = ( position * 2 ) - 1 ; else if ( position > number / 2 ) x = ( position - ( number / 2 ) ) * 2 ; else if ( number % 2 == 1 ) } if ( position <= ( number + 1 ) / 2 ) x = ( position * 2 ) - 1 ; else if ( position > ( number + 1 ) / 2 ) x = ( position - ( ( number + 1 ) / 2 ) ) * 2 ; cout << x << endl ; } } long long int n = 0 , k = 0 ; }"}}
{"translation": {"en": "loop reading n and k from the input [ENDL] declare long long integer a = 0 [ENDL] if n is odd [ENDL] if k is greater than ( n + 1 ) / 2 [ENDL] a = ( k - ( n + 1 ) / 2 ) * 2 [ENDL] else [ENDL] a = 2 * k - 1 [ENDL] else [ENDL] if k is greater than n / 2 [ENDL] a = ( k - n / 2 ) * 2 [ENDL] else [ENDL] a = 2 * k - 1 [ENDL] print a [ENDL] n , k , p , o = long long int", "c++": "int main() { while ( cin >> n >> k ) long long int a = 0 ; if ( n % 2 ) if ( k > ( n + 1 ) / 2 ) a = ( k - ( n + 1 ) / 2 ) * 2 ; else a = 2 * k - 1 ; else if ( k > n / 2 ) a = ( k - n / 2 ) * 2 ; else a = 2 * k - 1 ; cout << a << endl ; } long long int n , k , p , o ; } }"}}
{"translation": {"en": "read n and k [ENDL] if n modulo 2 is 0 [ENDL] p = n / 2 [ENDL] else [ENDL] p = ( n / 2 ) + 1 [ENDL] if k < = p [ENDL] o = ( 2 * k ) - 1 [ENDL] else [ENDL] o = ( k - p ) * 2 [ENDL] print o [ENDL] n , k = long long", "c++": "int main() { cin >> n >> k ; if ( n % 2 == 0 ) p = n / 2 ; else p = ( n / 2 ) + 1 ; if ( k <= p ) } o = ( 2 * k ) - 1 ; else o = ( k - p ) * 2 ; cout << o << endl ; } long long n , k ; return 0; }"}}
{"translation": {"en": "read n then k [ENDL] if n is uneven [ENDL] if k is less or equal to n / 2 + 1 [ENDL] print 2 * k - 1 [ENDL] else [ENDL] print ( k - n / 2 - 1 ) * 2 [ENDL] else [ENDL] if k is less or equal to n / 2 [ENDL] print 2 * k - 1 [ENDL] else [ENDL] print ( k - n / 2 ) * 2 [ENDL] n , k = long long", "c++": "int main() { cin >> n >> k ; if ( n % 2 != 0 ) if ( k <= n / 2 + 1 ) cout << 2 * k - 1 << endl ; else cout << ( k - n / 2 - 1 ) * 2 << endl ; else } if ( k <= n / 2 ) cout << 2 * k - 1 << endl ; else cout << ( k - n / 2 ) * 2 << endl ; long long n , k ; } } return 0; }"}}
{"translation": {"en": "read n , k [ENDL] if k < = ( n + 1 ) / 2 [ENDL] print k * 2 - 1 [ENDL] else [ENDL] print ( k - ( n + 1 ) / 2 ) * 2 [ENDL] create long long int n , k and mid", "c++": "int main() { cin >> n >> k ; if ( k <= ( n + 1 ) / 2 ) cout << k * 2 - 1 << endl ; else cout << ( k - ( n + 1 ) / 2 ) * 2 << endl ; long long int n , k , mid ; } return 0; }"}}
{"translation": {"en": "read n and k [ENDL] assign ceil of n / 2 . 0 to mid [ENDL] if k is less than or equal to mid [ENDL] print ( k * 2 ) - 1 [ENDL] else do the following [ENDL] print ( k - mid ) * 2 [ENDL] declare unsigned long longs a , b and c", "c++": "int main() { cin >> n >> k ; mid = ceil ( n / 2.0 ) ; if ( k <= mid ) cout << ( k * 2 ) - 1 << endl ; else cout << ( k - mid ) * 2 << endl ; unsigned long long a , b , c ; } }"}}
{"translation": {"en": "read a and b [ENDL] if a is even [ENDL] c = a / 2 [ENDL] else [ENDL] c = a / 2 + 1 [ENDL] if b is greater than c [ENDL] b = ( b - c ) * 2 [ENDL] else if b < = c [ENDL] b = 2 * b - 1 [ENDL] print b [ENDL] a , b = long long int , sum = 0", "c++": "int main() { cin >> a >> b ; if ( a % 2 == 0 ) c = a / 2 ; else c = a / 2 + 1 ; if ( b > c ) b = ( b - c ) * 2 ; else if ( b <= c ) b = 2 * b - 1 ; cout << b << endl ; long long int a , b , sum = 0 ; }"}}
{"translation": {"en": "read a , b [ENDL] sum = ( a + 1 ) / 2 [ENDL] if sum > = b [ENDL] print b * 2 - 1 [ENDL] else [ENDL] print ( b - sum ) * 2 [ENDL] declare long long variables n and k", "c++": "int main() { cin >> a >> b ; sum = ( a + 1 ) / 2 ; if ( sum >= b ) cout << ( b * 2 ) - 1 << endl ; else cout << ( b - sum ) * 2 << endl ; long long n , k ; return 0; }"}}
{"translation": {"en": "read n and k [ENDL] if k < = ( n + 1 ) / 2 [ENDL] print k * 2 - 1 [ENDL] else [ENDL] print ( k - ( n + 1 ) / 2 ) * 2 [ENDL] create long long n and k", "c++": "cin >> n >> k ; int main() { if ( k <= ( n + 1 ) / 2 ) cout << k * 2 - 1 << endl ; else cout << ( k - ( n + 1 ) / 2 ) * 2 << endl ; long long n , k ; } return 0; }"}}
{"translation": {"en": "let j be long long [ENDL] read n and k [ENDL] if k < = ( n + 1 ) / 2 [ENDL] print 2 * k - 1 [ENDL] else [ENDL] assign ( k - ( n + 1 ) / 2 ) * 2 to j [ENDL] print j [ENDL] create long long n , k , i , num", "c++": "int main() { long long j ; cin >> n >> k ; if ( k <= ( n + 1 ) / 2 ) cout << 2 * k - 1 << endl ; else j = ( k - ( n + 1 ) / 2 ) * 2 ; cout << j << endl ; long long n , k , i , num ; } }"}}
{"translation": {"en": "read n and k [ENDL] set i = ( n + 1 ) / 2 [ENDL] id k < = i [ENDL] assign 2 * k - 1 to num [ENDL] else [ENDL] k = k - i [ENDL] set num to 2 * k [ENDL] print num [ENDL] n , k = integers", "c++": "int main() { cin >> n >> k ; i = ( n + 1 ) / 2 ; if ( k <= i ) num = 2 * k - 1 ; else k = k - i ; num = 2 * k ; cout << num << endl ; } long long n , k ; return 0; }"}}
{"translation": {"en": "Read n and k [ENDL] if k is less than or equal to ( n + 1 ) / 2 [ENDL] print ( k * 2 ) - 1 and a new line [ENDL] else do the following [ENDL] print ( k - ( n + 1 ) / 2 ) * 2 and a new line [ENDL] declare long longs n and k", "c++": "int main() { cin >> n >> k ; if ( k <= ( ( n + 1 ) / 2 ) ) cout << ( ( k * 2 ) - 1 ) << endl ; else cout << ( k - ( n + 1 ) / 2 ) * 2 << endl ; long long n , k ; return 0; }"}}
{"translation": {"en": "read n and k [ENDL] if n is even [ENDL] if k < = n / 2 [ENDL] print 2 * k - 1 [ENDL] else [ENDL] print 2 * ( k - n / 2 ) [ENDL] else [ENDL] if k < = ( n + 1 ) / 2 [ENDL] print 2 * k - 1 [ENDL] else [ENDL] print 2 * ( k - ( ( n + 1 ) / 2 ) ) [ENDL] create variables n and k with type long long", "c++": "int main() { cin >> n >> k ; if ( n % 2 == 0 ) if ( k <= n / 2 ) cout << 2 * k - 1 << endl ; else cout << 2 * ( k - n / 2 ) << endl ; else if ( k <= ( n + 1 ) / 2 ) cout << 2 * k - 1 << endl ; else cout << 2 * ( k - ( ( n + 1 ) / 2 ) ) << endl ; long long int n , k ; } }"}}
{"translation": {"en": "input n and k [ENDL] if k > ( n / 2 + n mod 2 ) [ENDL] print ( k - n / 2 - n % 2 ) * 2 [ENDL] otherwise [ENDL] print k * 2 - 1 [ENDL] create long long n and k", "c++": "int main() { cin >> n >> k ; if ( k > n / 2 + n % 2 ) cout << ( k - n / 2 - n % 2 ) * 2 << endl ; else cout << k * 2 - 1 << endl ; long long n , k ; } return 0; }"}}
{"translation": {"en": "read n , k [ENDL] if k < = ( n + 1 ) / 2 [ENDL] print k * 2 - 1 [ENDL] else [ENDL] print ( k - ( n + 1 ) / 2 ) * 2 and a newline [ENDL] n , k = integers", "c++": "int main() { cin >> n >> k ; if ( k <= ( n + 1 ) / 2 ) cout << k * 2 - 1 << endl ; else cout << ( k - ( n + 1 ) / 2 ) * 2 << endl ; long long int n , k ; } return 0; }"}}
{"translation": {"en": "Read n and k [ENDL] if n is even [ENDL] if k is less than or equal to n / 2 [ENDL] print 2 * k - 1 and a new line [ENDL] else do the following [ENDL] print 2 * ( k - n / 2 ) and a new line [ENDL] else do the following [ENDL] if k is less than or equal to ( n + 1 ) / 2 [ENDL] print 2 * k - 1 and a new line [ENDL] else do the following [ENDL] print 2 * ( k - ( n + 1 ) / 2 ) and a new line [ENDL] declare long long n", "c++": "int main() { cin >> n >> k ; if ( n % 2 == 0 ) if ( k <= n / 2 ) cout << 2 * k - 1 << endl ; else cout << 2 * ( k - n / 2 ) << endl ; else if ( k <= ( n + 1 ) / 2 ) cout << 2 * k - 1 << endl ; else cout << 2 * ( k - ( n + 1 ) / 2 ) << endl ; long long n ; } }"}}
{"translation": {"en": "create long long k [ENDL] read n and k and keep looping [ENDL] if n is odd [ENDL] if k < = n / 2 + 1 [ENDL] print 2 * k - 1 [ENDL] else [ENDL] print 2 * k - n - 1 [ENDL] else [ENDL] if k < = n / 2 [ENDL] print 2 * k - 1 [ENDL] else [ENDL] print 2 * k - n [ENDL] declare long long variables n and k", "c++": "int main() { long long k ; while ( cin >> n >> k ) if ( n % 2 != 0 ) if ( k <= ( n / 2 + 1 ) ) cout << 2 * k - 1 << endl ; else cout << 2 * k - n - 1 << endl ; else if ( k <= n / 2 ) cout << 2 * k - 1 << endl ; else cout << 2 * k - n << endl ; long long n , k ; } } }"}}
{"translation": {"en": "loop , reading n and k from the input [ENDL] if k < = ( n + 1 ) > > 1 [ENDL] assign k < < 1 - 1 to k [ENDL] else { [ENDL] decrease k by n + 1 > > 1 [ENDL] k = k < < 1 [ENDL] print k [ENDL] create long long n and k", "c++": "int main() { while ( cin >> n >> k ) if ( k <= ( ( n + 1 ) >> 1 ) ) k = ( k << 1 ) - 1 ; else k -= ( n + 1 ) >> 1 ; k <<= 1 ; cout << k << endl ; } long long n , k ; } return 0; }"}}
{"translation": {"en": "read n , k [ENDL] if n is odd [ENDL] if k greater than ( ( n - 1 ) / 2 ) + 1 ) [ENDL] k = k - ( ( n - 1 ) / 2 ) - 1 [ENDL] assign 2 * k to k [ENDL] esle [ENDL] set k to 2 * k - 1 [ENDL] else [ENDL] k greater than n / 2 [ENDL] k = k - ( n / 2 ) [ENDL] set k to 2 * k [ENDL] else [ENDL] set k = 2 * k - 1 [ENDL] print k [ENDL] declare long long variables n and k", "c++": "int main() { cin >> n >> k ; if ( n % 2 ) if ( k > ( ( n - 1 ) / 2 ) + 1 ) k = k - ( ( n - 1 ) / 2 ) - 1 ; k = 2 * k ; else k = 2 * k - 1 ; else } if ( k > n / 2 ) k = k - ( n / 2 ) ; k = 2 * k ; else k = 2 * k - 1 ; cout << k << endl ; } } long long n , k ; return 0; }"}}
{"translation": {"en": "read n and k [ENDL] set n to ( n + 1 ) / 2 [ENDL] print 2 * ( k - n ) if k > n , else 2 * k - 1 [ENDL] create long longs n , k", "c++": "int main() { cin >> n >> k ; n = ( n + 1 ) / 2 ; cout << ( k > n ? 2 * ( k - n ) : 2 * k - 1 ) << endl ; long long n , k ; return 0; }"}}
{"translation": {"en": "read n read k [ENDL] if k is less than or equal to ( n + 1 ) / 2 [ENDL] print k * 2 - 1 print newline [ENDL] else [ENDL] print ( k - ( n + 1 ) / 2 * 2 print newline [ENDL] n , k = long long", "c++": "int main() { cin >> n >> k ; if ( k <= ( n + 1 ) / 2 ) cout << k * 2 - 1 << endl ; else cout << ( k - ( n + 1 ) / 2 ) * 2 << endl ; long long n , k ; } return 0; }"}}
{"translation": {"en": "read n and k [ENDL] part = long long with part = 0 [ENDL] if n modulo 2 is 0 [ENDL] part = n / 2 [ENDL] else [ENDL] part = ( n / 2 ) + 1 [ENDL] if k < = part [ENDL] print ( k * 2 ) - 1 [ENDL] else [ENDL] print ( k - part ) * 2 [ENDL] let n , k , odd , ans be long long ints", "c++": "int main() { cin >> n >> k ; long long part = 0 ; if ( n % 2 == 0 ) part = n / 2 ; else part = ( n / 2 ) + 1 ; if ( k <= part ) cout << ( k * 2 ) - 1 << endl ; else cout << ( k - part ) * 2 << endl ; long long n , k , odd , ans ; } }"}}
{"translation": {"en": "read n and k [ENDL] if n is even [ENDL] set odd to n / 2 [ENDL] else [ENDL] set odd to n / 2 + 1 [ENDL] if k < = odd [ENDL] set ans to k * 2 - 1 [ENDL] else [ENDL] set ans to ( k - odd ) * 2 [ENDL] print empty string , then print ans [ENDL] create unsigned int n", "c++": "int main() { cin >> n >> k ; if ( n % 2 == 0 ) odd = n / 2 ; else odd = ( n / 2 ) + 1 ; if ( k <= odd ) } ans = ( k * 2 ) - 1 ; else ans = ( k - odd ) * 2 ; cout << \"  \" << ans << endl ; } unsigned int n ; }"}}
{"translation": {"en": "k = integer [ENDL] read n [ENDL] for i = 1 to 4 inclusive [ENDL] if n mod i = 1 or n mod i = 2 , set k to 1 [ENDL] if n mod 1 = 0 or n mod i = 3 , k = 0 [ENDL] print k [ENDL] n = integer", "c++": "int main() { int k ; cin >> n ; for ( int i = 1 ; i <= 4 ; i ++ ) if ( n % i == 1 || n % i == 2 ) k = 1 ; if ( n % i == 0 || n % i == 3 ) k = 0 ; cout << k << endl ; } int n ; return 0; }"}}
{"translation": {"en": "read n [ENDL] if n is even [ENDL] if n / 2 is even [ENDL] print 0 [ENDL] otherwise [ENDL] print 1 [ENDL] else [ENDL] set n = n - 1 [ENDL] if n / 2 is even [ENDL] print 1 [ENDL] else [ENDL] print 0 and a newline [ENDL] set maxn to 2e5 + 5", "c++": "int main() { cin >> n ; if ( n % 2 == 0 ) if ( ( n / 2 ) % 2 == 0 ) cout << 0 << endl ; else cout << 1 << endl ; else } n = n - 1 ; if ( ( n / 2 ) % 2 == 0 ) cout << 1 << endl ; else cout << 0 << endl ; const int maxn = 2e5 + 5 ; } } return 0; }"}}
{"translation": {"en": "create long long a [ maxn ] [ENDL] create long long b [ maxn ] [ENDL] create int n [ENDL] read n [ENDL] print ( ( n + 1 ) / 2 ) % 2 [ENDL] declare integer variable m", "c++": "long long a [ maxn ] ; long long b [ maxn ] ; int n ; int main() { cin >> n ; cout << ( ( n + 1 ) / 2 ) % 2 << endl ; int m ; return 0; }"}}
{"translation": {"en": "read m [ENDL] print m + 1 > > 1 & 1 if m & 1 , else print m > > 1 & 1 ; then print ' \\ n ' [ENDL] n = long long int", "c++": "int main() { cin >> m ; cout << ( m & 1 ? m + 1 >> 1 & 1 : m >> 1 & 1 ) << ' \\n ' ; long long int n ; }"}}
{"translation": {"en": "read n [ENDL] if ( n * ( n + 1 ) / 2 ) modulo 2 is 0 [ENDL] print 0 [ENDL] else [ENDL] print 1 [ENDL] create constant long long N = 1e8 + 3", "c++": "int main() { cin >> n ; if ( ( n * ( n + 1 ) / 2 ) % 2 == 0 ) cout << 0 << endl ; else cout << 1 << endl ; const long long N = 1e8 + 3 ; } return 0; }"}}
{"translation": {"en": "create constant long long MN = 1e9 + 7 [ENDL] create constant long long MX = - 1e9 - 7 [ENDL] create long longs n , l , a , t , l1 , cnt , c and q [ENDL] create string variables s1 and s [ENDL] create array of pairs of long longs called pr , with 1001 element [ENDL] create vector of long longs called v [ENDL] create a map from characters to long longs with name mp [ENDL] create set of long longs st [ENDL] create set iterator it for a set of long longs [ENDL] read n [ENDL] n % = 4 [ENDL] if n = 0 or n = 3 [ENDL] print 0 [ENDL] else if n = 1 or n = 2 [ENDL] print 1 [ENDL] print \" \\ n \" [ENDL] create int n", "c++": "const long long MN = 1e9 + 7 ; const long long MX = - 1e9 - 7 ; long long n , l , a , t , l1 , cnt , c , q ; string s1 , s ; pair < long long , long long > pr [ 1001 ] ; vector < long long > v ; map < char , long long > mp ; set < long long > st ; set < long long > :: iterator it ; cin >> n ; int main() { n %= 4 ; if ( n == 0 or n == 3 ) cout << 0 ; else if ( n == 1 or n == 2 ) cout << 1 ; cout << \" \\n \" ; int n ; return 0; }"}}
{"translation": {"en": "read n [ENDL] set ( n * ( n + 1 ) ) / 2 to y [ENDL] if y mod 2 [ENDL] print 1 [ENDL] otherwise [ENDL] print 0 and a new line [ENDL] set constant integer N = 5005", "c++": "int main() { cin >> n ; int y = ( n * ( n + 1 ) ) / 2 ; if ( y % 2 ) cout << \" 1 \" << endl ; else cout << \" 0 \" << endl ; const int N = 5005 ; } return 0; }"}}
{"translation": {"en": "n = integer [ENDL] read n [ENDL] if n modulo 4 equal to 0 or n modulo 4 = 3 [ENDL] print 0 [ENDL] otherwise [ENDL] print 1 [ENDL] create long long n , set sum = 0", "c++": "int n ; int main() { cin >> n ; if ( n % 4 == 0 || n % 4 == 3 ) cout << 0 << endl ; else cout << 1 << endl ; long long n , sum = 0 ; return 0; }"}}
{"translation": {"en": "read n [ENDL] assign n * ( n + 1 ) / 2 to sum [ENDL] if sum is even [ENDL] print 0 [ENDL] otherwise [ENDL] print 1 and a newline [ENDL] create long long n", "c++": "int main() { cin >> n ; sum = n * ( n + 1 ) / 2 ; if ( sum % 2 == 0 ) cout << 0 << endl ; else cout << 1 << endl ; long long n ; } }"}}
{"translation": {"en": "read n [ENDL] if n modulo 4 equal to 0 or n modulo 4 = 3 [ENDL] print 0 [ENDL] otherwise [ENDL] print 1 and a new line [ENDL] declare power with long longs x , y , m as arguments , returning long long", "c++": "int main() { cin >> n ; if ( n % 4 == 0 || n % 4 == 3 ) cout << \" 0 \" << endl ; else cout << \" 1 \" << endl ; long long power ( long long x , long long y , long long m ) return 0; }"}}
{"translation": {"en": "if y is 1 , return x % m from function [ENDL] if y is 0 , return 1 from function [ENDL] if y bitwise and 1 , return ( x * result of run power with ( ( x * x ) % m , ( y - 1 ) / 2 , m ) as arguments ) % m from function [ENDL] return result of run power with ( ( x * x ) % m , y / 2 , m ) as arguments % m from function [ENDL] declare modinv with long longs x , mod with mod = 1000000007 [ENDL] return result of run power with x , mod - 2 , mod as arguments [ENDL] declare solve [ENDL] create long long n [ENDL] read n [ENDL] if ( n * ( n + 1 ) / 2 ) & 1 [ENDL] print 1 print newline [ENDL] else [ENDL] print 0 print newline [ENDL] run solve [ENDL] declare integer variables n , x and y", "c++": "if ( y == 1 ) return x % m ; if ( y == 0 ) return 1 ; if ( y & 1 ) return ( x * power ( ( x * x ) % m , ( y - 1 ) / 2 , m ) ) % m ; return power ( ( x * x ) % m , y / 2 , m ) % m ; long long modinv ( long long x , long long mod = 1000000007 ) } return power ( x , mod - 2 , mod ) ; void solve ( ) } long long n ; cin >> n ; if ( ( n * ( n + 1 ) / 2 ) & 1 ) cout << 1 << endl ; else cout << 0 << endl ; solve ( ) ; } int main() { int n , x , y ; return 0; }"}}
{"translation": {"en": "read n [ENDL] n = ( n * ( n + 1 ) ) / 2 [ENDL] x = n / 2 [ENDL] y = n - x [ENDL] print absolute value of x - y [ENDL] create long long n", "c++": "int main() { cin >> n ; n = ( n * ( n + 1 ) ) / 2 ; x = n / 2 ; y = n - x ; cout << abs ( x - y ) << endl ; long long n ; return 0; }"}}
{"translation": {"en": "set ans = 0 [ENDL] read n [ENDL] set ans = n * ( 1 + n ) / 2 [ENDL] if ans is even [ENDL] print 0 [ENDL] otherwise [ENDL] print 1 and a newline [ENDL] create long long int T and n", "c++": "int main() { long long ans = 0 ; cin >> n ; ans = n * ( 1 + n ) / 2 ; if ( ans % 2 == 0 ) cout << 0 << endl ; else cout << 1 << endl ; long long int T , n ; return 0; }"}}
{"translation": {"en": "create int array a of length 100010 + 5 [ENDL] set M = 1e9 + 7 [ENDL] read n [ENDL] n = n % 4 [ENDL] if n is equal to 0 or n is equal to 3 [ENDL] print 0 [ENDL] otherwise [ENDL] print 1 and a newline [ENDL] n = integer", "c++": "int a [ 100010 + 5 ] ; long long int M = 1e9 + 7 ; cin >> n ; int main() { n %= 4 ; if ( n == 0 || n == 3 ) cout << \" 0 \" << endl ; else cout << \" 1 \" << endl ; int n ; return 0; }"}}
{"translation": {"en": "Read n [ENDL] tmp = integer with n modulo 4 [ENDL] if tmp is equal to 1 OR tmp is equal to 2 [ENDL] print 1 and a new line [ENDL] else do the following [ENDL] print 0 and a new line [ENDL] create int n", "c++": "int main() { cin >> n ; int tmp = n % 4 ; if ( tmp == 1 || tmp == 2 ) cout << 1 << endl ; else cout << 0 << endl ; int n ; }"}}
{"translation": {"en": "read n [ENDL] if n mod 4 = 0 [ENDL] print 0 [ENDL] else if n mod 4 is equal to 1 [ENDL] print 1 and a new line [ENDL] otherwise if n modulo 4 = 2 [ENDL] print 1 [ENDL] else [ENDL] print 0 and a new line [ENDL] let n be a long integer", "c++": "int main() { cin >> n ; if ( n % 4 == 0 ) cout << 0 << endl ; else if ( n % 4 == 1 ) cout << 1 << endl ; else if ( n % 4 == 2 ) cout << 1 << endl ; else cout << 0 << endl ; long long int n ; }"}}
{"translation": {"en": "read n [ENDL] if ( n is equal to 3 or n % 4 is equal to 0 or n % 4 is equal to 3 ) [ENDL] print 0 and newline [ENDL] else do the following [ENDL] print 1 and newline [ENDL] n , s = long longs", "c++": "int main() { cin >> n ; if ( n == 3 || n % 4 == 0 || n % 4 == 3 ) cout << \" 0 \" << endl ; else cout << \" 1 \" << endl ; long long n , s ; return 0; }"}}
{"translation": {"en": "read n [ENDL] set s to ( ( n + 1 ) * n ) / 2 [ENDL] if s % 2 is equal to 0 [ENDL] print 0 [ENDL] else [ENDL] print 1 [ENDL] declare integer variable n", "c++": "int main() { cin >> n ; s = ( ( n + 1 ) * n ) / 2 ; if ( s % 2 == 0 ) cout << 0 << endl ; else cout << 1 << endl ; int n ; } return 0; }"}}
{"translation": {"en": "read n [ENDL] if n modulo 4 = 3 | | n modulo 4 = 0 [ENDL] print 0 [ENDL] else [ENDL] print 1 [ENDL] print ' \\ n ' [ENDL] n = integer", "c++": "int main() { cin >> n ; if ( n % 4 == 3 || n % 4 == 0 ) cout << 0 ; else cout << 1 ; cout << ' \\n ' ; int n ; return 0; }"}}
{"translation": {"en": "read n [ENDL] print ( ( n + 1 ) / 2 ) modulo 2 [ENDL] n = integer", "c++": "int main() { cin >> n ; cout << ( ( n + 1 ) / 2 ) % 2 << endl ; int n ; return 0; }"}}
{"translation": {"en": "read n [ENDL] print ( ( n + 1 ) / 2 ) modulo 2 [ENDL] create integer n", "c++": "int main() { cin >> n ; cout << ( ( n + 1 ) / 2 ) % 2 << endl ; int n ; return 0; }"}}
{"translation": {"en": "create long longs a and b [ENDL] read n [ENDL] if n is even and n % 4 = 0 [ENDL] print 0 and ' \\ n ' [ENDL] else if n is even and n % 4 ! = 0 [ENDL] print 1 and ' \\ n ' [ENDL] else if n is odd and ( n - 1 ) % 4 = 0 [ENDL] print 1 and ' \\ n ' [ENDL] else if n is odd and ( n - 1 ) % 4 ! = 0 [ENDL] print 0 and ' \\ n ' [ENDL] create long long n", "c++": "long long a , b ; cin >> n ; int main() { if ( n % 2 == 0 && n % 4 == 0 ) cout << 0 << ' \\n ' ; else if ( n % 2 == 0 && n % 4 != 0 ) cout << 1 << ' \\n ' ; else if ( n % 2 != 0 && ( n - 1 ) % 4 == 0 ) cout << 1 << ' \\n ' ; else if ( n % 2 != 0 && ( n - 1 ) % 4 != 0 ) cout << 0 << ' \\n ' ; long long n ; return 0; }"}}
{"translation": {"en": "read n [ENDL] create long long sum with sum = n * ( n + 1 ) [ENDL] set sum to sum / 2 [ENDL] create long long p with p = sum / n [ENDL] print p % 2 print newline [ENDL] declare long long n", "c++": "int main() { cin >> n ; long long sum = n * ( n + 1 ) ; sum = sum / 2 ; long long p = sum / n ; cout << p % 2 << endl ; long long n ; }"}}
{"translation": {"en": "read n [ENDL] print n * ( n + 1 ) / 2 modulo 2 [ENDL] create long long integer n", "c++": "int main() { cin >> n ; cout << n * ( n + 1 ) / 2 % 2 << endl ; long long int n ; return 0; }"}}
{"translation": {"en": "read n [ENDL] if n is even [ENDL] if n % 4 = 0 [ENDL] print 0 [ENDL] else [ENDL] print 1 [ENDL] else [ENDL] if ( n - 1 ) % 4 = 0 [ENDL] print 1 [ENDL] else [ENDL] print 0 [ENDL] A = integer array of length 10000", "c++": "int main() { cin >> n ; if ( n % 2 == 0 ) if ( n % 4 == 0 ) cout << 0 << endl ; else cout << 1 << endl ; else if ( ( n - 1 ) % 4 == 0 ) cout << 1 << endl ; else cout << 0 << endl ; int A [ 10000 ] ; } return 0; }"}}
{"translation": {"en": "B = integer array of length 10000 [ENDL] n , ans = integers with ans value of 0 [ENDL] read n [ENDL] if n mod 4 equals 1 or n mod 4 equals 2 [ENDL] print 1 [ENDL] else [ENDL] print 0 [ENDL] n = integer", "c++": "int B [ 10000 ] ; int n , ans = 0 ; int main() { cin >> n ; if ( n % 4 == 1 || n % 4 == 2 ) cout << ' 1 ' << endl ; else cout << ' 0 ' << endl ; int n ; return 0; }"}}
{"translation": {"en": "read n [ENDL] if n modulo 4 equal to 0 [ENDL] print 0 [ENDL] otherwise if n modulo 4 = 1 [ENDL] print 1 [ENDL] otherwise if n modulo 4 equal to 2 [ENDL] print 1 [ENDL] otherwise [ENDL] print 0 [ENDL] print a new line [ENDL] INF = const int with INF = 0x3f3f3f3f", "c++": "int main() { cin >> n ; if ( n % 4 == 0 ) cout << 0 ; else if ( n % 4 == 1 ) cout << 1 ; else if ( n % 4 == 2 ) cout << 1 ; else cout << 0 ; cout << \" \\n \" ; } const int INF = 0x3f3f3f3f ; return 0; }"}}
{"translation": {"en": "MAXN = const int with MAXN = 2e5 + 5 [ENDL] n = long long [ENDL] read n [ENDL] print n * ( n + 1 ) / 2 modulo 2 [ENDL] create long long i , n and sum", "c++": "const int MAXN = 2e5 + 5 ; long long n ; cin >> n ; int main() { cout << n * ( n + 1 ) / 2 % 2 << endl ; long long i , n , sum ; return 0; }"}}
{"translation": {"en": "read n [ENDL] if n is even , set sum to n / 2 * ( n + 1 ) [ENDL] if n mod 2 is different from 0 , assign n / 2 * ( n + 1 ) + ( n / 2 + 1 ) to sum [ENDL] if sum modulo 2 is different from 0 [ENDL] print 1 [ENDL] otherwise [ENDL] print 0 and a new line [ENDL] create long long n", "c++": "cin >> n ; int main() { if ( n % 2 == 0 ) sum = n / 2 * ( n + 1 ) ; if ( n % 2 != 0 ) sum = n / 2 * ( n + 1 ) + ( n / 2 + 1 ) ; if ( sum % 2 != 0 ) cout << 1 << endl ; else cout << 0 << endl ; long long n ; return 0; }"}}
{"translation": {"en": "read n [ENDL] if n modulo 2 is = 0 [ENDL] set m = n / 2 [ENDL] if m modulo 2 equal to 0 [ENDL] print 0 [ENDL] otherwise [ENDL] print 1 [ENDL] otherwise [ENDL] set m = ( n - 1 ) / 2 [ENDL] if m mod 2 = 0 [ENDL] print 1 [ENDL] other [ENDL] print 0 and a new line [ENDL] arr = long long array of size 200001", "c++": "int main() { cin >> n ; if ( n % 2 == 0 ) long long m = n / 2 ; if ( m % 2 == 0 ) cout << \" 0 \" << endl ; else cout << \" 1 \" << endl ; else } long long m = ( n - 1 ) / 2 ; if ( m % 2 == 0 ) cout << \" 1 \" << endl ; else cout << \" 0 \" << endl ; long long arr [ 200001 ] ; } } return 0; }"}}
{"translation": {"en": "n , i , sum = long long with sum = 0 [ENDL] read n [ENDL] set sum to ( n * ( n + 1 ) ) / 2 [ENDL] if sum is even [ENDL] print 0 [ENDL] else if sum is uneven [ENDL] print 1 [ENDL] x = long long int", "c++": "long long n , i , sum = 0 ; int main() { cin >> n ; sum = ( n * ( n + 1 ) ) / 2 ; if ( sum % 2 == 0 ) cout << 0 << endl ; else if ( sum % 2 != 0 ) cout << 1 << endl ; long long int x ; } }"}}
{"translation": {"en": "read x [ENDL] print ( ( x * ( x + 1 ) / 2 ) modulo 2 ) [ENDL] mxaN = const int with maxN = 2012345678", "c++": "cin >> x ; int main() { cout << ( ( x * ( x + 1 ) / 2 ) % 2 ) << endl ; const int maxN = 2012345678 ; return 0; }"}}
{"translation": {"en": "n = int [ENDL] read n [ENDL] sum = long long int with sum = ( n * ( n + 1 ) ) / 2 [ENDL] if sum is even [ENDL] print 0 [ENDL] else [ENDL] print 1 [ENDL] create integer a", "c++": "int n ; cin >> n ; int main() { long long int sum = ( n * ( n + 1 ) ) / 2 ; if ( sum % 2 == 0 ) cout << 0 << endl ; else cout << 1 << endl ; int a ; return 0; }"}}
{"translation": {"en": "read a [ENDL] print ( ( a + 1 ) / 2 ) % 2 print \" \\ n \" [ENDL] create int n", "c++": "int main() { cin >> a ; cout << ( ( a + 1 ) / 2 ) % 2 << \" \\n \" ; int n ; return 0; }"}}
{"translation": {"en": "read n [ENDL] n = n mod 4 [ENDL] if n = 0 or n = 3 [ENDL] print 0 [ENDL] otherwise [ENDL] print 1 and a newline [ENDL] n , m = int", "c++": "int main() { cin >> n ; n %= 4 ; if ( n == 0 || n == 3 ) cout << 0 << endl ; else cout << 1 << endl ; int n , m ; } return 0; }"}}
{"translation": {"en": "read n , m [ENDL] mn = n if n < m else m [ENDL] fact = 1 [ENDL] for i = 2 to mn inclusive multiply fact by i [ENDL] print fact [ENDL] declare new integer variables a and b", "c++": "int main() { cin >> n >> m ; int mn = ( ( ( n ) < ( m ) ) ? ( n ) : ( m ) ) ; int fact = 1 ; for ( int i = 2 ; i <= mn ; i ++ ) fact *= i ; cout << fact << endl ; int a , b ; return 0; }"}}
{"translation": {"en": "read input to a and b [ENDL] new integer ans with value 1 [ENDL] for i from 1 to ( min of a and b ) inclusive , multiply ans by i [ENDL] print ans [ENDL] declare integer variables a , b and ans with ans = 1", "c++": "int main() { cin >> a >> b ; int ans = 1 ; for ( int i = 1 ; i <= min ( a , b ) ; i ++ ) { ans *= i ; } cout << ans << endl ; int a , b , ans = 1 ; return 0; }"}}
{"translation": {"en": "read a and b [ENDL] if a is greater than b , change a to b [ENDL] in a for loop , change i from 1 to a inclusive , multiplying ans by i on every loop [ENDL] print ans to the standard output [ENDL] in function fact which accepts integer n and returns long long integer", "c++": "int main() { cin >> a >> b ; if ( a > b ) a = b ; for ( int i = 1 ; i <= a ; i ++ ) ans = ans * i ; cout << ans << endl ; long long int fact ( int n ) }"}}
{"translation": {"en": "if n < = 0 [ENDL] return 1 [ENDL] else [ENDL] return n * fact ( n - 1 ) [ENDL] a , b = long long integers [ENDL] read a and b [ENDL] x = long long integer set to min ( a , b ) [ENDL] print fact ( x ) [ENDL] let a , b , c be long integers", "c++": "if ( n <= 0 ) return 1 ; else return n * fact ( n - 1 ) ; long long int a , b ; } int main() { cin >> a >> b ; long long int x = min ( a , b ) ; cout << fact ( x ) << endl ; long long a , b , c ; return 0; }"}}
{"translation": {"en": "read a , b [ENDL] if a is greater than b [ENDL] c is equal to a [ENDL] a is equal to b [ENDL] b is equal to c [ENDL] c is equal to 1 [ENDL] while a is true [ENDL] c is equal to c * a [ENDL] decrement a by 1 [ENDL] print c and newline [ENDL] a , b = integer", "c++": "int main() { cin >> a >> b ; if ( a > b ) c = a ; a = b ; b = c ; c = 1 ; } while ( a ) c *= a ; a -- ; cout << c << endl ; } int a , b ; }"}}
{"translation": {"en": "sum = long long = 1 [ENDL] read a , b [ENDL] min = integer = a if a < b else min = b [ENDL] for i = 2 to min inclusive , then sum = sum * i [ENDL] print sum [ENDL] new array of integers dx with values 0 , 0 , - 1 , 1", "c++": "int main() { long long sum = 1 ; cin >> a >> b ; int min = a < b ? a : b ; for ( int i = 2 ; i <= min ; i ++ ) sum *= i ; cout << sum << endl ; int dx [ 4 ] = { 0 , 0 , - 1 , 1 } ; }"}}
{"translation": {"en": "new array of integers dy with values 1 , - 1 , 0 , 0 [ENDL] create new ints x and y [ENDL] read x and y from the input [ENDL] g is a new integer with value min of x and y [ENDL] create new integer called ans = 1 [ENDL] loop through i from 1 while i < g + 1 , multiplying ans by i on each iteration [ENDL] print ans and ' \\ n ' [ENDL] function factorial with long argument A that returns long", "c++": "int dy [ 4 ] = { 1 , - 1 , 0 , 0 } ; int x , y ; int main() { cin >> x >> y ; int g = min ( x , y ) ; int ans = 1 ; for ( int i = 1 ; i < g + 1 ; i += 1 ) ans = ans * i ; cout << ans << ' \\n ' ; long factorial ( long A ) }"}}
{"translation": {"en": "declare long variable with name ans = 1 [ENDL] for i from 1 to A inclusive , multiply ans by i [ENDL] return ans [ENDL] declare longs A and B [ENDL] read A and B from the user input [ENDL] print factorial ( min of A and B ) and \" \\ n \" to the standard output [ENDL] function fact ( get long long n , return long long )", "c++": "long ans = 1 ; for ( int i = 1 ; i <= A ; i ++ ) ans *= i ; return ans ; long A , B ; } int main() { cin >> A >> B ; cout << factorial ( min ( A , B ) ) << \" \\n \" ; long long fact ( long long n ) }"}}
{"translation": {"en": "if n is 0 or 1 [ENDL] return 1 [ENDL] else [ENDL] return n * fact ( n - 1 ) [ENDL] function gcd ( get long long a and b , return long long ) [ENDL] if b is 0 [ENDL] return a [ENDL] else [ENDL] return gcd ( b , a modulo b ) [ENDL] a , b = long long [ENDL] read a , b [ENDL] c = min ( a , b ) [ENDL] print fact ( c ) [ENDL] declare long longs t , i , j , n , m , k , ans , ck , cnt = 0 , sum = 0 , c = 0", "c++": "if ( ( n == 0 ) || ( n == 1 ) ) return 1 ; else return n * fact ( n - 1 ) ; long long gcd ( long long a , long long b ) } if ( b == 0 ) return a ; else return gcd ( b , a % b ) ; long long a , b ; } int main() { cin >> a >> b ; long long c = min ( a , b ) ; cout << fact ( c ) << endl ; long long t , i , j , n , m , k , ans , ck , cnt = 0 , sum = 0 , c = 0 ; return 0; }"}}
{"translation": {"en": "declare strings s , s1 , s2 , tmp [ENDL] read n and m [ENDL] let ck be minimum of n and m [ENDL] declare long long face = 1 [ENDL] for i = 1 to ck inclusive , let fact be fact * i [ENDL] print face and newline [ENDL] declare function factorial which takes integer a", "c++": "int main() { string s , s1 , s2 , tmp ; cin >> n >> m ; ck = min ( n , m ) ; long long fact = 1 ; for ( i = 1 ; i <= ck ; i ++ ) { fact *= i ; } cout << fact << endl ; int factorial ( int a ) return 0; }"}}
{"translation": {"en": "if a is equal to 1 then return 1 [ENDL] return a * factorial ( a - 1 ) [ENDL] create integers a and b [ENDL] read a and b [ENDL] if a is greater than b [ENDL] print factorial of b [ENDL] else [ENDL] print factorial of a [ENDL] a , b , x , i , k = long long int with k = 1", "c++": "if ( a == 1 ) return 1 ; return a * factorial ( a - 1 ) ; int a , b ; } int main() { cin >> a >> b ; if ( a > b ) cout << factorial ( b ) << endl ; else cout << factorial ( a ) << endl ; long long int a , b , x , i , k = 1 ; } return 0; }"}}
{"translation": {"en": "read a then b [ENDL] set x to min of a , b [ENDL] for i = 1 to x inclusive set k to k * i [ENDL] print k [ENDL] create new vector of integers called divisor with 1000000 + 1 elements filled with 0", "c++": "int main() { cin >> a >> b ; x = min ( a , b ) ; for ( i = 1 ; i <= x ; i ++ ) { k = k * i ; } cout << k << endl ; vector < int > divisor ( 1000000 + 1 , 0 ) ; return 0; }"}}
{"translation": {"en": "integer function bigmod with long long arguments a , b and c [ENDL] create long long variable with name x [ENDL] if b is equal to 0 , return 1 modulo c [ENDL] change x to bigmod ( a , b / 2 , c ) [ENDL] set x to x squared % c [ENDL] if b & 1 is true , assign the new value = ( x * a ) % c to x [ENDL] return x [ENDL] ulong long function factorial with long long argument n [ENDL] new ulong long fact = 1 [ENDL] in a for loop , change i from 2 to n inclusive , multiplying fact by i [ENDL] return fact [ENDL] declare int variables x and y [ENDL] loop , reading x and y from the input [ENDL] new integer variable mn with value min of x and y [ENDL] new ulong long A = result of factorial ( mn ) [ENDL] print the result of __gcd ( A , A ) [ENDL] in the function fac that takes long long n and returns long long", "c++": "int bigmod ( long long a , long long b , long long c ) long long x ; if ( b == 0 ) return 1 % c ; x = bigmod ( a , b / 2 , c ) ; x = ( x * x ) % c ; if ( b & 1 ) x = ( x * a ) % c ; return x ; ulong long factorial ( long long n ) } ulong long fact = 1 ; for ( int i = 2 ; i <= n ; i ++ ) { fact *= i ; } return fact ; int x , y ; } int main() { while ( cin >> x >> y ) int mn = min ( x , y ) ; ulong long A = factorial ( mn ) ; cout << ( __gcd ( A , A ) ) << endl ; long long fac ( long long n ) } return 0; }"}}
{"translation": {"en": "ans = long long with ans = 1 [ENDL] for i = 1 to n , ans = ans * i [ENDL] return ans [ENDL] a , b = long long [ENDL] read a , b [ENDL] print fac ( min ( a , b ) ) [ENDL] long long function gcd with long long arguments a and b", "c++": "long long ans = 1 ; for ( long long i = 1 ; i <= n ; i ++ ) ans *= i ; return ans ; long long a , b ; } int main() { cin >> a >> b ; cout << fac ( min ( a , b ) ) << endl ; long long gcd ( long long a , long long b ) return 0; }"}}
{"translation": {"en": "if b ! = 0 , return a [ENDL] return gcd ( b , ( a % b ) ) [ENDL] declare long long variables n , m , a and b with a and b = 1 [ENDL] read input to n and m [ENDL] if n is greater than m , swap n and m [ENDL] in a for loop , change i from 1 to n inclusive , multiplying a by i on each iteration [ENDL] start for loop from i = 1 to n + 1 inclusive , multiply b by i on each loop [ENDL] print gcd ( a , b ) and \" \\ n \" to the standard output [ENDL] a , b , i , ans , x = int with ans = 1", "c++": "if ( ! b ) return a ; return gcd ( b , ( a % b ) ) ; long long n , m , a = 1 , b = 1 ; } int main() { cin >> n >> m ; if ( n > m ) swap ( n , m ) ; for ( long long i = 1 ; i <= n ; i ++ ) a *= i ; for ( long long i = 1 ; i <= ( n + 1 ) ; i ++ ) b *= i ; cout << gcd ( a , b ) << \" \\n \" ; int a , b , i , ans = 1 , x ; return 0; }"}}
{"translation": {"en": "read a then b [ENDL] set x to min of a , b [ENDL] for i = 1 to x inclusive set ans to ans * i [ENDL] print ans [ENDL] declare ints a and b", "c++": "int main() { cin >> a >> b ; x = min ( a , b ) ; for ( i = 1 ; i <= x ; i ++ ) { ans = ans * i ; } cout << ans << endl ; int a , b ; return 0; }"}}
{"translation": {"en": "create long long variable sum = 1 [ENDL] read a and b and keep looping [ENDL] create new integer variable cnt with value min of a and b [ENDL] loop through i from 1 to cnt inclusive , multiplying sum byi on each iteration [ENDL] print sum [ENDL] a , b = integers", "c++": "int main() { long long sum = 1 ; while ( cin >> a >> b ) int cnt = min ( a , b ) ; for ( int i = 1 ; i <= cnt ; i ++ ) sum *= i ; cout << sum << endl ; int a , b ; } return 0; }"}}
{"translation": {"en": "read a and b [ENDL] mn , ans = integers with mn having value of the minimum of a and b , and ans having value of 1 [ENDL] for i = 2 to mn inclusive set ans to ans * i [ENDL] print ans [ENDL] declare long longs a , b , c , v and e", "c++": "int main() { cin >> a >> b ; int mn = min ( a , b ) , ans = 1 ; for ( int i = 2 ; i <= mn ; i ++ ) ans *= i ; cout << ans << endl ; long long a , b , c , v , e ; return 0; }"}}
{"translation": {"en": "read input to a and b [ENDL] if a < = b [ENDL] assign the new value = a to v [ENDL] else [ENDL] set v to b [ENDL] change the values of a and b to 1 [ENDL] while v > 0 [ENDL] change the value of b to b multiplied by a [ENDL] increment a by one [ENDL] decrement v by one [ENDL] print b [ENDL] create long long int fact ( long int x )", "c++": "cin >> a >> b ; int main() { if ( a <= b ) v = a ; else v = b ; a = b = 1 ; while ( v > 0 ) b *= a ; a ++ ; v -- ; cout << b << endl ; } long long int fact ( long int x ) return 0; }"}}
{"translation": {"en": "if x = 0 or 1 , return 1 [ENDL] return x * fact ( x - 1 ) [ENDL] create long int a , b [ENDL] read a [ENDL] read b [ENDL] if a > b [ENDL] print fact ( b ) and a newline [ENDL] else [ENDL] print fact ( a ) and a newline [ENDL] function fact ( get int n , return int )", "c++": "if ( x == 0 || x == 1 ) return 1 ; return x * fact ( x - 1 ) ; long int a , b ; } int main() { cin >> a ; cin >> b ; if ( a > b ) cout << fact ( b ) << \" \\n \" ; else cout << fact ( a ) << \" \\n \" ; int fact ( int n ) } return 0; }"}}
{"translation": {"en": "if n is 1 return 1 [ENDL] return n * fact ( n - 1 ) [ENDL] a , b = int [ENDL] read a , b [ENDL] output = fact ( int ( min ( a , b ) ) ) [ENDL] print output [ENDL] maxn = 1e5 + 7", "c++": "if ( n == 1 ) return 1 ; return n * fact ( n - 1 ) ; int a , b ; } int main() { cin >> a >> b ; int output = fact ( int ( min ( a , b ) ) ) ; cout << output << endl ; const int maxn = 1e5 + 7 ; return 0; }"}}
{"translation": {"en": "create int a and b [ENDL] read a , b [ENDL] set c to min of a and b [ENDL] ans = 1 [ENDL] for i = 1 to c inclusive , set ans to ans * i [ENDL] print ans [ENDL] define function fact with long long as argument and returns a long long", "c++": "int a , b ; int main() { cin >> a >> b ; int c = min ( a , b ) ; long long ans = 1 ; for ( int i = 1 ; i <= c ; i ++ ) ans *= i ; cout << ans << endl ; long long fact ( long long x ) }"}}
{"translation": {"en": "if x less than or equal to 1 then [ENDL] return 1 to the calling statement [ENDL] else do the following [ENDL] return x * return value of fact ( x - 1 ) to the calling statement [ENDL] create long long a , b [ENDL] read a , b [ENDL] if a greater than b then [ENDL] call fact ( b ) and print the return value [ENDL] else do the following [ENDL] call fact ( a ) and print the return value [ENDL] in function fact with argument integer n that returns an unsigned long long", "c++": "if ( x <= 1 ) return 1 ; else return x * fact ( x - 1 ) ; long long a , b ; } int main() { cin >> a >> b ; if ( a > b ) cout << fact ( b ) << endl ; else cout << fact ( a ) << endl ; unsigned long long fact ( int n ) return 0; }"}}
{"translation": {"en": "ans = unsigned long long = 1 [ENDL] while . > = 1 [ENDL] ans = ans * n [ENDL] decrease n by 1 [ENDL] return ans [ENDL] a , b = integer [ENDL] read a , b [ENDL] print call fact with argument of the lower value between a and b [ENDL] ll = long long with value of 1", "c++": "unsigned long long ans = 1 ; while ( n >= 1 ) ans *= n ; n -- ; return ans ; } int a , b ; } int main() { cin >> a >> b ; cout << fact ( min ( a , b ) ) << endl ; long long ll = 1 ; return 0; }"}}
{"translation": {"en": "a , b = integers [ENDL] read a and b [ENDL] if a is greater than b then set a to b [ENDL] for i = 2 to a inclusive set ll to ll * i [ENDL] print ll [ENDL] let a , b , x , i , k be long integers with k = 1", "c++": "int a , b ; int main() { cin >> a >> b ; if ( a > b ) a = b ; for ( int i = 2 ; i <= a ; i ++ ) ll *= i ; cout << ll << endl ; long long int a , b , x , i , k = 1 ; return 0; }"}}
{"translation": {"en": "read a , b [ENDL] x is equal to minimum of a and b [ENDL] for i = 1 to x inclusive , k is equal to k * i [ENDL] print k and newline [ENDL] a , b = long long", "c++": "int main() { cin >> a >> b ; x = min ( a , b ) ; for ( i = 1 ; i <= x ; i ++ ) { k = k * i ; } cout << k << endl ; long long a , b ; return 0; }"}}
{"translation": {"en": "read a , b [ENDL] c = min ( a , b ) [ENDL] ans = 1 [ENDL] for i = 1 to c inclusive multiply ans by i [ENDL] print ans [ENDL] a , b , c , d = integers with c = 1", "c++": "int main() { cin >> a >> b ; long long c = min ( a , b ) ; long long ans = 1 ; for ( int i = 1 ; i <= c ; i ++ ) ans *= i ; cout << ans << endl ; long long a , b , c = 1 , d ; }"}}
{"translation": {"en": "Read a , b [ENDL] set d to minimum value of a and b [ENDL] for i = 1 to d exclusive , then set c to c * i [ENDL] print c and a new line [ENDL] a , b = long long", "c++": "int main() { cin >> a >> b ; d = min ( a , b ) ; for ( int i = 1 ; i <= d ; i ++ ) c *= i ; cout << c << endl ; long long a , b ; return 0; }"}}
{"translation": {"en": "read a and b [ENDL] if a is less than b then set a to a otherwise set a to b [ENDL] set b to 1 [ENDL] for i = 2 to a inclusive set b to b * i [ENDL] print b [ENDL] declare integers a , b", "c++": "int main() { cin >> a >> b ; a = a < b ? a : b ; b = 1 ; for ( int i = 2 ; i <= a ; ++ i ) { b *= i ; } cout << b << endl ; int a , b ; return 0; }"}}
{"translation": {"en": "while read a , b [ENDL] declare integer t [ENDL] let t be a [ENDL] if b is less than a , let t be b [ENDL] declare integer i [ENDL] declare integer k = 1 [ENDL] for i = 1 to t inclusive , let k be k * i [ENDL] print k and newline [ENDL] create long long ints a and b", "c++": "int main() { while ( cin >> a >> b ) int t ; t = a ; if ( b < a ) { t = b ; } int i ; int k = 1 ; for ( i = 1 ; i <= t ; i ++ ) { k *= i ; } cout << k << endl ; long long int a , b ; } }"}}
{"translation": {"en": "read a and b [ENDL] let i and f = 1 be long long integers [ENDL] loop until break [ENDL] f = f * i [ENDL] if i is equal to a or i is equal to b [ENDL] print f [ENDL] break [ENDL] in long long function factorial taking n = long long", "c++": "int main() { cin >> a >> b ; long long int i , f = 1 ; for ( i = 1 ; ; i ++ ) f *= i ; if ( i == a || i == b ) cout << f << endl ; break ; long long factorial ( long long n ) } } return 0; }"}}
{"translation": {"en": "if n > 1 [ENDL] return n * factorial of n - 1 [ENDL] else [ENDL] return 1 [ENDL] a , b , ans = long long [ENDL] read a and b [ENDL] set ans to min of a and b [ENDL] print factorial of ans [ENDL] declare facto with long long n as argument , returning long long", "c++": "if ( n > 1 ) return n * factorial ( n - 1 ) ; else return 1 ; long long a , b , ans ; } int main() { cin >> a >> b ; ans = min ( a , b ) ; cout << factorial ( ans ) << endl ; long long facto ( long long n ) }"}}
{"translation": {"en": "if n is 0 or n is 1 , return 1 from function [ENDL] declare long long array fact size 18 = { 0 } [ENDL] let fact [ 0 ] be 1 [ENDL] for i = 1 to n inclusive , let fact [ i ] be fact [ i - 1 ] * i [ENDL] return fact [ n ] from function [ENDL] declare long longs a , b [ENDL] read a and b [ENDL] print result of run facto with minimum of a and b as argument , \" \\ n \" [ENDL] t , a , b , c , i , d , k = integers with i = 0 , d = 1 , k = 1", "c++": "if ( n == 0 or n == 1 ) return 1 ; long long fact [ 18 ] = { 0 } ; fact [ 0 ] = 1 ; for ( int i = 1 ; i <= n ; i ++ ) fact [ i ] = fact [ i - 1 ] * i ; return fact [ n ] ; long long a , b ; } int main() { cin >> a >> b ; cout << facto ( min ( a , b ) ) << \" \\n \" ; int t , a , b , c , i = 0 , d = 1 , k = 1 ; return 0; }"}}
{"translation": {"en": "Read a , c [ENDL] set i to minimum value of a and c [ENDL] for t = 1 to i exclusive [ENDL] print d and a new line [ENDL] create integer n", "c++": "int main() { cin >> a >> c ; i = min ( a , c ) ; for ( t = 1 ; t <= i ; t ++ ) { d *= t ; } cout << d << endl ; int n ; return 0; }"}}
{"translation": {"en": "while read n is true [ENDL] create long long answ with answ = n [ENDL] for i = 1 , a to n inclusive , incrementing i [ENDL] read a [ENDL] increment answ by long long casted i * ( a - 1 ) [ENDL] print answ print newline [ENDL] function Fast_Read_Out", "c++": "int main() { while ( cin >> n ) long long answ = n ; for ( int i = 1 , a ; i <= n ; ++ i ) cin >> a ; answ += ( long long ) i * ( a - 1 ) ; cout << answ << endl ; } void Fast_Read_Out ( ) { } } return 0; }"}}
{"translation": {"en": "define function Random [ENDL] define unsigned long long seed [ENDL] call asm with arguments \" rdtsc \" : \" = A \" ( seed ) [ENDL] initialze random number generator with seed [ENDL] unsigned long long function Time [ENDL] unsigned long long time = clock ( ) / 1000 . 00 [ENDL] return time [ENDL] create constant long long inf with value ( 1e9 ) + 123 [ENDL] a is an array of long longs with size 101 [ENDL] dp is an long long array with size 101 [ENDL] invoke function Random [ENDL] invoke function Fast_Read_Out [ENDL] create long long n [ENDL] read n [ENDL] for i = 1 to n inclusive read a [ i ] [ENDL] for i = 1 to n inclusive set dp [ i ] = to ( a [ i ] - 1 ) * i + 1 [ENDL] create long long sum = 0 [ENDL] for i = 1 to n inclusive increase sum by dp [ i ] [ENDL] print sum and a new line [ENDL] create integer n", "c++": "void Random ( ) unsigned long long seed ; asm ( \" rdtsc \" : \" =A \" ( seed ) ) ; srand ( seed ) ; unsigned long long Time ( ) } unsigned long long time = clock ( ) / 1000.00 ; return time ; const long long inf = ( 1e9 ) + 123 ; } long long a [ 101 ] ; long long dp [ 101 ] ; Random ( ) ; int main() { Fast_Read_Out ( ) ; long long n ; cin >> n ; for ( long long i = 1 ; i <= n ; i ++ ) cin >> a [ i ] ; for ( long long i = 1 ; i <= n ; i ++ ) dp [ i ] = ( a [ i ] - 1 ) * i + 1 ; long long sum = 0 ; for ( long long i = 1 ; i <= n ; i ++ ) sum += dp [ i ] ; cout << sum << endl ; int n ; }"}}
{"translation": {"en": "read n [ENDL] create long long array arr with size n [ENDL] for i = 0 to n exclusive , read arr [ i ] [ENDL] create long long ans with ans = 0 [ENDL] for i = 0 to n exclusive , set ans to ans + ( i + 1 ) * arr [ i ] - i [ENDL] print ans print newline [ENDL] n is long long", "c++": "int main() { cin >> n ; long long arr [ n ] ; for ( int i = 0 ; i < n ; i ++ ) cin >> arr [ i ] ; long long ans = 0 ; for ( int i = 0 ; i < n ; i ++ ) { ans = ans + ( i + 1 ) * arr [ i ] - i ; } cout << ans << endl ; long long n ; return 0; }"}}
{"translation": {"en": "read n [ENDL] declare long long called tot = 0 [ENDL] declare long long called input [ENDL] for integer i = 1 to n inclusive [ENDL] read input [ENDL] increase tot by i * ( input - 1 ) [ENDL] increase tot by n [ENDL] print tot and a new line [ENDL] create long long integers n , s , m with s = 0", "c++": "int main() { cin >> n ; long long tot = 0 ; long long input ; for ( int i = 1 ; i <= n ; i ++ ) cin >> input ; tot += i * ( input - 1 ) ; tot += n ; } cout << tot << endl ; long long int n , s = 0 , m ; return 0; }"}}
{"translation": {"en": "read n [ENDL] for i = 0 to n exclusive [ENDL] read m [ENDL] increment s by m + i * ( m - 1 ) [ENDL] print s print newline [ENDL] n and ans are long longs with ans = 0", "c++": "int main() { cin >> n ; for ( int i = 0 ; i < n ; i ++ ) cin >> m ; s += m + i * ( m - 1 ) ; cout << s << endl ; } long long n , ans = 0 ; return 0; }"}}
{"translation": {"en": "read n [ENDL] for i = 1 to n inclusive [ENDL] declare long long a [ENDL] read a [ENDL] increase ans by ( a - 1 ) * ( i - 1 ) + a [ENDL] print ans and a new line [ENDL] declare integer n", "c++": "cin >> n ; int main() { for ( long long i = 1 ; i <= n ; i ++ ) long long a ; cin >> a ; ans += ( a - 1 ) * ( i - 1 ) + a ; cout << ans << endl ; } int n ; return 0; }"}}
{"translation": {"en": "create long longs a and Ans and long long array ara with size 101 [ENDL] read n [ENDL] read a [ENDL] assign value of a to Ans [ENDL] for integer i = 1 to n exclusive [ENDL] read ara [ i ] [ENDL] increase Ans by ( ara [ i ] - 1 ) * ( i + 1 ) + 1 [ENDL] print Ans [ENDL] n = long long , a = array of 101 long long filled with 0 , ans = 0", "c++": "int main() { long long a , ara [ 101 ] , Ans ; cin >> n ; cin >> a ; Ans = a ; for ( int i = 1 ; i < n ; i ++ ) cin >> ara [ i ] ; Ans += ( ara [ i ] - 1 ) * ( i + 1 ) + 1 ; cout << Ans << endl ; } long long n , a [ 101 ] = { 0 } , ans = 0 ; return 0; }"}}
{"translation": {"en": "read n [ENDL] for i = 1 to n inclusive read a [ i ] [ENDL] for i = 1 to n inclusive sum ( a [ i ] - 1 ] ) * i + 1 to ans [ENDL] print ans [ENDL] desperate_optimization is a void function with integer argument precision", "c++": "int main() { cin >> n ; for ( int i = 1 ; i <= n ; i ++ ) cin >> a [ i ] ; for ( int i = 1 ; i <= n ; i ++ ) ans += ( a [ i ] - 1 ) * i + 1 ; cout << ans << endl ; void desperate_optimization ( int precision ) }"}}
{"translation": {"en": "cout . setf ( ios : : fixed ) [ENDL] cout . setf ( ios : : showpoint ) [ENDL] cout . precision ( precision ) [ENDL] in the function hora with integer argument tc [ENDL] create integer n [ENDL] read n [ENDL] declare long long variable tot = 0 [ENDL] for long long i = 1 to n inclusive [ENDL] create long long x [ENDL] read x [ENDL] increase tot by ( i ) * ( x - 1 ) + 1 [ENDL] print tot and ' \\ n ' [ENDL] call desperate_optimization with 10 as an argument [ENDL] declare integer variable ntc = 1 [ENDL] for integer tc = 1 to ntc inclusive , call hora of tc [ENDL] create long long n", "c++": "cout . setf ( ios :: fixed ) ; cout . setf ( ios :: showpoint ) ; cout . precision ( precision ) ; void hora ( int tc ) } int n ; cin >> n ; long long tot = 0 ; for ( long long i = 1 ; i <= n ; i ++ ) long long x ; cin >> x ; tot += ( i ) * ( x - 1 ) + 1 ; cout << tot << ' \\n ' ; } desperate_optimization ( 10 ) ; } int main() { int ntc = 1 ; for ( int tc = 1 ; tc <= ntc ; tc ++ ) hora ( tc ) ; long long n ; return 0; }"}}
{"translation": {"en": "read n [ENDL] declare long long ans = 0 [ENDL] for integer i = 0 to n exclusive [ENDL] declare long long variable a [ENDL] read a [ENDL] increase ans by ( i + 1 ) * ( a - 1 ) + 1 [ENDL] print ans and a new line [ENDL] create constant integer M with M = 100 + 10", "c++": "int main() { cin >> n ; long long ans = 0 ; for ( int i = 0 ; i < n ; i ++ ) long long a ; cin >> a ; ans += ( i + 1 ) * ( a - 1 ) + 1 ; cout << ans << endl ; } const int M = 100 + 10 ; }"}}
{"translation": {"en": "create long long integer a with size M [ENDL] create integer n [ENDL] read n [ENDL] for i = 1 to n inclusive , read a [ i ] [ENDL] create long long integer ans with ans = 0 [ENDL] for i = 1 to n inclusive , set ans to ans + ( i - 1 ) * ( a [ i ] - 1 ) + a [ i ] [ENDL] print ans print newline [ENDL] declare long long variables a , b , i and k where b = 0", "c++": "long long int a [ M ] ; int n ; int main() { cin >> n ; for ( int i = 1 ; i <= n ; i ++ ) { cin >> a [ i ] ; } long long int ans = 0 ; for ( int i = 1 ; i <= n ; i ++ ) { ans = ans + ( i - 1 ) * ( a [ i ] - 1 ) + a [ i ] ; } cout << ans << endl ; long long a , b = 0 , i , k ; return 0; }"}}
{"translation": {"en": "read a [ENDL] for i = 1 to a inclusive [ENDL] read k [ENDL] if i = 1 | | k = 1 [ENDL] increase b by k [ENDL] else [ENDL] multiply k by i [ENDL] decrease k by i - 1 [ENDL] increase b by k [ENDL] print b and a new line [ENDL] create long longs ans , n create long long array a with size 101", "c++": "int main() { cin >> a ; for ( i = 1 ; i <= a ; i ++ ) cin >> k ; if ( i == 1 || k == 1 ) b += k ; else k *= i ; k -= i - 1 ; b += k ; cout << b << endl ; } } long long ans , n , a [ 101 ] ; }"}}
{"translation": {"en": "read n [ENDL] for i = 1 to n inclusive , read a [ i ] [ENDL] for i = 1 to n inclusive , set ans to ans + a [ i ] * i + 1 - i [ENDL] print ans print newline [ENDL] create integer n", "c++": "cin >> n ; int main() { for ( int i = 1 ; i <= n ; i ++ ) cin >> a [ i ] ; for ( int i = 1 ; i <= n ; i ++ ) { ans = ans + a [ i ] * i + 1 - i ; } cout << ans << endl ; int n ; }"}}
{"translation": {"en": "create long long array arr with size 102 [ENDL] read n [ENDL] for i = 1 to n inclusive , read arr [ i ] [ENDL] create long long sum with sum = 0 [ENDL] for i = 1 to n inclusive , increment sum by ( arr [ i ] - 1 ) * i [ENDL] increment sum by n [ENDL] print sum print newline [ENDL] create long longs , n , ans , cnt , create long long array a with size 105", "c++": "int main() { long long arr [ 102 ] ; cin >> n ; for ( int i = 1 ; i <= n ; i ++ ) { cin >> arr [ i ] ; } long long sum = 0 ; for ( int i = 1 ; i <= n ; i ++ ) { sum += ( arr [ i ] - 1 ) * i ; } sum += n ; cout << sum << endl ; long long n , a [ 105 ] , ans , cnt ; }"}}
{"translation": {"en": "read n [ENDL] for i = 0 to n exclusive , read a [ i ] [ENDL] set ans to a [ n - 1 ] [ENDL] for i = n - 2 to 0 inclusive , decrementing i , increment a [ i ] by a [ i + 1 ] - 1 , increment ans by a [ i ] [ENDL] print ans print newline [ENDL] create long longs n and a", "c++": "cin >> n ; int main() { for ( int i = 0 ; i < n ; i ++ ) cin >> a [ i ] ; ans = a [ n - 1 ] ; for ( int i = n - 2 ; i >= 0 ; i -- ) a [ i ] += a [ i + 1 ] - 1 , ans += a [ i ] ; cout << ans << endl ; long long n , a ; return 0; }"}}
{"translation": {"en": "read n [ENDL] create long long ans = 0 [ENDL] for long long i = 1 to n inclusive [ENDL] read a [ENDL] increase ans by ( a - 1 ) * i + 1 [ENDL] print ans [ENDL] create long longs a , b , i , k , with b = 0", "c++": "int main() { cin >> n ; long long ans = 0 ; for ( long long i = 1 ; i <= n ; i ++ ) cin >> a ; ans += ( a - 1 ) * i + 1 ; cout << ans << endl ; } long long a , b = 0 , i , k ; return 0; }"}}
{"translation": {"en": "read a [ENDL] for i = 1 to a inclusive [ENDL] read k [ENDL] if i is 1 or k is 1 [ENDL] increment b by k [ENDL] else [ENDL] set k to k * i [ENDL] decrement k by i - 1 [ENDL] increment b by k [ENDL] print b print newline [ENDL] let a , i , k , n be unsigned long integers", "c++": "int main() { cin >> a ; for ( i = 1 ; i <= a ; i ++ ) cin >> k ; if ( i == 1 || k == 1 ) b += k ; else k *= i ; k -= i - 1 ; b += k ; cout << b << endl ; } } unsigned long long a , i , k , n ; }"}}
{"translation": {"en": "read n [ENDL] for i = 1 to n inclusive [ENDL] read a [ENDL] k is equal to k + ( a - 1 ) * i [ENDL] increase k by 1 [ENDL] print k and endline [ENDL] declare long longs n , a and ans", "c++": "cin >> n ; int main() { for ( i = 1 ; i <= n ; i ++ ) cin >> a ; k += ( a - 1 ) * i ; k ++ ; cout << k << endl ; } long long n , a , ans ; return 0; }"}}
{"translation": {"en": "read n and a [ENDL] set ans to a [ENDL] for i = 2 to n inclusive [ENDL] read a [ENDL] increase ans by 1 + ( a - 1 ) * i [ENDL] print ans and a new line [ENDL] create interger t", "c++": "int main() { cin >> n >> a ; ans = a ; for ( int i = 2 ; i <= n ; i ++ ) cin >> a ; ans += 1 + ( a - 1 ) * i ; cout << ans << endl ; } int t ; return 0; }"}}
{"translation": {"en": "create long integer a [ENDL] create long integer sum [ENDL] while ( t value is entered ) [ENDL] set sum to 0 [ENDL] for ( int i = 0 to t ( exclusive ) ) [ENDL] read a [ENDL] add ( a - 1 ) * i + a to sum [ENDL] print out sum [ENDL] let n be a long integer", "c++": "long long int a ; long long int sum ; while ( cin >> t ) int main() { sum = 0 ; for ( int i = 0 ; i < t ; i ++ ) cin >> a ; sum = sum + ( a - 1 ) * i + a ; cout << sum << endl ; } long long n ; } return 0; }"}}
{"translation": {"en": "read n [ENDL] let total ( 0 ) be a long type integer [ENDL] for ( long integer p = 0 to n exclusive ) [ENDL] let m be a long integer [ENDL] read m [ENDL] let the value of total is equal to total + ( m - 1 ) * ( p + 1 ) + 1 [ENDL] print total and newline [ENDL] create long longs ans , n , create long long array a with size 105", "c++": "int main() { cin >> n ; long long total ( 0 ) ; for ( long p = 0 ; p < n ; p ++ ) long long m ; cin >> m ; total += ( m - 1 ) * ( p + 1 ) + 1 ; cout << total << endl ; } long long ans , n , a [ 105 ] ; return 0; }"}}
{"translation": {"en": "read n [ENDL] for i = 1 to n inclusive , read a [ i ] [ENDL] for i = 1 to n inclusive , set ans to ans + a [ i ] * i + 1 - i [ENDL] print ans print ' \\ n ' [ENDL] declare long long variable n", "c++": "cin >> n ; int main() { for ( register long long i = 1 ; i <= n ; i ++ ) cin >> a [ i ] ; for ( register long long i = 1 ; i <= n ; i ++ ) ans = ans + a [ i ] * i + 1 - i ; cout << ans << ' \\n ' ; long long n ; return 0; }"}}
{"translation": {"en": "read n [ENDL] long long total = 0 [ENDL] for long = 0 to n exclusive [ENDL] create long long m [ENDL] read m [ENDL] increase total by ( m - 1 ) * ( p + 1 ) + 1 [ENDL] print total [ENDL] create long long n", "c++": "int main() { cin >> n ; long long total ( 0 ) ; for ( long p = 0 ; p < n ; p ++ ) long long m ; cin >> m ; total += ( m - 1 ) * ( p + 1 ) + 1 ; cout << total << endl ; } long long n ; return 0; }"}}
{"translation": {"en": "create long long sum [ENDL] while reading n [ENDL] set sum to 0 [ENDL] for integer i = 1 to n inclusive [ENDL] declare long long m [ENDL] read m [ENDL] increase sum by i * ( m - 1 ) + 1 [ENDL] print sum [ENDL] declare abs with long long , long long as arguments , returning long long", "c++": "int main() { long long sum ; while ( cin >> n ) sum = 0 ; for ( int i = 1 ; i <= n ; i ++ ) long long m ; cin >> m ; sum += i * ( m - 1 ) + 1 ; cout << sum << endl ; } long long abs ( long long , long long ) ; } }"}}
{"translation": {"en": "declare solve with no arguments , returning void [ENDL] create long longs n , a , t , with t = 0 [ENDL] read n [ENDL] for i = 1 to n + 1 exclusive [ENDL] read a [ENDL] increment t by ( ( a - 1 ) * i + 1 ) [ENDL] print t print \" \\ n \" [ENDL] create long long TESTS with TESTS = 1 [ENDL] while decrement TESTS is true , run solve [ENDL] declare abs with long longs a , b as arguments , returning long long [ENDL] if a is greater than b [ENDL] return a - b from function [ENDL] else [ENDL] return b - a from function [ENDL] create constant integer INF with value 0x3f3f3f3f", "c++": "void solve ( ) long long n , a , t = 0 ; cin >> n ; for ( long long i = 1 ; i < n + 1 ; i ++ ) cin >> a ; t += ( ( a - 1 ) * i + 1 ) ; cout << t << \" \\n \" ; } long long TESTS = 1 ; } int main() { while ( TESTS -- ) { solve ( ) ; } long long abs ( long long a , long long b ) return 0; } if ( a > b ) return a - b ; else return b - a ; const int INF = 0x3f3f3f3f ; }"}}
{"translation": {"en": "create integer array a with 105 elements [ENDL] declare long long variables i , j , k and l where l = 0 [ENDL] create long longs n and m [ENDL] read n [ENDL] for i = 0 to n exclusive read a [ i ] and decrement it [ENDL] create long long s = n [ENDL] for i = 0 to n exclusive [ENDL] if a [ i ] , increment s by a [ i ] + a [ i ] * i [ENDL] print s [ENDL] create integer n", "c++": "int a [ 105 ] ; long long i , j , k , l = 0 ; int main() { long long n , m ; cin >> n ; for ( i = 0 ; i < n ; i ++ ) cin >> a [ i ] , a [ i ] -- ; long long s = n ; for ( i = 0 ; i < n ; i ++ ) if ( a [ i ] ) s += a [ i ] + a [ i ] * i ; cout << s << endl ; } int n ; return 0; }"}}
{"translation": {"en": "declare long long integer array a with size 150 [ENDL] declare long long integer variable sum = 0 [ENDL] while reading n [ENDL] assign value of 0 to sum [ENDL] for i = 1 to n inclusive read a [ i ] [ENDL] for i = 1 to n inclusive [ENDL] if i = 1 [ENDL] increase sum by a [ 1 ] [ENDL] else [ENDL] increase sum by ( a [ i ] - 1 ) * i + 1 [ENDL] print sum [ENDL] declare integer n", "c++": "int main() { long long int a [ 150 ] ; long long int sum = 0 ; while ( cin >> n ) sum = 0 ; for ( int i = 1 ; i <= n ; i ++ ) { cin >> a [ i ] ; } for ( int i = 1 ; i <= n ; i ++ ) if ( i == 1 ) sum += a [ 1 ] ; else sum = sum + ( a [ i ] - 1 ) * i + 1 ; cout << sum << endl ; } } int n ; } return 0; }"}}
{"translation": {"en": "read n [ENDL] declare long long array a with size n [ENDL] read a [ i ] n times [ENDL] declare long long variable sum = 0 [ENDL] for i = 0 to n exclusive [ENDL] increase sum by a [ i ] [ENDL] increase sum by ( a [ i ] - 1 ) * i [ENDL] print sum [ENDL] declare integer n and integer array a with size 101", "c++": "int main() { cin >> n ; long long a [ n ] ; for ( int i = 0 ; i < n ; i ++ ) { cin >> a [ i ] ; } long long sum = 0 ; for ( int i = 0 ; i < n ; i ++ ) sum += a [ i ] ; sum += ( a [ i ] - 1 ) * i ; cout << sum << endl ; } int n , a [ 101 ] ; return 0; }"}}
{"translation": {"en": "read n [ENDL] declare long long ans = 0 [ENDL] for i = 1 to n inclusive [ENDL] read a [ i ] [ENDL] increase ans by 1LL * ( a [ i ] - 1 ) * ( i - 1 ) + a [ i ] [ENDL] print ans [ENDL] assign value 0x3f3f3f3f to constant integer inf", "c++": "int main() { cin >> n ; long long ans = 0 ; for ( int i = 1 ; i <= n ; i ++ ) cin >> a [ i ] ; ans += 1LL * ( a [ i ] - 1 ) * ( i - 1 ) + a [ i ] ; cout << ans << endl ; } const int inf = 0x3f3f3f3f ; return 0; }"}}
{"translation": {"en": "assign value 10005 to constant integer MAXN [ENDL] assign value 19260817 to constant integer mod [ENDL] assign value 0x7fffffff to constant integer INF [ENDL] ans is an long long array with size 101 [ENDL] create integers n and x [ENDL] read n [ENDL] for i = 1 to n inclusive write input to ans [ i ] [ENDL] declare long long variable sum = 0 [ENDL] for i = 1 to n inclusive , increase sum by ans [ i ] * i - i + 1 [ENDL] print sum and a new line [ENDL] arr is a new array of integers with size 3 by 1005", "c++": "const int MAXN = 10005 ; const int mod = 19260817 ; const int INF = 0x7fffffff ; long long ans [ 101 ] ; int n , x ; int main() { cin >> n ; for ( int i = 1 ; i <= n ; i ++ ) cin >> ans [ i ] ; long long sum = 0 ; for ( int i = 1 ; i <= n ; i ++ ) sum += ans [ i ] * i - i + 1 ; cout << sum << endl ; int arr [ 3 ] [ 1005 ] ; return 0; }"}}
{"translation": {"en": "define integers n and s [ENDL] read standard input to n and s [ENDL] in a for loop , change i from 0 to 2 exclusive incrementing i [ENDL] change j from 1 to n inclusive in a loop and read input to arr [ i ] [ j ] on each iteration [ENDL] create integer variable with name cek [ENDL] if arr [ 0 ] [ 1 ] ! = 0 and ( arr [ 0 ] [ s ] ! = 0 or arr [ 1 ] [ s ] ! = 0 ) [ENDL] change the value of cek to 1 [ENDL] if arr [ 0 ] [ s ] is equal to 0 [ENDL] assign 0 to cek [ENDL] for i from s + 1 to n inclusive incrementing i [ENDL] if arr [ 0 ] [ i ] and arr [ 1 ] [ i ] are both not 0 , change the value of cek to 1 [ENDL] else [ENDL] change the value of cek to 0 [ENDL] print \" YES \" if cek is not 0 , otherwise print \" NO \" [ENDL] define new integers n and m , and arrays a and b with 1111 element", "c++": "int main() { int n , s ; cin >> n >> s ; for ( int i = 0 ; i < 2 ; i ++ ) for ( int j = 1 ; j <= n ; j ++ ) { cin >> arr [ i ] [ j ] ; } int cek ; } if ( arr [ 0 ] [ 1 ] && ( arr [ 0 ] [ s ] || arr [ 1 ] [ s ] ) ) cek = 1 ; if ( arr [ 0 ] [ s ] == 0 ) cek = 0 ; for ( int i = s + 1 ; i <= n ; i ++ ) if ( arr [ 0 ] [ i ] && arr [ 1 ] [ i ] ) cek = 1 ; else } } cek = 0 ; cout << ( cek ? \" YES \" : \" NO \" ) << endl ; int n , m , a [ 1111 ] , b [ 1111 ] ; return 0; }"}}
{"translation": {"en": "read from the input to n and m [ENDL] read standard input to n elements of a , starting from the index 1 [ENDL] read from the input to n items of b , starting from the index 1 [ENDL] if a [ 1 ] is equal to 0 [ENDL] print \" NO \" to the standard output [ENDL] flag is a new integer variable with value 0 [ENDL] if a [ m ] is not 0 [ENDL] print \" YES \" [ENDL] else [ENDL] if b [ m ] is 0 [ENDL] print \" NO \" [ENDL] else [ENDL] for integer i = m + 1 to n inclusive [ENDL] if both a [ i ] and b [ i ] are not 0 [ENDL] assign 1 to flag [ENDL] print \" YES \" [ENDL] if flag is false , print \" NO \" [ENDL] let n , s be integers", "c++": "int main() { cin >> n >> m ; for ( int i = 1 ; i <= n ; i ++ ) { cin >> a [ i ] ; } for ( int i = 1 ; i <= n ; i ++ ) { cin >> b [ i ] ; } if ( a [ 1 ] == 0 ) cout << \" NO \" << endl ; int flag = 0 ; return 0; } if ( a [ m ] ) cout << \" YES \" << endl ; else if ( ! b [ m ] ) cout << \" NO \" << endl ; else for ( int i = m + 1 ; i <= n ; i ++ ) if ( a [ i ] && b [ i ] ) flag = 1 ; cout << \" YES \" << endl ; if ( ! flag ) { cout << \" NO \" << endl ; } return 0; } } int n , s ; } } return 0; }"}}
{"translation": {"en": "read n , s [ENDL] a = array of integers of length n , b = array of integers of length n [ENDL] for i = 0 to n exclusive , read a [ i ] [ENDL] for i = 0 to n exclusive , read b [ i ] [ENDL] if a [ 0 ] equals 0 [ENDL] print NO and newline [ENDL] else if a [ s - 1 ] equals 0 and b [ s - 1 ] equals 0 [ENDL] print NO and newline [ENDL] else if a [ s - 1 ] equals 1 [ENDL] print YES and newline [ENDL] else if a [ s - 1 ] equals 0 and b [ s - 1 ] equals 1 [ENDL] the integer value of k = 0 [ENDL] for i = s to n exclusive [ENDL] if a [ i ] equals 1 and b [ i ] equals 1 [ENDL] k is equal to 1 [ENDL] print YES and newline [ENDL] if k equals 0 [ENDL] print NO and newline [ENDL] n , s = int", "c++": "int main() { cin >> n >> s ; int a [ n ] , b [ n ] ; for ( int i = 0 ; i < n ; i ++ ) { cin >> a [ i ] ; } for ( int i = 0 ; i < n ; i ++ ) { cin >> b [ i ] ; } if ( a [ 0 ] == 0 ) cout << \" NO \" << endl ; else if ( a [ s - 1 ] == 0 && b [ s - 1 ] == 0 ) return 0; cout << \" NO \" << endl ; else if ( a [ s - 1 ] == 1 ) return 0; cout << \" YES \" << endl ; else if ( a [ s - 1 ] == 0 && b [ s - 1 ] == 1 ) return 0; int k = 0 ; for ( int i = s ; i < n ; i ++ ) if ( a [ i ] == 1 && b [ i ] == 1 ) k = 1 ; cout << \" YES \" << endl ; if ( k == 0 ) return 0; } } cout << \" NO \" << endl ; int n , s ; return 0; } } return 0; }"}}
{"translation": {"en": "a , b = bool array of size 1111 ach [ENDL] read n then s [ENDL] for i = 1 to n inclusive read a [ i ] [ENDL] for i = 1 to n inclusive read b [ i ] [ENDL] if not a [ 1 ] [ENDL] print \" NO \" [ENDL] else if a [ 1 ] and a [ s ] [ENDL] print \" YES \" [ENDL] else [ENDL] flag = int with flag = = [ENDL] for i = s + 1 to n inclusive [ENDL] if a [ i ] [ENDL] if b [ i ] and b [ s ] [ENDL] set flag to 1 [ENDL] break [ENDL] if flag [ENDL] print \" YES \" [ENDL] else [ENDL] print \" NO \" [ENDL] let N and S be integers", "c++": "bool a [ 1111 ] , b [ 1111 ] ; cin >> n >> s ; int main() { for ( int i = 1 ; i <= n ; i ++ ) { cin >> a [ i ] ; } for ( int i = 1 ; i <= n ; i ++ ) { cin >> b [ i ] ; } if ( ! a [ 1 ] ) cout << \" NO \" << endl ; else if ( a [ 1 ] && a [ s ] ) cout << \" YES \" << endl ; else int flag = 0 ; for ( int i = s + 1 ; i <= n ; i ++ ) if ( a [ i ] ) if ( b [ i ] && b [ s ] ) flag = 1 ; break ; if ( flag ) } } } cout << \" YES \" << endl ; else cout << \" NO \" << endl ; int N , S ; } return 0; }"}}
{"translation": {"en": "read in N and S [ENDL] decrement S [ENDL] let a and b be arrays of integers of size N [ENDL] read in N values into a [ENDL] read in N values into b [ENDL] if a [ 0 ] and a [ S ] are true [ENDL] print YES [ENDL] for k = S + 1 to k < N [ENDL] if a [ 0 ] and a [ k ] and b [ k ] and b [ S ] are true [ENDL] print YES [ENDL] print NO [ENDL] declare an arrays of ints a and b with 1005 elements", "c++": "int main() { cin >> N >> S ; -- S ; int a [ N ] , b [ N ] ; for ( int i = 0 ; i < N ; ++ i ) cin >> a [ i ] ; for ( int i = 0 ; i < N ; ++ i ) cin >> b [ i ] ; if ( a [ 0 ] && a [ S ] ) cout << \" YES \" << endl ; for ( int k = S + 1 ; k < N ; ++ k ) return 0; } if ( a [ 0 ] && a [ k ] && b [ k ] && b [ S ] ) cout << \" YES \" << endl ; cout << \" NO \" << endl ; return 0; } } int a [ 1005 ] , b [ 1005 ] ; return 0; }"}}
{"translation": {"en": "declare new int variables n and m [ENDL] read n and m from the input [ENDL] read n elements into array a from the input , starting from the index 1 [ENDL] read n elements into b , starting from the index 1 [ENDL] if a [ 1 ] is equal to 0 [ENDL] print \" NO \" [ENDL] else if a [ 1 ] and a [ m ] are both equal to 1 [ENDL] print \" YES \" [ENDL] else [ENDL] if b [ m ] = 0 [ENDL] print \" NO \" to the output stream [ENDL] else [ENDL] declare new integer variable bj with value 0 [ENDL] in a for loop , change i from m + 1 to n inclusive [ENDL] set the value of bj to 1 if a [ i ] and b [ i ] are both = 1 [ENDL] if bj is not 0 [ENDL] print \" YES \" to the standard output [ENDL] else [ENDL] print \" NO \" [ENDL] create constant integer mx = 1000", "c++": "int n , m ; int main() { cin >> n >> m ; for ( int i = 1 ; i <= n ; i ++ ) { cin >> a [ i ] ; } for ( int i = 1 ; i <= n ; i ++ ) { cin >> b [ i ] ; } if ( a [ 1 ] == 0 ) cout << \" NO \" << endl ; else if ( a [ 1 ] == 1 && a [ m ] == 1 ) cout << \" YES \" << endl ; else if ( b [ m ] == 0 ) cout << \" NO \" << endl ; else int bj = 0 ; for ( int i = m + 1 ; i <= n ; i ++ ) if ( a [ i ] == 1 && b [ i ] == 1 ) { bj = 1 ; } if ( bj ) } cout << \" YES \" << endl ; else cout << \" NO \" << endl ; const int mx = 1000 ; } } } }"}}
{"translation": {"en": "define new integers n and s [ENDL] create bool arrays a and b with size mx [ENDL] in the function solve [ENDL] read input to n and s [ENDL] declare new int variables t1 and t2 = 0 [ENDL] read n elements to the a [ENDL] read n elements into items of b [ENDL] if a [ 0 ] = 1 , change the value of t1 to 1 [ENDL] if a [ s - 1 ] = 1 or b [ s - 1 ] = 1 [ENDL] in a for loop , change i from s - 1 to n exclusive incrementing i [ENDL] if values of a [ i ] and b [ i ] are both = 1 [ENDL] set the value of t2 to 1 [ENDL] break [ENDL] if t1 = 1 and ( t2 = 1 or a [ s - 1 ] = 1 ) [ENDL] print \" YES \\ n \" [ENDL] else [ENDL] print \" NO \\ n \" [ENDL] call method solve ( ) [ENDL] let maxn be a constant integer 1e5 + 5", "c++": "int n , s ; bool a [ mx ] , b [ mx ] ; void solve ( ) cin >> n >> s ; int t1 = 0 , t2 = 0 ; for ( int i = 0 ; i < n ; i ++ ) cin >> a [ i ] ; for ( int i = 0 ; i < n ; i ++ ) cin >> b [ i ] ; if ( a [ 0 ] == 1 ) t1 = 1 ; if ( a [ s - 1 ] == 1 || b [ s - 1 ] == 1 ) for ( int i = s - 1 ; i < n ; i ++ ) if ( a [ i ] == 1 && b [ i ] == 1 ) t2 = 1 ; break ; if ( t1 == 1 && ( t2 == 1 || a [ s - 1 ] == 1 ) ) } cout << \" YES\\n \" ; else cout << \" NO\\n \" ; solve ( ) ; } int main() { const int maxn = 1e5 + 5 ; return 0; }"}}
{"translation": {"en": "let a , b be integer arrays of size maxn [ENDL] n , m be integers [ENDL] read n , m [ENDL] for integer i = 0 to n inclusive , read a [ i ] [ENDL] for integer j = 0 to n inclusive , read b [ j ] [ENDL] if a [ 1 ] equal 0 [ENDL] print NO and newline [ENDL] if a [ m ] equal 1 [ENDL] print YES and endline [ENDL] for integer i = m to n inclusive [ENDL] if a [ i ] , b [ i ] , b [ m ] all equal 1 [ENDL] print YES and endline [ENDL] print NO and newline [ENDL] create function solve", "c++": "int a [ maxn ] , b [ maxn ] ; int n , m ; int main() { cin >> n >> m ; for ( int i = 1 ; i <= n ; i ++ ) cin >> a [ i ] ; for ( int j = 1 ; j <= n ; j ++ ) cin >> b [ j ] ; if ( a [ 1 ] == 0 ) cout << \" NO \" << endl ; if ( a [ m ] == 1 ) return 0; } cout << \" YES \" << endl ; for ( int i = m ; i <= n ; i ++ ) return 0; } if ( a [ i ] == 1 && b [ i ] == 1 && b [ m ] == 1 ) cout << \" YES \" << endl ; cout << \" NO \" << endl ; return 0; } void solve ( ) return 0; }"}}
{"translation": {"en": "long long integer as n , s [ENDL] read n , s [ENDL] long long integer as a [ n ] , b [ n ] [ENDL] input a [ i ] [ENDL] input b [ i ] [ENDL] if a [ 0 ] is 1 then do the following [ENDL] if a [ s - 1 ] is 1 then do the following [ENDL] output YES \\ n [ENDL] else [ENDL] long long integer as ng long h = 0 [ENDL] for s to less than n do the following [ENDL] if a [ i ] and b [ i ] is 1 then do the following [ENDL] set h to 2 [ENDL] break [ENDL] if h is 2 and b [ s - 1 ] is 1 then do the following [ENDL] output YES \\ n [ENDL] else [ENDL] output NO \\ n [ENDL] else [ENDL] output NO \\ n [ENDL] long long integer as t = 1 [ENDL] if t is true then run solve function [ENDL] let n , s be long integers , a = array of integers of length 1001 , b = array of integers of length 1001", "c++": "long long n , s ; cin >> n >> s ; long long a [ n ] , b [ n ] ; for ( long long i = 0 ; i < n ; i ++ ) cin >> a [ i ] ; for ( long long i = 0 ; i < n ; i ++ ) cin >> b [ i ] ; if ( a [ 0 ] == 1 ) if ( a [ s - 1 ] == 1 ) cout << \" YES\\n \" ; else long long h = 0 ; for ( long long i = s ; i < n ; i ++ ) if ( a [ i ] == 1 && b [ i ] == 1 ) h = 2 ; break ; if ( h == 2 && b [ s - 1 ] == 1 ) } cout << \" YES\\n \" ; else cout << \" NO\\n \" ; else } cout << \" NO\\n \" ; long long t = 1 ; } int main() { while ( t -- ) { solve ( ) ; } long long int n , s , a [ 1001 ] , b [ 1001 ] ; return 0; }"}}
{"translation": {"en": "read n , s [ENDL] for long integer i = 1 to n inclusive , read a [ i ] [ENDL] for long integer i = 1 to n inclusive , read b [ i ] [ENDL] if a [ 1 ] equals 0 [ENDL] print NO and newline [ENDL] if a [ s ] equals 1 [ENDL] print YES and newline [ENDL] the boolean value of flag = false [ENDL] for long integer i = s + 1 to n inclusive [ENDL] if a [ i ] equals 1 and b [ i ] equals 1 [ENDL] flag is equal to true [ENDL] stop [ENDL] if flag is equal to false [ENDL] print NO and newline [ENDL] if b [ s ] equals 1 [ENDL] print YES and newline [ENDL] print NO and newline [ENDL] make ints n and s", "c++": "int main() { cin >> n >> s ; for ( long long int i = 1 ; i <= n ; i ++ ) cin >> a [ i ] ; for ( long long int i = 1 ; i <= n ; i ++ ) cin >> b [ i ] ; if ( a [ 1 ] == 0 ) cout << \" NO \" << endl ; if ( a [ s ] == 1 ) return 0; } cout << \" YES \" << endl ; bool flag = false ; return 0; } for ( long long int i = s + 1 ; i <= n ; i ++ ) if ( a [ i ] == 1 && b [ i ] == 1 ) flag = true ; break ; if ( flag == false ) } } cout << \" NO \" << endl ; if ( b [ s ] == 1 ) return 0; } cout << \" YES \" << endl ; cout << \" NO \" << endl ; return 0; } int n , s ; return 0; }"}}
{"translation": {"en": "read n and s [ENDL] create integer array a of size n + 1 with { 0 } [ENDL] make int array b of size n + 1 with { 0 } [ENDL] for i = 1 to n , read a [ i ] [ENDL] for i = 1 to n , read b [ i ] [ENDL] if a [ 1 ] is equal to 0 [ENDL] print \" NO \\ n \" [ENDL] if a [ s ] is equal to 1 [ENDL] show \" YES \\ n \" [ENDL] for i = s + 1 to n [ENDL] if a [ i ] is equal to 1 and b [ i ] is equal to 1 and b [ s ] is equal to 1 [ENDL] show \" YES \\ n \" [ENDL] display \" NO \\ n \" [ENDL] define new integers n and s", "c++": "int main() { cin >> n >> s ; int a [ n + 1 ] = { 0 } ; int b [ n + 1 ] = { 0 } ; for ( int i = 1 ; i <= n ; i ++ ) cin >> a [ i ] ; for ( int i = 1 ; i <= n ; i ++ ) cin >> b [ i ] ; if ( a [ 1 ] == 0 ) cout << \" NO\\n \" ; if ( a [ s ] == 1 ) return 0; } cout << \" YES\\n \" ; for ( int i = s + 1 ; i <= n ; i ++ ) return 0; } if ( a [ i ] == 1 && b [ i ] == 1 && b [ s ] == 1 ) cout << \" YES\\n \" ; cout << \" NO\\n \" ; return 0; } } int n , s ; return 0; }"}}
{"translation": {"en": "read n and s from the input [ENDL] new vector of integers forward with size = n + 1 , filled with 0 [ENDL] declare vector of integers called backward with n + 1 element filled with 0 [ENDL] for integer i = 1 to n inclusive , read input to forward [ i ] [ENDL] read n elements to backward , starting from the index 1 [ENDL] if forward [ 1 ] = 0 [ENDL] print \" NO \" [ENDL] else [ENDL] if forward [ s ] = 1 [ENDL] print \" YES \" [ENDL] else [ENDL] if backward [ s ] is equal to 1 [ENDL] declare boolean variable with name availabe and value false [ENDL] for i from s + 1 to n inclusive incrementing i [ENDL] if forward [ i ] and backward [ i ] = 1 [ENDL] assign true to availabe [ENDL] break the loop [ENDL] print \" YES \" if availabe is true , print \" NO \" otherwise [ENDL] else [ENDL] print \" NO \" [ENDL] make integer arrays a of size 10000 and b of size 10000", "c++": "int main() { cin >> n >> s ; vector < int > forward ( n + 1 , 0 ) ; vector < int > backward ( n + 1 , 0 ) ; for ( int i = 1 ; i <= n ; i ++ ) { cin >> forward [ i ] ; } for ( int i = 1 ; i <= n ; i ++ ) { cin >> backward [ i ] ; } if ( forward [ 1 ] == 0 ) cout << \" NO \" << endl ; else if ( forward [ s ] == 1 ) cout << \" YES \" << endl ; else if ( backward [ s ] == 1 ) bool availabe = false ; for ( int i = s + 1 ; i <= n ; i ++ ) if ( forward [ i ] == 1 && backward [ i ] == 1 ) availabe = true ; break ; cout << ( ( availabe ) ? \" YES \" : \" NO \" ) << endl ; } } else cout << \" NO \" << endl ; int a [ 10000 ] , b [ 10000 ] ; } } } return 0; }"}}
{"translation": {"en": "create bool ab = 0 [ENDL] make ints n , s , i , z = 1 , x , and c [ENDL] read n and s [ENDL] set x to n + 1 [ENDL] for i = 1 to n , read a [ i ] [ENDL] for i = 1 to n , read b [ i ] [ENDL] if a [ s ] is equal to 1 and a [ 1 ] is equal to 1 [ENDL] set ab to 1 [ENDL] else do [ENDL] for i = n to 1 by decreasing by 1 [ENDL] if a [ i ] is equal to 1 and b [ i ] is equal to 1 [ENDL] if i is greater than s and b [ s ] is equal to 1 , set ab to 1 [ENDL] if a [ 1 ] is 0 , set ab to 0 [ENDL] if ab is equal to 1 [ENDL] display \" YES \" [ENDL] otherwise [ENDL] output \" NO \" [ENDL] n , s = integers", "c++": "bool ab = 0 ; int n , s , i , z = 1 , x , c ; int main() { cin >> n >> s ; x = n + 1 ; for ( i = 1 ; i <= n ; i ++ ) cin >> a [ i ] ; for ( i = 1 ; i <= n ; i ++ ) cin >> b [ i ] ; if ( a [ s ] == 1 && a [ 1 ] == 1 ) ab = 1 ; else for ( i = n ; i >= 1 ; i -- ) if ( a [ i ] == 1 && b [ i ] == 1 ) if ( i >= s && b [ s ] == 1 ) ab = 1 ; if ( a [ 1 ] == 0 ) ab = 0 ; } } if ( ab == 1 ) cout << \" YES \" << endl ; else cout << \" NO \" << endl ; int n , s ; return 0; }"}}
{"translation": {"en": "t1 , t2 = array of 100000 integers each [ENDL] Read n , s [ENDL] Read n values into array t1 [ENDL] Read n values into array t2 [ENDL] if t1 [ 0 ] is equal to 1 [ENDL] if t1 [ s - 1 ] is equal to 1 [ENDL] print YES and a new line [ENDL] if t2t [ s - 1 ] is equal to 1 [ENDL] for i = s to n exclusive [ENDL] if t1 [ i ] is 1 and t2 [ i ] is 1 [ENDL] print YES and a new line [ENDL] print NO and a new line [ENDL] let n and s be integers", "c++": "int main() { int t1 [ 100000 ] , t2 [ 100000 ] ; cin >> n >> s ; for ( int i = 0 ; i < n ; ++ i ) { cin >> t1 [ i ] ; } for ( int i = 0 ; i < n ; ++ i ) { cin >> t2 [ i ] ; } if ( t1 [ 0 ] == 1 ) if ( t1 [ s - 1 ] == 1 ) cout << \" YES \" << endl ; if ( t2 [ s - 1 ] == 1 ) return 0; } for ( int i = s ; i < n ; i ++ ) if ( t1 [ i ] == 1 && t2 [ i ] == 1 ) cout << \" YES \" << endl ; cout << \" NO \" << endl ; return 0; } } } } int n , s ; return 0; }"}}
{"translation": {"en": "read in n and s [ENDL] let a be an array of integers of size n + 1 , let b be an array of integers of size n + 1 [ENDL] read in n values into array a [ENDL] read in n values into array b [ENDL] if a [ 1 ] is equal to 1 [ENDL] if a [ s ] is equal to 1 [ENDL] print YES [ENDL] else if b [ s ] is equal to 1 [ENDL] for i = s + 1 to i < = n [ENDL] if a [ i ] is equal to 1 and b [ i ] is equal to 1 [ENDL] print YES [ENDL] print NO [ENDL] or else [ENDL] print NO [ENDL] or else [ENDL] print NO [ENDL] let n be a integer", "c++": "int main() { cin >> n >> s ; int a [ n + 1 ] , b [ n + 1 ] ; for ( int i = 1 ; i <= n ; ++ i ) cin >> a [ i ] ; for ( int i = 1 ; i <= n ; ++ i ) cin >> b [ i ] ; if ( a [ 1 ] == 1 ) if ( a [ s ] == 1 ) cout << \" YES \" << endl ; else if ( b [ s ] == 1 ) for ( int i = s + 1 ; i <= n ; ++ i ) if ( a [ i ] == 1 && b [ i ] == 1 ) cout << \" YES \" << endl ; cout << \" NO \" << endl ; return 0; } } else cout << \" NO \" << endl ; else cout << \" NO \" << endl ; int n ; return 0; }"}}
{"translation": {"en": "the integer value of ans = - 1 [ENDL] the integer value of res = 0 [ENDL] read n [ENDL] a = array of integers of length n [ENDL] for i = 0 to n exclusive [ENDL] read a [ i ] [ENDL] if a [ i ] is equal to 1 , increment res by 1 [ENDL] if res is equal to n [ENDL] print n - 1 and newline [ENDL] if n is equal to 1 and a [ 0 ] is equal to 1 [ENDL] print 0 and newline [ENDL] for j = 0 to n exclusive [ENDL] for k = 0 to n exclusive [ENDL] the integer value of cnt = 0 [ENDL] for l = 0 to n exclusive [ENDL] if l > = k and l < = j [ENDL] increment cnt by ( 1 - a [ l ] ) [ENDL] else do the following [ENDL] increment cnt by a [ l ] [ENDL] ans is equal to maximum of ans and cnt [ENDL] print ans and newline [ENDL] create n", "c++": "int ans = - 1 ; int res = 0 ; cin >> n ; int main() { int a [ n ] ; for ( int i = 0 ; i < n ; i ++ ) cin >> a [ i ] ; if ( a [ i ] == 1 ) res ++ ; if ( res == n ) } cout << n - 1 << endl ; if ( n == 1 && a [ 0 ] == 1 ) return 0; } cout << \" 0 \" << endl ; for ( int j = 0 ; j < n ; j ++ ) return 0; } for ( int k = 0 ; k < n ; k ++ ) int cnt = 0 ; for ( int l = 0 ; l < n ; l ++ ) if ( l >= k && l <= j ) cnt = cnt + ( 1 - a [ l ] ) ; else cnt = cnt + a [ l ] ; ans = max ( ans , cnt ) ; } cout << ans << endl ; } } int n ; return 0; }"}}
{"translation": {"en": "ans = - 1 [ENDL] res = 0 [ENDL] read n [ENDL] create int a [ n ] [ENDL] for i = 0 to n exclusive [ENDL] read a [ i ] [ENDL] if a [ i ] = 1 , increment res [ENDL] if res = n [ENDL] print n - 1 [ENDL] if n = 1 and a [ 0 ] = 1 [ENDL] print 0 [ENDL] for j = 0 to n exclusive [ENDL] for k = 0 to n inclusive [ENDL] cnt = 0 [ENDL] for l = 0 to n exclusive [ENDL] if l > = k and l < = j [ENDL] cnt = cnt + ! a [ l ] [ENDL] else [ENDL] set cnt = cnt + a [ l ] [ENDL] set ans to max of ans and cnt [ENDL] print ans [ENDL] let max = 0 , n , i , sum = 0 , a [ 105 ] , p be ints", "c++": "int ans = - 1 ; int res = 0 ; cin >> n ; int main() { int a [ n ] ; for ( int i = 0 ; i < n ; i ++ ) cin >> a [ i ] ; if ( a [ i ] == 1 ) res ++ ; if ( res == n ) } cout << n - 1 << endl ; if ( n == 1 && a [ 0 ] == 1 ) return 0; } cout << \" 0 \" << endl ; for ( int j = 0 ; j < n ; j ++ ) return 0; } for ( int k = 0 ; k <= n ; k ++ ) int cnt = 0 ; for ( int l = 0 ; l < n ; l ++ ) if ( l >= k && l <= j ) cnt = cnt + ! a [ l ] ; else cnt = cnt + a [ l ] ; ans = max ( ans , cnt ) ; } cout << ans << endl ; } } int max = 0 , n , i , sum = 0 , a [ 105 ] , p ; return 0; }"}}
{"translation": {"en": "read n [ENDL] set p to 0 [ENDL] for i = 0 to n exclusive [ENDL] read a at i [ENDL] increment sum by a at i [ENDL] if sum = n [ENDL] print sum - 1 [ENDL] for i = 0 to n exclusive [ENDL] if a [ i ] = 0 [ENDL] increment p [ENDL] else if a [ i ] = 1 and p < 0 [ENDL] reset p to 0 [ENDL] else if a [ i ] = 1 and p > 0 [ENDL] decrement p [ENDL] if max < p then set max to p [ENDL] increment sum by max [ENDL] print sum [ENDL] make ints n , a , cnt_1 = 0 , cnt_0 = 0 , and cnt_max0 = - 1", "c++": "int main() { cin >> n ; p = 0 ; for ( i = 0 ; i < n ; i ++ ) cin >> a [ i ] ; sum += a [ i ] ; if ( sum == n ) } cout << sum - 1 << endl ; for ( i = 0 ; i < n ; i ++ ) return 0; } if ( a [ i ] == 0 ) p ++ ; else if ( a [ i ] == 1 && p < 0 ) p = 0 ; else if ( a [ i ] == 1 && p > 0 ) p -- ; if ( max < p ) max = p ; sum += max ; } cout << sum << endl ; int n , a , cnt_1 = 0 , cnt_0 = 0 , cnt_max0 = - 1 ; return 0; }"}}
{"translation": {"en": "read n [ENDL] while n - - is truthy [ENDL] read a [ENDL] if a is equal to 1 [ENDL] add 1 to cnt_1 [ENDL] if cnt_0 is greater than 0 , subtract 1 from cnt_0 [ENDL] if a is equal to 0 [ENDL] add 1 to cnt_0 [ENDL] if cnt_0 is greater than cnt_max0 , set cnt_max0 is equal to cnt_0 [ENDL] make integer ans = cnt_1 + cnt_max0 [ENDL] display ans [ENDL] cnt1 , cnt0 = int array of size 105 each", "c++": "int main() { cin >> n ; while ( n -- ) cin >> a ; if ( a == 1 ) cnt_1 ++ ; if ( cnt_0 > 0 ) { cnt_0 -- ; } if ( a == 0 ) } cnt_0 ++ ; if ( cnt_0 > cnt_max0 ) cnt_max0 = cnt_0 ; int ans = cnt_1 + cnt_max0 ; } } cout << ans << endl ; int cnt1 [ 105 ] , cnt0 [ 105 ] ; return 0; }"}}
{"translation": {"en": "n = int [ENDL] read n [ENDL] a = int array of size n + 1 [ENDL] for i = 1 to n inclusive read a [ i ] [ENDL] set cnt1 [ 0 ] to 0 [ENDL] set cnt0 [ 0 ] to 0 [ENDL] maxv = int with maxv = - 100 [ENDL] for i = 1 to n inclusive [ENDL] set cnt1 [ i ] to cnt1 [ i - 1 ] + a [ i ] [ENDL] set cnt0 [ i ] to i - cnt1 [ i ] [ENDL] for i = 1 to n inclusive [ENDL] for j = i to n inclusive [ENDL] if ( cnt0 [ j ] - cnt0 [ i - 1 ] ) - ( cnt1 [ j ] - cnt1 [ i - 1 ] ) + cnt1 [ n ] > maxv set maxv to ( cnt0 [ j ] - cnt0 [ i - 1 ] ) - ( cnt1 [ j ] - cnt1 [ i - 1 ] ) + cnt1 [ n ] [ENDL] print maxv [ENDL] n = integer", "c++": "int n ; int main() { cin >> n ; int a [ n + 1 ] ; for ( int i = 1 ; i <= n ; i ++ ) cin >> a [ i ] ; cnt1 [ 0 ] = 0 ; cnt0 [ 0 ] = 0 ; int maxv = - 100 ; for ( int i = 1 ; i <= n ; i ++ ) cnt1 [ i ] = cnt1 [ i - 1 ] + a [ i ] ; cnt0 [ i ] = i - cnt1 [ i ] ; for ( int i = 1 ; i <= n ; i ++ ) } for ( int j = i ; j <= n ; j ++ ) if ( ( cnt0 [ j ] - cnt0 [ i - 1 ] ) - ( cnt1 [ j ] - cnt1 [ i - 1 ] ) + cnt1 [ n ] > maxv ) maxv = ( cnt0 [ j ] - cnt0 [ i - 1 ] ) - ( cnt1 [ j ] - cnt1 [ i - 1 ] ) + cnt1 [ n ] ; cout << maxv << endl ; } } int n ; return 0; }"}}
{"translation": {"en": "read n [ENDL] arr = array of integers of size n [ENDL] set cnt = 0 [ENDL] set def = - 1 [ENDL] for i = 0 to n exclusive [ENDL] read arr [ i ] [ENDL] a , b = integers set a and b = 0 [ENDL] for j = i to 0 inclusive [ENDL] if arr [ j ] = 0 [ENDL] increment a [ENDL] else [ENDL] increment b [ENDL] set d = max of def and a - b [ENDL] if arr [ i ] = 1 increment cnt [ENDL] print cnt + def [ENDL] the 1001th element of array a is equal to 0", "c++": "int main() { cin >> n ; int arr [ n ] ; int cnt = 0 ; int def = - 1 ; for ( int i = 0 ; i < n ; i ++ ) cin >> arr [ i ] ; int a = 0 , b = 0 ; for ( int j = i ; j >= 0 ; j -- ) if ( arr [ j ] == 0 ) a ++ ; else b ++ ; def = max ( def , a - b ) ; if ( arr [ i ] == 1 ) cnt ++ ; } cout << cnt + def << endl ; } int a [ 1001 ] = { 0 } ; return 0; }"}}
{"translation": {"en": "let n , c be integers with c = 0 [ENDL] read n [ENDL] for i = 0 to n exclusive [ENDL] read a [ i ] [ENDL] if a [ i ] is equal to 1 [ENDL] a [ i ] = - 1 [ENDL] increment c by 1 [ENDL] else do the following [ENDL] a [ i ] is equal to 1 [ENDL] let ans , maxx be integers with ans = a [ 0 ] , maxx = a [ 0 ] [ENDL] for i = 1 to n inclusive [ENDL] maxx = maximum of a [ i ] and maxx + a [ i ] [ENDL] ans = maximum of ans and maxx [ENDL] print c + ans and newline [ENDL] let n , a , count1 ( 0 ) , extra0 ( 0 ) , extra0max ( - 1 ) be integers", "c++": "int n , c = 0 ; int main() { cin >> n ; for ( int i = 0 ; i < n ; i ++ ) cin >> a [ i ] ; if ( a [ i ] == 1 ) a [ i ] = - 1 ; c ++ ; else a [ i ] = 1 ; int ans = a [ 0 ] , maxx = a [ 0 ] ; } for ( int i = 1 ; i < n ; i ++ ) maxx = max ( a [ i ] , maxx + a [ i ] ) ; ans = max ( ans , maxx ) ; cout << c + ans << endl ; } int n , a , count1 ( 0 ) , extra0 ( 0 ) , extra0max ( - 1 ) ; }"}}
{"translation": {"en": "read n [ENDL] while n is decremented by 1 [ENDL] read a [ENDL] if a is equal to 1 [ENDL] increment count1 by 1 [ENDL] if extra0 is greater than 0 , decrement extra0 by 1 [ENDL] else do the following [ENDL] increment extra0 by 1 [ENDL] if extra0 is greater than extra0max , extra0max is equal to extra0 [ENDL] print count1 + extra0max and newline [ENDL] create int a [ 105 ] , n , ans , set ans = 0", "c++": "int main() { cin >> n ; while ( n -- ) cin >> a ; if ( a == 1 ) count1 += 1 ; if ( extra0 > 0 ) { extra0 -= 1 ; } else extra0 += 1 ; if ( extra0 > extra0max ) { extra0max = extra0 ; } cout << count1 + extra0max << endl ; } } int a [ 105 ] , n , ans = 0 ; return 0; }"}}
{"translation": {"en": "read n [ENDL] for i = 0 to n exclusive , read a [ i ] [ENDL] for i = 0 to n exclusive [ENDL] for j = 0 to i inclusive [ENDL] v = 0 [ENDL] for k = 0 to n exclusive [ENDL] if k > = j and k < = i [ENDL] set v = v + a [ k ] = 0 [ENDL] else [ENDL] v = v + a [ k ] [ENDL] set ans to max of ans and v [ENDL] print ans and a newline [ENDL] a = int array of size 105", "c++": "int main() { cin >> n ; for ( int i = 0 ; i < n ; i ++ ) cin >> a [ i ] ; for ( int i = 0 ; i < n ; i ++ ) for ( int j = 0 ; j <= i ; j ++ ) int v = 0 ; for ( int k = 0 ; k < n ; k ++ ) if ( k >= j && k <= i ) v += ! a [ k ] ; else v += a [ k ] ; ans = max ( ans , v ) ; cout << ans << \" \\n \" ; } int a [ 105 ] ; return 0; }"}}
{"translation": {"en": "n , ans = int with ans = 0 [ENDL] read n [ENDL] read n values into a [ENDL] for i = 0 to n [ENDL] for j = 0 to i inclusive [ENDL] v = int with v = 0 [ENDL] for k = 0 to n [ENDL] if k > = j and k < = i [ENDL] increment v by not a [ k ] [ENDL] else [ENDL] increment v by a [ k ] [ENDL] set ans to max of ans , v [ENDL] print ans [ENDL] create int n", "c++": "int main() { int n , ans = 0 ; cin >> n ; for ( int i = 0 ; i < n ; ++ i ) cin >> a [ i ] ; for ( int i = 0 ; i < n ; ++ i ) for ( int j = 0 ; j <= i ; j ++ ) int v = 0 ; for ( int k = 0 ; k < n ; k ++ ) if ( k >= j && k <= i ) v += ! a [ k ] ; else v += a [ k ] ; ans = max ( ans , v ) ; cout << ans << endl ; } } int n ; return 0; }"}}
{"translation": {"en": "read n [ENDL] create vector int a ( n ) [ENDL] cnt = 0 [ENDL] for i = 0 to n exclusive [ENDL] read a [ i ] [ENDL] if a [ i ] = 1 [ENDL] a [ i ] = - 1 [ENDL] increment cnt [ENDL] if a [ i ] = 0 , a [ i ] = 1 [ENDL] set gmax = INT_MIN , lmax = 0 [ENDL] for i = 0 to n exclusive [ENDL] set lmax to lmax + a [ i ] [ENDL] set gmax = max ( gmax , lmax ) [ENDL] if lmax < 0 , lmax = 0 [ENDL] print cnt + gmax [ENDL] create ints n , a , count1 ( 0 ) , extra0 ( 0 ) , and extra0max ( - 1 )", "c++": "int main() { cin >> n ; vector < int > a ( n ) ; int cnt = 0 ; for ( int i = 0 ; i < n ; i ++ ) cin >> a [ i ] ; if ( a [ i ] == 1 ) a [ i ] = - 1 ; cnt ++ ; if ( a [ i ] == 0 ) { a [ i ] = 1 ; } } int gmax = INT_MIN , lmax = 0 ; } for ( int i = 0 ; i < n ; i ++ ) lmax += a [ i ] ; gmax = max ( gmax , lmax ) ; if ( lmax < 0 ) { lmax = 0 ; } cout << cnt + gmax << endl ; } int n , a , count1 ( 0 ) , extra0 ( 0 ) , extra0max ( - 1 ) ; }"}}
{"translation": {"en": "read n [ENDL] while n - - is truthy [ENDL] read a [ENDL] if a is equal to 1 [ENDL] add 1 to count1 [ENDL] if extra0 is greater than 0 , subtract 1 from extra0 [ENDL] else do [ENDL] add 1 to extra0 [ENDL] if extra0 is greater than extra0max , set extra0max to extra0 [ENDL] show result of count1 + extra0max [ENDL] declare constant integer N = 1e6 + 7", "c++": "int main() { cin >> n ; while ( n -- ) cin >> a ; if ( a == 1 ) count1 += 1 ; if ( extra0 > 0 ) { extra0 -= 1 ; } else extra0 += 1 ; if ( extra0 > extra0max ) { extra0max = extra0 ; } cout << count1 + extra0max << endl ; } } const int N = 1e6 + 7 ; return 0; }"}}
{"translation": {"en": "declare integer n [ENDL] declare integer cnt = 0 [ENDL] declare integer ans = 0 [ENDL] read n [ENDL] declare integer array a size n [ENDL] for i = 0 to integer casted ( n - 1 ) inclusive [ENDL] read a [ i ] [ENDL] if a [ i ] is true [ENDL] let a [ i ] be - 1 , increment cnt [ENDL] else [ENDL] let a [ i ] be 1 [ENDL] declare integer mx = INT_MIN [ENDL] for i = 0 to integer casted ( n - 1 ) inclusive [ENDL] increment ans by a [ i ] [ENDL] if ans is greater than mx , let mx be ans [ENDL] if ans less than 0 , let ans be 0 [ENDL] print mx + cnt and ' \\ n ' [ENDL] create ints n , a , count1 ( 0 ) , extra0 ( 0 ) , and extra0max ( - 1 )", "c++": "int n ; int main() { int cnt = 0 ; int ans = 0 ; cin >> n ; int a [ n ] ; for ( int i = ( int ) ( 0 ) ; i <= ( int ) ( n - 1 ) ; i ++ ) cin >> a [ i ] ; if ( a [ i ] ) a [ i ] = - 1 , cnt ++ ; else a [ i ] = 1 ; int mx = INT_MIN ; } for ( int i = ( int ) ( 0 ) ; i <= ( int ) ( n - 1 ) ; i ++ ) ans += a [ i ] ; if ( ans > mx ) mx = ans ; if ( ans < 0 ) ans = 0 ; cout << mx + cnt << ' \\n ' ; } int n , a , count1 ( 0 ) , extra0 ( 0 ) , extra0max ( - 1 ) ; }"}}
{"translation": {"en": "read n [ENDL] while n - - is truthy [ENDL] read a [ENDL] if a is equal to 1 [ENDL] add 1 to count1 [ENDL] if extra0 is greater than 0 , set extra0 to extra0 - 1 [ENDL] else do [ENDL] set extra0 to extra0 + 1 [ENDL] if extra0 is greater than extra0max , set extra0max to extra0 [ENDL] display the result of count1 + extra0max [ENDL] let a be an integer of arrays of size 1000", "c++": "int main() { cin >> n ; while ( n -- ) cin >> a ; if ( a == 1 ) count1 += 1 ; if ( extra0 > 0 ) { extra0 -= 1 ; } else extra0 += 1 ; if ( extra0 > extra0max ) { extra0max = extra0 ; } cout << count1 + extra0max << endl ; } } int a [ 1000 ] ; return 0; }"}}
{"translation": {"en": "define function flip with takes in integers n , i , and j as arguments [ENDL] let b be an integer of arrays of size 1000 [ENDL] iterate for n times , set b [ i ] to a [ i ] n times [ENDL] let count be an integer and set its value to 0 [ENDL] for k = i iterate until k is less than or equal to j [ENDL] if b [ k ] is equal to 0 [ENDL] set b [ k ] to 1 [ENDL] or else [ENDL] set b [ k ] to 0 [ENDL] iterate for n times [ENDL] if b [ k ] is equal to 1 , increment count [ENDL] return the value of count from the function [ENDL] let n be an integer [ENDL] read in n [ENDL] read in a [ i ] n times [ENDL] let max be an integer and set its value to - 1 [ENDL] iterate for n times [ENDL] for j = i iterate while j is less than n [ENDL] let count be an integer and set its value to flip ( n , i , j ) [ENDL] if count is greater than max , set max to count [ENDL] print max [ENDL] create ints n , x , one_cnt = 0 , len_max = 0 , and len_cur = 0", "c++": "int flip ( int n , int i , int j ) int b [ 1000 ] ; for ( int i = 0 ; i < n ; i ++ ) b [ i ] = a [ i ] ; int count = 0 ; for ( int k = i ; k <= j ; k ++ ) if ( b [ k ] == 0 ) b [ k ] = 1 ; else b [ k ] = 0 ; for ( int k = 0 ; k < n ; k ++ ) } if ( b [ k ] == 1 ) count ++ ; return count ; } int n ; } int main() { cin >> n ; for ( int i = 0 ; i < n ; i ++ ) cin >> a [ i ] ; int max = - 1 ; for ( int i = 0 ; i < n ; i ++ ) for ( int j = i ; j < n ; j ++ ) int count = flip ( n , i , j ) ; if ( count > max ) max = count ; cout << max << endl ; } } int n , x , one_cnt = 0 , len_max = 0 , len_cur = 0 ; return 0; }"}}
{"translation": {"en": "read n [ENDL] for i = 0 to n exclusive [ENDL] read x [ENDL] if x is equal to 0 [ENDL] if + + len_cur is greater than len_max , set len_max is equal to len_cur [ENDL] else do [ENDL] if - - len_cur is less than 0 , set len_cur to 0 [ENDL] add 1 to one_cnt [ENDL] display ( one_cnt + ( len_max = = 0 ? - 1 : len_max ) ) [ENDL] declare new ints n , x and mx where mx = 0 , and an int array a with size 101", "c++": "int main() { cin >> n ; for ( int i = 0 ; i < n ; ++ i ) cin >> x ; if ( x == 0 ) if ( ++ len_cur > len_max ) len_max = len_cur ; else if ( -- len_cur < 0 ) len_cur = 0 ; one_cnt ++ ; cout << ( one_cnt + ( len_max == 0 ? - 1 : len_max ) ) << endl ; } } int n , a [ 101 ] , x , mx = 0 ; return 0; }"}}
{"translation": {"en": "change a [ 0 ] to 0 [ENDL] read n [ENDL] change i from 1 to n inclusive in a for loop [ENDL] read input to x [ENDL] assign a [ i - 1 ] + x to a [ i ] [ENDL] for integer i = 1 to n inclusive [ENDL] in a for loop , change j from i to n inclusive , assigning the new value = max of a [ n ] + j - i + 1 - 2 * ( a [ j ] - a [ i - 1 ] ) and mx to mx on each iteration [ENDL] print mx [ENDL] declare integer n", "c++": "int main() { a [ 0 ] = 0 ; cin >> n ; for ( int i = 1 ; i <= n ; i ++ ) cin >> x ; a [ i ] = a [ i - 1 ] + x ; for ( int i = 1 ; i <= n ; i ++ ) } for ( int j = i ; j <= n ; j ++ ) mx = max ( a [ n ] + j - i + 1 - 2 * ( a [ j ] - a [ i - 1 ] ) , mx ) ; cout << mx << endl ; int n ; return 0; }"}}
{"translation": {"en": "declare integer array num size 100 [ENDL] declare integer array a size 100 [ENDL] read n [ENDL] declare integer count = 0 [ENDL] for i = 0 to n exclusive [ENDL] read num [ i ] [ENDL] if num [ i ] is 1 [ENDL] let a [ i ] be - 1 [ENDL] increment count [ENDL] else [ENDL] let a [ i ] be 1 [ENDL] declare integer max = - 2 [ENDL] declare integer sum = 0 [ENDL] for i = 0 to n exclusive [ENDL] increment sum by a [ i ] [ENDL] if sum is greater than max , let max be sum [ENDL] if sum is less than 0 , let sum be 0 [ENDL] print max + count and newline [ENDL] let n , k be long integers", "c++": "int main() { int num [ 100 ] ; int a [ 100 ] ; cin >> n ; int count = 0 ; for ( int i = 0 ; i < n ; ++ i ) cin >> num [ i ] ; if ( num [ i ] == 1 ) a [ i ] = - 1 ; ++ count ; else a [ i ] = 1 ; int max = - 2 ; } } int sum = 0 ; for ( int i = 0 ; i < n ; ++ i ) sum += a [ i ] ; if ( sum > max ) { max = sum ; } if ( sum < 0 ) { sum = 0 ; } cout << max + count << endl ; } long long n , k ; return 0; }"}}
{"translation": {"en": "read n , k [ENDL] let t be a long integer with t = n / k [ENDL] if t modulo 2 is true [ENDL] print YES and newline [ENDL] else do the following [ENDL] print NO and newline [ENDL] declare long longs n and m", "c++": "int main() { cin >> n >> k ; long long t = n / k ; if ( t % 2 ) cout << \" YES \" << endl ; else cout << \" NO \" << endl ; long long n , m ; } return 0; }"}}
{"translation": {"en": "read n and m [ENDL] if n / m % 2 ! = 0 [ENDL] print \" YES \\ n \" [ENDL] else [ENDL] print \" NO \\ n \" [ENDL] create long long n , k", "c++": "cin >> n >> m ; int main() { if ( n / m % 2 ) cout << \" YES\\n \" ; else cout << \" NO\\n \" ; long long int n , k ; }"}}
{"translation": {"en": "print n , k [ENDL] if n / k is even [ENDL] print NO [ENDL] else [ENDL] print YES [ENDL] n , k , x = long long", "c++": "int main() { cin >> n >> k ; if ( ( n / k ) % 2 == 0 ) cout << \" NO \" << endl ; else cout << \" YES \" << endl ; long long n , k , x ; return 0; }"}}
{"translation": {"en": "read n then k [ENDL] set x to n / k [ENDL] if x is even [ENDL] print \" NO \" [ENDL] else [ENDL] print \" YES \" [ENDL] n , k = long long", "c++": "int main() { cin >> n >> k ; x = n / k ; if ( x % 2 == 0 ) cout << \" NO \" << endl ; else cout << \" YES \" << endl ; long long n , k ; } return 0; }"}}
{"translation": {"en": "read n , k [ENDL] if n / k is odd [ENDL] print YES [ENDL] else [ENDL] print NO [ENDL] declare long long int variable n", "c++": "int main() { cin >> n >> k ; if ( ( n / k ) % 2 != 0 ) cout << \" YES \" << endl ; else cout << \" NO \" << endl ; long long int n ; return 0; }"}}
{"translation": {"en": "create long long int k [ENDL] read n [ENDL] read input to k [ENDL] if ( n / k ) is odd [ENDL] print \" YES \" [ENDL] else [ENDL] print \" NO \" [ENDL] create long longs n and k", "c++": "int main() { long long int k ; cin >> n ; cin >> k ; if ( ( ( n / k ) % 2 ) == 1 ) cout << \" YES \" << endl ; else cout << \" NO \" << endl ; long long n , k ; } return 0; }"}}
{"translation": {"en": "read n and k [ENDL] if ( n / k ) is even [ENDL] print \" NO \" [ENDL] else [ENDL] print \" YES \" [ENDL] n , k = long long", "c++": "int main() { cin >> n >> k ; if ( ( n / k ) % 2 == 0 ) cout << \" NO \" << endl ; else cout << \" YES \" << endl ; long long n , k ; } return 0; }"}}
{"translation": {"en": "read n , k [ENDL] if the result of n / k ends in a 1 in binary [ENDL] print YES [ENDL] else [ENDL] print NO [ENDL] n , k = long long", "c++": "int main() { cin >> n >> k ; if ( n / k & 1 ) cout << \" YES \" << ' \\n ' ; else cout << \" NO \" << ' \\n ' ; long long n , k ; } return 0; }"}}
{"translation": {"en": "read n , k [ENDL] print YES if the last bit of n / k ends in 1 else print NO [ENDL] n , x = integers", "c++": "int main() { cin >> n >> k ; cout << ( ( n / k ) & 1 ? \" YES \" : \" NO \" ) << ' \\n ' ; long long n , x ; return 0; }"}}
{"translation": {"en": "Read n and x [ENDL] if ( n / x ) modulo 2 is 0 [ENDL] print NO and a new line [ENDL] else do the following [ENDL] print YES and a new line [ENDL] create long longs n and k", "c++": "int main() { cin >> n >> x ; if ( ( n / x ) % 2 == 0 ) cout << \" NO \" << endl ; else cout << \" YES \" << endl ; long long n , k ; }"}}
{"translation": {"en": "read input to n and k [ENDL] if n / k is odd [ENDL] print \" YES \\ n \" [ENDL] else [ENDL] print \" NO \\ n \" [ENDL] n , k = integers", "c++": "int main() { cin >> n >> k ; if ( n / k % 2 != 0 ) cout << \" YES\\n \" ; else cout << \" NO\\n \" ; long long int n , k ; } return 0; }"}}
{"translation": {"en": "Read n and k [ENDL] if ( n / k ) modulo 2 is 0 [ENDL] print NO and a new line [ENDL] else do the following [ENDL] print YES and a new line [ENDL] n , k = integers", "c++": "int main() { cin >> n >> k ; if ( ( n / k ) % 2 == 0 ) cout << \" NO\\n \" ; else cout << \" YES\\n \" ; long long int n , k ; }"}}
{"translation": {"en": "Read n and k [ENDL] th = integer , set to n / k [ENDL] if th is odd [ENDL] print YES and a new line [ENDL] else do the following [ENDL] print NO and a new line [ENDL] let st , cross , t_turn be long integers", "c++": "int main() { cin >> n >> k ; long long th = n / k ; if ( th % 2 == 1 ) cout << \" YES \" << endl ; else cout << \" NO \" << endl ; long long int st , cross , t_turn ; } return 0; }"}}
{"translation": {"en": "read st , cross [ENDL] the value of t_turn is equal to st / cross [ENDL] if not t_turn & 1 [ENDL] print NO and newline [ENDL] else do the following [ENDL] print YES and newline [ENDL] declare long long variables n and k", "c++": "int main() { cin >> st >> cross ; t_turn = st / cross ; if ( ! ( t_turn & 1 ) ) cout << \" NO \" << endl ; else cout << \" YES \" << endl ; long long n , k ; }"}}
{"translation": {"en": "read n and k [ENDL] declare long long variable count = n / k [ENDL] if count is even [ENDL] print \" NO \" [ENDL] else [ENDL] print \" YES \" [ENDL] declare unsigned long long int variables k and n", "c++": "int main() { cin >> n >> k ; long long count = n / k ; if ( count % 2 == 0 ) cout << \" NO \" << endl ; else cout << \" YES \" << endl ; unsigned long long int k , n ; }"}}
{"translation": {"en": "read n and k [ENDL] if ( n / k ) & 1 is not 0 [ENDL] print \" YES \" [ENDL] else [ENDL] print \" NO \" [ENDL] create long long variables n and k", "c++": "int main() { cin >> n >> k ; if ( ( n / k ) & 1 ) cout << \" YES \" << endl ; else cout << \" NO \" << endl ; long long n , k ; return 0; }"}}
{"translation": {"en": "read n and k [ENDL] print the result of ( ( n / k ) & 1 ? \" YES \" : \" NO \" ) [ENDL] n , k , x = long long", "c++": "int main() { cin >> n >> k ; cout << ( ( n / k ) & 1 ? \" YES \" : \" NO \" ) << ' \\n ' ; long long n , k , x ; return 0; }"}}
{"translation": {"en": "read n then k [ENDL] set x to n / k [ENDL] if x is even [ENDL] print \" NO \" [ENDL] else [ENDL] print \" YES \" [ENDL] n , k , s = long long int", "c++": "cin >> n >> k ; int main() { x = n / k ; if ( x % 2 == 0 ) cout << \" NO \" << endl ; else cout << \" YES \" << endl ; long long int n , k , s ; } return 0; }"}}
{"translation": {"en": "while read n , k [ENDL] s = n / k [ENDL] if s is even [ENDL] print \" NO \" [ENDL] else [ENDL] print \" YES \" [ENDL] create long longs n , k and x", "c++": "int main() { while ( cin >> n >> k ) s = n / k ; if ( s % 2 == 0 ) cout << \" NO \" << endl ; else cout << \" YES \" << endl ; long long n , k , x ; } return 0; }"}}
{"translation": {"en": "read input to n and k [ENDL] assign n / k to x [ENDL] if x is even [ENDL] print \" NO \" [ENDL] else [ENDL] print \" YES \" [ENDL] create long longs n , k", "c++": "int main() { cin >> n >> k ; x = n / k ; if ( x % 2 == 0 ) cout << \" NO \" << endl ; else cout << \" YES \" << endl ; long long n , k ; } return 0; }"}}
{"translation": {"en": "read n read k [ENDL] if ( n / k ) % 2 is 0 [ENDL] print \" NO \" print newline [ENDL] else [ENDL] print \" YES \" print newline [ENDL] n , k , x = integers", "c++": "int main() { cin >> n >> k ; if ( ( n / k ) % 2 == 0 ) cout << \" NO \" << endl ; else cout << \" YES \" << endl ; long long n , k , x ; } }"}}
{"translation": {"en": "Read n and k [ENDL] set x to n / k [ENDL] if x is even [ENDL] print NO and a new line [ENDL] else do the following [ENDL] print YES and a new line [ENDL] declare long longs n and m", "c++": "cin >> n >> k ; int main() { x = n / k ; if ( x % 2 == 0 ) cout << \" NO \" << endl ; else cout << \" YES \" << endl ; long long n , m ; } return 0; }"}}
{"translation": {"en": "read n and m [ENDL] if n / m is odd [ENDL] print \" YES \\ n \" [ENDL] else [ENDL] print \" NO \\ n \" [ENDL] declare READ with strings INPUT , OUTPUT with INPUT default \" NO \" , OUTPUT default \" NO \" as arguments , returning void", "c++": "int main() { cin >> n >> m ; if ( ( n / m ) % 2 == 1 ) cout << \" YES\\n \" ; else cout << \" NO\\n \" ; void READ ( string INPUT = \" NO \" , string OUTPUT = \" NO \" ) return 0; }"}}
{"translation": {"en": "if INPUT is not \" NO \" , resuse stream stdin to open c string of INPUT in read mode [ENDL] if OUTPUT is not \" NO \" , reuse stream stdout to open c string of OUTPUT in write mode [ENDL] create long longs n , k [ENDL] read n read k [ENDL] print \" YES \" if ( n / k ) % 2 is true , else \" NO \" , print \" \\ n \" [ENDL] n , k = integers", "c++": "if ( INPUT != \" NO \" ) freopen ( INPUT . c_str ( ) , \" r \" , stdin ) ; if ( OUTPUT != \" NO \" ) freopen ( OUTPUT . c_str ( ) , \" w \" , stdout ) ; long long n , k ; } int main() { cin >> n >> k ; cout << ( ( n / k ) % 2 ? \" YES \" : \" NO \" ) << \" \\n \" ; long long int n , k ; return 0; }"}}
{"translation": {"en": "Read n and k [ENDL] if ( n / k ) modulo 2 is 0 [ENDL] print NO and a new line [ENDL] else do the following [ENDL] print YES and a new line [ENDL] create long long integers n , k , m", "c++": "int main() { cin >> n >> k ; if ( ( n / k ) % 2 == 0 ) cout << \" NO \" << endl ; else cout << \" YES \" << endl ; long long int n , k , m ; }"}}
{"translation": {"en": "read n read m [ENDL] set m to 2 * k [ENDL] if n % m is greater than or equal to k [ENDL] print \" YES \" print newline [ENDL] else [ENDL] print \" NO \" print newline [ENDL] n , k = integers", "c++": "int main() { cin >> n >> k ; m = 2 * k ; if ( n % m >= k ) cout << \" YES \" << endl ; else cout << \" NO \" << endl ; long long n , k ; } }"}}
{"translation": {"en": "Read n and k [ENDL] if ( n / k ) modulo 2 is 0 [ENDL] print NO and a new line [ENDL] else do the following [ENDL] print YES and a new line [ENDL] declare long longs n and k", "c++": "int main() { cin >> n >> k ; if ( ( n / k ) % 2 == 0 ) cout << \" NO\\n \" ; else cout << \" YES\\n \" ; long long n , k ; return 0; }"}}
{"translation": {"en": "read n and k [ENDL] print \" NO \\ n \" if ( ( ( n / k ) & 1LL ) = = 0 or \" YES \\ n \" otherwise [ENDL] define integers n , k", "c++": "int main() { cin >> n >> k ; cout << ( ( ( n / k ) & 1LL ) == 0 ? \" NO\\n \" : \" YES\\n \" ) ; long long int n , k ; return 0; }"}}
{"translation": {"en": "read n , k [ENDL] define integer h [ENDL] set h to quotient of n , k [ENDL] if h is even [ENDL] print \" NO \" and a newline [ENDL] else [ENDL] print \" YES \" and newline [ENDL] in function solve", "c++": "int main() { cin >> n >> k ; long long int h ; h = n / k ; if ( h % 2 == 0 ) cout << \" NO \" << endl ; else cout << \" YES \" << endl ; void solve ( ) } }"}}
{"translation": {"en": "n , k = long long int [ENDL] read n then k [ENDL] pre = long long int with pre = n / k [ENDL] if pre is not even [ENDL] print \" YES \" [ENDL] else [ENDL] print \" NO \" [ENDL] t = long long int with t = 1 [ENDL] loop t times call solve [ENDL] create long long n and k", "c++": "long long int n , k ; cin >> n >> k ; long long int pre = n / k ; if ( pre % 2 != 0 ) cout << \" YES \" << endl ; else cout << \" NO \" << endl ; long long int t = 1 ; } } int main() { while ( t -- ) { solve ( ) ; } long long n , k ; return 0; }"}}
{"translation": {"en": "read n , k [ENDL] if n / k is even [ENDL] print NO [ENDL] else [ENDL] print YES and a newline [ENDL] create constant integer N = 1e5 + 10 and INF = 1e9 + 7", "c++": "int main() { cin >> n >> k ; if ( ( n / k ) % 2 == 0 ) cout << \" NO \" << endl ; else cout << \" YES \" << endl ; const int N = 1e5 + 10 , INF = 1e9 + 7 ; } return 0; }"}}
{"translation": {"en": "create long long integers n and k [ENDL] read n and k [ENDL] print \" YES \" if ( n / k ) % 2 is true or \" NO \" if not [ENDL] create unsigned long longs n , k and res", "c++": "long long n , k ; int main() { cin >> n >> k ; cout << ( ( n / k ) % 2 ? \" YES \" : \" NO \" ) << ' \\n ' ; unsigned long long n , k , res ; return 0; }"}}
{"translation": {"en": "read n and k [ENDL] assign n / k to res [ENDL] if res & 1 = 1 [ENDL] print \" YES \\ n \" [ENDL] else [ENDL] print \" NO \\ n \" [ENDL] declare long long variables n , k and x", "c++": "int main() { cin >> n >> k ; res = n / k ; if ( res & 1 ) cout << \" YES\\n \" ; else cout << \" NO\\n \" ; long long n , k , x ; return 0; }"}}
{"translation": {"en": "read n and k [ENDL] set x to n / k [ENDL] if x is even [ENDL] print \" NO \" [ENDL] else [ENDL] print \" YES \" [ENDL] n , k = integers", "c++": "cin >> n >> k ; int main() { x = n / k ; if ( x % 2 == 0 ) cout << \" NO \" << endl ; else cout << \" YES \" << endl ; long long n , k ; } return 0; }"}}
{"translation": {"en": "Read n and k [ENDL] print YES if n / k bitwise and 1 is true , if ok is false print NO and a new line [ENDL] declare long long int variables x , a and b", "c++": "int main() { cin >> n >> k ; puts ( ( n / k ) & 1 ? \" YES \" : \" NO \" ) ; long long int x , a , b ; }"}}
{"translation": {"en": "read input to a and b [ENDL] change x to a / b [ENDL] if x is even [ENDL] print \" NO \" [ENDL] else [ENDL] print \" YES \" [ENDL] create long longs n and m", "c++": "int main() { cin >> a >> b ; x = a / b ; if ( x % 2 == 0 ) cout << \" NO \" << endl ; else cout << \" YES \" << endl ; long long n , m ; } return 0; }"}}
{"translation": {"en": "read n and m [ENDL] if n / m % 2 is true [ENDL] print \" YES \\ n \" [ENDL] else [ENDL] print \" NO \\ n \" [ENDL] create long long n , k", "c++": "cin >> n >> m ; int main() { if ( n / m % 2 ) cout << \" YES\\n \" ; else cout << \" NO\\n \" ; long long n , k ; }"}}
{"translation": {"en": "print n , k [ENDL] set turnsDone = n / k [ENDL] assign n mod k to remaining [ENDL] if turnsDone mod 2 = 1 [ENDL] print YES and a newline [ENDL] else [ENDL] print NO and a newline + [ENDL] create long longs n , k", "c++": "int main() { cin >> n >> k ; long long turnsDone = n / k ; int remaining = n % k ; if ( turnsDone % 2 == 1 ) cout << \" YES\\n \" ; else cout << \" NO\\n \" ; long long n , k ; return 0; }"}}
{"translation": {"en": "read n read k [ENDL] if ( n / k ) % 2 is not 0 [ENDL] print \" YES \" print newline [ENDL] else [ENDL] print \" NO \" print newline [ENDL] let long long ints n and k", "c++": "int main() { cin >> n >> k ; if ( ( n / k ) % 2 != 0 ) cout << \" YES \" << endl ; else cout << \" NO \" << endl ; long long n , k ; return 0; }"}}
{"translation": {"en": "read n and k [ENDL] if n / k modulo 2 is not equal to 0 [ENDL] print \" YES \\ n \" [ENDL] else [ENDL] print \" NO \\ n \" [ENDL] create long longs n , m , green , blue , yellow , foo , foobar", "c++": "int main() { cin >> n >> k ; if ( n / k % 2 != 0 ) cout << \" YES\\n \" ; else cout << \" NO\\n \" ; long long n , m , green , blue , yellow , foo , foobar ; } return 0; }"}}
{"translation": {"en": "read n read m read yellow read green read blue [ENDL] set foobar to ( blue * 3 ) + green [ENDL] set foo to ( yellow * 2 ) + green [ENDL] print maximum of ( 0LL and foobar - m ) + maximum of ( 0LL and foo - n ) print newline [ENDL] create long longs yc , bc , yb , gb , bb", "c++": "int main() { cin >> n >> m >> yellow >> green >> blue ; foobar = ( blue * 3 ) + ( green ) ; foo = ( yellow * 2 ) + ( green ) ; cout << max ( 0LL , foobar - m ) + max ( 0LL , foo - n ) << endl ; long long yc , bc , yb , gb , bb ; }"}}
{"translation": {"en": "read yc read bc [ENDL] read yb read gb read bb [ENDL] create long long yelo , blu [ENDL] set yelo to yb * 2 + gb [ENDL] set blu to 3 * bb + gb [ENDL] set yelo to yelo - yc [ENDL] set blu to blu - bc [ENDL] if yelo is greater than or equal to 0 and blu is greater than or equal to 0 [ENDL] print yelo + blu print newline [ENDL] else if yelo is less than 0 and blu is greater than or equal to 0 [ENDL] print blu print newline [ENDL] else if yelo is greater than or equal to 0 and blu is less than 0 [ENDL] print yelo print newline [ENDL] else [ENDL] print 0 print newline [ENDL] create long long integers y , b , ye , gr , bl , a , c , ans with ans = 0", "c++": "int main() { cin >> yc >> bc ; cin >> yb >> gb >> bb ; long long yelo , blu ; yelo = yb * 2 + gb ; blu = 3 * bb + gb ; yelo = yelo - yc ; blu = blu - bc ; if ( yelo >= 0 && blu >= 0 ) cout << yelo + blu << endl ; else if ( yelo < 0 && blu >= 0 ) cout << blu << endl ; else if ( yelo >= 0 && blu < 0 ) cout << yelo << endl ; else cout << 0 << endl ; long long int y , b , ye , gr , bl , a , c , ans = 0 ; } return 0; }"}}
{"translation": {"en": "read y read b read ye read gr read bl [ENDL] set a to ( 2 * ye ) + gr [ENDL] set c to ( 3 * bl ) + gr [ENDL] if y - a is less than 0 , increment ans by a - y [ENDL] if b - c is less than 0 , increment ans by c - b [ENDL] print ans print newline [ENDL] set a , b = 0 as large integer", "c++": "int main() { cin >> y >> b >> ye >> gr >> bl ; a = ( 2 * ye ) + gr ; c = ( 3 * bl ) + gr ; if ( y - a < 0 ) { ans += a - y ; } if ( b - c < 0 ) { ans += c - b ; } cout << ans << endl ; long long int a = 0 , b = 0 ; }"}}
{"translation": {"en": "read a and b [ENDL] set x , y , z = 0 as large integer [ENDL] read x y x [ENDL] set Y , B , t = 0 as large integer [ENDL] set Y = ( 2 * x ) + ( 1 * y ) [ENDL] set B = ( 1 * Y ) + ( 3 * z ) [ENDL] if Y > a [ENDL] Y = Y - a [ENDL] else [ENDL] Y = 0 [ENDL] if B > b [ENDL] B = B - b [ENDL] else [ENDL] B = 0 [ENDL] t = Y + B [ENDL] print t [ENDL] let a , b , x , y , z = long long", "c++": "int main() { cin >> a >> b ; long long int x = 0 , y = 0 , z = 0 ; cin >> x >> y >> z ; long long int Y = 0 , B = 0 , t = 0 ; Y = ( 2 * x ) + ( 1 * y ) ; B = ( 1 * y ) + ( 3 * z ) ; if ( Y > a ) Y = Y - a ; else Y = 0 ; if ( B > b ) } B = B - b ; else B = 0 ; t = Y + B ; } cout << t << endl ; long long a , b , x , y , z ; return 0; }"}}
{"translation": {"en": "read a , b , x , y , z [ENDL] let yellow = long long = 2 * x + y [ENDL] let blue = long long = y + 3 * z [ENDL] res = long long = 0 [ENDL] if a is less than yellow , res = res + yellow - a [ENDL] if b is less than blue , res = res + blue - b [ENDL] print res [ENDL] declare long long integer variables n , t , m and k", "c++": "int main() { cin >> a >> b >> x >> y >> z ; long long yellow = 2 * x + y ; long long blue = y + 3 * z ; long long res = 0 ; if ( a < yellow ) res += ( yellow - a ) ; if ( b < blue ) res += ( blue - b ) ; cout << res << \" \\n \" ; long long int n , t , m , k ; return 0; }"}}
{"translation": {"en": "declare long long integer variables x , y and z [ENDL] declare long long integer variables a and b [ENDL] read a and b [ENDL] read x , y and z [ENDL] declare long long integer variables yn and bn [ENDL] yn = ( x * 2 + y ) [ENDL] declare long long integer variable dif = yn - a [ENDL] declare long long integer need = 0 [ENDL] if dif > = 0 , add dif to need [ENDL] bn = ( y + z * 3 ) [ENDL] assign value of ( bn - b ) to dif [ENDL] if dif > = 0 , add dif to need [ENDL] print need [ENDL] let N be a constant integer set to 1e6 + 10", "c++": "int main() { long long int x , y , z ; long long int a , b ; cin >> a >> b ; cin >> x >> y >> z ; long long int yn , bn ; yn = ( x * 2 + y ) ; long long int dif = yn - a ; long long int need = 0 ; if ( dif >= 0 ) need += dif ; bn = ( y + z * 3 ) ; dif = ( bn - b ) ; if ( dif >= 0 ) need += dif ; cout << need << endl ; const int N = 1e6 + 10 ; return 0; }"}}
{"translation": {"en": "let mod be a constant integer set to 998244353 [ENDL] a , b , x , y , z , q , p , r = long longs [ENDL] read a , b , x , y and z [ENDL] increment q by 2 * x [ENDL] increment q by y [ENDL] increment p by y [ENDL] increment p by 3 * z [ENDL] print max ( r , q - a ) + max ( r , p - b ) [ENDL] let n , m , a , b , c be long integers", "c++": "const int mod = 998244353 ; long long a , b , x , y , z , q , p , r ; cin >> a >> b >> x >> y >> z ; int main() { q += 2 * x ; q += y ; p += y ; p += 3 * z ; cout << max ( r , q - a ) + max ( r , p - b ) << endl ; long long n , m , a , b , c ; }"}}
{"translation": {"en": "let Yellow , Blue , ans be long integers [ENDL] read n , m , a , b , c [ENDL] Yellow is equal to a * 2 + b [ENDL] Blue is equal to b + c * 3 [ENDL] if ( Yellow is greater than n ) , ans = ans + Yellow - n [ENDL] if ( Blue is greater than m ) , ans = ans + Blue - m [ENDL] print ans and newline [ENDL] create long long integers a , b , x , y , z , c , d , sum", "c++": "long long Yellow , Blue , ans ; cin >> n >> m >> a >> b >> c ; int main() { Yellow = a * 2 + b ; Blue = b + c * 3 ; if ( Yellow > n ) ans += Yellow - n ; if ( Blue > m ) ans += Blue - m ; cout << ans << endl ; long long int a , b , x , y , z , c , d , sum ; return 0; }"}}
{"translation": {"en": "read a read b [ENDL] read x read y read z [ENDL] set x to x * 2 + y [ENDL] set z to z * 3 + y [ENDL] if a is greater than x [ENDL] set c to 0 [ENDL] else [ENDL] set c to x - a [ENDL] if b is greater than z [ENDL] set d to 0 [ENDL] else [ENDL] set d to z - b [ENDL] print c + d print newline [ENDL] create long long a , b , x , y , z , na , nb , zer with zer = 0", "c++": "int main() { cin >> a >> b ; cin >> x >> y >> z ; x = x * 2 + y ; z = z * 3 + y ; if ( a > x ) c = 0 ; else c = x - a ; if ( b > z ) d = 0 ; else d = z - b ; cout << c + d << endl ; long long a , b , x , y , z , na , nb , zer = 0 ; return 0; }"}}
{"translation": {"en": "read a read b read x read y read z [ENDL] set na to x * 2 + y [ENDL] set nb to z * 3 + y [ENDL] print maximum of ( maximum of ( na - a and zer ) + maximum of ( nb - b and zer ) and zer ) print ' \\ n ' [ENDL] declare long longs n and m", "c++": "cin >> a >> b >> x >> y >> z ; int main() { na = x * 2 + y ; nb = z * 3 + y ; cout << max ( max ( na - a , zer ) + max ( nb - b , zer ) , zer ) << ' \\n ' ; long long n , m ; }"}}
{"translation": {"en": "read n and m [ENDL] let a , b and c be long longs [ENDL] read a , b and c [ENDL] create long long ans with value = max of 0 and b + ( 2 * a ) - n [ENDL] increase ans by max of 0 and b + ( 3 * c ) - m [ENDL] print ans and a new line [ENDL] create long longs a , b", "c++": "int main() { cin >> n >> m ; long long a , b , c ; cin >> a >> b >> c ; long long ans = max ( ( long long ) 0 , b + ( 2 * a ) - n ) ; ans += max ( ( long long ) 0 , b + ( 3 * c ) - m ) ; cout << ans << endl ; long long a , b ; }"}}
{"translation": {"en": "read a read b [ENDL] create long longs x , y , z [ENDL] read x read y read z [ENDL] create long long ans with ans = 0 [ENDL] if y is greater than a [ENDL] increment ans by y - a [ENDL] set a to 0 [ENDL] else [ENDL] decrement a by y [ENDL] if y is greater than b [ENDL] increment ans by y - b [ENDL] set b to 0 [ENDL] else [ENDL] decrement b by y [ENDL] if x * 2 is greater than a , increment ans by x * 2 - a [ENDL] if x * 3 is greater than b , increment ans by z * 3 - b [ENDL] print ans print newline [ENDL] create long longs a , b", "c++": "int main() { cin >> a >> b ; long long x , y , z ; cin >> x >> y >> z ; long long ans = 0 ; if ( y > a ) ans += y - a ; a = 0 ; else a -= y ; if ( y > b ) } ans += y - b ; b = 0 ; else b -= y ; if ( x * 2 > a ) ans += x * 2 - a ; } if ( z * 3 > b ) ans += z * 3 - b ; cout << ans << endl ; long long a , b ; }"}}
{"translation": {"en": "read a read b [ENDL] create long longs x , y , z [ENDL] read x read y read z [ENDL] create long longs reala , realb with reala = 2 * x + y , realb = y + 3 * z [ENDL] print maximum of ( reala - a and 0ll ) + maximum of ( realb - b and 0ll ) print newline [ENDL] create long longs a , b and ans , with ans = 0", "c++": "int main() { cin >> a >> b ; long long x , y , z ; cin >> x >> y >> z ; long long reala = 2 * x + y , realb = y + 3 * z ; cout << max ( reala - a , 0ll ) + max ( realb - b , 0ll ) << endl ; long long a , b , ans = 0 ; }"}}
{"translation": {"en": "read a and b [ENDL] let a1 , a2 and a3 be long longs [ENDL] read a1 , a2 and a3 [ENDL] decrease a by a1 * 2 [ENDL] decrease a by a2 [ENDL] decrease b by a2 [ENDL] decrease b by 3 * a3 [ENDL] if a is less than 0 , increase ans by a [ENDL] if b is less than 0 , increase ans by b [ENDL] print negative ans and a new line [ENDL] ; [ENDL] n , m , a , b and c are long longs", "c++": "int main() { cin >> a >> b ; long long a1 , a2 , a3 ; cin >> a1 >> a2 >> a3 ; a -= a1 * 2 ; a -= a2 ; b -= a2 ; b -= 3 * a3 ; if ( a < 0 ) ans += a ; if ( b < 0 ) ans += b ; cout << - ans << endl ; ; long long n , m , a , b , c ; }"}}
{"translation": {"en": "declare long longs Yellow , Blue and ans [ENDL] read n , m , a , b and c [ENDL] Yellow = a * 2 + b [ENDL] Blue = b + c * 3 [ENDL] if Yellow > = n and Blue > = m [ENDL] increase ans by Yellow + Blue - n - m [ENDL] else if Yellow < n and Blue is greater than m [ENDL] increase ans by Blue - m [ENDL] else if Yellow > n and Blue is less than m [ENDL] increase ans by Yellow - n [ENDL] print ans and a new line [ENDL] create long longs i , c , a , b , x , y , z , with c = 0", "c++": "long long Yellow , Blue , ans ; cin >> n >> m >> a >> b >> c ; int main() { Yellow = a * 2 + b ; Blue = b + c * 3 ; if ( Yellow >= n && Blue >= m ) ans += Yellow + Blue - n - m ; else if ( Yellow < n && Blue > m ) ans += Blue - m ; else if ( Yellow > n && Blue < m ) ans += Yellow - n ; cout << ans << endl ; long long i , c = 0 , a , b , x , y , z ; return 0; }"}}
{"translation": {"en": "read a read b read x read y read z [ENDL] decrement a by x * 2 [ENDL] decrement a by y [ENDL] decrement b by y [ENDL] decrement b by 3 * z [ENDL] if a is less than 0 , increment c by absolute value of a [ENDL] if b is less than 0 , increment c by absolute value of b [ENDL] print c print newline [ENDL] a , b , x , y and z are long longs", "c++": "int main() { cin >> a >> b >> x >> y >> z ; a -= x * 2 ; a -= y ; b -= y ; b -= 3 * z ; if ( a < 0 ) c += abs ( a ) ; if ( b < 0 ) c += abs ( b ) ; cout << c << endl ; long long a , b , x , y , z ; return 0; }"}}
{"translation": {"en": "read a , b , x , y and z [ENDL] create long long ans = 0 [ENDL] if y < = a [ENDL] decrease a by y [ENDL] else [ENDL] increase ans by y - a [ENDL] assign value of 0 to a [ENDL] if y < = b [ENDL] decrease b by y [ENDL] else [ENDL] increase ans by y - b [ENDL] set value of b to 0 [ENDL] if x * 2 < = a [ENDL] decrease a by x * 2 [ENDL] else [ENDL] increase ans by 2 * x - a [ENDL] a = 0 [ENDL] if z * 3 < = b [ENDL] decrease b by z * 3 [ENDL] else [ENDL] increase ans by z * 3 - b [ENDL] set value of b to 0 [ENDL] print ans and a new line [ENDL] create long long integers n , m", "c++": "int main() { cin >> a >> b >> x >> y >> z ; long long ans = 0 ; if ( y <= a ) a -= y ; else ans += ( y - a ) ; a = 0 ; if ( y <= b ) } b -= y ; else ans += ( y - b ) ; b = 0 ; if ( x * 2 <= a ) } a -= x * 2 ; else ans += ( 2 * x - a ) ; a = 0 ; if ( z * 3 <= b ) } b -= z * 3 ; else ans += ( z * 3 - b ) ; b = 0 ; cout << ans << endl ; } long long int n , m ; }"}}
{"translation": {"en": "read n read m [ENDL] create long long integers x , y , z [ENDL] read x read y read z [ENDL] create long long integer ans with ans = 0 [ENDL] if n is greater than or equal to 2 * x [ENDL] set n to n - 2 * x [ENDL] else [ENDL] increment ans by 2 * x - n [ENDL] set n to 0 [ENDL] if m is greater than or equal to 3 * z [ENDL] set m to m - 3 * z [ENDL] else [ENDL] increment ans by 3 * z - m [ENDL] set m to 0 [ENDL] if n is less than y , increment ans by y - n [ENDL] if m is less than y , increment ans by y - m [ENDL] print ans print newline [ENDL] create long longs a , b , x , y , z", "c++": "int main() { cin >> n >> m ; long long int x , y , z ; cin >> x >> y >> z ; long long int ans = 0 ; if ( n >= 2 * x ) n = n - 2 * x ; else ans += 2 * x - n ; n = 0 ; if ( m >= 3 * z ) } m = m - 3 * z ; else ans += 3 * z - m ; m = 0 ; if ( n < y ) { ans += y - n ; } } if ( m < y ) { ans += y - m ; } cout << ans << endl ; long long a , b , x , y , z ; }"}}
{"translation": {"en": "read a read b read x read y read z [ENDL] create long long ans with ans = 0 [ENDL] create long longs sy , sb [ENDL] set sy to 2 * x + y - a [ENDL] if sy is less than 0 , set sy to 0 [ENDL] set sb to 3 * z + y - b [ENDL] if sb is less than 0 , set sb to 0 [ENDL] increment ans by sy + sb [ENDL] print ans print ' \\ n ' [ENDL] let i , c , a , v , x , y , z be long long with c = 0", "c++": "int main() { cin >> a >> b >> x >> y >> z ; long long ans = 0 ; long long sy , sb ; sy = 2 * x + y - a ; if ( sy < 0 ) { sy = 0 ; } sb = 3 * z + y - b ; if ( sb < 0 ) { sb = 0 ; } ans += sy + sb ; cout << ans << ' \\n ' ; long long i , c = 0 , a , b , x , y , z ; return 0; }"}}
{"translation": {"en": "read a , b , x , y and z [ENDL] let a = a - x * 2 [ENDL] let a = a - y [ENDL] let b = b - y [ENDL] let b = b - 3 * z [ENDL] if a is less than 0 set c = c + absolute value of a [ENDL] if b is less than 0 set c = c + absolute value of b [ENDL] print c and new line [ENDL] a , b , ans = long longs", "c++": "int main() { cin >> a >> b >> x >> y >> z ; a -= x * 2 ; a -= y ; b -= y ; b -= 3 * z ; if ( a < 0 ) c += abs ( a ) ; if ( b < 0 ) c += abs ( b ) ; cout << c << endl ; long long int a , b , ans ; return 0; }"}}
{"translation": {"en": "read a and b [ENDL] x , y , z = long longs [ENDL] read x , y and z [ENDL] ye = long long integer set to ( 2 * x ) + y [ENDL] bl = long long integer set to y + ( 3 * z ) [ENDL] n = long long integer set to ye - a [ENDL] m = long long integer set to ( bl - b [ENDL] if n is less than 0 set n to 0 [ENDL] if m is less than 0 set m to 0 [ENDL] set ans to n + m [ENDL] print ans [ENDL] declare long long variables a , b , c , d , e and ans , with ans = 0", "c++": "int main() { cin >> a >> b ; long long int x , y , z ; cin >> x >> y >> z ; long long int ye = ( 2 * x ) + y ; long long int bl = y + ( 3 * z ) ; long long int n = ye - a ; long long int m = bl - b ; if ( n < 0 ) { n = 0 ; } if ( m < 0 ) { m = 0 ; } ans = n + m ; cout << ans << endl ; long long a , b , c , d , e , ans = 0 ; return 0; }"}}
{"translation": {"en": "read a , b , c , d and e [ENDL] if c * 2 + d - a is greater than 0 , add ( c * 2 + d ) - a to ans [ENDL] if d + e * 3 - b is greater than 0 , add ( d + e * 3 ) - b to ans [ENDL] print ans and a new line [ENDL] A , B = integers", "c++": "int main() { cin >> a >> b >> c >> d >> e ; if ( c * 2 + d - a > 0 ) ans += ( c * 2 + d ) - a ; if ( d + e * 3 - b > 0 ) ans += ( d + e * 3 ) - b ; cout << ans << endl ; long long A , B ; return 0; }"}}
{"translation": {"en": "x , y , z = integers [ENDL] Read A and B [ENDL] Read x , y , z [ENDL] yello , green , bule = integers and all set to 0 [ENDL] set yello to x * 2 + y [ENDL] set bule to z * 3 + y [ENDL] set sum1 to yello - A [ENDL] set sum2 to bule - B [ENDL] if sum1 is less than 0 , then set sum1 to 0 [ENDL] if sum2 is less than 0 , then set sum2 to 0 [ENDL] print sum1 + sum2 and a new line [ENDL] declar longs A , B , x , y , z , and e to be zero", "c++": "int main() { long long x , y , z ; cin >> A >> B ; cin >> x >> y >> z ; long long yello = 0 , green = 0 , bule = 0 ; yello = x * 2 + y ; bule = z * 3 + y ; long long sum1 = yello - A ; long long sum2 = bule - B ; if ( sum1 < 0 ) sum1 = 0 ; if ( sum2 < 0 ) sum2 = 0 ; cout << sum1 + sum2 << endl ; long long A , B , x , y , z , a = 0 ; }"}}
{"translation": {"en": "input A , B , x , y , and z [ENDL] if A is less than double x plus y , increment a by x * 2 + y - A [ENDL] if B is less than y plus z times 3 , increment a by y + 3 * z - B [ENDL] print a and endline [ENDL] create long longs n , m , a , b , c , ans1 , ans2 and sum , with ans1 , ans2 and sum = 0", "c++": "int main() { cin >> A >> B >> x >> y >> z ; if ( A < ( x * 2 + y ) ) { a += ( ( x * 2 ) + y - A ) ; } if ( B < ( y + z * 3 ) ) { a += ( y + ( z * 3 ) - B ) ; } cout << a << endl ; long long n , m , a , b , c , ans1 = 0 , ans2 = 0 , sum = 0 ; }"}}
{"translation": {"en": "read n and m [ENDL] read a , b and c [ENDL] ans1 = a * 2 + b * 1 [ENDL] ans2 = b * 1 + c * 3 [ENDL] sum = ans1 - n if ans1 > n , or 0 if it is not [ENDL] increase sum by ans2 - m if ans2 > m [ENDL] print sum and a new line [ENDL] create constant integer N with N = 1 bitshift left 20", "c++": "int main() { cin >> n >> m ; cin >> a >> b >> c ; ans1 = a * 2 + b * 1 ; ans2 = b * 1 + c * 3 ; sum = ans1 > n ? ans1 - n : 0 ; sum += ans2 > m ? ans2 - m : 0 ; cout << sum << endl ; const int N = 1 << 20 ; return 0; }"}}
{"translation": {"en": "create long longs a , b [ENDL] read a read b [ENDL] create long longs ye , bl , g [ENDL] read ye read g read bl [ENDL] create long long y1 with y1 = 2 * ye [ENDL] create long long y2 with y2 = g [ENDL] create long long b1 with b1 = g [ENDL] create long long b2 with b2 = 3 * bl [ENDL] create long longs ans1 , ans2 [ENDL] if a is greater than or equal to y1 + y2 [ENDL] set ans1 to 0 [ENDL] else [ENDL] set ans1 to absolute value of ( a - ( y1 + y2 ) ) [ENDL] if b is greater than b1 + b2 [ENDL] set ans2 to 0 [ENDL] else [ENDL] set ans2 to absolute value of ( b - ( b1 + b2 ) ) [ENDL] print ans1 + ans2 print newline [ENDL] create long longs a , b , x , y , z , q , w , with q = 0 , w = 0", "c++": "long long a , b ; int main() { cin >> a >> b ; long long ye , bl , g ; cin >> ye >> g >> bl ; long long y1 = 2 * ye ; long long y2 = g ; long long b1 = g ; long long b2 = 3 * bl ; long long ans1 , ans2 ; if ( a >= y1 + y2 ) ans1 = 0 ; else ans1 = abs ( a - ( y1 + y2 ) ) ; if ( b > b1 + b2 ) ans2 = 0 ; else ans2 = abs ( b - ( b1 + b2 ) ) ; cout << ans1 + ans2 << endl ; long long a , b , x , y , z , q = 0 , w = 0 ; }"}}
{"translation": {"en": "read a read b [ENDL] read x read y read z [ENDL] set q to 2 * x + y [ENDL] set w to y + 3 * z [ENDL] create long long ans with ans = 0 [ENDL] if q - a is greater than 0 , set ans to q - a [ENDL] if w - b is greater than 0 , increment ans by w - b [ENDL] print ans print ' \\ n ' [ENDL] let const int maxn = 1e5 + 10", "c++": "int main() { cin >> a >> b ; cin >> x >> y >> z ; q = 2 * x + y ; w = y + 3 * z ; long long ans = 0 ; if ( ( q - a ) > 0 ) ans = q - a ; if ( ( w - b ) > 0 ) ans += ( w - b ) ; cout << ans << ' \\n ' ; const int maxn = 1e5 + 10 ; }"}}
{"translation": {"en": "create ints a , b , c , and n [ENDL] while cin > > a > > b > > c > > n is truthy [ENDL] if a is less than c or b is less than c [ENDL] print - 1 [ENDL] else [ENDL] let int num = ( a - c ) + ( b - c ) + c [ENDL] if num is greater than or equal to n [ENDL] print - 1 [ENDL] else [ENDL] print n - num [ENDL] a , b , c , n = integers", "c++": "int a , b , c , n ; while ( cin >> a >> b >> c >> n ) int main() { if ( a < c || b < c ) cout << - 1 << endl ; else int num = ( a - c ) + ( b - c ) + c ; if ( num >= n ) cout << - 1 << endl ; else cout << n - num << endl ; int a , b , c , n ; } } } return 0; }"}}
{"translation": {"en": "read a , b , c , n [ENDL] d = integer with d = a - c [ENDL] e = integer with e = b - c [ENDL] f = integer with f = n - d - e - c [ENDL] if d > = 0 and e > = 0 and c > = 0 and f > 0 [ENDL] print f [ENDL] else [ENDL] print - 1 [ENDL] declare long long ints a , b , c and n", "c++": "int main() { cin >> a >> b >> c >> n ; int d = a - c ; int e = b - c ; int f = n - d - e - c ; if ( d >= 0 && e >= 0 && c >= 0 && f > 0 ) cout << f << endl ; else cout << - 1 << endl ; long long int a , b , c , n ; return 0; }"}}
{"translation": {"en": "read a , b , c and n [ENDL] create integer temp = min of a and b [ENDL] if c is greater than temp [ENDL] print \" - 1 \\ n \" [ENDL] if ( a + b ) - c is less than n [ENDL] print n - ( ( a + b ) - c ) [ENDL] else [ENDL] print \" - 1 \\ n \" [ENDL] a , b , c , n = integers", "c++": "int main() { cin >> a >> b >> c >> n ; int temp = min ( a , b ) ; if ( c > temp ) cout << \" -1\\n \" ; if ( ( a + b ) - c < n ) return 0; } cout << n - ( ( a + b ) - c ) << endl ; else cout << \" -1\\n \" ; int a , b , c , n ; } return 0; }"}}
{"translation": {"en": "while read a , b , c , n [ENDL] res = integer with res = - 1 [ENDL] if ( a < = n ) and ( b < = n ) and ( c < = n ) [ENDL] onlyA = integer with onlyA = a - c [ENDL] onlyB = integer with onlyB = b - c [ENDL] if ( onlyA > = 0 and onlyB > = 0 ) and ( onlyA + onlyB < n ) , res = n - onlyA - onlyB - c [ENDL] if res is 0 , res = - 1 [ENDL] print res [ENDL] let a , b , c , d be ints", "c++": "int main() { while ( cin >> a >> b >> c >> n ) int res = - 1 ; if ( ( a <= n ) && ( b <= n ) && ( c <= n ) ) int onlyA = a - c ; int onlyB = b - c ; if ( ( onlyA >= 0 && onlyB >= 0 ) && ( onlyA + onlyB < n ) ) { res = n - onlyA - onlyB - c ; } if ( res == 0 ) { res = - 1 ; } } cout << res << endl ; int a , b , c , d ; } }"}}
{"translation": {"en": "read a , b , c , d [ENDL] if a + b - c > = d or c > a or c > b [ENDL] print - 1 [ENDL] else [ENDL] print d - ( a + b - c ) [ENDL] create integers a , b , c , n , i", "c++": "int main() { cin >> a >> b >> c >> d ; if ( a + b - c >= d || c > a || c > b ) cout << \" -1 \" << endl ; else cout << d - ( a + b - c ) << endl ; int a , b , c , n , i ; return 0; }"}}
{"translation": {"en": "read a read b read c read n [ENDL] if a + b - c + 1 is greater than n or c is greater than a or c is greater than b or c is greater than a + b or c is greater than n [ENDL] print - 1 print newline [ENDL] else [ENDL] print n + c - a - b print newline [ENDL] let A , B , C , N be ints", "c++": "cin >> a >> b >> c >> n ; int main() { if ( a + b - c + 1 > n || c > a || c > b || c > a + b || c > n ) cout << - 1 << endl ; else cout << n + c - a - b << endl ; int A , B , C , N ; }"}}
{"translation": {"en": "read A , B , C , N [ENDL] let con be a false bool [ENDL] if A > N or B > N or C > N then change con to true [ENDL] if C > A or C > B then set con to true [ENDL] let T = A + B - C = int [ENDL] if T > = N , change con to true [ENDL] if con is true print - 1 else print N - T [ENDL] create integers a , b , c , n and sum", "c++": "cin >> A >> B >> C >> N ; int main() { bool con = false ; if ( A > N || B > N || C > N ) con = true ; if ( C > A || C > B ) con = true ; int T = A + B - C ; if ( T >= N ) con = true ; cout << ( ( con ) ? - 1 : N - T ) << ' \\n ' ; int a , b , c , n , sum ; return 0; }"}}
{"translation": {"en": "read a , b , c and n and loop further [ENDL] set sum to a + b - c [ENDL] if sum > = n or a < c or b < c [ENDL] print \" - 1 \" [ENDL] skip the rest of the loop [ENDL] else [ENDL] print n - sum [ENDL] declare integers a , b , c and n", "c++": "int main() { while ( cin >> a >> b >> c >> n ) sum = a + b - c ; if ( sum >= n || a < c || b < c ) cout << \" -1 \" << endl ; continue ; else cout << n - sum << endl ; int a , b , c , n ; } return 0; }"}}
{"translation": {"en": "read input to a , b , c and n [ENDL] declare integer x = n - ( a - c + b ) [ENDL] if x < 1 or a < c or b < c or a > n or b > n or c > n [ENDL] print \" - 1 \\ n \" [ENDL] else [ENDL] print x [ENDL] flag = 0", "c++": "int main() { cin >> a >> b >> c >> n ; int x = n - ( a - c + b ) ; if ( x < 1 || a < c || b < c || a > n || b > n || c > n ) cout << \" -1\\n \" ; else cout << x << endl ; int flag = 0 ; }"}}
{"translation": {"en": "create long long ans [ENDL] res = long long [ENDL] create int a , b , c and n [ENDL] read a , b , c and n [ENDL] if c > a or c > b [ENDL] set flag to 1 [ENDL] else [ENDL] assign a + b - c to res [ENDL] set ans to n - res [ENDL] if flag equal to 1 [ENDL] print - 1 [ENDL] else [ENDL] if ans < = 0 [ENDL] print - 1 [ENDL] else [ENDL] print ans and a newline [ENDL] create integer a , b , c , n", "c++": "int main() { long long ans ; long long res ; int a , b , c , n ; cin >> a >> b >> c >> n ; if ( c > a || c > b ) flag = 1 ; else res = a + b - c ; ans = n - res ; if ( flag == 1 ) } cout << \" -1 \" << endl ; else if ( ans <= 0 ) cout << \" -1 \" << endl ; else cout << ans << endl ; int a , b , c , n ; } return 0; }"}}
{"translation": {"en": "get a , b , c , n [ENDL] if a + b - c less than n and c less than or equal to a and b then [ENDL] print n + c - a - b [ENDL] else do the following [ENDL] print \" - 1 \\ n \" [ENDL] create integers n , a , b , c", "c++": "int main() { cin >> a >> b >> c >> n ; if ( a + b - c < n && c <= a && c <= b ) cout << n + c - a - b << endl ; else cout << \" -1\\n \" ; int n , a , b , c ; return 0; }"}}
{"translation": {"en": "read a , b , c and n [ENDL] if a < c or b < c [ENDL] print - 1 [ENDL] set ans to n - ( a + b - c ) [ENDL] if ans > = 1 [ENDL] print ans [ENDL] else [ENDL] print - 1 [ENDL] declare int variables A , B , C and N", "c++": "int main() { cin >> a >> b >> c >> n ; if ( a < c || b < c ) cout << - 1 << endl ; int ans = n - ( a + b - c ) ; return 0; } if ( ans >= 1 ) cout << ans << endl ; else cout << - 1 << endl ; int A , B , C , N ; } }"}}
{"translation": {"en": "read input to A , B , C and N [ENDL] if ( ( A + B - C ) < N ) and ( A > = C ) and ( B > = C ) [ENDL] print N - ( A + B - C ) [ENDL] else [ENDL] print \" - 1 \" [ENDL] set INF to 0x3f3f3f3f", "c++": "int main() { cin >> A >> B >> C >> N ; if ( ( ( A + B - C ) < N ) && ( A >= C ) && ( B >= C ) ) cout << ( N - ( A + B - C ) ) << endl ; else cout << \" -1 \" << endl ; const int INF = 0x3f3f3f3f ; } return 0; }"}}
{"translation": {"en": "create int i , j , k [ENDL] let n , m , t be int [ENDL] create integers a , b , c , d [ENDL] read a , b , c , d [ENDL] if c > b or c > a [ENDL] print - 1 [ENDL] set a to a + b - c [ENDL] set d = d - a [ENDL] if d < 1 or a < 0 [ENDL] print - 1 [ENDL] otherwise [ENDL] print d and a newline [ENDL] a , b , c , n = integers", "c++": "int i , j , k ; int main() { int n , m , t ; int a , b , c , d ; cin >> a >> b >> c >> d ; if ( c > b || c > a ) cout << - 1 << endl ; a = a + b - c ; return 0; } d -= a ; if ( d < 1 || a < 0 ) cout << - 1 << endl ; else cout << d << endl ; int a , b , c , n ; return 0; }"}}
{"translation": {"en": "read a , b , c , n [ENDL] num = integer with num = a + b - c [ENDL] t = integer with t = n - 1 [ENDL] if t > = num and num > = 0 and a > = c and b > = c [ENDL] print t - num + 1 [ENDL] else [ENDL] print - 1 [ENDL] create integers a , b , c , n", "c++": "cin >> a >> b >> c >> n ; int main() { int num = a + b - c ; int t = n - 1 ; if ( t >= num && num >= 0 && a >= c && b >= c ) cout << t - num + 1 << endl ; else cout << \" -1 \" << endl ; int a , b , c , n ; return 0; }"}}
{"translation": {"en": "read a read b read c read n [ENDL] if a is greater than n or c is greater than b or c is greater than a or ( a + b - c is greater than or equal to n ) [ENDL] print - 1 print newline [ENDL] if n - a - b + c is greater than or equal to 1 [ENDL] print n - a - b + c print newline [ENDL] else [ENDL] print - 1 print newline [ENDL] create ints a , b , c and n", "c++": "int main() { cin >> a >> b >> c >> n ; if ( a > n || c > b || c > a || ( a + b - c >= n ) ) cout << - 1 << endl ; if ( n - a - b + c >= 1 ) return 0; } cout << n - a - b + c << endl ; else cout << - 1 << endl ; int a , b , c , n ; return 0; }"}}
{"translation": {"en": "function solve that returns integer [ENDL] declare int variable k = a + b - c [ENDL] if c is greater than min of a and b , return - 1 [ENDL] if k is less than 0 , return - 1 [ENDL] if n - k is less than 1 , return - 1 [ENDL] return n - k [ENDL] read a , b , c and n [ENDL] print the result of solve ( ) and \" \\ n \" [ENDL] a , b , c , d = int", "c++": "int solve ( ) int k = a + b - c ; if ( c > min ( a , b ) ) { return - 1 ; } if ( k < 0 ) return - 1 ; if ( n - k < 1 ) { return - 1 ; } return n - k ; cin >> a >> b >> c >> n ; } int main() { cout << solve ( ) << \" \\n \" ; int a , b , c , d ; return 0; }"}}
{"translation": {"en": "read a then b then c then d [ENDL] temp = int with temp = d - ( a + b - c ) [ENDL] if c is greater than a or c is greater than b or a + b - c is greater or equal to d [ENDL] print - 1 [ENDL] else [ENDL] print temp [ENDL] create integers A , B , C and N", "c++": "int main() { cin >> a >> b >> c >> d ; int temp = d - ( a + b - c ) ; if ( c > a || c > b || a + b - c >= d ) cout << - 1 << endl ; else cout << temp << endl ; int A , B , C , N ; return 0; }"}}
{"translation": {"en": "read A , B , C and N [ENDL] if ( A + B - C < = N - 1 ) and ( A < N and B < N and C < = A and C < = B ) [ENDL] print N - ( A + B - C ) [ENDL] else [ENDL] print - 1 [ENDL] create constant integer MAX with MAX = 2e5 + 5", "c++": "int main() { cin >> A >> B >> C >> N ; if ( ( A + B - C <= N - 1 ) && ( A < N && B < N && C <= A && C <= B ) ) cout << N - ( A + B - C ) << endl ; else cout << - 1 << endl ; const int MAX = 2e5 + 5 ; }"}}
{"translation": {"en": "create constant integer INF with INF = 0x3f3f3f3f [ENDL] create map mp from character to integer [ENDL] create map iterator it from character to integer [ENDL] create integers i , j , k , n , m , a , b , c [ENDL] read a read b read c read n [ENDL] if a + b - c is greater than or equal to n or c is greater than a or c is greater than b [ENDL] print \" - 1 \" [ENDL] print n - ( a + b - c ) print newline [ENDL] create long longs a , b , c and d", "c++": "const int INF = 0x3f3f3f3f ; map < char , int > mp ; map < char , int > :: iterator it ; int i , j , k , n , m , a , b , c ; int main() { cin >> a >> b >> c >> n ; if ( a + b - c >= n || c > a || c > b ) puts ( \" -1 \" ) ; cout << n - ( a + b - c ) << endl ; return 0; } long long a , b , c , d ; return 0; }"}}
{"translation": {"en": "read a , b , c and d and loop further [ENDL] declare long long ans = d - a - b + c [ENDL] if ans > 0 and a > = c and b > = c [ENDL] print ans [ENDL] else [ENDL] print - 1 [ENDL] create integers a , b , c , n , output", "c++": "int main() { while ( cin >> a >> b >> c >> d ) long long ans = d - a - b + c ; if ( ans > 0 && a >= c && b >= c ) cout << ans << endl ; else cout << - 1 << endl ; int a , b , c , n , output ; } }"}}
{"translation": {"en": "read a read b read c read n [ENDL] set output to n - ( a + b - c ) [ENDL] if ( a + b - c ) is greater than or equal to n or c is greater than a or c is greater than b [ENDL] print - 1 print newline [ENDL] else [ENDL] print output print newline [ENDL] a , b , c , n = integers", "c++": "int main() { cin >> a >> b >> c >> n ; output = n - ( a + b - c ) ; if ( ( a + b - c ) >= n || c > a || c > b ) cout << - 1 << endl ; else cout << output << endl ; int a , b , c , n ; return 0; }"}}
{"translation": {"en": "read a , b , c , n [ENDL] if a < c or b < c [ENDL] print - 1 [ENDL] all = integer with all = a + b - c [ENDL] if all < = n - 1 [ENDL] print n - all [ENDL] else [ENDL] print - 1 [ENDL] a , b , c , n = int", "c++": "int main() { cin >> a >> b >> c >> n ; if ( a < c || b < c ) cout << - 1 << endl ; int all = a + b - c ; return 0; } if ( all <= n - 1 ) cout << n - all << endl ; else cout << - 1 << endl ; int a , b , c , n ; } return 0; }"}}
{"translation": {"en": "read a then b then c then n [ENDL] if ( a + b - c ) > = n or a < c or b < c [ENDL] print \" - 1 \" [ENDL] else [ENDL] print n - a - b + c [ENDL] create constant int N = 400000 + 10", "c++": "int main() { cin >> a >> b >> c >> n ; if ( ( a + b - c ) >= n || a < c || b < c ) cout << \" -1 \" << endl ; else cout << n - a - b + c << endl ; const int N = 400000 + 10 ; }"}}
{"translation": {"en": "let ints x , y , z , and n [ENDL] read x , y , z , and n and while x , y , z , and n are truthy [ENDL] set x to x - z [ENDL] set y to y - z [ENDL] let int ans = n - x - y - z [ENDL] if x is less than 0 or y is less than 0 or ans is less than or equal to 0 [ENDL] print - 1 [ENDL] else [ENDL] print ans [ENDL] declare integer variables a , b , c and n", "c++": "int x , y , z , n ; int main() { while ( cin >> x >> y >> z >> n ) x -= z ; y -= z ; int ans = n - x - y - z ; if ( x < 0 || y < 0 || ans <= 0 ) cout << - 1 << endl ; else cout << ans << endl ; int a , b , c , n ; } return 0; }"}}
{"translation": {"en": "declare integers x , y and z [ENDL] read a , b , c and n and loop further [ENDL] assign a - c to x [ENDL] assign b - c to y [ENDL] change z to x + y + c [ENDL] if z > = n or a < c or b < c [ENDL] print \" - 1 \" [ENDL] else [ENDL] print n - z [ENDL] create integers a , b , c and n", "c++": "int x , y , z ; while ( cin >> a >> b >> c >> n ) int main() { x = a - c ; y = b - c ; z = x + y + c ; if ( z >= n || a < c || b < c ) cout << \" -1 \" << endl ; else cout << n - z << endl ; int a , b , c , n ; } return 0; }"}}
{"translation": {"en": "loop , reading a , b , c and n from the input [ENDL] create int ans = a + b - c [ENDL] change ans to n - ans [ENDL] if ans < = 0 or a < c or b < c [ENDL] print - 1 [ENDL] else [ENDL] print ans [ENDL] create integers a , b , c and n", "c++": "int main() { while ( cin >> a >> b >> c >> n ) int ans = a + b - c ; ans = n - ans ; if ( ans <= 0 || a < c || b < c ) cout << - 1 << endl ; else cout << ans << endl ; int a , b , c , n ; } return 0; }"}}
{"translation": {"en": "read input to a , b , c and n [ENDL] declare integer sum = a + b - c [ENDL] if sum > = n or a > n or b > n or c > n or n = 0 or c > a or c > b [ENDL] print - 1 [ENDL] else [ENDL] print n - sum [ENDL] create int a , b , c , n", "c++": "int main() { cin >> a >> b >> c >> n ; int sum = a + b - c ; if ( sum >= n || a > n || b > n || c > n || n == 0 || c > a || c > b ) cout << - 1 << endl ; else cout << n - sum << endl ; int a , b , c , n ; } return 0; }"}}
{"translation": {"en": "read a , b , c , n [ENDL] if a less than c or b < c [ENDL] print - 1 and a newline [ENDL] set ans to n - ( a + b - c ) [ENDL] if ans less than 1 [ENDL] print - 1 and a newline [ENDL] else [ENDL] print ans [ENDL] create long long ints a , b , c , n , k", "c++": "int main() { cin >> a >> b >> c >> n ; if ( a < c || b < c ) cout << \" -1\\n \" ; int ans = n - ( a + b - c ) ; return 0; } if ( ans < 1 ) cout << \" -1\\n \" ; else cout << ans << endl ; long long a , b , c , n , k ; } }"}}
{"translation": {"en": "read a , b , c , and n [ENDL] set k to a + b - c [ENDL] set k to n - k [ENDL] if k is greater than or equal to 1 and c is less than or equal to a and c is less than or equal to b [ENDL] print k [ENDL] else [ENDL] print - 1 [ENDL] declare ints a , b , c and d", "c++": "int main() { cin >> a >> b >> c >> n ; k = a + b - c ; k = n - k ; if ( ( ( k >= 1 ) ) && ( c <= a ) && ( c <= b ) ) cout << k << endl ; else cout << - 1 << endl ; int a , b , c , d ; return 0; }"}}
{"translation": {"en": "read a , b , c and d [ENDL] if a + b - c > = d or c > a or c > b [ENDL] print \" - 1 \" [ENDL] else [ENDL] print d - ( a + b - c ) [ENDL] create int n", "c++": "int main() { cin >> a >> b >> c >> d ; if ( a + b - c >= d || c > a || c > b ) cout << \" -1 \" << endl ; else cout << d - ( a + b - c ) << endl ; int n ; return 0; }"}}
{"translation": {"en": "read n [ENDL] create vector in a ( n ) [ENDL] mx = 0 [ENDL] for i = 0 to n exclusive [ENDL] read a [ i ] [ENDL] mx = max of mx and a [ i ] [ENDL] ans = 1e9 [ENDL] for k = mx to 1e5 inclusive [ENDL] create int x and y [ENDL] set x and y to 0 [ENDL] for i = 0 to n exclusive [ENDL] assign x + a [ i ] to x [ENDL] set y = t + k - a [ i ] [ENDL] if y greater than x [ENDL] print k and a newline [ENDL] declare int n", "c++": "int main() { cin >> n ; vector < int > a ( n ) ; int mx = 0 ; for ( int i = 0 ; i < n ; i ++ ) cin >> a [ i ] ; mx = max ( mx , a [ i ] ) ; int ans = 1e9 ; } for ( int k = mx ; k <= 1e5 ; k ++ ) int x , y ; x = y = 0 ; for ( int i = 0 ; i < n ; i ++ ) x += a [ i ] ; y += k - a [ i ] ; if ( y > x ) } cout << k << ' \\n ' ; int n ; return 0; } } return 0; }"}}
{"translation": {"en": "read n [ENDL] sum , x and mx are integers with sum and mx = 0 [ENDL] for i = 0 to n exclusive [ENDL] read x [ENDL] add x to sum [ENDL] assign max of mx and x to mx [ENDL] multiply sum by 2 [ENDL] increment sum [ENDL] print max of sum / n rounded up and mx [ENDL] create integers n , ans , ma and sum , and integer array a with 105 elements", "c++": "int main() { cin >> n ; int sum = 0 , x , mx = 0 ; for ( int i = 0 ; i < n ; i ++ ) cin >> x ; sum += x ; mx = max ( mx , x ) ; sum *= 2 ; } sum ++ ; cout << max ( ( int ) ceil ( ( double ) sum / n ) , mx ) << endl ; int n , ans , a [ 105 ] , ma , sum ; }"}}
{"translation": {"en": "define function gets [ENDL] create integer v with value 0 [ENDL] assign value 0 to boolean f [ENDL] ch = character [ENDL] read ch from the input and continue the loop if ch is not a digit [ENDL] if ch = ' - ' , set f to 1 [ENDL] assign value of ch - 48 to v [ENDL] read ch from the input and continue the loop if ch is a digit , changing v to v * 10 + ch - 48 [ENDL] return - v if f is true , or v otherwise [ENDL] assign result of gets ( ) to n [ENDL] for i = 1 to n inclusive , set a [ i ] to the result of gets ( ) , ma to max of ma and a [ i ] , and increase sum by a [ i ] [ENDL] ans = sum * 2 / n + 1 [ENDL] ans = max of ans and ma [ENDL] print ans [ENDL] declare integer variable n", "c++": "int gets ( ) int v = 0 ; bool f = 0 ; char ch ; while ( ! isdigit ( ch = getchar ( ) ) ) if ( ch == ' - ' ) f = 1 ; v = ch - 48 ; while ( isdigit ( ch = getchar ( ) ) ) v = v * 10 + ch - 48 ; return f ? - v : v ; n = gets ( ) ; } int main() { for ( int i = 1 ; i <= n ; i ++ ) a [ i ] = gets ( ) , ma = max ( ma , a [ i ] ) , sum += a [ i ] ; ans = sum * 2 / n + 1 ; ans = max ( ans , ma ) ; cout << ans << endl ; int n ; return 0; }"}}
{"translation": {"en": "read n [ENDL] create integer pointer a pointed to new array of integers with n elements [ENDL] declare int sum = 0 [ENDL] declare int max [ENDL] loop i from 0 to n exclusive [ENDL] read input to a [ i ] [ENDL] set sum to sum + a [ i ] [ENDL] if i is equal to 0 [ENDL] set max to a [ i ] [ENDL] else [ENDL] if a [ i ] is greater than max , change max to a [ i ] [ENDL] create integer f = ( 2 * sum / n ) + 1 [ENDL] if f is greater than max [ENDL] print f [ENDL] else [ENDL] print max [ENDL] create int n", "c++": "int main() { cin >> n ; int * a = new int [ n ] ; int sum = 0 ; int max ; for ( int i = 0 ; i < n ; i ++ ) cin >> a [ i ] ; sum = sum + a [ i ] ; if ( i == 0 ) max = a [ i ] ; else if ( a [ i ] > max ) { max = a [ i ] ; } int f = ( 2 * sum / n ) + 1 ; } } if ( f > max ) cout << f << endl ; else cout << max << endl ; int n ; } return 0; }"}}
{"translation": {"en": "set mx to 0 [ENDL] assign 0 to sum [ENDL] read n [ENDL] create int a [ENDL] for i = 1 to n inclusive [ENDL] read a [ENDL] set mx to max of mx and a [ENDL] assign sum + a to sum [ENDL] set sum to sum * 2 [ENDL] set sum = sum + n [ENDL] sum = sum / n [ENDL] print max of sum and mx [ENDL] declare int variables n , i and j and int array a with 100002 elements", "c++": "int main() { int mx = 0 ; int sum = 0 ; cin >> n ; int a ; for ( int i = 1 ; i <= n ; ++ i ) cin >> a ; mx = max ( mx , a ) ; sum += a ; sum *= 2 ; } sum += n ; sum /= n ; cout << max ( sum , mx ) << endl ; int n , i , j , a [ 100002 ] ; }"}}
{"translation": {"en": "read n [ENDL] declare int sum = 0 [ENDL] declare integer variable mx = - 1 [ENDL] for i from 0 to n exclusive [ENDL] read a [ i ] [ENDL] increase sum by a [ i ] [ENDL] assign max of mx and a [ i ] to mx [ENDL] looping infinitely [ENDL] if mx * n - sum is greater than sum [ENDL] print mx [ENDL] else [ENDL] increment mx [ENDL] create integer n", "c++": "int main() { cin >> n ; int sum = 0 ; int mx = - 1 ; for ( i = 0 ; i < n ; i ++ ) cin >> a [ i ] ; sum += a [ i ] ; mx = max ( mx , a [ i ] ) ; while ( 1 ) } if ( mx * n - sum > sum ) cout << mx << endl ; else return 0; mx ++ ; int n ; } } return 0; }"}}
{"translation": {"en": "read n [ENDL] create integers sum , temp , Max with sum = 0 , Max = 0 [ENDL] for i = 0 to n exclusive [ENDL] read temp [ENDL] if temp is greater than Max , set Max to temp [ENDL] increment sum by temp [ENDL] print maximum of ( Max and sum * 2 / n + 1 ) print newline [ENDL] create int n", "c++": "cin >> n ; int main() { int sum = 0 , temp , Max = 0 ; for ( int i = 0 ; i < n ; i ++ ) cin >> temp ; if ( temp > Max ) Max = temp ; sum += temp ; cout << max ( Max , sum * 2 / n + 1 ) << endl ; } int n ; return 0; }"}}
{"translation": {"en": "read input to n [ENDL] create integers ans , mayor and a with ans and mayor = 0 [ENDL] for integer i = 0 to n exclusive [ENDL] read a [ENDL] set ans to ans + a [ENDL] set mayor to max of mayor and a [ENDL] change ans to max of ( ans * 2 ) / n + 1 and mayor [ENDL] print ans [ENDL] declare long long variable n", "c++": "int main() { cin >> n ; int ans = 0 , mayor = 0 , a ; for ( int i = 0 ; i < n ; i ++ ) cin >> a ; ans = ans + a ; mayor = max ( mayor , a ) ; ans = max ( ( ans * 2 ) / n + 1 , mayor ) ; } cout << ans << endl ; long long n ; return 0; }"}}
{"translation": {"en": "read n [ENDL] let a be long long array with size n [ENDL] declare long long variable maxi = 0 [ENDL] declare long long sum = 0 [ENDL] for i = 0 and _n = n while i < _n , incrementing i [ENDL] read input to a [ i ] [ENDL] assign max of maxi and a [ i ] to maxi [ENDL] set sum to sum + a [ i ] [ENDL] declare long long variable k = 0 [ENDL] increment k while n * k < = 2 * sum [ENDL] if k is less than maxi , set k to maxi [ENDL] print k [ENDL] let n , sum , sum1 and ans be integers with sum and sum1 = 0", "c++": "int main() { cin >> n ; long long a [ n ] ; long long maxi = 0 ; long long sum = 0 ; for ( long long i = 0 , _n = ( n ) ; i < _n ; i ++ ) cin >> a [ i ] ; maxi = max ( maxi , a [ i ] ) ; sum = sum + a [ i ] ; long long k = 0 ; } while ( n * k <= 2 * sum ) k ++ ; if ( k < maxi ) k = maxi ; cout << k << endl ; int n , sum = 0 , sum1 = 0 , ans ; }"}}
{"translation": {"en": "read n [ENDL] let ar be an array of integers of size n [ENDL] for integer i = 0 to n exclusive [ENDL] read ar [ i ] [ENDL] increase sum by ar [ i ] [ENDL] sort ar [ENDL] for i = ar [ n - 1 ] , incrementing i [ENDL] assign value of 0 to sum1 [ENDL] for j = 0 to n exclusive , increase sum1 by i - ar [ j ] [ENDL] if sum1 is greater than sum [ENDL] set value of ans to i [ENDL] stop the loop [ENDL] print ans [ENDL] declare int variable n", "c++": "int main() { cin >> n ; int ar [ n ] ; for ( int i = 0 ; i < n ; i ++ ) cin >> ar [ i ] ; sum += ar [ i ] ; sort ( ar , ar + n ) ; } for ( int i = ar [ n - 1 ] ; ; i ++ ) sum1 = 0 ; for ( int j = 0 ; j < n ; j ++ ) sum1 += ( i - ar [ j ] ) ; if ( sum1 > sum ) ans = i ; break ; cout << ans << endl ; } } int n ; }"}}
{"translation": {"en": "read n [ENDL] declare int array a with size n [ENDL] create integer sum = 0 [ENDL] for integer i = 0 to n exclusive [ENDL] read input to a [ i ] [ENDL] add a [ i ] to sum [ENDL] create int k = ( 2 * sum ) / n + 1 [ENDL] sort a [ENDL] if k > = a [ n - 1 ] [ENDL] print k [ENDL] else [ENDL] print a [ n - 1 ] [ENDL] n = integer", "c++": "int main() { cin >> n ; int a [ n ] ; int sum = 0 ; for ( int i = 0 ; i < n ; i ++ ) cin >> a [ i ] ; sum += a [ i ] ; int k = ( 2 * sum ) / n + 1 ; } sort ( a , a + n ) ; if ( k >= a [ n - 1 ] ) cout << k << endl ; else cout << a [ n - 1 ] << endl ; int n ; }"}}
{"translation": {"en": "read n [ENDL] arr = integer vector of size n [ENDL] max = maximum integer value , sum = integer = 0 [ENDL] for i = 0 to n exclusive [ENDL] read arr [ i ] [ENDL] sum = sum + arr [ i ] [ENDL] if max < arr [ i ] , then max = arr [ i ] [ENDL] if n * max > 2 * sum [ENDL] print max [ENDL] else [ENDL] if ( 2 * sum ) modulo n is 0 [ENDL] print the result of ( 2 * n ) / n + 1 [ENDL] else [ENDL] print the result of ( 2 * sum ) / n rounded up to the next whole number [ENDL] n = integer", "c++": "int main() { cin >> n ; vector < int > arr ( n ) ; int max = INT_MIN , sum = 0 ; for ( int i = 0 ; i < n ; i ++ ) cin >> arr [ i ] ; sum += arr [ i ] ; if ( max < arr [ i ] ) max = arr [ i ] ; if ( n * max > 2 * sum ) } cout << max << endl ; else if ( ( 2 * sum ) % n == 0 ) cout << ( 2 * sum ) / n + 1 << endl ; else cout << ceil ( ( 2. * sum ) / n ) << endl ; int n ; } return 0; }"}}
{"translation": {"en": "read n [ENDL] pointer location of d = integer array of size n [ENDL] k = integer = 0 , s = integer = 0 [ENDL] for i = 0 to n exclusive [ENDL] read d [ i ] [ENDL] s = s + d [ i ] [ENDL] k = the highest value betweek k and d [ i ] [ENDL] sum = integer = 0 [ENDL] do [ENDL] sum = 0 [ENDL] for i = 0 to n exclusive [ENDL] increase k by 1 [ENDL] while sum < = s [ENDL] print the result of k - 1 [ENDL] create integers n , s , k with s = 0 , k = 0", "c++": "int main() { cin >> n ; int * d = new int [ n ] ; int k = 0 , s = 0 ; for ( int i = 0 ; i < n ; i ++ ) cin >> d [ i ] ; s += d [ i ] ; k = max ( k , d [ i ] ) ; int sum = 0 ; } do sum = 0 ; for ( int i = 0 ; i < n ; i ++ ) sum += k - d [ i ] ; k ++ ; while ( sum <= s ) ; cout << k - 1 << endl ; int n , s = 0 , k = 0 ; }"}}
{"translation": {"en": "read n [ENDL] for i = 1 to n inclusive [ENDL] create integer a [ENDL] read a [ENDL] set k to maximum of k and a [ENDL] increment s by a [ENDL] for n * k is less than or equal to 2 * s , incrementing k [ENDL] end statement [ENDL] print k print ' \\ n ' [ENDL] n , sum , ans = int with sum = 0 and ans = 0", "c++": "int main() { cin >> n ; for ( int i = 1 ; i <= n ; ++ i ) int a ; cin >> a ; k = max ( k , a ) ; s += a ; for ( ; n * k <= 2 * s ; ++ k ) } ; cout << k << ' \\n ' ; int n , sum = 0 , ans = 0 ; return 0; }"}}
{"translation": {"en": "read n [ENDL] arr = int array of size n [ENDL] for i = 0 to n [ENDL] read arr [ i ] [ENDL] increment sum by arr [ i ] [ENDL] sort arr [ENDL] for i = 0 to n - 1 increment ans by - arr [ i ] + arr [ n - 1 ] [ENDL] loop infinitely [ENDL] if ans is greater than sum then break [ENDL] increment ans by n [ENDL] increment arr [ n - 1 ] [ENDL] print arr [ n - 1 ] [ENDL] create integer n", "c++": "int main() { cin >> n ; int arr [ n ] ; for ( int i = 0 ; i < n ; i ++ ) cin >> arr [ i ] ; sum += arr [ i ] ; sort ( arr , arr + n ) ; } for ( int i = 0 ; i < n - 1 ; i ++ ) { ans += - arr [ i ] + arr [ n - 1 ] ; } while ( 1 ) if ( ans > sum ) { break ; } ans += n ; arr [ n - 1 ] ++ ; cout << arr [ n - 1 ] << endl ; } int n ; }"}}
{"translation": {"en": "read n [ENDL] create integer vector arr initialized with ( n + 5 ) [ENDL] create integer max_val with max_val = 0 [ENDL] create long long sum with sum = 0 [ENDL] for i = 0 to n exclusive [ENDL] read arr [ i ] [ENDL] set max_val to maximum of ( max_val and arr [ i ] ) [ENDL] increment sum by arr [ i ] [ENDL] create integer i with i = max_val [ENDL] for i is less than 10000 , incrementing i [ENDL] create long long val with val = i * n - sum [ENDL] if val is greater than sum , break loop [ENDL] print i print newline [ENDL] define integers n , i , sum , max1 , ans , sum1 , i1 , and j , setting sum and max1 to 0", "c++": "int main() { cin >> n ; vector < int > arr ( n + 5 ) ; int max_val = 0 ; long long sum = 0 ; for ( int i = 0 ; i < n ; i ++ ) cin >> arr [ i ] ; max_val = max ( max_val , arr [ i ] ) ; sum += arr [ i ] ; int i = max_val ; } for ( ; i < 10000 ; i ++ ) long long val = i * n - sum ; if ( val > sum ) break ; cout << i << endl ; } long long int n , i , sum = 0 , max1 = 0 , ans , sum1 , i1 , j ; return 0; }"}}
{"translation": {"en": "read into n [ENDL] define integer array a to be of n + 2 elements [ENDL] for i from 0 to n ( exclusive ) by 1 [ENDL] read into a [ i ] [ENDL] increment sum by a [ i ] [ENDL] set max1 to max . of max1 , a [ i ] [ENDL] for j from max1 to max1 * 2 + 2 by 1 [ENDL] zero sum1 [ENDL] for i1 from 0 to n ( exclusive ) by 1 , increment sum1 by j - a [ i1 ] [ENDL] if sum1 > sum [ENDL] assign j to ans [ENDL] break out [ENDL] print ans and newline [ENDL] n , i , j , k1 , k , suma , sumb = int with k = 0 and suma = 0 and sumb = 0", "c++": "int main() { cin >> n ; long long int a [ n + 2 ] ; for ( i = 0 ; i < n ; i ++ ) cin >> a [ i ] ; sum = sum + a [ i ] ; max1 = max ( max1 , a [ i ] ) ; for ( j = max1 ; j <= ( max1 * 2 ) + 2 ; j ++ ) } sum1 = 0 ; for ( i1 = 0 ; i1 < n ; i1 ++ ) { sum1 = sum1 + ( j - a [ i1 ] ) ; } if ( sum1 > sum ) ans = j ; break ; cout << ans << endl ; } } int n , i , j , k1 , k = 0 , suma = 0 , sumb = 0 ; }"}}
{"translation": {"en": "read n [ENDL] a = int array of size n [ENDL] for i = 0 to n [ENDL] read a [ i ] [ENDL] if a [ i ] is greater than k then set k to a [ i ] [ENDL] increment suma by a [ i ] [ENDL] for i = 0 to n increment sumb by k - a [ i ] [ENDL] for i = 0 [ENDL] if sumb is less or equal to suma [ENDL] set sumb to 0 [ENDL] increment k [ENDL] for j = 0 to n increment sumb by k - a [ j ] [ENDL] else [ENDL] break [ENDL] print k [ENDL] declare an array of integers value with size 101", "c++": "int main() { cin >> n ; int a [ n ] ; for ( i = 0 ; i < n ; i ++ ) cin >> a [ i ] ; if ( a [ i ] > k ) { k = a [ i ] ; } suma += a [ i ] ; for ( i = 0 ; i < n ; i ++ ) { sumb += k - a [ i ] ; } } for ( i = 0 ; ; i ++ ) if ( sumb <= suma ) sumb = 0 ; k ++ ; for ( j = 0 ; j < n ; j ++ ) { sumb += k - a [ j ] ; } else break ; cout << k << endl ; } } int value [ 101 ] ; }"}}
{"translation": {"en": "declare integers n , k and sum where sum = 0 and k = - 1 [ENDL] read input to n [ENDL] for integer i = 0 to n exclusive [ENDL] read value [ i ] [ENDL] add value [ i ] to sum [ENDL] if value [ i ] is greater than k , set k to value [ i ] [ENDL] while k * n - sum < = sum , increment k [ENDL] print k [ENDL] create integer n", "c++": "int n , k = - 1 , sum = 0 ; int main() { cin >> n ; for ( int i = 0 ; i < n ; i ++ ) cin >> value [ i ] ; sum += value [ i ] ; if ( value [ i ] > k ) k = value [ i ] ; while ( k * n - sum <= sum ) { k ++ ; } } cout << k << endl ; int n ; }"}}
{"translation": {"en": "read n [ENDL] create integer array a with size n , create integer sum with sum = 0 [ENDL] for i = 0 to n exclusive [ENDL] create integer k [ENDL] read k [ENDL] set a [ i ] to k [ENDL] set sum to sum + a [ i ] [ENDL] create integer lar with lar = a [ 0 ] [ENDL] for i = 1 to n exclusive [ENDL] if lar is less than a [ i ] , set lar to a [ i ] [ENDL] for j = lar , incrementing j [ENDL] if j * n is greater than ( 2 * sum ) [ENDL] print j print newline [ENDL] break loop [ENDL] create integer n , create integer array a with size 200", "c++": "int main() { cin >> n ; int a [ n ] , sum = 0 ; for ( int i = 0 ; i < n ; i ++ ) int k ; cin >> k ; a [ i ] = k ; sum = sum + a [ i ] ; int lar = a [ 0 ] ; } for ( int i = 1 ; i < n ; i ++ ) if ( lar < a [ i ] ) lar = a [ i ] ; for ( int j = lar ; ; j ++ ) } if ( j * n > ( 2 * sum ) ) cout << j << endl ; break ; int n , a [ 200 ] ; } } }"}}
{"translation": {"en": "read n [ENDL] create integers sum1 , k , with sum1 = 0 , k = 0 [ENDL] for i = 0 to n exclusive [ENDL] read a [ i ] [ENDL] increment sum1 by a [ i ] [ENDL] set k to maximum of k and a [ i ] [ENDL] create integer flag with flag = 0 [ENDL] while not flag [ENDL] create integer sum2 with sum2 = 0 [ENDL] for i = 0 to n exclusive , increment sum2 by k - a [ i ] [ENDL] if sum2 is greater than sum1 [ENDL] set flag to 1 [ENDL] else [ENDL] increment k [ENDL] print k print newline [ENDL] declare long long const mod = 1e9 + 7", "c++": "int main() { cin >> n ; int sum1 = 0 , k = 0 ; for ( int i = 0 ; i < n ; i ++ ) cin >> a [ i ] ; sum1 += a [ i ] ; k = max ( k , a [ i ] ) ; int flag = 0 ; } while ( ! flag ) int sum2 = 0 ; for ( int i = 0 ; i < n ; i ++ ) { sum2 += k - a [ i ] ; } if ( sum2 > sum1 ) flag = 1 ; else k ++ ; cout << k << endl ; } } long long const mod = 1e9 + 7 ; return 0; }"}}
{"translation": {"en": "power is a long long function with long long arguments x , y and mod [ENDL] declare long long variable ans = 1 [ENDL] x = x modulo mod [ENDL] while y [ENDL] if y & 1 ! = 0 , assign ( x * ans ) % mod to ans [ENDL] set x to ( x * x ) % mod [ENDL] y = y > > 1 [ENDL] return ans [ENDL] gcd is a long long function with long long arguments a and b [ENDL] if a = 0 , return b [ENDL] return gcd ( b % a , a ) [ENDL] declare long long variables n , id1 and id2 [ENDL] read n , id1 and id2 [ENDL] create string second [ENDL] read input to second [ENDL] if second [ id1 - 1 ] is equal to second [ id2 - 1 ] [ENDL] print 0 [ENDL] else [ENDL] print 1 [ENDL] create integers n , a , b", "c++": "long long power ( long long x , long long y , long long mod = 2e18 ) long long ans = 1 ; x %= mod ; while ( y ) if ( y & 1 ) ans = ( x * ans ) % mod ; x = ( x * x ) % mod ; y >>= 1 ; return ans ; } long long gcd ( long long a , long long b ) } if ( a == 0 ) return b ; return gcd ( b % a , a ) ; long long n , id1 , id2 ; } int main() { cin >> n >> id1 >> id2 ; string second ; cin >> second ; if ( second [ id1 - 1 ] == second [ id2 - 1 ] ) cout << 0 << endl ; else cout << 1 << endl ; int n , a , b ; } return 0; }"}}
{"translation": {"en": "create string s [ENDL] create integer ans [ENDL] read n read a read b read s [ENDL] if s [ a - 1 ] is s [ b - 1 ] [ENDL] set ans to 0 [ENDL] else [ENDL] set ans to 1 [ENDL] print ans print ' \\ n ' [ENDL] create const int inf = 0x3f3f3f3f", "c++": "int main() { string s ; int ans ; cin >> n >> a >> b >> s ; if ( s [ a - 1 ] == s [ b - 1 ] ) ans = 0 ; else ans = 1 ; cout << ans << ' \\n ' ; } const int inf = 0x3f3f3f3f ; return 0; }"}}
{"translation": {"en": "let ints n , a , and b [ENDL] read n , a , and b [ENDL] create string s [ENDL] read s [ENDL] if s [ a - 1 ] is equal to s [ b - 1 ] [ENDL] print 0 [ENDL] create int set st [ENDL] let char ch = ' ' [ENDL] create int pos = 0 [ENDL] for i = 0 to size of s exclusive [ENDL] if ch is equal to ' ' [ENDL] set ch to s [ i ] [ENDL] continue to next loop iteration [ENDL] if s [ i ] is equal to ch [ENDL] set pos to i [ENDL] else [ENDL] insert i - pos into set st [ENDL] set pos to i [ENDL] set char to s [ i ] [ENDL] print * st . end ( ) [ENDL] declare an array of booleans vis with size 200005", "c++": "int n , a , b ; int main() { cin >> n >> a >> b ; string s ; cin >> s ; if ( s [ a - 1 ] == s [ b - 1 ] ) cout << 0 << endl ; set < int > st ; return 0; } char ch = '   ' ; int pos = 0 ; for ( int i = 0 ; i < s . size ( ) ; i ++ ) if ( ch == '   ' ) ch = s [ i ] ; continue ; if ( s [ i ] == ch ) } pos = i ; else st . insert ( i - pos ) ; pos = i ; ch = s [ i ] ; cout << * st . end ( ) << endl ; } } bool vis [ 200005 ] ; return 0; }"}}
{"translation": {"en": "declare int arrays cnt and freq with 200005 elements [ENDL] declare integers n , a and b [ENDL] read input to n , a and b [ENDL] declare string s [ENDL] read s [ENDL] if s [ a - 1 ] = s [ b - 1 ] [ENDL] print \" 0 \" [ENDL] else [ENDL] print \" 1 \" [ENDL] declare integers n , a and b", "c++": "int cnt [ 200005 ] , freq [ 200005 ] ; int n , a , b ; int main() { cin >> n >> a >> b ; string s ; cin >> s ; if ( s [ a - 1 ] == s [ b - 1 ] ) puts ( \" 0 \" ) ; else puts ( \" 1 \" ) ; int n , a , b ; return 0; }"}}
{"translation": {"en": "create string s [ENDL] read n , a , b and s [ENDL] decrement a [ENDL] decrement b [ENDL] if s [ a ] ! = s [ b ] [ENDL] print 1 [ENDL] else [ENDL] print 0 [ENDL] create integers n , a and b", "c++": "string s ; cin >> n >> a >> b >> s ; int main() { a -- ; b -- ; if ( s [ a ] != s [ b ] ) cout << 1 << endl ; else cout << 0 << endl ; int n , a , b ; } return 0; }"}}
{"translation": {"en": "read n , a and b [ENDL] declare an array of chars arr with size n + 2 [ENDL] read n elements into arr [ENDL] if arr [ a - 1 ] = arr [ b - 1 ] [ENDL] print 0 [ENDL] else [ENDL] print 1 [ENDL] create string s", "c++": "int main() { cin >> n >> a >> b ; char arr [ n + 2 ] ; for ( int i = 0 ; i < n ; i ++ ) cin >> arr [ i ] ; if ( arr [ a - 1 ] == arr [ b - 1 ] ) cout << 0 << endl ; else cout << 1 << endl ; string s ; return 0; }"}}
{"translation": {"en": "create int n , a and b [ENDL] read n , a , b and s [ENDL] if a equal to b or s [ a - 1 ] = s [ b - 1 ] [ENDL] print 0 [ENDL] else [ENDL] print 1 and a newline [ENDL] n , a , b = integers", "c++": "int n , a , b ; int main() { cin >> n >> a >> b >> s ; if ( ( a == b ) || ( s [ a - 1 ] == s [ b - 1 ] ) ) cout << \" 0 \" << endl ; else cout << \" 1 \" << endl ; int n , a , b ; return 0; }"}}
{"translation": {"en": "s = string [ENDL] read n , a , b [ENDL] decrement a , decrement b [ENDL] read s [ENDL] if s [ a ] is s [ b ] [ENDL] print 0 [ENDL] else [ENDL] print 1 [ENDL] declare ints n , ans , a and b ; create arrays of ints be and af with 100001 elements", "c++": "int main() { string s ; cin >> n >> a >> b ; -- a , -- b ; cin >> s ; if ( s [ a ] == s [ b ] ) cout << 0 << endl ; else return 0; cout << 1 << endl ; int n , be [ 100001 ] , af [ 100001 ] , ans , a , b ; return 0; } }"}}
{"translation": {"en": "declare string s with value [ENDL] read variables n , a , b and s from the input [ENDL] if s [ a - 1 ] is equal to s [ b - 1 ] [ENDL] print 0 [ENDL] else [ENDL] print 1 [ENDL] declare integers n , a and b", "c++": "string s ; cin >> n >> a >> b >> s ; int main() { if ( s [ a - 1 ] == s [ b - 1 ] ) cout << 0 << endl ; else cout << 1 << endl ; int n , a , b ; } }"}}
{"translation": {"en": "read input to n , a and b [ENDL] declare character array aN with size 100000 [ENDL] read aN [ENDL] if aN [ a - 1 ] ! = aN [ b - 1 ] [ENDL] print 1 [ENDL] else [ENDL] print 0 [ENDL] create integer array num with size 1000000 with num = { 0 }", "c++": "int main() { cin >> n >> a >> b ; char aN [ 100000 ] ; cin >> aN ; if ( aN [ a - 1 ] != aN [ b - 1 ] ) cout << 1 << endl ; else cout << 0 << endl ; int num [ 1000000 ] = { 0 } ; return 0; }"}}
{"translation": {"en": "declare fx with character array a as argument , returning void [ENDL] create integers n , a , b [ENDL] create character array z with size 1000000 [ENDL] read n read a read b [ENDL] read z [ENDL] if z [ a - 1 ] is z [ b - 1 ] [ENDL] print \" 0 \" print newline [ENDL] else [ENDL] print \" 1 \" print newline [ENDL] create integers n , a and b", "c++": "void fx ( char a [ ] ) ; int n , a , b ; int main() { char z [ 1000000 ] ; cin >> n >> a >> b ; cin >> z ; if ( z [ a - 1 ] == z [ b - 1 ] ) cout << \" 0 \" << endl ; else cout << \" 1 \" << endl ; int n , a , b ; } return 0; }"}}
{"translation": {"en": "create string s [ENDL] declare int variable ans [ENDL] read n , a , b and s [ENDL] if s [ a - 1 ] = s [ b - 1 ] [ENDL] set ans to 0 [ENDL] else [ENDL] set ans to 1 [ENDL] print ans and ' \\ n ' [ENDL] declare const int maxn = 1e6 + 6", "c++": "int main() { string s ; int ans ; cin >> n >> a >> b >> s ; if ( s [ a - 1 ] == s [ b - 1 ] ) ans = 0 ; else ans = 1 ; cout << ans << ' \\n ' ; } const int maxn = 1e6 + 6 ; return 0; }"}}
{"translation": {"en": "create ints n , a and b [ENDL] declare an array of integers arr with size maxn [ENDL] declare int variable len = 0 [ENDL] declare string variable str [ENDL] read input to n , a and b [ENDL] read input to str [ENDL] loop i from 1 to n inclusive , assign str [ i - 1 ] to arr [ i ] [ENDL] if arr [ a ] is equal to arr [ b ] [ENDL] print \" 0 \" [ENDL] else [ENDL] print \" 1 \" [ENDL] define vector VI , VI2 , VI3 , VI4", "c++": "int n , a , b ; int arr [ maxn ] ; int len = 0 ; string str ; cin >> n >> a >> b ; int main() { cin >> str ; for ( int i = 1 ; i <= n ; i ++ ) arr [ i ] = str [ i - 1 ] ; if ( arr [ a ] == arr [ b ] ) cout << \" 0 \" << endl ; else cout << \" 1 \" << endl ; vector < int > VI , VI2 , VI3 , VI4 ; return 0; }"}}
{"translation": {"en": "define n , m , f , t , a , b as integers [ENDL] define s as string [ENDL] read n , a , b , s [ENDL] print abs ( s [ - - a ] - s [ - - b ] ) [ENDL] create integers n , a , b", "c++": "int n , m , f , t , a , b ; string s ; cin >> n >> a >> b >> s ; int main() { cout << abs ( s [ -- a ] - s [ -- b ] ) << endl ; int n , a , b ; return 0; }"}}
{"translation": {"en": "create string s [ENDL] read n read a read b read s [ENDL] if s [ a - 1 ] is s [ b - 1 ] [ENDL] print 0 print \" \\ n \" [ENDL] else [ENDL] print 1 print \" \\ n \" [ENDL] s = string", "c++": "string s ; cin >> n >> a >> b >> s ; int main() { if ( s [ a - 1 ] == s [ b - 1 ] ) cout << 0 << \" \\n \" ; else cout << 1 << \" \\n \" ; string s ; return 0; }"}}
{"translation": {"en": "n , m , k = int [ENDL] read n then m then k [ENDL] read s [ENDL] prepend ' # ' to s [ENDL] print 1 if s [ m ] is not s [ k ] else print 0 [ENDL] define integral constant maxn to be 1e6 + 6", "c++": "int main() { int n , m , k ; cin >> n >> m >> k ; cin >> s ; s = ' # ' + s ; cout << 1 - ( s [ m ] == s [ k ] ) << endl ; const int maxn = 1e6 + 6 ; }"}}
{"translation": {"en": "define integers n , a , b [ENDL] define maxn - element int array arr [ENDL] define int len , set to zero [ENDL] define string str [ENDL] read n , a , and then b [ENDL] read str [ENDL] for int i from i to n by 1 , assign str [ i - 1 ] to arr [ i ] [ENDL] if arr [ a ] is arr [ b ] [ENDL] print \" 0 \" and newline [ENDL] otherwise [ENDL] print \" 1 \" and a newline [ENDL] create string s", "c++": "int n , a , b ; int arr [ maxn ] ; int len = 0 ; string str ; cin >> n >> a >> b ; int main() { cin >> str ; for ( int i = 1 ; i <= n ; i ++ ) arr [ i ] = str [ i - 1 ] ; if ( arr [ a ] == arr [ b ] ) cout << \" 0 \" << endl ; else cout << \" 1 \" << endl ; string s ; return 0; }"}}
{"translation": {"en": "create integers n , a , b [ENDL] read n read a read b read s [ENDL] if a is b or s [ a - 1 ] is s [ b - 1 ] [ENDL] print \" 0 \" print newline [ENDL] else [ENDL] pirnt \" 1 \" print newline [ENDL] create integers a , b , n", "c++": "int n , a , b ; int main() { cin >> n >> a >> b >> s ; if ( ( a == b ) || ( s [ a - 1 ] == s [ b - 1 ] ) ) cout << \" 0 \" << endl ; else cout << \" 1 \" << endl ; int a , b , n ; return 0; }"}}
{"translation": {"en": "create string s [ENDL] read n read a read b read s [ENDL] decrement a [ENDL] decrement b [ENDL] print ( ( s [ a ] - ' 0 ' ) ^ ( s [ b ] - ' 0 ' ) ) print newline [ENDL] create constant long long int mod = 998244353", "c++": "int main() { string s ; cin >> n >> a >> b >> s ; a -- ; b -- ; cout << ( ( s [ a ] - ' 0 ' ) ^ ( s [ b ] - ' 0 ' ) ) << endl ; const long long mod = 998244353 ; }"}}
{"translation": {"en": "create const long long int inf = 2e18 [ENDL] let const int maxn = 200005 [ENDL] let const int maxa = 300005 [ENDL] declare gcd taking in long long ints a and b and returning long long [ENDL] return gcd ( b , a % b ) if b is truthy or a if not [ENDL] declare powmod taking in long long ints a and b and returning long long [ENDL] let long long in res = 1 [ENDL] set a to a % mod [ENDL] if b is less than 0 , return - 1 [ENDL] loop until b is falsy [ENDL] if b & 1 is truthy , set res to res * a % mod [ENDL] set a to a * a % mod [ENDL] return res [ENDL] let int INF = 10000000 [ENDL] let int T [ENDL] create ints n , m , l , r [ENDL] create int ans = 0 [ENDL] create string str [ENDL] read n , l , and r [ENDL] create str [ENDL] let int array a of size maxn [ENDL] for i = 0 to n exclusive , set a [ i + 1 ] to str [ i ] - ' 0 ' [ENDL] if a [ l ] is equal to a [ r ] , return the result of 0 * puts ( \" 0 \" ) [ENDL] print \" 1 \" [ENDL] let n , a , b be integers", "c++": "const long long inf = 2e18 ; const int maxn = 200005 ; const int maxa = 300005 ; long long gcd ( long long a , long long b ) return b ? gcd ( b , a % b ) : a ; long long powmod ( long long a , long long b ) } long long res = 1 ; a %= mod ; if ( b < 0 ) return - 1 ; for ( ; b ; b >>= 1 ) if ( b & 1 ) res = res * a % mod ; a = a * a % mod ; return res ; } int INF = 10000000 ; } int T ; int main() { int n , m , l , r ; int ans = 0 ; string str ; cin >> n >> l >> r ; cin >> str ; int a [ maxn ] ; for ( int i = 0 ; i < n ; i ++ ) a [ i + 1 ] = str [ i ] - ' 0 ' ; if ( a [ l ] == a [ r ] ) return 0 * puts ( \" 0 \" ) ; puts ( \" 1 \" ) ; int n , a , b ; }"}}
{"translation": {"en": "let str be a string [ENDL] read n , a and b [ENDL] read str [ENDL] print the absolute value of str [ a - ] - ' 0 ' - str [ b - 1 ] + ' 0 ' [ENDL] locale loc", "c++": "int main() { string str ; cin >> n >> a >> b ; cin >> str ; cout << abs ( ( str [ a - 1 ] - ' 0 ' ) - ( str [ b - 1 ] - ' 0 ' ) ) << endl ; locale loc ; return 0; }"}}
{"translation": {"en": "declare int variables n , s and e [ENDL] read input to n , s and e [ENDL] declare string variable str [ENDL] read str [ENDL] if str [ s - 1 ] = str [ e - 1 ] [ENDL] print 0 and \" \\ n \" [ENDL] else [ENDL] print 1 and \" \\ n \" [ENDL] declare ints n , a and b", "c++": "int main() { int n , s , e ; cin >> n >> s >> e ; string str ; cin >> str ; if ( str [ s - 1 ] == str [ e - 1 ] ) cout << 0 << \" \\n \" ; else cout << 1 << \" \\n \" ; int n , a , b ; }"}}
{"translation": {"en": "read n , a and b [ENDL] declare integer variables i and val [ENDL] declare vector of integers called v with size n + 1 [ENDL] declare string variable s [ENDL] read input to s [ENDL] for i from 0 to n exclusive [ENDL] if s [ i ] is equal to ' 1 ' [ENDL] set v [ i + 1 ] to 1 [ENDL] else [ENDL] assign 0 to v [ i + 1 ] [ENDL] declare int variable aa = min of a and b [ENDL] declare int variable bb = max of a and b [ENDL] declare int j [ENDL] create int count = 0 [ENDL] loop i from aa while i < = bb [ENDL] if v [ i ] = 0 [ENDL] declare integer variable index = i [ENDL] for j = i to bb inclusive [ENDL] if v [ j ] = 0 , set index to j [ENDL] if index = bb , break the loop [ENDL] if index ! = bb [ENDL] change i to index + 1 [ENDL] increment count by one [ENDL] else [ENDL] create integer index = i [ENDL] for j from i to bb inclusive [ENDL] if v [ j ] is equal to 1 , assign j to index [ENDL] if index is equal to bb , break [ENDL] if index ! = bb [ENDL] set i to index + 1 [ENDL] increment count by one [ENDL] print count [ENDL] declare ints n , a and b", "c++": "int main() { cin >> n >> a >> b ; int i , val ; vector < int > v ( n + 1 ) ; string s ; cin >> s ; for ( i = 0 ; i < n ; i ++ ) if ( s [ i ] == ' 1 ' ) v [ i + 1 ] = 1 ; else v [ i + 1 ] = 0 ; int aa = min ( a , b ) ; } int bb = max ( a , b ) ; int j ; int count = 0 ; for ( i = aa ; i <= bb ; ) if ( v [ i ] == 0 ) int index = i ; for ( j = i ; j <= bb ; j ++ ) if ( v [ j ] == 0 ) index = j ; if ( index == bb ) break ; } if ( index != bb ) i = index + 1 ; count ++ ; else } int index = i ; for ( j = i ; j <= bb ; j ++ ) if ( v [ j ] == 1 ) index = j ; if ( index == bb ) break ; } if ( index != bb ) i = index + 1 ; count ++ ; cout << count << endl ; } } } int n , a , b ; }"}}
{"translation": {"en": "read input to n , a and b [ENDL] declare string s [ENDL] read input to s [ENDL] if s [ a - 1 ] is equal to s [ b - 1 ] [ENDL] print 0 [ENDL] else [ENDL] print 1 [ENDL] let n , a , b be integers", "c++": "int main() { cin >> n >> a >> b ; string s ; cin >> s ; if ( s [ a - 1 ] == s [ b - 1 ] ) cout << ( 0 ) << endl ; else ; cout << ( 1 ) << endl ; int n , a , b ; ; return 0; }"}}
{"translation": {"en": "let s be a string [ENDL] read n , a , b [ENDL] read s [ENDL] if s [ a - 1 ] is equal to s [ b - 1 ] [ENDL] print 0 and newline [ENDL] else do the following [ENDL] print 1 and newline [ENDL] let a be a string", "c++": "int main() { string s ; cin >> n >> a >> b ; cin >> s ; if ( s [ a - 1 ] == s [ b - 1 ] ) cout << 0 << endl ; else return 0; cout << 1 << endl ; string a ; }"}}
{"translation": {"en": "let n be a integer [ENDL] read a [ENDL] read n [ENDL] the 26th element of integer array kiek is equal to 0 [ENDL] if length of a is less than n [ENDL] print impossible and newline [ENDL] for i = 0 to length of a exclusive , increment kiek [ a [ i ] - a ] by 1 [ENDL] let k be a integer with k = 0 [ENDL] for i = 0 to 26 exclusive [ENDL] if kiek [ i ] > = 1 , increment k by 1 [ENDL] if k is less than n [ENDL] print n - k and newline [ENDL] else do the following [ENDL] print 0 and newline [ENDL] semicolumn [ENDL] declare new string s", "c++": "int main() { int n ; cin >> a ; cin >> n ; int kiek [ 26 ] = { 0 } ; if ( a . size ( ) < n ) cout << \" impossible \" << endl ; for ( int i = 0 ; i < a . size ( ) ; i ++ ) { kiek [ a [ i ] - ' a ' ] ++ ; } return 0; } int k = 0 ; for ( int i = 0 ; i < 26 ; i ++ ) if ( kiek [ i ] >= 1 ) k ++ ; if ( k < n ) } cout << n - k << endl ; else cout << \" 0 \" << endl ; ; string s ; return 0; }"}}
{"translation": {"en": "read input to s [ENDL] k is a new integer [ENDL] read input to k [ENDL] create new integer called cnt with value 0 [ENDL] if k is greater than length of s [ENDL] print \" impossible \" [ENDL] else [ENDL] create new integer exrt [ENDL] create new array of integers freq with size 30 filled with 0 [ENDL] for i from 0 to length of s exclusive incrementing i [ENDL] assign the new value = ( s [ i ] ) - 96 to exrt [ENDL] increment freq [ exrt ] by one [ENDL] in a for loop , change i from 0 to 30 exclusive [ENDL] increment cnt if freq [ i ] ! = 0 [ENDL] if k < = cnt [ENDL] print \" 0 \" to the standard output [ENDL] else [ENDL] print k - cnt [ENDL] create constant long long integer INF = ( 1LL < < 60 ) - 1", "c++": "int main() { cin >> s ; int k ; cin >> k ; int cnt = 0 ; if ( k > s . size ( ) ) cout << \" impossible \" << endl ; else int exrt ; int freq [ 30 ] = { 0 } ; for ( int i = 0 ; i < s . size ( ) ; i ++ ) exrt = int ( s [ i ] ) - 96 ; freq [ exrt ] ++ ; for ( int i = 0 ; i < 30 ; i ++ ) } if ( freq [ i ] != 0 ) cnt ++ ; if ( k <= cnt ) } cout << \" 0 \" << endl ; else cout << k - cnt << endl ; const long long int INF = ( 1LL << 60 ) - 1 ; } return 0; }"}}
{"translation": {"en": "new const long long integer MAX = 998244353 [ENDL] fast_exp is a long long int function with long long int arguments base , exp and m [ENDL] declare long long integer variable res = 1 [ENDL] while exp > 0 [ENDL] if exp is odd , assign ( res * base ) % m to res [ENDL] change the value of base to base squared % m [ENDL] divide exp by 2 [ENDL] return res modulo m [ENDL] s is a new string [ENDL] declare integers k and cnt with cnt = 0 [ENDL] read variables s and k from the input [ENDL] freq is a new array of integers with 26 elements filled with 0 [ENDL] declare integer n with value length of s [ENDL] start for loop from i = 0 to n exclusive , incrementing freq [ s [ i ] - ' a ' ] [ENDL] in a for loop , change i from 0 to 26 exclusive incrementing i [ENDL] if freq [ i ] is not 0 , increment cnt by one [ENDL] if cnt > = k [ENDL] print 0 [ENDL] if n is less than k [ENDL] print \" impossible \" [ENDL] print k - cnt [ENDL] declare string s", "c++": "const long long int MAX = 998244353 ; long long int fast_exp ( long long int base , long long int exp , long long int m ) long long int res = 1 ; while ( exp > 0 ) if ( exp % 2 == 1 ) { res = ( res * base ) % m ; } base = ( base * base ) % m ; exp /= 2 ; return res % m ; } string s ; } int main() { int k , cnt = 0 ; cin >> s >> k ; int freq [ 26 ] = { 0 } ; int n = s . length ( ) ; for ( int i = 0 ; i < n ; i ++ ) { freq [ s [ i ] - ' a ' ] ++ ; } for ( int i = 0 ; i < 26 ; i ++ ) if ( freq [ i ] ) { cnt ++ ; } if ( cnt >= k ) } cout << 0 << endl ; if ( n < k ) return 0; } cout << \" impossible \" << endl ; cout << k - cnt << endl ; return 0; } string s ; return 0; }"}}
{"translation": {"en": "read s [ENDL] declare integer n [ENDL] read n [ENDL] if n is greater than integer casted size of s [ENDL] print \" impossible \\ n \" [ENDL] else [ENDL] print maximum of ( o and n - size of integer casted character set initialized with ( beginning of s to end of s ) ) , ' \\ n ' [ENDL] create string a", "c++": "int main() { cin >> s ; int n ; cin >> n ; if ( n > ( int ) s . size ( ) ) cout << \" impossible\\n \" ; else cout << max ( 0 , n - ( int ) set < char > ( s . begin ( ) , s . end ( ) ) . size ( ) ) << ' \\n ' ; string a ; } }"}}
{"translation": {"en": "create int s , num , p [ 1001 ] [ENDL] read a and s [ENDL] if size of a < s [ENDL] print impossible [ENDL] for i = 0 to size of s exclusive [ENDL] if p [ a [ i ] ] = 0 , increment ans [ENDL] set p [ a [ i ] ] = 1 [ENDL] print max of 0 and s - m [ENDL] str = string", "c++": "int s , num , p [ 1001 ] ; cin >> a >> s ; int main() { if ( a . size ( ) < s ) cout << \" impossible \" << endl ; for ( int i = 0 ; i < a . size ( ) ; i ++ ) return 0; } if ( ! p [ a [ i ] ] ) num ++ ; p [ a [ i ] ] = 1 ; cout << max ( 0 , s - num ) << endl ; } string str ; return 0; }"}}
{"translation": {"en": "read str [ENDL] k = long long integer [ENDL] read k [ENDL] freq = long long integer array of size 27 , freq [ 0 ] = 0 [ENDL] if k > size of str [ENDL] print impossible [ENDL] else [ENDL] for i = 0 to size of str exclusive , then increase by 1 freq [ str [ i ] - a + 1 ] [ENDL] count = long long integer = 0 [ENDL] for i = 1 to 26 inclusive [ENDL] if freq [ i ] is not 0 , then increase count by 1 [ENDL] if count > = k [ENDL] print 0 [ENDL] else [ENDL] print k - count [ENDL] print endline [ENDL] declare constant integer maxn = 3e5 + 5", "c++": "int main() { cin >> str ; long long int k ; cin >> k ; long long int freq [ 27 ] = { 0 } ; if ( k > str . size ( ) ) cout << \" impossible \" ; else for ( long long int i = 0 ; i < str . size ( ) ; i ++ ) { freq [ str [ i ] - ' a ' + 1 ] ++ ; } long long int count = 0 ; for ( long long int i = 1 ; i <= 26 ; i ++ ) if ( freq [ i ] != 0 ) count ++ ; if ( count >= k ) } cout << \" 0 \" ; else cout << ( k - count ) ; cout << endl ; } } const int maxn = 3e5 + 5 ; return 0; }"}}
{"translation": {"en": "declare integer array a size 50 = { } [ENDL] declare string s [ENDL] declare integer k [ENDL] read s and k [ENDL] for i = 0 to length of s exclusive , increment a [ s [ i ] - ' a ' ] [ENDL] declare integers sum = 0 , cnt = 0 [ENDL] for i = 0 to 30 exclusive [ENDL] if a [ i ] is greater than 0 , increment cnt [ENDL] increment sum by a [ i ] [ENDL] if sum is less than k , return print \" impossible \" , 0 [ENDL] if cnt is greater than or equal to k , return print \" 0 \" , 0 [ENDL] print k - cnt and newline [ENDL] declare constant integer inf = 0x3f3f3f3f", "c++": "int a [ 50 ] = { } ; string s ; int main() { int k ; cin >> s >> k ; for ( int i = 0 ; i < s . length ( ) ; i ++ ) a [ s [ i ] - ' a ' ] ++ ; int sum = 0 , cnt = 0 ; for ( int i = 0 ; i < 30 ; i ++ ) if ( a [ i ] > 0 ) cnt ++ ; sum += a [ i ] ; if ( sum < k ) return puts ( \" impossible \" ) , 0 ; } if ( cnt >= k ) return puts ( \" 0 \" ) , 0 ; cout << k - cnt << endl ; const int inf = 0x3f3f3f3f ; }"}}
{"translation": {"en": "declare constant integer mod = integer casted 1e9 + 7 [ENDL] declare constant integer maxn = integer casted 1e5 + 5 [ENDL] declare integer array vis size 30 [ENDL] declare string s [ENDL] read s [ENDL] declare integer len = size of s [ENDL] declare integer n [ENDL] read n [ENDL] if n is greater than len , return 0 * print \" impossible \" [ENDL] for i = 0 to len exclusive , increment vis [ s [ i ] - ' a ' ] [ENDL] declare integer cnt = 0 [ENDL] for i = 0 to 26 exclusive [ENDL] if vis [ i ] , increment cnt [ENDL] if cnt is greater than or equal to n [ENDL] print \" 0 \" [ENDL] else [ENDL] print n - cnt and newline [ENDL] s = string", "c++": "const int mod = ( int ) 1e9 + 7 ; const int maxn = ( int ) 1e5 + 5 ; int vis [ 30 ] ; string s ; int main() { cin >> s ; int len = s . size ( ) ; int n ; cin >> n ; if ( n > len ) return 0 * puts ( \" impossible \" ) ; for ( int i = 0 ; i < len ; i ++ ) { vis [ s [ i ] - ' a ' ] ++ ; } int cnt = 0 ; for ( int i = 0 ; i < 26 ; i ++ ) if ( vis [ i ] ) cnt ++ ; if ( cnt >= n ) } puts ( \" 0 \" ) ; else cout << n - cnt << endl ; string s ; return 0; }"}}
{"translation": {"en": "k = int , cnt = array of 26 int filled with 0 [ENDL] read s , k [ENDL] if length of s < k [ENDL] print \" impossibile \" [ENDL] print newline [ENDL] else [ENDL] for i = 0 to length of s exclusive increment cnt [ s [ i ] - 97 ] [ENDL] res = 0 [ENDL] for i = 0 to 26 exclusive [ENDL] if cnt [ i ] increment res [ENDL] print max ( 0 , k - res ) [ENDL] declare integer k", "c++": "int main() { int k , cnt [ 26 ] = { 0 } ; cin >> s >> k ; if ( s . length ( ) < k ) cout << \" impossible \" << \" \\n \" ; else for ( int i = 0 ; i < s . length ( ) ; i ++ ) { cnt [ s [ i ] - 97 ] ++ ; } int res = 0 ; for ( int i = 0 ; i < 26 ; i ++ ) if ( cnt [ i ] ) { res ++ ; } cout << max ( 0 , k - res ) << \" \\n \" ; } int k ; } return 0; }"}}
{"translation": {"en": "declare string s [ENDL] read s and k [ENDL] if size of s is less than k , return print \" impossible \\ n \" , 0 [ENDL] sort from beginning of s to end of s [ENDL] resize s to size ( remove all duplicates but one from ( beginning of s to end of s ) - beginning of s ) [ENDL] print maximum of ( k - integer casted size of s and 0 ) and newline [ENDL] declare integers n , num , ans", "c++": "int main() { string s ; cin >> s >> k ; if ( s . size ( ) < k ) return cout << \" impossible\\n \" , 0 ; sort ( s . begin ( ) , s . end ( ) ) ; s . resize ( unique ( s . begin ( ) , s . end ( ) ) - s . begin ( ) ) ; cout << max ( k - ( int ) s . size ( ) , 0 ) << endl ; int n , num , ans ; return 0; }"}}
{"translation": {"en": "declare string str [ENDL] read str [ENDL] read n [ENDL] if size of str is less than n [ENDL] print \" impossible \\ n \" [ENDL] for i = 0 to 26 exclusive [ENDL] if first index of ' a ' + i in str is not - 1 , increment num [ENDL] print maximum of ( n - num and 0 ) and \" \\ n \" [ENDL] create constant integer N with value 2e6 + 5", "c++": "string str ; cin >> str ; int main() { cin >> n ; if ( str . size ( ) < n ) cout << \" impossible\\n \" ; for ( int i = 0 ; i < 26 ; i ++ ) return 0; } if ( str . find ( ' a ' + i ) != - 1 ) num ++ ; cout << max ( n - num , 0 ) << \" \\n \" ; } const int N = 2e6 + 5 ; return 0; }"}}
{"translation": {"en": "long long function power with long long arguments x and p and unsigned long long argument y [ENDL] create new long long variable res with value 1 [ENDL] assign x modulo p to x [ENDL] while y > 0 [ENDL] if y & 1 is not 0 , change res to ( res * x ) % p [ENDL] assign the new value = y to y [ENDL] change x to ( x * x ) % p [ENDL] return res [ENDL] declare new long long variables i and j [ENDL] declare string variable with name s [ENDL] create new long long k [ENDL] read s and k from the input [ENDL] if k is greater than length of s [ENDL] print \" impossible \" and ' \\ n ' to the standard output [ENDL] else [ENDL] temp is a set of unique characters [ENDL] for i = 0 to length of s exclusive [ENDL] insert s [ i ] into temp [ENDL] if length of temp = k [ENDL] print 0 and ' \\ n ' [ENDL] print k - length of temp and ' \\ n ' [ENDL] declare string s", "c++": "long long power ( long long x , unsigned long long y , long long p ) long long res = 1 ; x = x % p ; while ( y > 0 ) if ( y & 1 ) res = ( res * x ) % p ; y = y >> 1 ; x = ( x * x ) % p ; return res ; } long long i , j ; } string s ; int main() { long long k ; cin >> s >> k ; if ( k > ( long long ) s . size ( ) ) cout << \" impossible \" << ' \\n ' ; else return 0; set < char > temp ; for ( i = 0 ; i < ( long long ) s . size ( ) ; i ++ ) temp . insert ( s [ i ] ) ; if ( ( long long ) temp . size ( ) == k ) cout << 0 << ' \\n ' ; cout << k - ( long long ) temp . size ( ) << ' \\n ' ; return 0; } } string s ; return 0; } return 0; }"}}
{"translation": {"en": "declare integer k [ENDL] read s and k [ENDL] if k is greater than size of s [ENDL] print \" impossible \\ n \" [ENDL] sort from beginning of s to end of s [ENDL] remove from ( remove all but first of ( beginning of s to end of s ) ) to end of s from s [ENDL] print maximum of ( k - integer casted size of s and 0 ) and newline [ENDL] let N , K , ans , val , x , y be integers with ans = 2e9 , A = array of integers of length 26", "c++": "int main() { int k ; cin >> s >> k ; if ( k > s . size ( ) ) cout << \" impossible\\n \" ; sort ( s . begin ( ) , s . end ( ) ) ; return 0; } s . erase ( unique ( s . begin ( ) , s . end ( ) ) , s . end ( ) ) ; cout << max ( k - ( int ) s . size ( ) , 0 ) << endl ; int N , K , ans = 2e9 , A [ 26 ] , val , x , y ; return 0; }"}}
{"translation": {"en": "let T , S be strings [ENDL] read S , N [ENDL] if length of S is less than N [ENDL] print impossible and newline [ENDL] for integer i = 0 to length of S exclusive [ENDL] increment A [ S [ i ] - a ] by 1 [ENDL] if A [ S [ i ] - a is equal to 1 , increment val by 1 [ENDL] print maximum of 0 , N - val and newline [ENDL] create new int k and an array of ints haSh with 30 elements", "c++": "string T , S ; cin >> S >> N ; int main() { if ( S . length ( ) < N ) cout << \" impossible\\n \" ; for ( int i = 0 ; i < S . length ( ) ; i ++ ) return 0; } A [ S [ i ] - ' a ' ] ++ ; if ( A [ S [ i ] - ' a ' ] == 1 ) val ++ ; cout << max ( 0 , N - val ) << ' \\n ' ; } int k , haSh [ 30 ] ; }"}}
{"translation": {"en": "declare string variable s [ENDL] read standard input to s and k [ENDL] if k is greater than length of s [ENDL] print \" impossible \" [ENDL] start for loop from i = 0 to length of s exclusive [ENDL] if haSh [ ( s [ i ] - ' a ' ) ] is false [ENDL] change haSh [ s [ i ] - ' a ' ] to 1 [ENDL] decrement k by one [ENDL] if k < = 0 [ENDL] print 0 [ENDL] else [ENDL] print k [ENDL] declare string variable with name s", "c++": "string s ; cin >> s >> k ; int main() { if ( k > s . size ( ) ) cout << \" impossible \" << endl ; for ( int i = 0 ; i < s . size ( ) ; i ++ ) return 0; } if ( ! haSh [ ( s [ i ] - ' a ' ) ] ) haSh [ s [ i ] - ' a ' ] = 1 ; k -- ; if ( k <= 0 ) } } cout << 0 << endl ; else return 0; cout << k << endl ; string s ; } return 0; }"}}
{"translation": {"en": "k is a new integer [ENDL] read standard input to s and k [ENDL] ms is a set of unique characters [ENDL] insert all elements of s into ms [ENDL] if length of s is less than k [ENDL] print \" impossible \" [ENDL] else [ENDL] if length of ms is less than k [ENDL] print k - length of ms [ENDL] else [ENDL] print 0 to the standard output [ENDL] create new constant integer INF = 0x3f3f3f3f", "c++": "int main() { int k ; cin >> s >> k ; set < char > ms ; for ( int i = 0 ; i < s . size ( ) ; i ++ ) { ms . insert ( s [ i ] ) ; } if ( s . size ( ) < k ) cout << \" impossible \" << endl ; else if ( ms . size ( ) < k ) cout << k - ms . size ( ) << endl ; else cout << 0 << endl ; const int INF = 0x3f3f3f3f ; } return 0; }"}}
{"translation": {"en": "declare integer constant mod with value 998244353 [ENDL] create new string s [ENDL] declare integers k and cnt and an integer array vis with 26 elements [ENDL] read s and k from the input [ENDL] if length of s is less than k [ENDL] return puts ( \" impossible \" ) , 0 [ENDL] else [ENDL] in a for loop , change i from 0 to length of s exclusive [ENDL] if vis [ s [ i ] - ' a ' ] is equal to 0 [ENDL] set the value of vis [ s [ i ] - ' a ' ] to 1 [ENDL] increment cnt [ENDL] if cnt > = k [ENDL] print 0 [ENDL] else [ENDL] print k - cnt [ENDL] create new strings input and insertion", "c++": "const int mod = 998244353 ; string s ; int k , vis [ 26 ] , cnt ; cin >> s >> k ; int main() { if ( s . size ( ) < k ) return puts ( \" impossible \" ) , 0 ; else for ( int i = 0 ; i < s . size ( ) ; i ++ ) if ( vis [ s [ i ] - ' a ' ] == 0 ) vis [ s [ i ] - ' a ' ] = 1 ; cnt ++ ; if ( cnt >= k ) } } cout << 0 << endl ; else cout << k - cnt << endl ; string input , insertion ; } return 0; }"}}
{"translation": {"en": "create new integers unique and inputLength with inputLength = 0 [ENDL] read input and unique from the input [ENDL] assign the new value = length of input to inputLength [ENDL] if inputLength is less than unique [ENDL] print \" impossible \" [ENDL] else [ENDL] create new set of unique strings called inputs [ENDL] start for loop from i = 0 to inputLength exclusive [ENDL] change the value of insertion to input [ i ] [ENDL] insert insertion to the inputs [ENDL] if unique is greater than length of inputs [ENDL] print unique - length of inputs [ENDL] else [ENDL] print 0 [ENDL] maxn = constant integer = 3e5 + 5", "c++": "int main() { int unique , inputLength = 0 ; cin >> input >> unique ; inputLength = input . length ( ) ; if ( inputLength < unique ) cout << \" impossible \" << endl ; else set < string > inputs ; for ( int i = 0 ; i < inputLength ; i ++ ) insertion = input [ i ] ; inputs . insert ( insertion ) ; if ( unique > inputs . size ( ) ) } cout << unique - inputs . size ( ) << endl ; else cout << 0 << endl ; const int maxn = 3e5 + 5 ; } }"}}
{"translation": {"en": "a = integer array of size 50 [ENDL] s = string [ENDL] k = integer [ENDL] read s , k [ENDL] for i = 0 to length of s , then increase a [ s [ i ] - a ] by 1 [ENDL] sum = integer = 0 , cnt = integer = 0 [ENDL] for i = 0 to 30 exclusive [ENDL] if a [ i ] > 0 , then increase cnt by 1 [ENDL] sum = sum + a [ i ] [ENDL] if sum < k , then print impossible then end execution of code [ENDL] if cnt > = k print 0 then end execution of code [ENDL] print k - cnt [ENDL] let n , pre , cur , nex , sum be integers , let sum = 0", "c++": "int a [ 50 ] = { } ; string s ; int main() { int k ; cin >> s >> k ; for ( int i = 0 ; i < s . length ( ) ; i ++ ) a [ s [ i ] - ' a ' ] ++ ; int sum = 0 , cnt = 0 ; for ( int i = 0 ; i < 30 ; i ++ ) if ( a [ i ] > 0 ) cnt ++ ; sum += a [ i ] ; if ( sum < k ) return puts ( \" impossible \" ) , 0 ; } if ( cnt >= k ) return puts ( \" 0 \" ) , 0 ; cout << k - cnt << endl ; int n , pre , cur , nex , sum = 0 ; }"}}
{"translation": {"en": "read n [ENDL] if n equals 1 or 2 , return and print 0 [ENDL] read pre , cur [ENDL] subract 2 from n [ENDL] while n > 0 [ENDL] read nex [ENDL] if cur > pre & & cur > nex or cur < pre & & cur < nex , add one to sum [ENDL] let pre = cur [ENDL] let cur = nex [ENDL] print sum [ENDL] declare integer variable n", "c++": "int main() { cin >> n ; if ( n == 1 || n == 2 ) return cout << 0 << endl , 0 ; cin >> pre >> cur ; n -= 2 ; while ( n -- ) cin >> nex ; if ( ( cur > pre && cur > nex ) || ( cur < pre && cur < nex ) ) sum ++ ; pre = cur ; cur = nex ; cout << sum << endl ; } int n ; return 0; }"}}
{"translation": {"en": "read n [ENDL] create vector of integers a with size n [ENDL] read n elements from the user input and out them into a [ENDL] ans is a new integer with value 0 [ENDL] start a loop from i = 1 to n - 1 exclusive [ENDL] if ( a [ i ] - a [ i - 1 ] ) * ( a [ i ] - a [ i + 1 ] ) is greater than 0 , increment ans [ENDL] print ans [ENDL] declare integers n , c = 0", "c++": "int main() { cin >> n ; vector < int > a ( n ) ; for ( int i = 0 ; i < n ; i ++ ) cin >> a [ i ] ; int ans = 0 ; for ( int i = 1 ; i < n - 1 ; i ++ ) if ( ( a [ i ] - a [ i - 1 ] ) * ( a [ i ] - a [ i + 1 ] ) > 0 ) ans ++ ; cout << ans << endl ; } int n , c = 0 ; return 0; }"}}
{"translation": {"en": "declare integer vector v [ENDL] read n [ENDL] for i = 0 to n exclusive [ENDL] declare integer a [ENDL] read a [ENDL] add a to end of v [ENDL] for i = 1 to n - 1 exclusive [ENDL] if v [ i ] is greater than v [ i + 1 ] and v [ i ] is greater than v [ i - 1 ] [ENDL] increment c [ENDL] else if v [ i ] is less than v [ 1 + i ] and v [ i ] is less than v [ i - 1 ] [ENDL] increment c [ENDL] print c and newline [ENDL] create int a [ 1005 ]", "c++": "int main() { vector < int > v ; cin >> n ; for ( int i = 0 ; i < n ; i ++ ) int a ; cin >> a ; v . push_back ( a ) ; for ( int i = 1 ; i < n - 1 ; i ++ ) } if ( v [ i ] > v [ i + 1 ] && v [ i ] > v [ i - 1 ] ) c ++ ; else if ( v [ i ] < v [ 1 + i ] && v [ i ] < v [ i - 1 ] ) c ++ ; cout << c << endl ; } } int a [ 1005 ] ; return 0; }"}}
{"translation": {"en": "create int n , set ans to 0 [ENDL] read n [ENDL] for i = 0 to n exclusive , read a [ i ] [ENDL] for i = 1 to n - 1 exclusive [ENDL] if a [ i ] > a [ i - 1 ] and a [ i ] > a [ i + 1 ] , increment ans [ENDL] if a [ i ] < a [ i - 1 ] and a [ i ] < a [ i + 1 ] , increment ans [ENDL] print ans [ENDL] create int n , a [ 1001 ]", "c++": "int n , ans = 0 ; int main() { cin >> n ; for ( int i = 0 ; i < n ; i ++ ) { cin >> a [ i ] ; } for ( int i = 1 ; i < n - 1 ; i ++ ) if ( a [ i ] > a [ i - 1 ] && a [ i ] > a [ i + 1 ] ) ans ++ ; if ( a [ i ] < a [ i - 1 ] && a [ i ] < a [ i + 1 ] ) ans ++ ; cout << ans << endl ; } int n , a [ 1001 ] ; }"}}
{"translation": {"en": "read n [ENDL] for i = 1 to n inclusive , read a [ i ] [ENDL] ans = 0 [ENDL] for i = 2 to n exclusive [ENDL] if a [ i ] > a [ i + 1 ] and a [ i ] > a [ i - 1 ] [ENDL] increment ans [ENDL] continue [ENDL] if a [ i ] < a [ i + 1 ] and a [ i ] < a [ i - 1 ] , increment ans [ENDL] print ans [ENDL] maxsum , minsum , a , n = integers with a = array of size 1005", "c++": "cin >> n ; int main() { for ( int i = 1 ; i <= n ; i ++ ) { cin >> a [ i ] ; } int ans = 0 ; for ( int i = 2 ; i < n ; i ++ ) if ( a [ i ] > a [ i + 1 ] && a [ i ] > a [ i - 1 ] ) ans ++ ; continue ; if ( a [ i ] < a [ i + 1 ] && a [ i ] < a [ i - 1 ] ) { ans ++ ; } } cout << ans << endl ; } int maxsum , minsum , a [ 1005 ] , n ; return 0; }"}}
{"translation": {"en": "read n [ENDL] for i = 1 to n , read a [ i ] [ENDL] foe i = 2 to n exclusive [ENDL] if ( a [ i ] > a [ i - 1 ] and a [ i ] > a [ i + 1 ] ) , increment maxsum [ENDL] if ( a [ i ] < a [ i - 1 ] and a [ i ] < a [ i + 1 ] ) , increment minsum [ENDL] print maxsum + minsum [ENDL] declare long long integer n", "c++": "cin >> n ; int main() { for ( int i = 1 ; i <= n ; i ++ ) cin >> a [ i ] ; for ( int i = 2 ; i < n ; i ++ ) if ( a [ i ] > a [ i - 1 ] && a [ i ] > a [ i + 1 ] ) { maxsum ++ ; } if ( a [ i ] < a [ i - 1 ] && a [ i ] < a [ i + 1 ] ) { minsum ++ ; } cout << maxsum + minsum << endl ; } long long int n ; return 0; }"}}
{"translation": {"en": "read n [ENDL] declare long long integer array a size n + 1 = { 0 } [ENDL] for i = 1 to n inclusive , read a [ i ] [ENDL] declare long long integers c = 0 , d = 0 [ENDL] for i = 2 to n exclusive [ENDL] if a [ i ] is greater than a [ i - 1 ] and a [ i ] is greater than a [ i + 1 ] or a [ i ] is less than a [ i - 1 ] and a [ i ] is less than a [ i + 1 ] , increment c [ENDL] print c and newline [ENDL] g = 9 . 8", "c++": "int main() { cin >> n ; long long int a [ n + 1 ] = { 0 } ; for ( int i = 1 ; i <= n ; i ++ ) cin >> a [ i ] ; long long int c = 0 , d = 0 ; for ( int i = 2 ; i < n ; i ++ ) if ( a [ i ] > a [ i - 1 ] && a [ i ] > a [ i + 1 ] || a [ i ] < a [ i - 1 ] && a [ i ] < a [ i + 1 ] ) { c ++ ; } cout << c << endl ; } const double g = 9.8 ; return 0; }"}}
{"translation": {"en": "set mod = 1000000007 [ENDL] create int n , i , j , k , ans [ENDL] set x = 1e5 [ENDL] create long long a [ x ] [ENDL] create int i , j , k , m , n , t [ENDL] read t [ENDL] for i = 0 to t exclusive , read a [ i ] [ENDL] num = 0 [ENDL] for i = 1 to t - 1 exclusive [ENDL] if a [ i ] > a [ i - 1 ] and a [ i ] > a [ i + 1 ] , increment num [ENDL] if a [ i ] < a [ i - 1 ] and a [ i ] < a [ i + 1 ] , add 1 to num [ENDL] print num [ENDL] make constant integer maxn = 1e5 + 5", "c++": "const int mod = 1000000007 ; int n , i , j , k , ans ; const int x = 1e5 ; long long a [ x ] ; int i , j , k , m , n , t ; int main() { cin >> t ; for ( i = 0 ; i < t ; i ++ ) cin >> a [ i ] ; int num = 0 ; for ( i = 1 ; i < t - 1 ; i ++ ) if ( a [ i ] > a [ i - 1 ] && a [ i ] > a [ i + 1 ] ) num ++ ; if ( a [ i ] < a [ i - 1 ] && a [ i ] < a [ i + 1 ] ) num ++ ; cout << num << endl ; } const int maxn = 1e5 + 5 ; return 0; }"}}
{"translation": {"en": "make const double esp = 1e - 8 [ENDL] declare inline read returning integer [ENDL] make int X = 0 and w = 0 [ENDL] let char ch = 0 [ENDL] while ch is not a digit [ENDL] set w to w | ch = = ' - ' [ENDL] read ch [ENDL] while ch is a digit , set X to X < < 3 ) + ( X < < 1 ) + ( ch ^ 48 ) and ch to getchar ( ) [ENDL] return - X if w is truthy or X if not [ENDL] make long long int array a of size maxn [ENDL] make integer n [ENDL] read n [ENDL] for i = 1 to n , read a [ i ] [ENDL] create integer num = 0 [ENDL] for i = 1 to n - 1 [ENDL] if a [ i ] is greater than a [ i + 1 ] and a [ i ] is greater than a [ i - 1 ] or a [ i ] is less than a [ i - 1 ] or a [ i ] is less than a [ i - 1 ] and a [ i ] is less than a [ i + 1 ] , increment num [ENDL] output num [ENDL] create ints n , l , mid , r , and now", "c++": "const double esp = 1e-8 ; inline int read ( ) int X = 0 , w = 0 ; char ch = 0 ; while ( ! isdigit ( ch ) ) w |= ch == ' - ' ; ch = getchar ( ) ; while ( isdigit ( ch ) ) X = ( X << 3 ) + ( X << 1 ) + ( ch ^ 48 ) , ch = getchar ( ) ; } return w ? - X : X ; long long a [ maxn ] ; } int n ; int main() { cin >> n ; for ( int i = 1 ; i <= n ; i ++ ) cin >> a [ i ] ; int num = 0 ; for ( int i = 2 ; i <= n - 1 ; i ++ ) if ( a [ i ] > a [ i + 1 ] && a [ i ] > a [ i - 1 ] || a [ i ] < a [ i - 1 ] && a [ i ] < a [ i + 1 ] ) ++ num ; cout << num << endl ; } int n , l , mid , r , now ; }"}}
{"translation": {"en": "read n [ENDL] make integer ans = 0 [ENDL] read l [ENDL] if n is greater than or equal to 1 [ENDL] end statement [ENDL] if n is greater than or equal to 2 , read mid [ENDL] if n is greater than or equal to 3 [ENDL] set n to n - 2 [ENDL] while n - - is truthy [ENDL] read r [ENDL] if mid is less than 1 and mid is less than r [ENDL] set ans to ans + 1 [ENDL] else if mid is greater than 1 and mid is greater than r [ENDL] set ans to ans + 1 [ENDL] set l to mid [ENDL] set mid to r [ENDL] output ans [ENDL] create int a [ 1002 ] , n , i , set ans to 0", "c++": "cin >> n ; int main() { int ans = 0 ; cin >> l ; if ( n >= 1 ) ; if ( n >= 2 ) { cin >> mid ; } if ( n >= 3 ) n -= 2 ; while ( n -- ) cin >> r ; if ( mid < l && mid < r ) ans ++ ; else if ( mid > l && mid > r ) ans ++ ; l = mid ; mid = r ; cout << ans << endl ; } } int ans = 0 , a [ 1002 ] , n , i ; }"}}
{"translation": {"en": "read n [ENDL] for i = 1 to n inclusive , read a [ i ] [ENDL] for i = 2 to n exclusive [ENDL] if a [ i ] > a [ i + 1 ] and a [ i ] > a [ i - 1 ] [ENDL] increment ans [ENDL] else if a [ i ] < a [ i + 1 ] and a [ i ] < a [ i - 1 ] [ENDL] increment ans [ENDL] print ans [ENDL] a = long long array length 1001", "c++": "int main() { cin >> n ; for ( i = 1 ; i <= n ; i ++ ) { cin >> a [ i ] ; } for ( i = 2 ; i < n ; i ++ ) if ( a [ i ] > a [ i + 1 ] && a [ i ] > a [ i - 1 ] ) ans ++ ; else if ( a [ i ] < a [ i + 1 ] && a [ i ] < a [ i - 1 ] ) ans ++ ; cout << ans << endl ; } } long long a [ 1001 ] ; return 0; }"}}
{"translation": {"en": "let n , ans = 0 be long long [ENDL] read n [ENDL] read the first n elements of a [ENDL] for long long i = 1 to n - 1 exclusive [ENDL] if a [ i ] > a [ i - 1 ] and a [ i ] > a [ i + 1 ] then increment ans [ENDL] if a [ i ] < a [ i - 1 ] and a [ i ] < a [ i + 1 ] then increment ans [ENDL] print ans [ENDL] let n and ans be integers , set ans to 0", "c++": "long long n , ans = 0 ; int main() { cin >> n ; for ( long long i = 0 ; i < n ; i ++ ) cin >> a [ i ] ; for ( long long i = 1 ; i < n - 1 ; i ++ ) if ( a [ i ] > a [ i - 1 ] && a [ i ] > a [ i + 1 ] ) ans ++ ; if ( a [ i ] < a [ i - 1 ] && a [ i ] < a [ i + 1 ] ) ans ++ ; cout << ans << endl ; } int n , ans = 0 ; return 0; }"}}
{"translation": {"en": "read in n [ENDL] let a be an array of integers of size n [ENDL] read in n values into a [ENDL] for i = 1 to n - 1 [ENDL] if a [ i ] > a [ i - 1 ] and a [ i ] > a [ i + 1 ] or a [ i ] < a [ i - 1 ] and a [ i ] < a [ i + 1 ] , increment a [ENDL] print ans and a newline [ENDL] read in n [ENDL] create int n , set c to 0", "c++": "int main() { cin >> n ; int a [ n ] ; for ( int i = 0 ; i < n ; ++ i ) cin >> a [ i ] ; for ( int i = 1 ; i < n - 1 ; ++ i ) if ( a [ i ] > a [ i - 1 ] && a [ i ] > a [ i + 1 ] || a [ i ] < a [ i - 1 ] && a [ i ] < a [ i + 1 ] ) ++ ans ; cout << ans << \" \\n \" ; cin >> n ; int n , c = 0 ; }"}}
{"translation": {"en": "read n [ENDL] create int a [ n + 2 ] [ENDL] for i = 0 to n exclusive , read a [ i ] [ENDL] for i = 1 to n - 1 exclusive [ENDL] if a [ i ] < a [ i - 1 ] and a [ i ] < a [ i + 1 ] [ENDL] increment c [ENDL] else if a [ i ] > a [ i - 1 ] and a [ i ] > a [ i + 1 ] [ENDL] increment c [ENDL] print c [ENDL] let gcd be a function which accepts long integers a and b and returns a long integer", "c++": "int main() { cin >> n ; int a [ n + 2 ] ; for ( int i = 0 ; i < n ; i ++ ) { cin >> a [ i ] ; } for ( int i = 1 ; i < n - 1 ; i ++ ) if ( a [ i ] < a [ i - 1 ] && a [ i ] < a [ i + 1 ] ) c ++ ; else if ( a [ i ] > a [ i - 1 ] && a [ i ] > a [ i + 1 ] ) c ++ ; cout << c << endl ; } } long long gcd ( long long a , long long b ) }"}}
{"translation": {"en": "return a if ( not b ) else return gcd of b and a modulo b [ENDL] let lcm be a function which accepts long integers a and b and returns a long integer [ENDL] return the value of ( a / gcd of a and b ) * b [ENDL] let dix be an integer array with elements as 1 , - 1 , 0 , 0 , 1 , 1 , - 1 , - 1 [ENDL] let diy be an integer array with elements as 0 , 0 , 1 , - 1 , 1 , - 1 , 1 , - 1 [ENDL] let n be a integer [ENDL] read n [ENDL] create a vector of integers v and size n [ENDL] the integer value of res = 0 [ENDL] for i = 0 to n exclusive , read v [ i ] [ENDL] for i = 1 to n - 1 exclusive [ENDL] if v [ i ] is greater than v [ i - 1 ] and v [ i ] is greater than v [ i + 1 ] , increment res by 1 [ENDL] for i = 1 to n - 1 exclusive [ENDL] if v [ i ] is less than v [ i - 1 ] and v [ i ] is less than v [ i + 1 ] , increment res by 1 [ENDL] print res and newline [ENDL] semicolumn [ENDL] n = integer", "c++": "return ! b ? a : gcd ( b , a % b ) ; long long lcm ( long long a , long long b ) } return ( a / gcd ( a , b ) ) * b ; int dix [ ] = { 1 , - 1 , 0 , 0 , 1 , 1 , - 1 , - 1 } ; } int diy [ ] = { 0 , 0 , 1 , - 1 , 1 , - 1 , 1 , - 1 } ; int n ; int main() { cin >> n ; vector < int > v ( n ) ; int res = 0 ; for ( int i = 0 ; i < n ; i ++ ) cin >> v [ i ] ; for ( int i = 1 ; i < n - 1 ; i ++ ) if ( v [ i ] > v [ i - 1 ] && v [ i ] > v [ i + 1 ] ) res ++ ; for ( int i = 1 ; i < n - 1 ; i ++ ) if ( v [ i ] < v [ i - 1 ] && v [ i ] < v [ i + 1 ] ) res ++ ; cout << res << ' \\n ' ; ; return 0; int n ; }"}}
{"translation": {"en": "while read n [ENDL] a = integer array of size 1005 [ENDL] for i = 0 to n exclusive , read a [ i ] [ENDL] num = integer with num = 0 [ENDL] for i = 1 to n - 1 exclusive [ENDL] if ( a [ i ] > a [ i - 1 ] and a [ i ] > a [ i + 1 ] ) , increment num [ENDL] if ( a [ i ] < a [ i - 1 ] and a [ i ] < a [ i + 1 ] ) , increment num [ENDL] print num [ENDL] n = int", "c++": "int main() { while ( cin >> n ) int a [ 1005 ] ; for ( int i = 0 ; i < n ; i ++ ) { cin >> a [ i ] ; } int num = 0 ; for ( int i = 1 ; i < n - 1 ; i ++ ) if ( a [ i ] > a [ i - 1 ] && a [ i ] > a [ i + 1 ] ) num ++ ; if ( a [ i ] < a [ i - 1 ] && a [ i ] < a [ i + 1 ] ) num ++ ; cout << num << endl ; } int n ; } }"}}
{"translation": {"en": "read n [ENDL] arr = int array length n [ENDL] read the first n elements of arr [ENDL] sol = 0 = int [ENDL] for i = 1 to n - 1exclusive [ENDL] if ( ( arr [ i ] - arr [ i - 1 ] ) * ( arr [ i ] - arr [ i + 1 ] ) ) is stricly positive then increment sol [ENDL] print sol [ENDL] r = integer", "c++": "int main() { cin >> n ; int arr [ n ] ; for ( int i = 0 ; i < n ; i ++ ) cin >> arr [ i ] ; int sol = 0 ; for ( int i = 1 ; i < n - 1 ; i ++ ) if ( ( ( arr [ i ] - arr [ i - 1 ] ) * ( arr [ i ] - arr [ i + 1 ] ) ) > 0 ) sol ++ ; cout << sol << endl ; } int r ; return 0; }"}}
{"translation": {"en": "while reading values r [ENDL] sum = integer with 0 [ENDL] a = array of 1001 integers with 0 elements [ENDL] Read r values into array a [ENDL] for i = 1 to r - 1 exclusive [ENDL] if a [ i ] is less than a [ i - 1 ] [ENDL] if a [ i ] is less than a [ i + 1 ] [ENDL] increment sum [ENDL] else do the following [ENDL] do nothing [ENDL] else if a [ i ] is greater than a [ i - 1 ] [ENDL] if a [ i ] is less than a [ i + 1 ] , then increment sum [ENDL] print sum and new line [ENDL] let n , i , extrema = 0 , arr [ 1000 + 5 ] be ints", "c++": "int main() { while ( cin >> r ) int sum = 0 ; int a [ 1001 ] = { 0 } ; for ( int i = 0 ; i < r ; i ++ ) cin >> a [ i ] ; for ( int i = 1 ; i < r - 1 ; i ++ ) if ( a [ i ] < a [ i - 1 ] ) if ( a [ i ] < a [ i + 1 ] ) sum ++ ; else ; else if ( a [ i ] > a [ i - 1 ] ) if ( a [ i ] > a [ i + 1 ] ) sum ++ ; cout << sum << endl ; } int n , i , extrema = 0 , arr [ 1000 + 5 ] ; } }"}}
{"translation": {"en": "read n [ENDL] for i = 0 to n exclusive increment i first , read arr [ i ] [ENDL] for i = 1 to n - 1 increment i first [ENDL] if arr [ i ] > arr [ i - 1 ] and arr [ i ] > arr [ i + 1 ] [ENDL] increment first extrema [ENDL] else if arr [ i ] < arr [ i - 1 ] and arr [ i ] < arr [ i + 1 ] [ENDL] increment first extrema [ENDL] print extrema [ENDL] return 0 [ENDL] let n be a integer", "c++": "int main() { cin >> n ; for ( i = 0 ; i < n ; ++ i ) { cin >> arr [ i ] ; } for ( i = 1 ; i < n - 1 ; ++ i ) if ( arr [ i ] > arr [ i - 1 ] && arr [ i ] > arr [ i + 1 ] ) ++ extrema ; else if ( arr [ i ] < arr [ i - 1 ] && arr [ i ] < arr [ i + 1 ] ) ++ extrema ; cout << extrema << endl ; } return ( 0 ) ; int n ; }"}}
{"translation": {"en": "read n [ENDL] let * elements be a integer with * elements = new int [ n ] [ENDL] for i = 0 to n exclusive , read elements [ i ] [ENDL] the integer value of count = 0 [ENDL] for i = 1 to n - 1 exclusive [ENDL] the integer value of prev = elements [ i - 1 ] [ENDL] the integer value of cur = elements [ i ] [ENDL] the integer value of next = elements [ i + 1 ] [ENDL] if ( cur is less than prev and cur is less than next ) or ( cur is greater than prev and cur is greater than next ) , increment count by 1 [ENDL] print count and newline [ENDL] declare new ints n and k and an int array a with size 1005", "c++": "int main() { cin >> n ; int * elements = new int [ n ] ; for ( int i = 0 ; i < n ; i ++ ) { cin >> elements [ i ] ; } int count = 0 ; for ( int i = 1 ; i < n - 1 ; i ++ ) int prev = elements [ i - 1 ] ; int cur = elements [ i ] ; int next = elements [ i + 1 ] ; if ( ( cur < prev && cur < next ) || ( cur > prev && cur > next ) ) { count ++ ; } cout << count << endl ; } int a [ 1005 ] , n , k ; return 0; }"}}
{"translation": {"en": "read n and loop further [ENDL] change k to 0 [ENDL] read n elements into a in a loop [ENDL] for i from 1 to n - 1 exclusive incrementing i [ENDL] increment k if a [ i ] > a [ i - 1 ] and a [ i ] > a [ i + 1 ] or a [ i ] < a [ i - 1 ] and a [ i ] < a [ i + 1 ] [ENDL] print k to the standard output [ENDL] n , a = ints with a an int array of length 1020", "c++": "int main() { while ( cin >> n ) k = 0 ; for ( int i = 0 ; i < n ; i ++ ) cin >> a [ i ] ; for ( int i = 1 ; i < n - 1 ; i ++ ) if ( a [ i ] > a [ i - 1 ] && a [ i ] > a [ i + 1 ] || a [ i ] < a [ i - 1 ] && a [ i ] < a [ i + 1 ] ) k ++ ; cout << k << endl ; int a [ 1020 ] , n ; } return 0; }"}}
{"translation": {"en": "i = int [ENDL] read n [ENDL] read the first n elements of a [ENDL] cnt = 0 = int [ENDL] for i = 1 to n - 1 exclusive [ENDL] if a at i > a at i - 1 and a at i > a at i + 1 then increment cnt [ENDL] if a [ i ] < a [ i - 1 ] and a [ i + 1 ] > a [ i ] then increment cnt [ENDL] print cnt [ENDL] make ints n and c = 0", "c++": "int main() { int i ; cin >> n ; for ( i = 0 ; i < n ; i ++ ) { cin >> a [ i ] ; } int cnt = 0 ; for ( i = 1 ; i < n - 1 ; i ++ ) if ( a [ i ] > a [ i - 1 ] && a [ i ] > a [ i + 1 ] ) cnt ++ ; if ( a [ i ] < a [ i - 1 ] && a [ i + 1 ] > a [ i ] ) cnt ++ ; cout << cnt << endl ; } int n , c = 0 ; return 0; }"}}
{"translation": {"en": "make integer vector a of size 1000 [ENDL] read n [ENDL] for i = 0 to n exclusive , read a [ i ] [ENDL] for i = 1 to n - 2 [ENDL] if a [ i - 1 ] is greater than a [ i ] and a [ i + 1 ] is greater than a [ i ] , add 1 to c [ENDL] if a [ i - 1 ] is less than a [ i ] and a [ i + 1 ] is less than a [ i ] , increment c [ENDL] show c [ENDL] create integer n", "c++": "vector < int > a ( 1000 ) ; cin >> n ; int main() { for ( __typeof ( n ) i = 0 ; i < ( n ) ; i ++ ) cin >> a [ i ] ; for ( __typeof ( n - 2 ) i = 1 ; i <= ( n - 2 ) ; i ++ ) if ( a [ i - 1 ] > a [ i ] && a [ i + 1 ] > a [ i ] ) c ++ ; if ( a [ i - 1 ] < a [ i ] && a [ i + 1 ] < a [ i ] ) c ++ ; cout << c << \" \\n \" ; } int n ; }"}}
{"translation": {"en": "read n [ENDL] v = array of integers of size n [ENDL] read n integers into array v [ENDL] create integer ans = 0 [ENDL] for q = 1 to n - 1 exclusive [ENDL] if v [ q ] > v [ q - 1 ] and v [ q ] > v [ q + 1 ] then [ENDL] increment ans [ENDL] else if v [ q ] < v [ q - 1 ] and v [ q ] < v [ q + 1 ] then [ENDL] increment ans [ENDL] print ans and newline [ENDL] declare constant integer maxn = 1e4 + 10", "c++": "int main() { cin >> n ; int v [ n ] ; for ( int q = 0 ; q < n ; q ++ ) { cin >> v [ q ] ; } int ans = 0 ; for ( int q = 1 ; q < n - 1 ; q ++ ) if ( v [ q ] > v [ q - 1 ] && v [ q ] > v [ q + 1 ] ) ans ++ ; else if ( v [ q ] < v [ q - 1 ] && v [ q ] < v [ q + 1 ] ) ans ++ ; cout << ans << endl ; } } const int maxn = 1e4 + 10 ; }"}}
{"translation": {"en": "a is a new array of integers with size maxn [ENDL] create integer variable n [ENDL] declare new integer cnt = 0 [ENDL] read variable n from the input [ENDL] start a loop from i = 1 to n inclusive , and read a [ i ] from the input on each loop [ENDL] in a for loop , change i from 2 to n - 1 inclusive incrementing i [ENDL] if a [ i ] > a [ i - 1 ] and a [ i ] > a [ i + 1 ] or a [ i ] < a [ i - 1 ] and a [ i ] < a [ i + 1 ] , increment cnt [ENDL] print cnt [ENDL] create string s", "c++": "int a [ maxn ] ; int n ; int cnt = 0 ; cin >> n ; int main() { for ( int i = 1 ; i <= n ; i ++ ) { cin >> a [ i ] ; } for ( int i = 2 ; i <= n - 1 ; i ++ ) if ( a [ i ] > a [ i - 1 ] && a [ i ] > a [ i + 1 ] || a [ i ] < a [ i - 1 ] && a [ i ] < a [ i + 1 ] ) cnt ++ ; cout << cnt << endl ; } string s ; return 0; }"}}
{"translation": {"en": "read s [ENDL] create character stack st [ENDL] for i = 0 to size of s exclusive [ENDL] if st is empty [ENDL] add element s [ i ] to top of st [ENDL] else if top of st is s [ i ] [ENDL] remove element from top of st [ENDL] else [ENDL] add element s [ i ] to top of st [ENDL] create string tmp with tmp = \" \" [ENDL] while st is not empty [ENDL] increment tmp by top of st [ENDL] remove element from top of st [ENDL] reverse element order between beginning of tmp and end of tmp [ENDL] print tmp print \" \\ n \" [ENDL] create character stack chars", "c++": "int main() { cin >> s ; stack < char > st ; for ( int i = 0 ; i < s . size ( ) ; i ++ ) if ( st . empty ( ) ) st . push ( s [ i ] ) ; else if ( st . top ( ) == s [ i ] ) st . pop ( ) ; else st . push ( s [ i ] ) ; string tmp = \"  \" ; } while ( ! st . empty ( ) ) tmp += st . top ( ) ; st . pop ( ) ; reverse ( tmp . begin ( ) , tmp . end ( ) ) ; } cout << tmp << \" \\n \" ; stack < char > chars ; return 0; }"}}
{"translation": {"en": "create string str [ENDL] read str [ENDL] create character ch [ENDL] for i = 0 to str [ i ] is not ' \\ 0 ' , iincrementing i [ENDL] set ch to str [ i ] [ENDL] if chars is not empty [ENDL] if top of chars is ch [ENDL] remove element from top of chars [ENDL] else [ENDL] add element ch to top of chars [ENDL] else [ENDL] add element ch to top of chars [ENDL] create character vector result [ENDL] while chars is not empty [ENDL] add element top of chars to end of result [ENDL] remove element from top of chars [ENDL] for i = size of result - 1 to 0 inclusive , decrementing i , print result [ i ] [ENDL] print \" \\ n \" [ENDL] OO = const long long with OO = 1e8", "c++": "string str ; int main() { cin >> str ; char ch ; for ( int i = 0 ; str [ i ] != ' \\0 ' ; i ++ ) ch = str [ i ] ; if ( ! chars . empty ( ) ) if ( chars . top ( ) == ch ) chars . pop ( ) ; else chars . push ( ch ) ; else chars . push ( ch ) ; vector < char > result ; } while ( ! chars . empty ( ) ) result . push_back ( chars . top ( ) ) ; chars . pop ( ) ; for ( int i = result . size ( ) - 1 ; i >= 0 ; i -- ) cout << result [ i ] ; } cout << \" \\n \" ; const long long OO = 1e8 ; return 0; }"}}
{"translation": {"en": "o_o = const integer with o_o = 0 [ENDL] EPS = double with EPS = double epsilon numeric_limits [ENDL] MAX = integer const with MAX = 2 * 100000 + 9 [ENDL] ar = character array of size MAX [ENDL] co = integer with co = - 1 [ENDL] in the function inzlition [ENDL] for i = 0 to MAX exclusive , ar [ i ] = 0 [ENDL] text = string [ENDL] read text [ENDL] call inzlition [ENDL] co = - 1 [ENDL] for i = 0 to text . size ( ) exclusive [ENDL] if co is - 1 [ENDL] increment co [ENDL] ar [ co ] = text [ i ] [ENDL] else if text [ i ] is ar [ co ] [ENDL] ar [ co ] = 0 [ENDL] decrement co [ENDL] else [ENDL] increment co [ENDL] ar [ co ] = text [ i ] [ENDL] for j = 0 to co , print ar [ j ] [ENDL] print next line [ENDL] declare string s", "c++": "const int o_o = 0 ; double EPS = numeric_limits < double > :: epsilon ( ) ; int const MAX = 2 * 100000 + 9 ; char ar [ MAX ] ; int co = - 1 ; void inzlition ( ) for ( int i = 0 ; i < MAX ; i ++ ) { ar [ i ] = ' 0 ' ; } string text ; } int main() { getline ( cin , text ) ; inzlition ( ) ; co = - 1 ; for ( int i = 0 ; i < text . size ( ) ; i ++ ) if ( co == - 1 ) co ++ ; ar [ co ] = text [ i ] ; else if ( text [ i ] == ar [ co ] ) ar [ co ] = ' 0 ' ; co -- ; else co ++ ; ar [ co ] = text [ i ] ; for ( int j = 0 ; j <= co ; j ++ ) { cout << ar [ j ] ; } } } cout << endl ; string s ; return 0; }"}}
{"translation": {"en": "create vector of characters a [ENDL] read input to s [ENDL] declare long int n = length of s [ENDL] loop i from 0 to n exclusive [ENDL] if a is empty [ENDL] push s [ i ] into a [ENDL] else if last element of a is not s [ i ] [ENDL] push s [ i ] into a [ENDL] else [ENDL] remove last element from a [ENDL] for i = 0 to length of a exclusive print a [ i ] [ENDL] print a new line [ENDL] create string s", "c++": "int main() { vector < char > a ; cin >> s ; long int n = s . size ( ) ; for ( int i = 0 ; i < n ; i ++ ) if ( a . empty ( ) ) a . push_back ( s [ i ] ) ; else if ( a . back ( ) != s [ i ] ) a . push_back ( s [ i ] ) ; else a . pop_back ( ) ; for ( int i = 0 ; i < a . size ( ) ; i ++ ) cout << a [ i ] ; } } cout << endl ; string s ; return 0; }"}}
{"translation": {"en": "read s [ENDL] create integer i with i = size of s - 1 [ENDL] while i is greater than 0 [ENDL] if s [ i ] is s [ i - 1 ] , erase from i - 1 to length 2 from s [ENDL] decrement i [ENDL] print s print \" \\ n \" [ENDL] x = integer with x = 0", "c++": "cin >> s ; int main() { int i = s . size ( ) - 1 ; while ( i > 0 ) if ( s [ i ] == s [ i - 1 ] ) { s . erase ( i - 1 , 2 ) ; } -- i ; cout << s << \" \\n \" ; } int x = 0 ; return 0; }"}}
{"translation": {"en": "s2 = string [ENDL] read s2 [ENDL] for i = s2 . length ( ) - 2 down to 0 [ENDL] if s2 [ i ] is s2 [ i + 1 ] , erase ( i , 2 ) from s2 [ENDL] print s2 [ENDL] Let s be a string", "c++": "int main() { string s2 ; cin >> s2 ; for ( int i = s2 . length ( ) - 2 ; i >= 0 ; i -- ) if ( s2 [ i ] == s2 [ i + 1 ] ) s2 . erase ( i , 2 ) ; cout << s2 << endl ; } string s ; return 0; }"}}
{"translation": {"en": "Read s [ENDL] Create integer l and set it to length of s [ENDL] for i = 1 to l exclusive [ENDL] if s [ i ] equals s [ i - 1 ] [ENDL] erase characters i - 1 and i from s [ENDL] set i = i - 2 [ENDL] Print s [ENDL] str = string", "c++": "int main() { cin >> s ; int l = s . length ( ) ; for ( int i = 1 ; i < l ; i ++ ) if ( s [ i ] == s [ i - 1 ] ) s . erase ( i - 1 , 2 ) ; i -= 2 ; cout << s << endl ; } } string str ; return 0; }"}}
{"translation": {"en": "read str [ENDL] size = int with size = size of str [ENDL] s = char stack [ENDL] push str [ 0 ] to s [ENDL] for i = 1 to size if s is not empty and str [ i ] is top of s then pop s else push str [ i ] to s [ENDL] ans = string with ans = \" \" [ENDL] loop while s is not empty [ENDL] append top of s to ans [ENDL] pop s [ENDL] reverse ans [ENDL] print ans [ENDL] create constant integer maxn with maxn = 2 * 1e5 + 10", "c++": "int main() { cin >> str ; int size = str . size ( ) ; stack < char > s ; s . push ( str [ 0 ] ) ; for ( int i = 1 ; i < size ; i ++ ) ( ! s . empty ( ) && str [ i ] == s . top ( ) ) ? s . pop ( ) : s . push ( str [ i ] ) ; string ans = \"  \" ; while ( ! s . empty ( ) ) ans += s . top ( ) ; s . pop ( ) ; reverse ( ans . begin ( ) , ans . end ( ) ) ; } cout << ans << endl ; const int maxn = 2 * 1e5 + 10 ; return 0; }"}}
{"translation": {"en": "create character stack s [ENDL] create string array maxn [ENDL] while s is not empty , remove element from top of s [ENDL] create integer len [ENDL] read string into str + 1 [ENDL] set len to string length of str + 1 [ENDL] for i = len to 1 inclusive , decrementing i [ENDL] if not size of s [ENDL] add element str [ i ] to top of s [ENDL] else [ENDL] if top of s is str [ i ] [ENDL] remove element from top of s [ENDL] else [ENDL] add str [ i ] to top of s [ENDL] while s is not empty [ENDL] print top of s [ENDL] remove element from top of s [ENDL] print newline [ENDL] create characters stack s", "c++": "stack < char > s ; char str [ maxn ] ; while ( ! s . empty ( ) ) s . pop ( ) ; int main() { int len ; gets ( str + 1 ) ; len = strlen ( str + 1 ) ; for ( int i = len ; i >= 1 ; i -- ) if ( ! s . size ( ) ) s . push ( str [ i ] ) ; else if ( s . top ( ) == str [ i ] ) s . pop ( ) ; else s . push ( str [ i ] ) ; while ( ! s . empty ( ) ) } } } cout << s . top ( ) ; s . pop ( ) ; cout << endl ; } stack < char > s ; return 0; }"}}
{"translation": {"en": "declare string f [ENDL] read input to f [ENDL] for i from 0 to length of f exclusive [ENDL] if s is empty [ENDL] push f [ i ] to s [ENDL] else [ENDL] if f [ i ] = top element of s [ENDL] remove top element of s [ENDL] else [ENDL] push f [ i ] to s [ENDL] declare string variable t = \" \" [ENDL] while s is not empty [ENDL] add top element of s to t [ENDL] remove top element of s [ENDL] loop i from length of t - 1 to 0 inclusive counting down , print t [ i ] [ENDL] print [ENDL] create string s", "c++": "int main() { string f ; cin >> f ; for ( int i = 0 ; i < f . length ( ) ; i ++ ) if ( s . empty ( ) ) s . push ( f [ i ] ) ; else if ( f [ i ] == s . top ( ) ) s . pop ( ) ; else s . push ( f [ i ] ) ; string t = \"  \" ; } } while ( ! s . empty ( ) ) t += s . top ( ) ; s . pop ( ) ; for ( int i = t . length ( ) - 1 ; i >= 0 ; i -- ) { cout << t [ i ] ; } } cout << endl ; string s ; return 0; }"}}
{"translation": {"en": "read s [ENDL] create character stack c [ENDL] for i = 0 to size of s exclusive [ENDL] if c is not empty and top of c is s [ i ] [ENDL] remove element from top of c [ENDL] else [ENDL] add element s [ i ] to top of c [ENDL] create string a [ENDL] create integer y with y = size of c [ENDL] while c is not empty [ENDL] increment a by top of c [ENDL] remove element from top of c [ENDL] for i = y - 1 to 0 inclusive , decrementing i , print a [ i ] [ENDL] print newline [ENDL] create constant integer N with N = 1e5 + 5", "c++": "int main() { cin >> s ; stack < char > c ; for ( int i = 0 ; i < s . size ( ) ; i ++ ) if ( ! c . empty ( ) && c . top ( ) == s [ i ] ) c . pop ( ) ; else c . push ( s [ i ] ) ; string a ; } int y = c . size ( ) ; while ( ! c . empty ( ) ) a += c . top ( ) ; c . pop ( ) ; for ( int i = y - 1 ; i >= 0 ; i -- ) cout << a [ i ] ; } cout << endl ; const int N = 1e5 + 5 ; return 0; }"}}
{"translation": {"en": "create constant integer inf with inf = 1e9 [ENDL] create constant long long INF with INF = 1e18 [ENDL] create constant double PI with PI = acosign of - 1 . 0 [ENDL] create constant double EPS with EPS = 1e - 8 [ENDL] create constant integer MOD with MOD = 1000000007 [ENDL] create string s [ENDL] read s [ENDL] create character stack st [ENDL] for i = 0 to size of s exclusive [ENDL] if st is empty [ENDL] add element s [ i ] to top of st [ENDL] else [ENDL] if st is not empty and top of st is s [ i ] [ENDL] while st is not empty and top of st is s [ i ] , remove top of st [ENDL] else [ENDL] add element s [ i ] to top of st [ENDL] create string ans with ans = \" \" [ENDL] while st is not emtpy , increment and by top of st , remove top element from st [ENDL] reverse element order from beginning of and to end of ans [ENDL] prnt ans print newline [ENDL] declare string a", "c++": "const int inf = 1e9 ; const long long INF = 1e18 ; const double PI = acos ( - 1.0 ) ; const double EPS = 1e-8 ; const int MOD = 1000000007 ; string s ; int main() { cin >> s ; stack < char > st ; for ( int i = 0 ; i < s . size ( ) ; i ++ ) if ( st . empty ( ) ) st . push ( s [ i ] ) ; else if ( ! st . empty ( ) && st . top ( ) == s [ i ] ) while ( ! st . empty ( ) && st . top ( ) == s [ i ] ) st . pop ( ) ; else st . push ( s [ i ] ) ; string ans = \"  \" ; } } while ( ! st . empty ( ) ) ans += st . top ( ) , st . pop ( ) ; reverse ( ans . begin ( ) , ans . end ( ) ) ; cout << ans << endl ; string a ; return 0; }"}}
{"translation": {"en": "create int i [ENDL] read a [ENDL] loop i from length of a to 0 inclusive decrementing i [ENDL] if a [ i ] = a [ i + 1 ] , remove 2 elements at the index i of a [ENDL] print a [ENDL] create string s", "c++": "int i ; cin >> a ; int main() { for ( i = a . size ( ) ; i >= 0 ; i -- ) if ( a [ i ] == a [ i + 1 ] ) a . erase ( i , 2 ) ; cout << a << endl ; } string s ; ; }"}}
{"translation": {"en": "get s [ENDL] create character array stack with size of s [ENDL] create long integer j with j = 0 [ENDL] for integer i = 0 to size of s exclusive [ENDL] if j is equal to 0 then [ENDL] set stack [ j ] to s [ i ] and increment j [ENDL] else if stack [ j - 1 ] not equal to s [ i ] then [ENDL] set stack [ j ] to s [ i ] and increment j [ENDL] else do the following [ENDL] decrement j [ENDL] for i = 0 to j exclusive print stack [ i ] [ENDL] print a new line [ENDL] maxn = const int with maxn = 200010", "c++": "int main() { cin >> s ; char stack [ s . size ( ) ] ; long int j = 0 ; for ( int i = 0 ; i < s . size ( ) ; i ++ ) if ( j == 0 ) stack [ j ++ ] = s [ i ] ; else if ( stack [ j - 1 ] != s [ i ] ) stack [ j ++ ] = s [ i ] ; else j -- ; for ( int i = 0 ; i < j ; i ++ ) { cout << stack [ i ] ; } } } cout << endl ; const int maxn = 200010 ; return 0; }"}}
{"translation": {"en": "str = char array of size maxn [ENDL] loop while reading str [ENDL] j , len = int with j = 1 and len = strlen of str [ENDL] for i = 1 to len [ENDL] if str [ i ] is str [ j - 1 ] [ENDL] decrement j [ENDL] set str [ j ] to ' \\ 0 ' [ENDL] else [ENDL] set str [ j ] to str [ i ] then increment j [ENDL] set str [ j ] to ' \\ 0 ' [ENDL] print str [ENDL] create stack of chars st", "c++": "char str [ maxn ] ; while ( cin >> str ) int main() { int j = 1 , len = strlen ( str ) ; for ( int i = 1 ; i < len ; i ++ ) if ( str [ i ] == str [ j - 1 ] ) j -- ; str [ j ] = ' \\0 ' ; else str [ j ++ ] = str [ i ] ; str [ j ] = ' \\0 ' ; } } cout << str << endl ; stack < char > st ; } return 0; }"}}
{"translation": {"en": "declare string s [ENDL] read input to s [ENDL] for i = 0 to length of s exclusive [ENDL] if st is not empty and top element of st is not s [ i ] [ENDL] remove top element of st [ENDL] else [ENDL] push s [ i ] into st [ENDL] set s to \" \" [ENDL] while st is not emptu [ENDL] increase s by top element of st [ENDL] remove top element of st [ENDL] loop i from length of s - 1 to 0 inclusive decrementing i , printing s [ i ] [ENDL] print a new line [ENDL] s = string", "c++": "string s ; int main() { cin >> s ; for ( int i = 0 ; i < s . length ( ) ; i ++ ) if ( ! st . empty ( ) && st . top ( ) == s [ i ] ) st . pop ( ) ; else st . push ( s [ i ] ) ; s = \"  \" ; while ( ! st . empty ( ) ) s += st . top ( ) ; st . pop ( ) ; for ( int i = s . length ( ) - 1 ; i >= 0 ; i -- ) cout << s [ i ] ; } cout << endl ; string s ; return 0; }"}}
{"translation": {"en": "read s [ENDL] for i = s . size ( ) - 2 down to 0 [ENDL] if s [ i ] is s [ i + 1 ] , erase ( i , 2 ) from s [ENDL] print s [ENDL] s = string array", "c++": "int main() { cin >> s ; for ( int i = s . size ( ) - 2 ; i >= 0 ; i -- ) if ( s [ i ] == s [ i + 1 ] ) { s . erase ( i , 2 ) ; } cout << s << endl ; } string s ; return 0; }"}}
{"translation": {"en": "read s [ENDL] for i = ( s . length ( ) - 1 ) to greater than or equal to 0 do the following [ENDL] if s [ i ] is s [ i + 1 ] then do the following s . erase ( i , 2 ) [ENDL] output s [ENDL] declare const int INF = 1e9 + 7 casted to int", "c++": "int main() { cin >> s ; for ( int i = ( s . length ( ) - 1 ) ; i >= 0 ; i -- ) if ( s [ i ] == s [ i + 1 ] ) s . erase ( i , 2 ) ; cout << s << endl ; } const int INF = int ( 1e9 + 7 ) ; return 0; }"}}
{"translation": {"en": "create string s [ENDL] read s [ENDL] p is a stack of chars [ENDL] loop a from 0 to length of s exclusive [ENDL] if p is empty [ENDL] push s [ a ] into p [ENDL] else [ENDL] if top element of p = s [ a ] [ENDL] remove top element from p [ENDL] else [ENDL] push s [ a ] into p [ENDL] assign \" \" to s [ENDL] while p is not empty [ENDL] append top element of p to s [ENDL] remove top element from p [ENDL] reverse s [ENDL] print s [ENDL] create string s", "c++": "string s ; int main() { cin >> s ; stack < char > p ; for ( int a = 0 ; a < s . size ( ) ; a ++ ) if ( p . empty ( ) ) p . push ( s [ a ] ) ; else if ( p . top ( ) == s [ a ] ) p . pop ( ) ; else p . push ( s [ a ] ) ; s = \"  \" ; } } while ( ! p . empty ( ) ) s += p . top ( ) ; p . pop ( ) ; reverse ( ( s ) . begin ( ) , ( s ) . end ( ) ) ; } cout << s << endl ; string s ; return 0; }"}}
{"translation": {"en": "read s [ENDL] create character stack st [ENDL] for i = 0 to size of s exclusive [ENDL] if st is not empty and s [ i ] is top of st [ENDL] remove element from top of st [ENDL] else [ENDL] add element s [ i ] to top of st [ENDL] set s to \" \" [ENDL] while st is not empty [ENDL] increment s by top of st [ENDL] remove top element from st [ENDL] for i = size of s - 1 to 0 inclusive , decrementing i , print s [ i ] [ENDL] print newline [ENDL] make string str", "c++": "int main() { cin >> s ; stack < char > st ; for ( int i = 0 ; i < s . size ( ) ; i ++ ) if ( ! st . empty ( ) && s [ i ] == st . top ( ) ) st . pop ( ) ; else st . push ( s [ i ] ) ; s = \"  \" ; } while ( ! st . empty ( ) ) s += st . top ( ) ; st . pop ( ) ; for ( int i = s . size ( ) - 1 ; i >= 0 ; i -- ) cout << s [ i ] ; } cout << endl ; string str ; }"}}
{"translation": {"en": "read str [ENDL] let ints pearls = 0 and links = 0 [ENDL] for i = 0 to str . size ( ) exclusive [ENDL] if str [ i ] is equal to ' o ' [ENDL] increment pearls [ENDL] else do [ENDL] add 1 to links [ENDL] if pearls is equal to 0 or links is equal to 0 [ENDL] print \" YES \" [ENDL] if ( links % pearls ) is not equal to 0 [ENDL] show \" NO \" [ENDL] otherwise [ENDL] display \" YES \" [ENDL] maxn = 110", "c++": "int main() { cin >> str ; int pearls = 0 , links = 0 ; for ( int i = 0 ; i < str . size ( ) ; i ++ ) if ( str [ i ] == ' o ' ) pearls ++ ; else links ++ ; if ( pearls == 0 || links == 0 ) } cout << \" YES \" << endl ; if ( ( links % pearls ) != 0 ) return 0; } cout << \" NO \" << endl ; else cout << \" YES \" << endl ; const int maxn = 110 ; }"}}
{"translation": {"en": "inf = 3fffffff in exadecimal [ENDL] s = array of maxn char [ENDL] s = string [ENDL] read s [ENDL] cnt1 , cnt2 = 0 [ENDL] for i = 0 to size of s exclusive [ENDL] if s [ i ] is ' o ' [ENDL] increment cnt1 [ENDL] else [ENDL] increment cnt2 [ENDL] if cnt1 is 0 [ENDL] print YES [ENDL] else [ENDL] if cnt2 modulo cnt1 is 0 [ENDL] print YES [ENDL] else [ENDL] print NO [ENDL] declare character array s size 106", "c++": "const int inf = 0x3f3f3f3f ; char s [ maxn ] ; string s ; int main() { cin >> s ; int cnt1 = 0 , cnt2 = 0 ; for ( int i = 0 ; i < s . size ( ) ; i ++ ) if ( s [ i ] == ' o ' ) cnt1 ++ ; else cnt2 ++ ; if ( cnt1 == 0 ) } cout << \" YES \" << endl ; else if ( cnt2 % cnt1 == 0 ) cout << \" YES \" << endl ; else cout << \" NO \" << endl ; char s [ 106 ] ; } return 0; }"}}
{"translation": {"en": "while read string into s [ENDL] declare integers a = 0 , b = 0 , ll = string length of s [ENDL] for i = 0 to ll exclusive [ENDL] if s [ i ] is ' - ' [ENDL] increment a [ENDL] else if s [ i ] is ' o ' [ENDL] increment b [ENDL] if b is 0 or a % b is 0 [ENDL] print \" YES \" [ENDL] else [ENDL] print \" NO \" [ENDL] declare string s", "c++": "int main() { while ( gets ( s ) ) int a = 0 , b = 0 , ll = strlen ( s ) ; for ( int i = 0 ; i < ll ; i ++ ) if ( s [ i ] == ' - ' ) a ++ ; else if ( s [ i ] == ' o ' ) b ++ ; if ( b == 0 || a % b == 0 ) } puts ( \" YES \" ) ; else puts ( \" NO \" ) ; string s ; } }"}}
{"translation": {"en": "read s [ENDL] declare integers z = 0 , x = 0 [ENDL] for i = 0 to length of s exclusive [ENDL] if s [ i ] is ' o ' , increment z [ENDL] if s [ i ] is ' - ' , increment x [ENDL] if z is 0 or x is 0 or x % z is 0 [ENDL] print \" YES \" and newline [ENDL] else [ENDL] print \" NO \" and newline [ENDL] create chars zhu and xian and char array s of size 243554", "c++": "int main() { cin >> s ; int z = 0 , x = 0 ; for ( int i = 0 ; i < s . length ( ) ; i ++ ) if ( s [ i ] == ' o ' ) { z ++ ; } if ( s [ i ] == ' - ' ) { x ++ ; } if ( z == 0 || x == 0 || x % z == 0 ) } cout << \" YES \" << endl ; else cout << \" NO \" << endl ; char s [ 243554 ] , zhu , xian ; } return 0; }"}}
{"translation": {"en": "read s [ENDL] make int len = strlen ( s ) [ENDL] for i = 0 to len exclusive [ENDL] if s [ i ] is equal to ' 0 ' [ENDL] increment zhu [ENDL] else do [ENDL] increase xian by 1 [ENDL] if zhu is equal to 0 [ENDL] print \" YES \" [ENDL] else if xian modulo zhu is 0 [ENDL] print \" YES \" [ENDL] else [ENDL] print \" NO \" [ENDL] maxn = 110 = int const", "c++": "gets ( s ) ; int main() { int len = strlen ( s ) ; for ( int i = 0 ; i < len ; ++ i ) if ( s [ i ] == ' o ' ) ++ zhu ; else ++ xian ; if ( zhu == 0 ) } puts ( \" YES \" ) ; else if ( xian % zhu == 0 ) puts ( \" YES \" ) ; else puts ( \" NO \" ) ; const int maxn = 110 ; return 0; }"}}
{"translation": {"en": "inf = 0x3f3f3f3f = const int [ENDL] s = char array of length maxn [ENDL] s = string [ENDL] read s [ENDL] cnt1 = cnt2 = 0 = int [ENDL] for i = 0 to size of s [ENDL] if s at i is ' o ' [ENDL] increment cnt1 [ENDL] else [ENDL] increment cnt2 [ENDL] if cnt1 = 0 [ENDL] print YES [ENDL] else [ENDL] if cnt2 mod cnt1 is 0 [ENDL] print YES [ENDL] else [ENDL] print NO [ENDL] s = string", "c++": "const int inf = 0x3f3f3f3f ; char s [ maxn ] ; string s ; int main() { cin >> s ; int cnt1 = 0 , cnt2 = 0 ; for ( int i = 0 ; i < s . size ( ) ; i ++ ) if ( s [ i ] == ' o ' ) cnt1 ++ ; else cnt2 ++ ; if ( cnt1 == 0 ) } cout << \" YES \" << endl ; else if ( cnt2 % cnt1 == 0 ) cout << \" YES \" << endl ; else cout << \" NO \" << endl ; string s ; } return 0; }"}}
{"translation": {"en": "read s [ENDL] x = 0 = int [ENDL] for i = 0 to length of s [ENDL] if s [ i ] = ' o ' then increment x [ENDL] if x = 0 [ENDL] print YES and new line [ENDL] else [ENDL] if length of s mod x = 0 [ENDL] print YES [ENDL] else [ENDL] print NO [ENDL] declare new string called s", "c++": "int main() { cin >> s ; int x = 0 ; for ( int i = 0 ; i < s . length ( ) ; i ++ ) if ( s [ i ] == ' o ' ) { x ++ ; } if ( x == 0 ) } cout << \" YES \" << ' \\n ' ; else if ( s . length ( ) % x == 0 ) cout << \" YES \" << ' \\n ' ; else cout << \" NO \" << ' \\n ' ; string s ; } } return 0; }"}}
{"translation": {"en": "create ints p and l = 0 [ENDL] read from the input to s [ENDL] for integer i = 0 to length of s exclusive [ENDL] if s [ i ] = ' - ' [ENDL] increment l by one [ENDL] else [ENDL] increment p [ENDL] if p = 0 or l % p = 0 [ENDL] print \" YES \" [ENDL] else [ENDL] print \" NO \" [ENDL] s = string", "c++": "int p = 0 , l = 0 ; cin >> s ; int main() { for ( int i = 0 ; i < s . length ( ) ; i ++ ) if ( s [ i ] == ' - ' ) l ++ ; else p ++ ; if ( ( p == 0 ) || ( l % p == 0 ) ) } cout << \" YES \" << endl ; else cout << \" NO \" << endl ; string s ; return 0; }"}}
{"translation": {"en": "j , k = integers , both set to 0 [ENDL] Read s [ENDL] for i = 0 to length of string s exclusive [ENDL] if s [ i ] is - [ENDL] increment j [ENDL] else do the following [ENDL] increment k [ENDL] if k is equal to 0 [ENDL] print Yes and a new line [ENDL] else if j modulo k is 0 [ENDL] print Yes and a new line [ENDL] else do the following [ENDL] print NO and new line [ENDL] set INF to 0x3f3f3f3f", "c++": "int main() { int j = 0 , k = 0 ; cin >> s ; for ( int i = 0 ; i < s . length ( ) ; i ++ ) if ( s [ i ] == ' - ' ) j ++ ; else k ++ ; if ( k == 0 ) } cout << \" YES \" << endl ; else if ( j % k == 0 ) cout << \" YES \" << endl ; else cout << \" NO \" << endl ; const int INF = 0x3f3f3f3f ; return 0; }"}}
{"translation": {"en": "create char s [ 1005 ] [ENDL] create int i , j and k [ENDL] create int n and m [ENDL] read s [ENDL] set cou and co to 0 [ENDL] for i = 0 to length of s exclusive [ENDL] if s [ i ] = o [ENDL] increment cou [ENDL] else [ENDL] increment co [ENDL] if cou = 0 [ENDL] print YES [ENDL] if co < cou and > 0 [ENDL] print NO [ENDL] else [ENDL] if co mod cou = 0 [ENDL] print YES [ENDL] else [ENDL] print NO [ENDL] x , o = integers with x = 0 , o = 0", "c++": "char s [ 1005 ] ; int i , j , k ; int main() { int n , m ; cin >> s ; int cou = 0 , co = 0 ; for ( i = 0 ; i < strlen ( s ) ; i ++ ) if ( s [ i ] == ' o ' ) cou ++ ; else co ++ ; if ( cou == 0 ) } cout << \" YES \" << endl ; if ( co < cou && co > 0 ) return 0; } cout << \" NO \" << endl ; else if ( co % cou == 0 ) cout << \" YES \" << endl ; else cout << \" NO \" << endl ; int x = 0 , o = 0 ; } }"}}
{"translation": {"en": "n = string [ENDL] Read n [ENDL] for i = 0 to length of string t exclusive [ENDL] if n [ i ] is o [ENDL] increment o [ENDL] else do the following [ENDL] increment x [ENDL] if o is greater than 0 [ENDL] if x modulo o is 0 [ENDL] print YES and a new line [ENDL] else do the following [ENDL] print NO and a new line [ENDL] else do the following [ENDL] print YES and a new line [ENDL] set char to S [ 101 ]", "c++": "int main() { string n ; cin >> n ; for ( int i = 0 ; i < n . length ( ) ; i ++ ) if ( n [ i ] == ' o ' ) o ++ ; else x ++ ; if ( o > 0 ) } if ( x % o == 0 ) cout << \" YES\\n \" ; else cout << \" NO\\n \" ; else cout << \" YES\\n \" ; char S [ 101 ] ; }"}}
{"translation": {"en": "set pearls and dash to 0 [ENDL] read S [ENDL] for i = 0 to S [ i ] [ENDL] if S [ i ] = - [ENDL] increment dash [ENDL] else [ENDL] increment pearls [ENDL] if pearls = 0 or dash mod pearls = 0 [ENDL] print YES and a newline [ENDL] else [ENDL] print NO and a newline [ENDL] len , n1 , n2 = long long integers", "c++": "int main() { int pearls = 0 , dash = 0 ; cin >> S ; for ( int i = 0 ; S [ i ] ; i ++ ) if ( S [ i ] == ' - ' ) dash ++ ; else pearls ++ ; if ( pearls == 0 || dash % pearls == 0 ) } } cout << \" YES\\n \" ; else cout << \" NO\\n \" ; int len , n1 , n2 ; } }"}}
{"translation": {"en": "s = array of 105 characters [ENDL] Read s [ENDL] set len to length of string s [ENDL] for i = 0 to len exclusive [ENDL] if s [ i ] is o [ENDL] increment n1 [ENDL] else if s [ i ] is - [ENDL] increment n2 [ENDL] if n1 is 0 [ENDL] print YES and a new line [ENDL] else if n2 modulo n1 is 0 [ENDL] print YES and a new line [ENDL] else do the following [ENDL] print NO and a new line [ENDL] count , p , i , n = integers with count = 0 , p = 0", "c++": "char s [ 105 ] ; cin >> s ; int main() { len = strlen ( s ) ; for ( int i = 0 ; i < len ; i ++ ) if ( s [ i ] == ' o ' ) n1 ++ ; else if ( s [ i ] == ' - ' ) n2 ++ ; if ( n1 == 0 ) cout << \" YES \" << endl ; else if ( n2 % n1 == 0 ) cout << \" YES \" << endl ; else cout << \" NO \" << endl ; int count = 0 , p = 0 , i , n ; return 0; }"}}
{"translation": {"en": "a = string [ENDL] Read a [ENDL] set n to length of string a [ENDL] for i = 0 to n exclusive [ENDL] if a [ i ] is - [ENDL] increment count [ENDL] else do the following [ENDL] increment p [ENDL] if count is 0 OR p is 0 [ENDL] print YES and a new line [ENDL] else if count modulo p is 0 [ENDL] print YES and a new line [ENDL] else do the following [ENDL] print NO and a new line [ENDL] declare string variable with name cad", "c++": "int main() { string a ; cin >> a ; n = a . length ( ) ; for ( i = 0 ; i < n ; i ++ ) if ( a [ i ] == ' - ' ) count ++ ; else p ++ ; if ( count == 0 || p == 0 ) } cout << \" YES \" << endl ; else if ( count % p == 0 ) cout << \" YES \" << endl ; else cout << \" NO \" << endl ; string cad ; return 0; }"}}
{"translation": {"en": "read cad from the input [ENDL] declare new int variables guiones and perlas = 0 [ENDL] for integer i = 0 to length of cad exclusive incrementing i [ENDL] if cad [ i ] is equal to ' - ' [ENDL] increment guiones by one [ENDL] else [ENDL] increment perlas [ENDL] if guiones or perlas is equal to 0 [ENDL] print \" YES \\ n \" to the standard output [ENDL] else [ENDL] if guiones is less than perlas [ENDL] print \" NO \\ n \" [ENDL] else [ENDL] if guiones = perlas [ENDL] print \" YES \\ n \" to the standard output [ENDL] else [ENDL] if guiones % perlas = 0 [ENDL] print \" YES \\ n \" [ENDL] else [ENDL] print \" NO \\ n \" [ENDL] link , pearl = integers with link = 0 , pearl = 0", "c++": "int main() { cin >> cad ; int guiones = 0 , perlas = 0 ; for ( int i = 0 ; i < cad . size ( ) ; i ++ ) if ( cad [ i ] == ' - ' ) guiones ++ ; else perlas ++ ; if ( guiones == 0 || perlas == 0 ) cout << \" YES\\n \" ; else if ( guiones < perlas ) cout << \" NO\\n \" ; else if ( guiones == perlas ) cout << \" YES\\n \" ; else if ( guiones % perlas == 0 ) cout << \" YES\\n \" ; else cout << \" NO\\n \" ; int link = 0 , pearl = 0 ; } } } return 0; }"}}
{"translation": {"en": "str = string [ENDL] read str [ENDL] for i = 0 to str . length ( ) exclusive [ENDL] if ( str [ i ] is - ) [ENDL] increment link [ENDL] else [ENDL] increment pearl [ENDL] if ( pearl is 0 ) [ENDL] print YES [ENDL] if ( link % pearl = = 0 ) [ENDL] print YES [ENDL] else [ENDL] print NO [ENDL] s = string", "c++": "int main() { string str ; cin >> str ; for ( int i = 0 ; i < str . length ( ) ; i ++ ) if ( str [ i ] == ' - ' ) link ++ ; else pearl ++ ; if ( pearl == 0 ) } cout << \" YES \" << endl ; if ( link % pearl == 0 ) return 0; } cout << \" YES \" << endl ; else cout << \" NO \" << endl ; string s ; return 0; }"}}
{"translation": {"en": "read s [ENDL] bul = integer = 0 , ris = integer = 0 [ENDL] for i = 0 to length of s exclusive [ENDL] if s [ i ] is - [ENDL] ris = ris + 1 [ENDL] else [ENDL] bul = bul + 1 [ENDL] if bul is 0 [ENDL] print YES [ENDL] else if ris modulo bul is 0 [ENDL] print YES [ENDL] else [ENDL] print NO [ENDL] a = array of 1001 char", "c++": "int main() { cin >> s ; int bul = 0 , ris = 0 ; for ( int i = 0 ; i < s . length ( ) ; i ++ ) if ( s [ i ] == ' - ' ) ris += 1 ; else bul += 1 ; if ( bul == 0 ) } cout << \" YES \" << endl ; else if ( ris % bul == 0 ) cout << \" YES \" << endl ; else cout << \" NO \" << endl ; char a [ 1001 ] ; }"}}
{"translation": {"en": "n , m = int [ENDL] while read a [ENDL] n , m = 0 [ENDL] for i = 0 to length of s exclusive [ENDL] if a [ i ] is ' - ' [ENDL] increment n [ENDL] else if a [ i ] is ' o ' [ENDL] increment m [ENDL] if n is 0 or m is 0 or n modulo m is 0 [ENDL] print YES [ENDL] else [ENDL] print NO [ENDL] s = string", "c++": "int main() { int n , m ; while ( cin >> a ) n = 0 , m = 0 ; for ( int i = 0 ; i < strlen ( a ) ; i ++ ) if ( a [ i ] == ' - ' ) n ++ ; else if ( a [ i ] == ' o ' ) m ++ ; if ( n == 0 || m == 0 || n % m == 0 ) } } cout << \" YES \" << endl ; else cout << \" NO \" << endl ; string s ; } } }"}}
{"translation": {"en": "a , b = integers [ENDL] Read s [ENDL] for i = 0 to length of string s exclusive [ENDL] if s [ i ] is - [ENDL] increment b [ENDL] else do the following [ENDL] increment a [ENDL] if a is 0 OR b modulo a is 0 [ENDL] print YES and a new line [ENDL] else do the following [ENDL] print NO and a new line [ENDL] Create constant integer maxN with value 10 ^ 5", "c++": "int main() { int a = 0 , b = 0 ; cin >> s ; for ( int i = 0 ; i < s . length ( ) ; i ++ ) if ( s [ i ] == ' - ' ) b ++ ; else a ++ ; if ( a == 0 || b % a == 0 ) } cout << \" YES \" << endl ; else cout << \" NO \" << endl ; const int maxN = ( int ) 1e5 ; }"}}
{"translation": {"en": "n , x , y = integers [ENDL] read n , x , and y [ENDL] create double t and set it to ceil of n * y * 1 . 0 / 100 . 0 [ENDL] call max on ( int ) t - x and 0 and print the result [ENDL] declare const int M = 100 + 5", "c++": "int n , x , y ; int main() { cin >> n >> x >> y ; double t = ceil ( n * y * 1.0 / 100.0 ) ; cout << max ( ( int ) t - x , 0 ) << endl ; const int M = 100 + 5 ; }"}}
{"translation": {"en": "declare ints n , x and y [ENDL] read n , x and y [ENDL] declare integer variable tmp = n * y / 100 + ( ( n * y ) % 100 ! = 0 ) - x [ENDL] declare integer ans = max of tmp and 0 [ENDL] print ans [ENDL] define ints n , x , and y", "c++": "int n , x , y ; int main() { cin >> n >> x >> y ; int tmp = n * y / 100 + ( ( n * y ) % 100 != 0 ) - x ; int ans = max ( tmp , 0 ) ; cout << ans << endl ; int n , x , y ; return 0; }"}}
{"translation": {"en": "read n , x , and y [ENDL] define integer z and set it to the ceiling of ( ( double ) n * y / 100 ) [ENDL] if z is greater than x [ENDL] print z - x followed by a newline [ENDL] else [ENDL] print 0 followed by a newline [ENDL] create long longs n , x , y , ans and xx", "c++": "int main() { cin >> n >> x >> y ; int z = ceil ( ( double ) n * y / 100 ) ; if ( z > x ) cout << z - x << endl ; else cout << 0 << endl ; long long n , x , y , ans , xx ; }"}}
{"translation": {"en": "read n , x and y [ENDL] change xx to n * y / 100 [ENDL] while xx * 100 < n * y [ENDL] set ans to max of 0LL and xx - x [ENDL] print ans and \" \\ n \" [ENDL] create integers n , x , y", "c++": "int main() { cin >> n >> x >> y ; xx = n * y / 100 ; while ( xx * 100 < n * y ) xx ++ ; ans = max ( 0LL , xx - x ) ; cout << ans << \" \\n \" ; int n , x , y ; return 0; }"}}
{"translation": {"en": "create integer p with p = 1 [ENDL] read n [ENDL] read x [ENDL] read y [ENDL] set p to n * y [ENDL] if p % 100 is not 0 [ENDL] set p to p / 100 + 1 [ENDL] else [ENDL] set p to p / 100 [ENDL] if p is less than or equal to x [ENDL] print 0 print newline [ENDL] else [ENDL] print p - x print newline [ENDL] create doubles size_n , size_x , size_y", "c++": "int main() { int p = 1 ; cin >> n ; cin >> x ; cin >> y ; p = n * y ; if ( p % 100 != 0 ) p = p / 100 + 1 ; else p = p / 100 ; if ( p <= x ) cout << 0 << endl ; else cout << p - x << endl ; double size_n , size_x , size_y ; return 0; }"}}
{"translation": {"en": "create double result [ENDL] create doubles man , have_now [ENDL] read size_n read size_x read size_y [ENDL] set man to size_n * 0 . 01 [ENDL] set have_now to size_x / man [ENDL] if have_now is less than size_y [ENDL] set result to ( size_y - have_now ) * man [ENDL] if double casted ( integer casted ( result ) ) is not result , increment result by 1 [ENDL] else [ENDL] set result to 0 [ENDL] print integer casted result print newline [ENDL] define doubles n , x , and y", "c++": "double result ; double man , have_now ; int main() { cin >> size_n >> size_x >> size_y ; man = size_n * 0.01 ; have_now = size_x / man ; if ( have_now < size_y ) result = ( size_y - have_now ) * man ; if ( double ( int ( result ) ) != result ) result += 1 ; else result = 0 ; cout << int ( result ) << endl ; double n , x , y ; return 0; }"}}
{"translation": {"en": "read n , x , y [ENDL] define int r , setting it to the ceiling of ( y / 100 * n ) [ENDL] if x > = r . . . [ENDL] print 0 and a newline [ENDL] otherwise . . . [ENDL] print the difference of r and x , followed by a newline [ENDL] declare long long int variables x , y and n", "c++": "int main() { cin >> n >> x >> y ; int r = ceil ( y / 100 * n ) ; if ( x >= r ) cout << 0 << ' \\n ' ; else cout << r - x << ' \\n ' ; long long int x , y , n ; return 0; }"}}
{"translation": {"en": "read n , x and y [ENDL] create double m = ( n * y ) / 100 [ENDL] declare long long int dem = m rounded up [ENDL] if x > = dem [ENDL] print 0 [ENDL] else [ENDL] print dem - x [ENDL] n , x , y = integers", "c++": "int main() { cin >> n >> x >> y ; double m = ( double ( n * y ) / 100 ) ; long long int dem = ceil ( m ) ; if ( x >= dem ) cout << 0 << endl ; else cout << dem - x << endl ; int n , x , y ; } }"}}
{"translation": {"en": "read n , x , y [ENDL] print max ( 0 , ( n * y + 99 ) / 100 - x ) [ENDL] create constant long long mod with mod = 1e9 + 7", "c++": "cin >> n >> x >> y ; int main() { cout << max ( 0 , ( n * y + 99 ) / 100 - x ) << endl ; const long long mod = 1e9 + 7 ; }"}}
{"translation": {"en": "create constant integer N with N = 1e5 + 5 [ENDL] declare gcd with long longs a , b as arguments , returning long long [ENDL] return result of run gcd with b , a % b as arguments if b is true , else a [ENDL] declare pwr with long longs x , y as arguments , returning long long [ENDL] declare isprime with long long x as argument , returning boolean [ENDL] create integers n , x , y [ENDL] read n read x read y [ENDL] create integer ans with ans = ( ( n * y ) / 100 + boolean casted ( ( n * y ) % 100 ) [ENDL] if x is greater than ans [ENDL] print 0 print newline [ENDL] print ans - x print newline [ENDL] declare pwr with long longs x , y as arguments , returning long long [ENDL] create long long ans with ans = 1 [ENDL] set x to x % mod [ENDL] while y is greater than 0 [ENDL] if y bitwise and 1 , set ans to ( x * ans ) % mod [ENDL] set x to ( x * x ) % mod [ENDL] set y to y / 2 [ENDL] return ans from function [ENDL] declare isprime with long long x as argument , returning boolean [ENDL] if x is less than 2 , return false from function [ENDL] if x is less than 4 , return true from function [ENDL] if x % 2 is 0 or x % 3 is 0 , return false from fucntion [ENDL] for i = 5 to i * i is less than or equal to x , increment i by 6 [ENDL] if x % i is 0 or x % ( i + 2 ) is 0 , return false from function [ENDL] return true from function [ENDL] integers = n , x , y", "c++": "const int N = 1e5 + 5 ; long long gcd ( long long a , long long b ) return b ? gcd ( b , a % b ) : a ; long long pwr ( long long x , long long y ) ; } bool isprime ( long long x ) ; int n , x , y ; int main() { cin >> n >> x >> y ; int ans = ( ( n * y ) / 100 + bool ( ( n * y ) % 100 ) ) ; if ( x > ans ) cout << 0 << endl ; cout << ( ans - x ) << endl ; return 0; } long long pwr ( long long x , long long y ) return 0; } long long ans = 1 ; x = x % mod ; while ( y > 0 ) if ( y & 1 ) ans = ( x * ans ) % mod ; x = ( x * x ) % mod ; y = y / 2 ; return ans ; } bool isprime ( long long x ) } if ( x < 2 ) return false ; if ( x < 4 ) return true ; if ( x % 2 == 0 || x % 3 == 0 ) return false ; for ( long long i = 5 ; i * i <= x ; i += 6 ) if ( x % i == 0 || x % ( i + 2 ) == 0 ) return false ; return true ; } int n , x , y ; }"}}
{"translation": {"en": "read n , x , y [ENDL] ans is the rounding up of ( ( double ) y / 100 * n ) [ENDL] if ans - x is greater than 0 then do the following [ENDL] output ans - x [ENDL] else [ENDL] output 0 [ENDL] create long long array spf with size 100001", "c++": "int main() { cin >> n >> x >> y ; int ans = ceil ( ( double ) y / 100 * n ) ; if ( ans - x > 0 ) cout << ans - x << endl ; else cout << 0 << endl ; long long spf [ 100001 ] ; }"}}
{"translation": {"en": "declare gcd with long longs a , b as arguments , returning long long [ENDL] declare palindrome with string s as argument , returning long long [ENDL] declare modexp with long longs a , b , m as arguments , returning long long [ENDL] declare sieve with no arguments , returning void [ENDL] declare ceil with long longs a , b as arguments , returning long long [ENDL] declare getFactorization with long long x as argument , returning long long vector [ENDL] declare getZarr with string str , long long array Z as arguments , returning void [ENDL] declare prefix_function with string s as argument , returning long long vector [ENDL] create long doubles n , x , y [ENDL] read n read x read y [ENDL] create long double ans with ans = ( n * y ) / 100 - x [ENDL] if ans is less than 0 , set ans to 0 [ENDL] print result of run ceil with ans as argument print newline [ENDL] declare gcd with long longs a , b as arguments , returning long long [ENDL] if a is 0 , return b from function [ENDL] if b is 0 , return a from function [ENDL] if a is b , return a from function [ENDL] if a is greater than b , return result of run gcd with a % b , b as arguments , from function [ENDL] return result of run gcd with a , b % a as arguments , from function [ENDL] declare palindrome with string s as argument , returning long long [ENDL] create long long l with l = 0 [ENDL] create long long h with h = length of s - 1 [ENDL] while h is greater than l [ENDL] if s [ increment l ] is not s [ decrement h ] , return 0 from function [ENDL] return 1 from function [ENDL] declare modexp with long longs a , b , m as arguments , returning long long [ENDL] if b is 0 , return 1 from function [ENDL] create long long temp with temp = result of run modexp with a , b / 2 , m as arguments [ENDL] set temp to ( temp * temp ) % m [ENDL] if b bitwise and 1 , return ( temp * ( a % m ) ) % m from function [ENDL] return temp from function [ENDL] declare sieve with no arguments , returning void [ENDL] set spf [ 1 ] to 1 [ENDL] for i = 2 to 100001 exclusive , set spf [ i ] to i [ENDL] for i = 4 to 100001 exclusive , incrementing i by 2 , set spf [ i ] to 2 [ENDL] for i = 3 to i * i is less than 100001 , incrementing i [ENDL] if spf [ i ] is i [ENDL] for j = i * i to 100001 exclusive , incrementing j by i [ENDL] if spf [ j ] is j , set spf [ j ] to i [ENDL] declare getFactorization with long long x as argument , returning long long vector [ENDL] create long long vector ret [ENDL] while x is not 1 [ENDL] add element spf [ x ] to end of ret [ENDL] set x to x / spf [ x ] [ENDL] return ret from function [ENDL] declare ceil with long longs a , b as arguments , returning long long [ENDL] return a / b + ( a % b is not 0 ) [ENDL] declare getZarr with string str , long long array Z as arguments , returning void [ENDL] create long long n with n = length of str [ENDL] create long longs L , R , K [ENDL] set L to R to 0 [ENDL] for i = 1 to n exclusive [ENDL] if i is greater than R [ENDL] set L to R to i [ENDL] while R is less than n and str [ R - L ] is str [ R ] , increment R [ENDL] set Z [ i ] to R - L [ENDL] decrement R [ENDL] else [ENDL] set k to i - L [ENDL] if Z [ k ] is less than R - i + 1 [ENDL] set Z [ i ] to Z [ k ] [ENDL] else [ENDL] set L to i [ENDL] while R is less than n and str [ R - L ] is str [ R ] , increment R [ENDL] set Z [ i ] to R - L [ENDL] decrement R [ENDL] declare prefix_function with string s as argument , returning long long vector [ENDL] create long long n with n = long long casted length of s [ENDL] create long long vector pi initialized with n [ENDL] for i = 1 to n exclusive [ENDL] create long long j with j = pi [ i - 1 ] [ENDL] while j is greater than 0 and s [ i ] is not s [ j ] , set j to pi [ j - 1 ] [ENDL] if s [ i ] is s [ j ] , increment j [ENDL] set pi [ i ] to j [ENDL] return pi from function [ENDL] declare doubles n , x and y", "c++": "long long gcd ( long long a , long long b ) ; long long palindrome ( string s ) ; long long modexp ( long long a , long long b , long long m ) ; void sieve ( ) ; long long ceil ( long long a , long long b ) ; vector < long long > getFactorization ( long long x ) ; void getZarr ( string str , long long Z [ ] ) ; vector < long long > prefix_function ( string s ) ; long double n , x , y ; int main() { cin >> n >> x >> y ; long double ans = ( n * y ) / 100 - x ; if ( ans < 0 ) ans = 0 ; cout << ceil ( ans ) << endl ; long long gcd ( long long a , long long b ) } if ( a == 0 ) return b ; if ( b == 0 ) return a ; if ( a == b ) return a ; if ( a > b ) return gcd ( a % b , b ) ; return gcd ( a , b % a ) ; long long palindrome ( string s ) } long long l = 0 ; long long h = s . length ( ) - 1 ; while ( h > l ) if ( s [ l ++ ] != s [ h -- ] ) { return 0 ; } return 1 ; } long long modexp ( long long a , long long b , long long m ) } if ( b == 0 ) return 1 ; long long temp = modexp ( a , b / 2 , m ) ; temp = ( temp * temp ) % m ; if ( b & 1 ) return ( temp * ( a % m ) ) % m ; return temp ; void sieve ( ) } spf [ 1 ] = 1 ; for ( long long i = 2 ; i < 100001 ; i ++ ) spf [ i ] = i ; for ( long long i = 4 ; i < 100001 ; i += 2 ) spf [ i ] = 2 ; for ( long long i = 3 ; i * i < 100001 ; i ++ ) if ( spf [ i ] == i ) for ( long long j = i * i ; j < 100001 ; j += i ) if ( spf [ j ] == j ) spf [ j ] = i ; vector < long long > getFactorization ( long long x ) } } } vector < long long > ret ; while ( x != 1 ) ret . push_back ( spf [ x ] ) ; x = x / spf [ x ] ; return ret ; } long long ceil ( long long a , long long b ) } return a / b + ( a % b != 0 ) ; void getZarr ( string str , long long Z [ ] ) } long long n = str . length ( ) ; long long L , R , k ; L = R = 0 ; for ( long long i = 1 ; i < n ; ++ i ) if ( i > R ) L = R = i ; while ( R < n && str [ R - L ] == str [ R ] ) R ++ ; Z [ i ] = R - L ; R -- ; else k = i - L ; if ( Z [ k ] < R - i + 1 ) Z [ i ] = Z [ k ] ; else L = i ; while ( R < n && str [ R - L ] == str [ R ] ) R ++ ; Z [ i ] = R - L ; R -- ; vector < long long > prefix_function ( string s ) } } } } long long n = ( long long ) s . length ( ) ; vector < long long > pi ( n ) ; for ( long long i = 1 ; i < n ; i ++ ) long long j = pi [ i - 1 ] ; while ( j > 0 && s [ i ] != s [ j ] ) j = pi [ j - 1 ] ; if ( s [ i ] == s [ j ] ) j ++ ; pi [ i ] = j ; return pi ; } double n , x , y ; }"}}
{"translation": {"en": "read n , x and y [ENDL] declare integer variable temp = x [ENDL] while ( x / n ) * 100 < y [ENDL] print x - temp [ENDL] declare integers n , x and y", "c++": "int main() { cin >> n >> x >> y ; int temp = x ; while ( ( x / n ) * 100 < y ) { x ++ ; } cout << x - temp << endl ; int n , x , y ; }"}}
{"translation": {"en": "read n , x and y [ENDL] create int res = ( ( y / 100 . 0 ) * n ) rounded up - x [ENDL] if res is less than 0 [ENDL] print 0 [ENDL] else [ENDL] print res [ENDL] create constant integer MOD with MOD = 1e9 + 7", "c++": "int main() { cin >> n >> x >> y ; int res = ceil ( ( y / 100.0 ) * n ) - x ; if ( res < 0 ) cout << 0 << endl ; else cout << res << endl ; const int MOD = 1e9 + 7 ; } return 0; }"}}
{"translation": {"en": "declare gcd with doubles a , b as arguments , returning double [ENDL] return b if a is less than 0 . 01 , else result of run gcd with ( ( floating point remainder of b / a ) , a ) as arguments from function [ENDL] declare max with long long integers a , b as arguments , returning long long integer [ENDL] return a if a is greater than b , else b from function [ENDL] declare max with long long integers a , b , c as arguments , returning long long integer [ENDL] return maximum of ( a and maximum of ( b and c ) ) from function [ENDL] declare min with long long integers a , b as arguments , returning long long integer [ENDL] return a if a is less than b , else b from function [ENDL] declare min with long long integers a , b , c as arguments , returning long long integer [ENDL] return minimum of ( a and minimum of ( b and c ) ) from function [ENDL] declare power with long long integers x , y as arguments , returning long long integer [ENDL] declare long long integer res with res = 1 [ENDL] set x to x % MOD [ENDL] while y is greater than 0 [ENDL] if y bitwise and 1 , set res to ( res * x ) % MOD [ENDL] set y to y bitshift right 1 [ENDL] set x to ( x * x ) % MOD [ENDL] return res from function [ENDL] declare swap with character pointers x , y as arguments , returning void [ENDL] create character temp [ENDL] set temp to value of y [ENDL] set value of y to value of x [ENDL] set value of x to temp [ENDL] declare mod with long long integer a as argument , returning long long integer [ENDL] if a is greater than 0 [ENDL] return a [ENDL] else [ENDL] return - a [ENDL] create integers n , x , y [ENDL] read n read x read y [ENDL] create integer r with r = round up ( ( n * y ) / 100 . 0 ) [ENDL] print r - x if ( r - x ) is greater than or equal to 0 , else 0 print newline [ENDL] n , x , y = int", "c++": "double gcd ( double a , double b ) return a < 0.01 ? b : gcd ( fmod ( b , a ) , a ) ; long long int max ( long long int a , long long int b ) } return ( a > b ) ? a : b ; long long int max ( long long int a , long long int b , long long int c ) } return max ( a , max ( b , c ) ) ; long long int min ( long long int a , long long int b ) } return ( a < b ) ? a : b ; long long int min ( long long int a , long long int b , long long int c ) } return min ( a , min ( b , c ) ) ; long long int power ( long long int x , long long int y ) } long long int res = 1 ; x = x % MOD ; while ( y > 0 ) if ( y & 1 ) res = ( res * x ) % MOD ; y = y >> 1 ; x = ( x * x ) % MOD ; return res ; } void swap ( char * x , char * y ) } char temp ; temp = * y ; * y = * x ; * x = temp ; long long int mod ( long long int a ) } if ( a > 0 ) return a ; else return - a ; int n , x , y ; } int main() { cin >> n >> x >> y ; int r = ceil ( ( n * y ) / 100.0 ) ; cout << ( ( ( r - x ) >= 0 ) ? r - x : 0 ) << endl ; int n , x , y ; return 0; }"}}
{"translation": {"en": "read n then x then y [ENDL] temp = int with temp = ( y * n / 100 ) + 1 if ( y * n % 100 ) is not 0 [ENDL] decrement temp by x [ENDL] if temp is less or equal to 0 [ENDL] print \" 0 \" [ENDL] else [ENDL] print temp [ENDL] Create x , y , and z as double precision number", "c++": "int main() { cin >> n >> x >> y ; int temp = ( y * n / 100 ) + ( ( y * n % 100 ) ? 1 : 0 ) ; temp -= x ; if ( temp <= 0 ) cout << \" 0\\n \" ; else cout << temp << ' \\n ' ; double x , y , z ; return 0; }"}}
{"translation": {"en": "Set x to the first input , y to the second input , and z to the third input [ENDL] Create ans as an integer and set to the next bigger integer of ( x * z ) / 100 then subtract y [ENDL] If ans is negative [ENDL] Output 0 [ENDL] Otherwise [ENDL] Output ans [ENDL] create doubles n , x , y", "c++": "int main() { cin >> x >> y >> z ; int ans = ceil ( ( x * z ) / 100 ) - y ; if ( ans < 0 ) cout << 0 << \" \\n \" ; else cout << ans << \" \\n \" ; double n , x , y ; return 0; }"}}
{"translation": {"en": "read n read x read y [ENDL] create long long z with z = round up ( ( y / 100 ) * n ) [ENDL] create long long ans with ans = 0 [ENDL] if z is greater than x , set ans to z - x [ENDL] print ans print newline [ENDL] let n , x , y be ints", "c++": "int main() { cin >> n >> x >> y ; long long z = ceil ( ( y / 100 ) * n ) ; long long ans = 0 ; if ( z > x ) { ans = z - x ; } cout << ans << endl ; int n , x , y ; return 0; }"}}
{"translation": {"en": "read n , x , and y [ENDL] print ( y * n - min ( y * n , x * 100 ) + 99 ) / 100 [ENDL] create int n , x and y", "c++": "int main() { cin >> n >> x >> y ; cout << ( y * n - min ( y * n , x * 100 ) + 99 ) / 100 << endl ; int n , x , y ; return 0; }"}}
{"translation": {"en": "read n , x , y [ENDL] set p to ( x * 100 . 0 ) / ( n * 1 . 0 ) [ENDL] if p > = y [ENDL] print 0 [ENDL] S = 0 [ENDL] for i = x + 1 to 1000010 inclusive [ENDL] increment S [ENDL] if ( i * 100 . 0 ) / ( n * 1 . 0 ) > = y , break the loop [ENDL] print S [ENDL] define ints n , x , y", "c++": "int main() { cin >> n >> x >> y ; double p = ( x * 100.0 ) / ( n * 1.0 ) ; if ( p >= y ) cout << 0 << endl ; int S = 0 ; return 0; } for ( int i = x + 1 ; i <= 1000010 ; i ++ ) S ++ ; if ( ( i * 100.0 ) / ( n * 1.0 ) >= y ) break ; cout << S << endl ; } int n , x , y ; return 0; }"}}
{"translation": {"en": "read n , x , and y [ENDL] define int clones set to ( n y + 99 ) / 100 - x [ENDL] if clones is negative , then set clones to 0 [ENDL] print clones and newline [ENDL] N , K , ans , A , val , x , y = integers with A = array of size 10", "c++": "int main() { cin >> n >> x >> y ; int clones = ( n * y + 99 ) / 100 - x ; if ( clones < 0 ) { clones = 0 ; } cout << clones << endl ; int N , K , ans , A [ 10 ] , val , x , y ; return 0; }"}}
{"translation": {"en": "T , S , P = string [ENDL] cek = bool [ENDL] read N , x , y [ENDL] print max ( 0 , ( N * y - 1 ) / 100 + 1 - x ) [ENDL] create integers x , y , z , t1 , t2 , t3", "c++": "string T , S , P ; bool cek ; cin >> N >> x >> y ; int main() { cout << max ( 0 , ( N * y - 1 ) / 100 + 1 - x ) << ' \\n ' ; int x , y , z , t1 , t2 , t3 ; }"}}
{"translation": {"en": "read x read y read z read t1 read t2 read t3 [ENDL] create integers el , st [ENDL] set el to absolute value of ( x - z ) * t2 + 3 * t3 + absolute value of ( y - x ) * t2 [ENDL] set st to absolute value of ( x - y ) * t1 [ENDL] if st is less than el [ENDL] print \" NO \\ n \" [ENDL] else [ENDL] print \" YES \\ n \" [ENDL] x , y , z , t1 , t2 , t3 = integers", "c++": "int main() { cin >> x >> y >> z >> t1 >> t2 >> t3 ; int el , st ; el = abs ( x - z ) * t2 + 3 * t3 + abs ( y - x ) * t2 ; st = abs ( x - y ) * t1 ; if ( st < el ) cout << \" NO\\n \" ; else cout << \" YES\\n \" ; int x , y , z , t1 , t2 , t3 ; return 0; }"}}
{"translation": {"en": "read x and y and z and t1 and t2 and t3 [ENDL] set k = x - y [ENDL] if k < 0 set k = k * - 1 [ENDL] set l = z - x [ENDL] if l < 0 then l = l * - 1 [ENDL] set stairs = k * t1 [ENDL] set elevator = 1 * t2 + k * t2 + 3 * t3 [ENDL] if stairs < elevator [ENDL] print NO [ENDL] else [ENDL] print YES [ENDL] create integers x , y , z , t1 , t2 , t3 , st , el", "c++": "int main() { cin >> x >> y >> z >> t1 >> t2 >> t3 ; int k = x - y ; if ( k < 0 ) { k = k * ( - 1 ) ; } int l = z - x ; if ( l < 0 ) { l = l * ( - 1 ) ; } int stairs = k * t1 ; int elevator = l * t2 + k * t2 + 3 * t3 ; if ( stairs < elevator ) cout << \" NO \" << endl ; else cout << \" YES \" << endl ; int x , y , z , t1 , t2 , t3 , st , el ; } return 0; }"}}
{"translation": {"en": "read x read y read z read t1 read t2 read t3 [ENDL] set st to absolute value of ( x - y ) * t1 [ENDL] set el to ( absolute value of ( x - z ) + absolute value of ( x - y ) ) * t2 + t3 * 3 [ENDL] if el is less than or equal to st [ENDL] print \" YES \" print newline [ENDL] else [ENDL] print \" NO \" print newline [ENDL] create integers x , y , z , t1 , t2 , t3", "c++": "int main() { cin >> x >> y >> z >> t1 >> t2 >> t3 ; st = abs ( x - y ) * t1 ; el = ( abs ( x - z ) + abs ( x - y ) ) * t2 + t3 * 3 ; if ( el <= st ) cout << \" YES \" << endl ; else cout << \" NO \" << endl ; int x , y , z , t1 , t2 , t3 ; return 0; }"}}
{"translation": {"en": "read x read y read z read t1 read t2 read t3 [ENDL] if ( ( absolute value of ( z - x ) + absolute value of ( x - y ) ) * t2 + 3 * t3 is less than or equal to absolute value of ( x - y ) * t1 [ENDL] print \" YES \" print newline [ENDL] else [ENDL] print \" NO \" print newline [ENDL] x , y , z , t1 , t2 , t3 = integers", "c++": "cin >> x >> y >> z >> t1 >> t2 >> t3 ; int main() { if ( ( fabs ( z - x ) + fabs ( x - y ) ) * t2 + 3 * t3 <= fabs ( x - y ) * t1 ) cout << \" YES \" << endl ; else cout << \" NO \" << endl ; int x , y , z , t1 , t2 , t3 ; return 0; }"}}
{"translation": {"en": "Read x , y , z , t1 , t2 , t3 [ENDL] masha_time = integer , set to absolute value of x - y * t1 [ENDL] elevator_time = integer , set to absolute value of x - z * t2 + absolute value of x - y * t2 + t3 + t3 + t3 [ENDL] if elevator_time is less than or equal to masha_time [ENDL] print YES and a new line [ENDL] else do the following [ENDL] print NO and a new line [ENDL] let x , y , z , t1 , t2 and t3 be integers", "c++": "int main() { cin >> x >> y >> z >> t1 >> t2 >> t3 ; int masha_time = abs ( x - y ) * t1 ; int elevator_time = abs ( x - z ) * t2 + abs ( x - y ) * t2 + t3 + t3 + t3 ; if ( elevator_time <= masha_time ) cout << \" YES \" << endl ; else cout << \" NO \" << endl ; int x , y , z , t1 , t2 , t3 ; }"}}
{"translation": {"en": "read x , y , z , t1 , t2 and t3 [ENDL] if abs ( x - z ) * t2 + abs ( x - y ) * t2 + t3 * 3 < = abs ( x - y ) * t1 [ENDL] print \" YES \" and ' \\ n ' [ENDL] else [ENDL] print \" NO \" and ' \\ n ' [ENDL] create constant integer INF with INF = 0x3f3f3f3f", "c++": "int main() { cin >> x >> y >> z >> t1 >> t2 >> t3 ; if ( abs ( x - z ) * t2 + abs ( x - y ) * t2 + t3 * 3 <= abs ( x - y ) * t1 ) cout << \" YES \" << ' \\n ' ; else cout << \" NO \" << ' \\n ' ; const int INF = 0x3f3f3f3f ; return 0; }"}}
{"translation": {"en": "create integers x , y , z , t1 , t2 , t3 [ENDL] read x read y read z read t1 read t2 read t3 [ENDL] create integers tv , ts with tv = 0 , ts = 0 [ENDL] set ts to t1 * absolute value of ( y - x ) [ENDL] set tv to t2 * absolute value of ( z - x ) + t2 * absolute value of ( y - x ) + t3 * 3 [ENDL] if tv is less than or equal to ts [ENDL] print \" YES \" [ENDL] else [ENDL] print \" NO \" [ENDL] create integers x , y , z , t1 , t2 , t3", "c++": "int x , y , z , t1 , t2 , t3 ; int main() { cin >> x >> y >> z >> t1 >> t2 >> t3 ; int tv = 0 , ts = 0 ; ts = t1 * abs ( y - x ) ; tv = t2 * abs ( z - x ) + t2 * abs ( y - x ) + t3 * 3 ; if ( tv <= ts ) puts ( \" YES \" ) ; else puts ( \" NO \" ) ; int x , y , z , t1 , t2 , t3 ; return 0; }"}}
{"translation": {"en": "read x read y read z read t1 read t2 read t3 [ENDL] create integer str_dif with str_dif = x - y [ENDL] create integer elv_dif with elv_dif = x - z [ENDL] if str_dif is less than 0 or elv_dif is less than 0 [ENDL] if str_dif is less than 0 , set str_dif to str_dif * - 1 [ENDL] if elv_dif is less than 0 , set elv_dif to elv_dif * - 1 [ENDL] create integer str_time with str_time = str_dif * t1 [ENDL] create integer elv_time with elv_time = elv_dif * t2 + str_dif * t2 + 3 * t3 [ENDL] if str_time is less than elv_time [ENDL] print \" NO \" print newline [ENDL] else [ENDL] print \" YES \" print newline [ENDL] x , y , z , t1 , t2 , t3 = integers", "c++": "int main() { cin >> x >> y >> z >> t1 >> t2 >> t3 ; int str_dif = x - y ; int elv_dif = x - z ; if ( str_dif < 0 || elv_dif < 0 ) if ( str_dif < 0 ) str_dif = str_dif * - 1 ; if ( elv_dif < 0 ) elv_dif = elv_dif * - 1 ; int str_time = str_dif * t1 ; } int elv_time = elv_dif * t2 + str_dif * t2 + 3 * t3 ; if ( str_time < elv_time ) cout << \" NO \" << endl ; else cout << \" YES \" << endl ; int x , y , z , t1 , t2 , t3 ; }"}}
{"translation": {"en": "read x , y , z , t1 , t2 , t3 [ENDL] set stairs to abs ( y - x ) * t1 [ENDL] elevator = abs ( z - x ) * t2 + abs ( y - x ) * t2 + 3 * t3 [ENDL] if elevator < = stairs [ENDL] print YES [ENDL] else [ENDL] print NO [ENDL] x , y , z , t1 , t2 , t3 = integers", "c++": "int main() { cin >> x >> y >> z >> t1 >> t2 >> t3 ; int stairs = abs ( y - x ) * t1 ; int elevator = abs ( z - x ) * t2 + abs ( y - x ) * t2 + 3 * t3 ; if ( elevator <= stairs ) cout << \" YES \" << endl ; else cout << \" NO \" << endl ; int x , y , z , t1 , t2 , t3 ; } return 0; }"}}
{"translation": {"en": "read x , y , z , t1 , t2 and t3 [ENDL] if ( ( ( abs ( x - y ) + abs ( x - z ) ) * t2 ) + ( 3 * t3 ) < = ( ( abs ( x - y ) ) * t1 ) ) ) [ENDL] print YES [ENDL] else [ENDL] print NO [ENDL] declare integer variables x , y , z , t1 , t2 and t3", "c++": "int main() { cin >> x >> y >> z >> t1 >> t2 >> t3 ; if ( ( ( abs ( x - y ) + abs ( x - z ) ) * t2 ) + ( 3 * t3 ) <= ( ( abs ( x - y ) ) * t1 ) ) cout << \" YES \" << endl ; else cout << \" NO \" << endl ; int x , y , z , t1 , t2 , t3 ; } }"}}
{"translation": {"en": "read x , y , z , t1 , t2 and t3 [ENDL] declare integer variables ans1 and ans2 with ans2 = ( absolute value of x - y ) * t1 [ENDL] ans1 = ( absolute value of z - x ) * t2 + t3 * 3 + ( absolute value of x - y ) * t2 [ENDL] if ans1 < = ans2 [ENDL] print \" YES \" and a new line [ENDL] else [ENDL] print \" NO \" and a new line [ENDL] let a , b , c , d , e , f , g , m , s , l , n , t be integers", "c++": "int main() { cin >> x >> y >> z >> t1 >> t2 >> t3 ; int ans1 , ans2 = abs ( x - y ) * t1 ; ans1 = abs ( z - x ) * t2 + t3 * 3 + abs ( x - y ) * t2 ; if ( ans1 <= ans2 ) cout << \" YES \" << endl ; else cout << \" NO \" << endl ; int a , b , c , d , e , f , g , m , s , l , n , t ; return 0; }"}}
{"translation": {"en": "read a , b , c , d , e and f [ENDL] s is equal to ( a - b ) * d [ENDL] if ( s is less than 0 ) , s is equal to - 1 * s [ENDL] l is equal to ( ( c - a ) * e ) ; [ENDL] if ( l is less than 0 ) , l is equal to - l ; [ENDL] t is equal to ( a - b ) * e [ENDL] if ( t is less than 0 ) , t is equal to - t [ENDL] m is equal to t + l + 3 * f [ENDL] if ( m is less than or equal to s ) [ENDL] print YES and endline [ENDL] else do something [ENDL] print NO and endline [ENDL] x , y , z , t1 , t2 , t3 = integers", "c++": "int main() { cin >> a >> b >> c >> d >> e >> f ; s = ( a - b ) * d ; if ( s < 0 ) { s = - 1 * s ; } l = ( ( c - a ) * e ) ; if ( l < 0 ) l = - l ; t = ( a - b ) * e ; if ( t < 0 ) t = - t ; m = t + l + 3 * f ; if ( m <= s ) cout << \" YES \" << endl ; else cout << \" NO \" << endl ; int x , y , z , t1 , t2 , t3 ; return 0; }"}}
{"translation": {"en": "read x , y , z , t1 , t2 and t3 [ENDL] a , b , c , d = long integers [ENDL] if ( x > y ) execute [ENDL] set a to y - x [ENDL] else execute [ENDL] set a to x - y [ENDL] set c to a * t1 [ENDL] if ( z is greater than x ) execute [ENDL] b = z - x [ENDL] else execute [ENDL] b = x - z [ENDL] set d to ( b + a ) * t2 + 3 * t3 [ENDL] if ( c is greater than or equal to d ) [ENDL] Print out YES [ENDL] else [ENDL] Print out NO [ENDL] declare long long integer variables x , y , z , t1 , t2 , t3 , s and e", "c++": "int main() { cin >> x >> y >> z >> t1 >> t2 >> t3 ; long long a , b , c , d ; if ( y > x ) a = y - x ; else a = x - y ; c = a * t1 ; } if ( z > x ) b = z - x ; else b = x - z ; d = ( b + a ) * t2 + 3 * t3 ; } if ( c >= d ) cout << \" YES \" << endl ; else cout << \" NO \" << endl ; long long int x , y , z , t1 , t2 , t3 , s , e ; } }"}}
{"translation": {"en": "read x , y , z , t1 , t2 and t3 [ENDL] if x is greater than y [ENDL] s = ( x - y ) * t1 [ENDL] else [ENDL] s = ( y - x ) * t1 [ENDL] if x > = y & & x > = z [ENDL] e = ( ( x - y ) * t2 ) + ( ( x - z ) * t2 ) + ( 3 * t3 ) [ENDL] if e < = s [ENDL] print \" YES \" and a new line [ENDL] else [ENDL] print \" NO \" and a new line [ENDL] else if x < = y & & x > = z [ENDL] e = ( ( y - x ) * t2 ) + ( ( x - z ) * t2 ) + ( 3 * t3 ) [ENDL] if e < = s [ENDL] print \" YES \" and a new line [ENDL] else [ENDL] print \" NO \" and a new line [ENDL] else if x < = y & & x < = z [ENDL] e = ( ( y - x ) * t2 ) + ( ( z - x ) * t2 ) + ( 3 * t3 ) [ENDL] if e < = s [ENDL] print \" YES \" and a new line [ENDL] else [ENDL] print \" NO \" and a new line [ENDL] else if x > = y & & x < = z [ENDL] e = ( ( x - y ) * t2 ) + ( ( z - x ) * t2 ) + ( 3 * t3 ) [ENDL] if e < = s [ENDL] print \" YES \" and a new line [ENDL] else [ENDL] print \" NO \" and a new line [ENDL] assign value 4 to constant integer MAX", "c++": "int main() { cin >> x >> y >> z >> t1 >> t2 >> t3 ; if ( x > y ) s = ( x - y ) * t1 ; else s = ( y - x ) * t1 ; if ( x >= y && x >= z ) } e = ( ( x - y ) * t2 ) + ( ( x - z ) * t2 ) + ( 3 * t3 ) ; if ( e <= s ) cout << \" YES \" << endl ; else cout << \" NO \" << endl ; else if ( x <= y && x >= z ) } e = ( ( y - x ) * t2 ) + ( ( x - z ) * t2 ) + ( 3 * t3 ) ; if ( e <= s ) cout << \" YES \" << endl ; else cout << \" NO \" << endl ; else if ( x <= y && x <= z ) } e = ( ( y - x ) * t2 ) + ( ( z - x ) * t2 ) + ( 3 * t3 ) ; if ( e <= s ) cout << \" YES \" << endl ; else cout << \" NO \" << endl ; else if ( x >= y && x <= z ) } e = ( ( x - y ) * t2 ) + ( ( z - x ) * t2 ) + ( 3 * t3 ) ; if ( e <= s ) cout << \" YES \" << endl ; else cout << \" NO \" << endl ; const int MAX = 4 ; } } }"}}
{"translation": {"en": "let x , y , z , t1 , t2 and t3 be integers [ENDL] read x , y , z , t1 , t2 and t3 [ENDL] let a and b be integers [ENDL] a = abs ( z - x ) * t2 + t3 * 3 + abs ( x - y ) * t2 [ENDL] b = abs ( x - y ) * t1 [ENDL] if a < = b [ENDL] print \" YES \" and a new line [ENDL] else [ENDL] print \" NO \" and a new line [ENDL] declare integers x , y , z , a , b , c", "c++": "int x , y , z , t1 , t2 , t3 ; int main() { cin >> x >> y >> z >> t1 >> t2 >> t3 ; int a , b ; a = abs ( z - x ) * t2 + t3 * 3 + abs ( x - y ) * t2 ; b = abs ( x - y ) * t1 ; if ( a <= b ) cout << \" YES \" << endl ; else cout << \" NO \" << endl ; int x , y , z , a , b , c ; return 0; }"}}
{"translation": {"en": "read x , y , z , a , b , c [ENDL] declare integer stair as ( absolute value of x - y ) times a [ENDL] declare integer lift as ( absolute value ( x - z ) + absolute value ( x - y ) ) * b + ( 3 * c ) [ENDL] if lift is less than or equal to stair [ENDL] print \" YES \" and a new line [ENDL] else [ENDL] print \" NO \" and a new line [ENDL] create integers x , y , z , t1 , t2 , t3", "c++": "int main() { cin >> x >> y >> z >> a >> b >> c ; int stair = abs ( x - y ) * a ; int lift = ( abs ( x - z ) + abs ( x - y ) ) * b + ( 3 * c ) ; if ( lift <= stair ) cout << \" YES\\n \" ; else cout << \" NO\\n \" ; int x , y , z , t1 , t2 , t3 ; }"}}
{"translation": {"en": "read x read y read z read t1 read t2 read t3 [ENDL] create integer tot1 with tot1 = absolute value of ( z - x ) * t2 + t3 * 3 + absolute value of ( y - x ) * t2 [ENDL] create integer tot2 with tot2 = absolute value of ( y - x ) * t1 [ENDL] if tot1 is greater than tot2 [ENDL] print \" NO \" print newline [ENDL] else [ENDL] print \" YES \" print newline [ENDL] let x , y , z , t1 , t2 , t3 , e be long integers", "c++": "int main() { cin >> x >> y >> z >> t1 >> t2 >> t3 ; int tot1 = abs ( z - x ) * t2 + t3 * 3 + abs ( y - x ) * t2 ; int tot2 = abs ( y - x ) * t1 ; if ( tot1 > tot2 ) cout << \" NO \" << endl ; else cout << \" YES \" << endl ; long long x , y , z , t1 , t2 , t3 , e ; return 0; }"}}
{"translation": {"en": "read the values x , y , z , t1 , t2 , t3 [ENDL] let the value of e is equal to abs ( z - x ) * t2 [ENDL] let the value of e is equal to e + t3 * 3 [ENDL] let the value of e is equal to e + abs ( y - x ) * t2 [ENDL] let the value of t1 is equal to t1 * abs ( y - x ) [ENDL] if ( t1 is greater than or equal to e ) [ENDL] print YES and newline [ENDL] else , do the following [ENDL] print NO and newline [ENDL] let mod is a long integer with value 1e9 + 7", "c++": "cin >> x >> y >> z >> t1 >> t2 >> t3 ; int main() { e = abs ( z - x ) * t2 ; e += t3 * 3 ; e += abs ( y - x ) * t2 ; t1 *= abs ( y - x ) ; if ( t1 >= e ) cout << \" YES \" << ' \\n ' ; else cout << \" NO \" << ' \\n ' ; long long mod = 1e9 + 7 ; return 0; }"}}
{"translation": {"en": "do map < int , int > mp [ENDL] let a is an array of size 200001 which is a long integer [ENDL] let b is an array of size 200001 which is a long integer [ENDL] let c is an array of size 11 which is a long integer [ENDL] let u is an array of size 151 which is a long integer [ENDL] let n , m , mn , l , t1 , t2 , t3 be long integers with mn is equal to 0 [ENDL] initialize the long integers cnt and ans to 0 [ENDL] read the values n , m and l [ENDL] read the values t1 , t2 and t3 [ENDL] let the value of long integer res = abs ( n - l ) * t2 + t3 + t3 + abs ( n - m ) * t2 + t3 ; [ENDL] let the value of long integer oi is equal to abs ( n - m ) * t1 [ENDL] if ( res is greater than oi ) [ENDL] print NO and newline [ENDL] else do the following [ENDL] print YES and endline [ENDL] declare abs with integer x as argument , returning integer", "c++": "map < int , int > mp ; long long a [ 200001 ] ; long long b [ 200001 ] ; long long c [ 11 ] ; long long u [ 151 ] ; long long n , m , mn = 0 , l , t1 , t2 , t3 ; int main() { long long cnt = 0 , ans = 0 ; cin >> n >> m >> l ; cin >> t1 >> t2 >> t3 ; long long res = abs ( n - l ) * t2 + t3 + t3 + abs ( n - m ) * t2 + t3 ; long long oi = abs ( n - m ) * t1 ; if ( res > oi ) cout << \" NO \" << endl ; else cout << \" YES \" << endl ; int abs ( int x ) return 0; }"}}
{"translation": {"en": "if x is less than 0 , return - x [ENDL] return x [ENDL] declare solve with no arguments , returning void [ENDL] create integers x , y , z , t1 , t2 , t3 [ENDL] read x read y read z read t1 read t2 read t3 [ENDL] create integer timeWalk with timeWalk = absolute value of ( y - x ) * t1 [ENDL] create integer timeTakeElevator with timeTakeElevator = t3 * 3 [ENDL] increment timeTakeElevator by absolute value of ( x - z ) * t2 [ENDL] increment timeTakeElevator by absolute value of ( y - x ) * t2 [ENDL] if timeTakeElevator is greater than timeWalk [ENDL] print \" NO \\ n \" [ENDL] else [ENDL] print \" YES \\ n \" [ENDL] run solve [ENDL] x , y , z , t1 , t2 , t3 = int", "c++": "if ( x < 0 ) return - x ; return x ; void solve ( ) } int x , y , z , t1 , t2 , t3 ; cin >> x >> y >> z >> t1 >> t2 >> t3 ; int timeWalk = abs ( y - x ) * t1 ; int timeTakeElevator = t3 * 3 ; timeTakeElevator += abs ( x - z ) * t2 ; timeTakeElevator += abs ( y - x ) * t2 ; if ( timeTakeElevator > timeWalk ) cout << \" NO\\n \" ; else cout << \" YES\\n \" ; solve ( ) ; } } int main() { int x , y , z , t1 , t2 , t3 ; return 0; }"}}
{"translation": {"en": "read x , y , z , t1 , t2 , t3 [ENDL] fd = absolute value of x - y [ENDL] cd = absolute value of x - z [ENDL] stt , lift_t = int [ENDL] stt = fd * t1 [ENDL] nw = int [ENDL] nw = fd + cd [ENDL] lift_t = ( nw * t2 ) + ( 3 * t3 ) [ENDL] mn = int [ENDL] if lift_t < = stt [ENDL] print \" YES \" [ENDL] else [ENDL] print \" NO \" [ENDL] x , y , z , t1 , t2 and t3 are integers", "c++": "int main() { cin >> x >> y >> z >> t1 >> t2 >> t3 ; int fd = abs ( x - y ) ; int cd = abs ( x - z ) ; int stt , lift_t ; stt = fd * t1 ; int nw ; nw = fd + cd ; lift_t = ( nw * t2 ) + ( 3 * t3 ) ; int mn ; if ( lift_t <= stt ) cout << \" YES\\n \" ; else cout << \" NO\\n \" ; int x , y , z , t1 , t2 , t3 ; } return 0; }"}}
{"translation": {"en": "read x , y , z , t1 , t2 and t3 [ENDL] walk_time is integer = asbolute value of ( x - y ) * t1 [ENDL] lift_time = asbolute value of ( x - z ) * t2 + asbolute value of ( x - y ) * t2 [ENDL] increase lift_time by ( t3 * 3 ) [ENDL] if lift_time < = walk_time [ENDL] print \" YES \" and a new line [ENDL] else [ENDL] print \" NO \" and a new line [ENDL] create integers x , y , z , a , b , c", "c++": "int main() { cin >> x >> y >> z >> t1 >> t2 >> t3 ; int walk_time = abs ( x - y ) * t1 ; int lift_time = abs ( x - z ) * t2 + abs ( x - y ) * t2 ; lift_time += ( t3 * 3 ) ; if ( lift_time <= walk_time ) cout << \" YES \" << endl ; else cout << \" NO \" << endl ; int x , y , z , a , b , c ; }"}}
{"translation": {"en": "read x read y read z read a read b read c [ENDL] create integer r with r = absolute value of ( x - y ) * a [ENDL] create integer s with s = absolute value of ( x - z ) * b + 3 * c + absolute value of ( x - y ) * b [ENDL] if r is less than s [ENDL] print \" NO \\ n \" [ENDL] else [ENDL] print \" YES \\ n \" [ENDL] function absu with integer argument q that returns integer", "c++": "cin >> x >> y >> z >> a >> b >> c ; int main() { int r = abs ( x - y ) * a ; int s = abs ( x - z ) * b + 3 * c + abs ( x - y ) * b ; if ( r < s ) cout << \" NO\\n \" ; else cout << \" YES\\n \" ; int absu ( int q ) }"}}
{"translation": {"en": "if q is greater than 0 [ENDL] return q [ENDL] else [ENDL] return - q [ENDL] create integers x , y , z , t1 , t2 , t3 , a and b [ENDL] read x , y , z , t1 , t2 and t3 [ENDL] a = absu ( x - y ) * t1 [ENDL] b = absu ( x - z ) * t2 + absu ( x - y ) * t2 + 3 * t3 [ENDL] if a is less than b [ENDL] print \" NO \" and a new line [ENDL] else [ENDL] print \" YES \" and a new line [ENDL] MOD = 998244353", "c++": "if ( q > 0 ) return q ; else return - q ; int x , y , z , t1 , t2 , t3 , a , b ; } int main() { cin >> x >> y >> z >> t1 >> t2 >> t3 ; a = absu ( x - y ) * t1 ; b = absu ( x - z ) * t2 + absu ( x - y ) * t2 + 3 * t3 ; if ( a < b ) cout << \" NO \" << endl ; else cout << \" YES \" << endl ; const long long int MOD = 998244353 ; }"}}
{"translation": {"en": "N , M , K , H , W , L , R = long long integers [ENDL] a , b , c , d , e , f = integers [ENDL] read a , b , c , d , e and f [ENDL] N = absolute value of ( a - b ) * d [ENDL] M = absolute value of ( a - c ) * e [ENDL] M = M + absolute value of ( b - a ) * e [ENDL] M = M + 3 * f [ENDL] if N is greater or equal than M [ENDL] print YES [ENDL] else [ENDL] print NO [ENDL] a = array of integers of length 100", "c++": "long long int N , M , K , H , W , L , R ; int a , b , c , d , e , f ; int main() { cin >> a >> b >> c >> d >> e >> f ; N = abs ( a - b ) * d ; M = abs ( a - c ) * e ; M += abs ( b - a ) * e ; M += 3 * f ; if ( N >= M ) cout << \" YES\\n \" ; else cout << \" NO\\n \" ; int a [ 100 ] ; return 0; }"}}
{"translation": {"en": "let n , count , ans be integers with ans = 0 [ENDL] read n [ENDL] for i = 0 to n exclusive , read a [ i ] [ENDL] for i = 0 to n inclusive [ENDL] count is equal to 0 [ENDL] for j = i to n exclusive [ENDL] if a [ j ] is equal to 1 , increment count by 1 [ENDL] for k = 0 to i exclusive [ENDL] if a [ k ] is equal to 0 , increment count by 1 [ENDL] ans = maximum of ans , count [ENDL] print ans and newline [ENDL] create int n , a [ 105 ] , temp , ans , i and j , set ans to 1", "c++": "int main() { int n , count , ans = 0 ; cin >> n ; for ( int i = 0 ; i < n ; i ++ ) { cin >> a [ i ] ; } for ( int i = 0 ; i <= n ; i ++ ) count = 0 ; for ( int j = i ; j < n ; j ++ ) if ( a [ j ] == 1 ) count ++ ; for ( int k = 0 ; k < i ; k ++ ) } if ( a [ k ] == 0 ) count ++ ; ans = max ( ans , count ) ; } cout << ans << endl ; } int n , a [ 105 ] , temp , ans = 1 , i , j ; }"}}
{"translation": {"en": "read n [ENDL] for i = 0 to n exclusive , read a [ i ] [ENDL] for i = 0 to n exclusive [ENDL] temp = 0 [ENDL] for j = 0 to i exclusive [ENDL] if a [ j ] = 0 , increment temp [ENDL] for j = i to n exclusive [ENDL] if a [ j ] different from 0 , increment temp [ENDL] set ans to max of ans and temp [ENDL] print ans [ENDL] inf = const int with inf = 0x3f3f3f3f", "c++": "int main() { cin >> n ; for ( int i = 0 ; i < n ; i ++ ) { cin >> a [ i ] ; } for ( i = 0 ; i < n ; i ++ ) temp = 0 ; for ( j = 0 ; j <= i ; j ++ ) if ( ! a [ j ] ) temp ++ ; for ( j = i ; j < n ; j ++ ) } if ( a [ j ] ) temp ++ ; ans = max ( ans , temp ) ; } cout << ans << endl ; } const int inf = 0x3f3f3f3f ; return 0; }"}}
{"translation": {"en": "s , dp = int array of size 105 each and n = int [ENDL] read n [ENDL] for i = 1 to n inclusive read s [ i ] [ENDL] set dp [ 1 ] to s [ 1 ] [ENDL] len = int with len = 1 [ENDL] for i = 2 to n inclusive [ENDL] if s [ i ] > = dp [ len ] [ENDL] increment lent then set dp [ len ] to s [ i ] [ENDL] else [ENDL] index = int with index = upper_bound of ( dp + 1 , dp + 1 + len , s [ i ] ) - dp [ENDL] set dp [ index ] to s [ i ] [ENDL] print len [ENDL] n = integer", "c++": "int s [ 105 ] , n , dp [ 105 ] ; cin >> n ; int main() { for ( int i = 1 ; i <= n ; i ++ ) cin >> s [ i ] ; dp [ 1 ] = s [ 1 ] ; int len = 1 ; for ( int i = 2 ; i <= n ; i ++ ) if ( s [ i ] >= dp [ len ] ) dp [ ++ len ] = s [ i ] ; else int index = upper_bound ( dp + 1 , dp + 1 + len , s [ i ] ) - dp ; dp [ index ] = s [ i ] ; cout << len << endl ; } } int n ; return 0; }"}}
{"translation": {"en": "read n [ENDL] a = integer array of size 200 [ENDL] one , zero = integers with one = 0 , zero = 0 [ENDL] for i = 0 to n exclusive [ENDL] read a [ i ] [ENDL] if ( a [ i ] ) increment one [ENDL] ans = integer with ans = 0 [ENDL] for i = 0 to n exclusive [ENDL] if ( a [ i ] is 0 ) increment zero [ENDL] ans = max ans and one + zero [ENDL] if ( a [ i ] is 1 ) decrement one [ENDL] print ans [ENDL] create integer array cont of size 1005", "c++": "int main() { cin >> n ; int a [ 200 ] ; int one = 0 , zero = 0 ; for ( int i = 0 ; i < n ; i ++ ) cin >> a [ i ] ; if ( a [ i ] ) one ++ ; int ans = 0 ; } for ( int i = 0 ; i < n ; i ++ ) if ( a [ i ] == 0 ) zero ++ ; ans = max ( ans , one + zero ) ; if ( a [ i ] == 1 ) one -- ; cout << ans << ' \\n ' ; } int cont [ 1005 ] ; }"}}
{"translation": {"en": "make int n [ENDL] read n [ENDL] for i = 0 to n exclusive , read cont [ i ] [ENDL] let integer ans = 0 [ENDL] let int now = 0 [ENDL] for i = 0 to n exclusive [ENDL] if cont [ i ] is 0 [ENDL] add 1 to now [ENDL] set ans to max of ans and now [ENDL] else do [ENDL] create int tmp = now [ENDL] for j = i to n exclusive [ENDL] if cont [ j ] is truthy , add 1 to tmp [ENDL] set ans to max of ans and temp [ENDL] display ans [ENDL] declare new constant integer MAXN with value 100 + 5", "c++": "int n ; int main() { cin >> n ; for ( int i = 0 ; i < n ; i ++ ) { cin >> cont [ i ] ; } int ans = 0 ; int now = 0 ; for ( int i = 0 ; i < n ; i ++ ) if ( cont [ i ] == 0 ) now ++ ; ans = max ( ans , now ) ; else int tmp = now ; for ( int j = i ; j < n ; j ++ ) if ( cont [ j ] ) { tmp ++ ; } ans = max ( ans , tmp ) ; } cout << ans << endl ; } } const int MAXN = 100 + 5 ; }"}}
{"translation": {"en": "create constant integer called INF = 0x3f3f3f3f [ENDL] create new integer called n [ENDL] read standard input to n [ENDL] data is a new array of integers with MAXN elements [ENDL] read n elements to data from the user input [ENDL] let cnt and ans be integers where ans = n [ENDL] start for loop from i = 1 to n exclusive incrementing i [ENDL] change the value of cnt to 0 [ENDL] if data [ i - 1 ] = data [ i ] , go to the start of the loop [ENDL] for j = 0 to i exclusive [ENDL] if data [ j ] ! = 0 , increment cnt [ENDL] for j from i to n exclusive incrementing j [ENDL] if data [ j ] ! = 1 , increment cnt [ENDL] assign min of ans and cnt to ans [ENDL] set cnt to 0 [ENDL] in a for loop , change i from 0 to n exclusive incrementing i [ENDL] if data [ i ] ! = 0 , increment cnt by one [ENDL] assign min of ans and cnt to ans [ENDL] change the value of cnt to 0 [ENDL] start for loop from i = 0 to n exclusive incrementing i [ENDL] if data [ i ] ! = 1 , add 1 to cnt [ENDL] set ans to min of ans and cnt [ENDL] print n - ans and ' \\ n ' to the standard output [ENDL] create int n", "c++": "const int INF = 0x3f3f3f3f ; int n ; int main() { cin >> n ; int data [ MAXN ] ; for ( int i = 0 ; i < n ; i ++ ) cin >> data [ i ] ; int cnt , ans = n ; for ( int i = 1 ; i < n ; i ++ ) cnt = 0 ; if ( data [ i - 1 ] == data [ i ] ) continue ; for ( int j = 0 ; j < i ; j ++ ) if ( data [ j ] != 0 ) cnt ++ ; for ( int j = i ; j < n ; j ++ ) if ( data [ j ] != 1 ) cnt ++ ; ans = min ( ans , cnt ) ; cnt = 0 ; } for ( int i = 0 ; i < n ; i ++ ) if ( data [ i ] != 0 ) cnt ++ ; ans = min ( ans , cnt ) ; } cnt = 0 ; for ( int i = 0 ; i < n ; i ++ ) if ( data [ i ] != 1 ) cnt ++ ; ans = min ( ans , cnt ) ; } cout << n - ans << ' \\n ' ; int n ; }"}}
{"translation": {"en": "while read n [ENDL] create int game [ n ] [ENDL] for i = 0 to n exclusive , read game [ i ] [ENDL] set large and prezero = 0 [ENDL] for i = 0 to n exclusive [ENDL] if game [ i ] = 0 [ENDL] increment prezero [ENDL] set large to max of large and prezero [ENDL] else [ENDL] set cur to prezero [ENDL] for j = i to n exclusive [ENDL] if game [ j ] = 1 , increment cur [ENDL] set large to max of cur and large [ENDL] print large and a newline [ENDL] make const integer maxn = 100005", "c++": "int main() { while ( cin >> n ) int game [ n ] ; for ( int i = 0 ; i < n ; i ++ ) cin >> game [ i ] ; int large = 0 , prezero = 0 ; for ( int i = 0 ; i < n ; i ++ ) if ( game [ i ] == 0 ) prezero ++ ; large = max ( large , prezero ) ; else int cur = prezero ; for ( int j = i ; j < n ; j ++ ) if ( game [ j ] == 1 ) { cur ++ ; } large = max ( cur , large ) ; } cout << large << ' \\n ' ; } } const int maxn = 100005 ; } }"}}
{"translation": {"en": "make int arrays s of size maxn and dp of size maxn [ENDL] create int n [ENDL] read n [ENDL] for i = 1 to n , read s [ i ] [ENDL] set dp [ 1 ] to s [ 1 ] [ENDL] create int len = 1 [ENDL] for i = 2 to n [ENDL] if s [ i ] is greater than or equal to dp [ len ] [ENDL] set dp [ + + len ] to s [ i ] [ENDL] otherwise [ENDL] create int index = upper_bound ( dp + 1 , dp + len + 1 , s [ i ] ) - dp [ENDL] set dp [ index ] to s [ i ] [ENDL] print len [ENDL] i , j , n , t = int , a = 1 , s = array of 10000 int", "c++": "int s [ maxn ] , dp [ maxn ] ; int n ; cin >> n ; int main() { for ( int i = 1 ; i <= n ; i ++ ) cin >> s [ i ] ; dp [ 1 ] = s [ 1 ] ; int len = 1 ; for ( int i = 2 ; i <= n ; i ++ ) if ( s [ i ] >= dp [ len ] ) dp [ ++ len ] = s [ i ] ; else int index = upper_bound ( dp + 1 , dp + len + 1 , s [ i ] ) - dp ; dp [ index ] = s [ i ] ; cout << len << endl ; } } int i , j , n , a = 1 , t , s [ 10000 ] ; return 0; }"}}
{"translation": {"en": "read n [ENDL] for i = 0 to n exclusive read s [ i ] [ENDL] for i = 0 to n exclusive [ENDL] t = 0 [ENDL] for j = 0 to i inclusive [ENDL] if not s [ j ] increment t [ENDL] for j = i to n exclusive [ENDL] if s [ j ] increment t [ENDL] a = max ( a , t ) [ENDL] print a [ENDL] a , d = integer array of size 4005", "c++": "int main() { cin >> n ; for ( i = 0 ; i < n ; i ++ ) cin >> s [ i ] ; for ( i = 0 ; i < n ; i ++ ) t = 0 ; for ( j = 0 ; j <= i ; j ++ ) if ( ! s [ j ] ) t ++ ; for ( j = i ; j < n ; j ++ ) } if ( s [ j ] ) t ++ ; a = max ( a , t ) ; } cout << a << endl ; } int a [ 4005 ] , d [ 4005 ] ; return 0; }"}}
{"translation": {"en": "n = integer [ENDL] read n [ENDL] for i = 1 to n , read a [ i ] [ENDL] d [ 1 ] = a [ 1 ] [ENDL] len = integer with len = 1 [ENDL] for i = 2 to n [ENDL] if ( a [ i ] > = d [ len ] ) [ENDL] d [ increment len ] = a [ i ] [ENDL] else [ENDL] j = integer with j = upper_bound ( d + 1 , d + len + 1 , a [ i ] ) - d [ENDL] d [ j ] = a [ i ] [ENDL] print len [ENDL] create ints n , p = 1 , and cnt = 0 and int array a of size 1000", "c++": "int n ; int main() { cin >> n ; for ( int i = 1 ; i <= n ; i ++ ) cin >> a [ i ] ; d [ 1 ] = a [ 1 ] ; int len = 1 ; for ( int i = 2 ; i <= n ; i ++ ) if ( a [ i ] >= d [ len ] ) d [ ++ len ] = a [ i ] ; else int j = upper_bound ( d + 1 , d + len + 1 , a [ i ] ) - d ; d [ j ] = a [ i ] ; cout << len << endl ; } } int n , a [ 1000 ] , p = 1 , cnt = 0 ; return 0; }"}}
{"translation": {"en": "read n [ENDL] for i = 1 to n , read a [ i ] [ENDL] for i = 1 to n [ENDL] create int t = 0 [ENDL] for j = 1 to i [ENDL] if a [ j ] is equal to 0 , increment t [ENDL] for j = i to n [ENDL] if a [ j ] is equal to 1 , increment t [ENDL] set cnt to max of cnt and t [ENDL] print cnt [ENDL] declare new constant integer called N = 105", "c++": "int main() { cin >> n ; for ( int i = 1 ; i <= n ; i ++ ) cin >> a [ i ] ; for ( int i = 1 ; i <= n ; i ++ ) int t = 0 ; for ( int j = 1 ; j <= i ; j ++ ) if ( a [ j ] == 0 ) t ++ ; for ( int j = i ; j <= n ; j ++ ) if ( a [ j ] == 1 ) t ++ ; cnt = max ( cnt , t ) ; cout << cnt << endl ; } const int N = 105 ; return 0; }"}}
{"translation": {"en": "create new ints n and ans ; declare int arrays s and dp with N elements [ENDL] read user input to n [ENDL] read input to s [ i ] from the index 1 to n inclusive [ENDL] for integer i = 1 to n inclusive [ENDL] set dp [ i ] to 1 [ENDL] for j from i - 1 to 1 inclusive decrementing j [ENDL] if s [ i ] is equal to 0 [ENDL] if s [ j ] = 0 , change the value of dp [ i ] to max of dp [ i ] and 1 + dp [ j ] [ENDL] else [ENDL] change the value of dp [ i ] to max of dp [ i ] and 1 + dp [ j ] [ENDL] assign max of dp [ i ] and ans to ans [ENDL] print ans and \" \\ n \" [ENDL] size = const integer with size = 105", "c++": "int n , s [ N ] , dp [ N ] , ans ; cin >> n ; int main() { for ( int i = 1 ; i <= n ; ++ i ) cin >> s [ i ] ; for ( int i = 1 ; i <= n ; ++ i ) dp [ i ] = 1 ; for ( int j = i - 1 ; j >= 1 ; -- j ) if ( s [ i ] == 0 ) if ( s [ j ] == 0 ) dp [ i ] = max ( dp [ i ] , 1 + dp [ j ] ) ; else dp [ i ] = max ( dp [ i ] , 1 + dp [ j ] ) ; ans = max ( dp [ i ] , ans ) ; } } cout << ans << \" \\n \" ; } const int size = 105 ; return 0; }"}}
{"translation": {"en": "suf , pre = integers with pre , suf = integer array of size size = { 0 } [ENDL] n = integer [ENDL] read n [ENDL] arr = integer array of size n + 1 = { 0 } [ENDL] for i = 1 to n , read arr [ i ] , suf [ i ] = ( arr [ i ] ) , pre [ i ] = ( not arr [ i ] ) [ENDL] for i = n down to 1 , suf [ i ] = suf [ i ] + suf [ i + 1 ] [ENDL] for i = 1 to n , pre [ i ] = pre [ i ] + pre [ i - 1 ] [ENDL] ans = integer with ans = 0 [ENDL] for i = 1 to n , ans = max ( ans , pre [ i ] + suf [ i ] ) [ENDL] print ans [ENDL] n = integer", "c++": "int suf [ size ] = { 0 } , pre [ size ] = { 0 } ; int n ; int main() { cin >> n ; int arr [ n + 1 ] = { 0 } ; for ( int i = 1 ; i <= n ; i ++ ) cin >> arr [ i ] , suf [ i ] = ( arr [ i ] ) , pre [ i ] = ( ! arr [ i ] ) ; for ( int i = n ; i >= 1 ; i -- ) suf [ i ] += suf [ i + 1 ] ; for ( int i = 1 ; i <= n ; i ++ ) pre [ i ] += pre [ i - 1 ] ; int ans = 0 ; for ( int i = 1 ; i <= n ; i ++ ) ans = max ( ans , pre [ i ] + suf [ i ] ) ; cout << ans << \" \\n \" ; int n ; return 0; }"}}
{"translation": {"en": "read n [ENDL] a = integer array of size 200 [ENDL] one , zero = integers with one = 0 , zero = 0 [ENDL] for i = 0 to n exclusive [ENDL] read a [ i ] [ENDL] if ( a [ i ] ) increment one [ENDL] ans = integer with ans = 0 [ENDL] for i = 0 to n [ENDL] if ( a [ i ] is 0 ) , increment zero [ENDL] ans = max of ans and one + zero [ENDL] if ( a [ i ] is 1 ) , decrement one [ENDL] print ans [ENDL] create const integer maxn = 10005", "c++": "int main() { cin >> n ; int a [ 200 ] ; int one = 0 , zero = 0 ; for ( int i = 0 ; i < n ; i ++ ) cin >> a [ i ] ; if ( a [ i ] ) one ++ ; int ans = 0 ; } for ( int i = 0 ; i < n ; i ++ ) if ( a [ i ] == 0 ) zero ++ ; ans = max ( ans , one + zero ) ; if ( a [ i ] == 1 ) one -- ; cout << ans << ' \\n ' ; } const int maxn = 10005 ; }"}}
{"translation": {"en": "create integer array s of size maxn [ENDL] make int array dp of size dp [ENDL] create int len = 0 [ENDL] create int n [ENDL] read n [ENDL] for i = 0 to n exclusive , read s [ i ] [ENDL] for i = 0 to n exclusive [ENDL] set dp [ i ] to 1 [ENDL] for j = 0 to i exclusive [ENDL] if s [ i ] is greater than or equal to s [ j ] and dp [ j ] + 1 is greater than dp [ i ] , set dp [ i ] to dp [ j ] + 1 [ENDL] set len to max of dp [ i ] and len [ENDL] print len [ENDL] make long long integer a of size 204", "c++": "int s [ maxn ] ; int dp [ maxn ] ; int len = 0 ; int n ; int main() { cin >> n ; for ( int i = 0 ; i < n ; i ++ ) cin >> s [ i ] ; for ( int i = 0 ; i < n ; i ++ ) dp [ i ] = 1 ; for ( int j = 0 ; j < i ; j ++ ) if ( s [ i ] >= s [ j ] && dp [ j ] + 1 > dp [ i ] ) dp [ i ] = dp [ j ] + 1 ; len = max ( dp [ i ] , len ) ; } cout << len << endl ; } long long int a [ 204 ] ; return 0; }"}}
{"translation": {"en": "create long long integer n , i , j , k , x , y , t , and m [ENDL] read n [ENDL] for i = 1 to n , read a [ i ] [ENDL] make long long integer mx = 0 and cnt1 = 0 [ENDL] for i = 1 to n [ENDL] create long long integer cnt = 0 [ENDL] if a [ i ] is 1 , increment cnt1 [ENDL] if a [ i ] is 0 [ENDL] for j = 1 to i [ENDL] if a [ j ] is 0 , increment cnt [ENDL] for j = i + 1 to n [ENDL] if a [ j ] is 1 , add 1 to cnt [ENDL] set mx to max of mx and cnt [ENDL] print max of mx and cnt1 [ENDL] n = int", "c++": "long long int n , i , j , k , x , y , t , m ; int main() { cin >> n ; for ( i = 1 ; i <= n ; i ++ ) cin >> a [ i ] ; long long int mx = 0 , cnt1 = 0 ; for ( i = 1 ; i <= n ; i ++ ) long long int cnt = 0 ; if ( a [ i ] == 1 ) cnt1 ++ ; if ( a [ i ] == 0 ) for ( j = 1 ; j <= i ; j ++ ) if ( a [ j ] == 0 ) cnt ++ ; for ( j = i + 1 ; j <= n ; j ++ ) } if ( a [ j ] == 1 ) cnt ++ ; mx = max ( mx , cnt ) ; } cout << max ( mx , cnt1 ) << endl ; } } int n ; }"}}
{"translation": {"en": "read n [ENDL] game = int vector of size n [ENDL] numOf0 = int with numOf0 = 0 [ENDL] for i = 0 to n [ENDL] read game [ i ] [ENDL] if game [ i ] is 0 increment numOf0 [ENDL] if numOf0 is 0 or n [ENDL] print n [ENDL] last0 = int with last0 = n - 1 [ENDL] loop while last0 > = 0 and game [ last0 ] is 1 decrement last0 [ENDL] numOf1 = int with numOf1 = n - 1 - last0 [ENDL] ans = int with ans = numOf0 + numOf1 [ENDL] for i = last0 to 0 inclusive decrementing i [ENDL] if game [ i ] is 1 [ENDL] increment numOf1 [ENDL] continue [ENDL] else [ENDL] set ans to max of ans , numOf0 + numOf1 [ENDL] decrement numOf0 [ENDL] print max of ans , numOf1 [ENDL] create integers n , res , one and zero , all except n with value 0", "c++": "int main() { cin >> n ; vector < int > game ( n ) ; int numOf0 = 0 ; for ( int i = 0 ; i < n ; ++ i ) cin >> game [ i ] ; if ( game [ i ] == 0 ) numOf0 ++ ; if ( numOf0 == 0 || numOf0 == n ) } cout << n << ' \\n ' ; int last0 = n - 1 ; return 0; } while ( last0 >= 0 && game [ last0 ] == 1 ) { last0 -- ; } int numOf1 = n - 1 - last0 ; int ans = numOf0 + numOf1 ; for ( int i = last0 ; i >= 0 ; -- i ) if ( game [ i ] == 1 ) numOf1 ++ ; continue ; else ans = max ( ans , numOf0 + numOf1 ) ; numOf0 -- ; cout << max ( ans , numOf1 ) << ' \\n ' ; } } int n , res = 0 , one = 0 , zero = 0 ; return 0; }"}}
{"translation": {"en": "read from the input to n [ENDL] a is a new array of integers with n elements [ENDL] for integer i = 0 to n exclusive incrementing i [ENDL] read a [ i ] [ENDL] if a [ i ] is true [ENDL] set one to max of one and zero [ENDL] increment one by one [ENDL] else [ENDL] increment zero [ENDL] change the value of res to max of one and zero [ENDL] print res and \" \\ n \" to the standard output [ENDL] n , i , j = int , s , max = 0 , a and b = array of 105 int", "c++": "int main() { cin >> n ; int a [ n ] ; for ( int i = 0 ; i < n ; i ++ ) cin >> a [ i ] ; if ( a [ i ] ) one = max ( one , zero ) ; one ++ ; else zero ++ ; res = max ( one , zero ) ; } } cout << res << \" \\n \" ; int n , i , j , s = 0 , max = 0 , a [ 105 ] , b [ 105 ] ; return 0; }"}}
{"translation": {"en": "read n [ENDL] for i = 0 to n exclusive [ENDL] read a [ i ] [ENDL] if a [ i ] is 0 increment s [ENDL] b [ i ] = s [ENDL] for i = 0 to n exclusive [ENDL] if a [ i ] is 0 [ENDL] if 2 * b [ i ] + n - 1 - i - s > max max = 2 * b [ i ] + n - 1 - i - s [ENDL] if a [ i ] is 1 [ENDL] if 2 * b [ i ] + n - i - s > max max = 2 * b [ i ] + n - i - s [ENDL] print max [ENDL] x = long long", "c++": "int main() { cin >> n ; for ( i = 0 ; i < n ; i ++ ) cin >> a [ i ] ; if ( a [ i ] == 0 ) s ++ ; b [ i ] = s ; for ( i = 0 ; i < n ; i ++ ) } if ( a [ i ] == 0 ) if ( 2 * b [ i ] + n - 1 - i - s > max ) max = 2 * b [ i ] + n - 1 - i - s ; if ( a [ i ] == 1 ) if ( 2 * b [ i ] + n - i - s > max ) max = 2 * b [ i ] + n - i - s ; cout << max << endl ; } long long x ; return 0; }"}}
{"translation": {"en": "read x [ENDL] if x is even [ENDL] print 2 [ENDL] else [ENDL] print 1 [ENDL] create new long long variable a", "c++": "int main() { cin >> x ; if ( x % 2 == 0 ) cout << 2 << endl ; else cout << 1 << endl ; long long a ; return 0; }"}}
{"translation": {"en": "read user input to a [ENDL] if a is even [ENDL] print 2 [ENDL] else [ENDL] print 1 to stdout [ENDL] create long long int k , n , a [ 100000 ]", "c++": "int main() { cin >> a ; if ( a % 2 == 0 ) cout << 2 << endl ; else cout << 1 << endl ; long long int k , n , a [ 100000 ] ; return 0; }"}}
{"translation": {"en": "read n [ENDL] if n is even [ENDL] print 2 [ENDL] else [ENDL] print 1 [ENDL] declare n as long long", "c++": "cin >> n ; int main() { if ( n % 2 == 0 ) cout << 2 << endl ; else cout << 1 << endl ; long long n ; return 0; }"}}
{"translation": {"en": "read n [ENDL] if n bitwise and 1 [ENDL] print 1 , newline [ENDL] else [ENDL] print 2 and newline [ENDL] create long longs x and y", "c++": "int main() { cin >> n ; if ( n & 1 ) cout << 1 << endl ; else cout << 2 << endl ; long long x , y ; }"}}
{"translation": {"en": "read from the input to x [ENDL] assign x % 2 to y [ENDL] if y = 0 [ENDL] print 2 to the standard output [ENDL] else [ENDL] print 1 [ENDL] create string s", "c++": "int main() { cin >> x ; y = x % 2 ; if ( y == 0 ) cout << 2 << endl ; else cout << 1 << endl ; string s ; return 0; }"}}
{"translation": {"en": "read s [ENDL] reverse s [ENDL] id s [ 0 ] = 0 , 2 , 4 , 6 or 8 [ENDL] print 2 [ENDL] else [ENDL] print 1 and a newline [ENDL] create long long n", "c++": "int main() { cin >> s ; reverse ( s . begin ( ) , s . end ( ) ) ; if ( s [ 0 ] == ' 0 ' || s [ 0 ] == ' 2 ' || s [ 0 ] == ' 4 ' || s [ 0 ] == ' 6 ' || s [ 0 ] == ' 8 ' ) cout << ' 2 ' << endl ; else cout << ' 1 ' << endl ; long long n ; return 0; }"}}
{"translation": {"en": "read n [ENDL] if n mod 2 = 1 [ENDL] print 1 [ENDL] else [ENDL] print 2 [ENDL] declare new long long called n", "c++": "int main() { cin >> n ; if ( n % 2 == 1 ) cout << 1 << endl ; else cout << 2 << endl ; long long n ; }"}}
{"translation": {"en": "read n from the user input [ENDL] print 2 - n % 2 [ENDL] declare long long variables n , mid and f", "c++": "int main() { cin >> n ; cout << 2 - n % 2 << endl ; long long n , mid , f ; return 0; }"}}
{"translation": {"en": "set decimal precision of the output to 30 and change notation to floating - point [ENDL] read standard input to n [ENDL] print 2 - n % 2 and ' \\ n ' to the standard output [ENDL] create long long int n", "c++": "cout << setprecision ( 30 ) << fixed ; int main() { cin >> n ; cout << 2 - n % 2 << ' \\n ' ; long long n ; return 0; }"}}
{"translation": {"en": "read n [ENDL] if n modulo 2 is 1 [ENDL] print 1 [ENDL] else [ENDL] print 2 [ENDL] create new unsigned long long variable n", "c++": "int main() { cin >> n ; if ( n % 2 == 1 ) cout << 1 << endl ; else cout << 2 << endl ; unsigned long long n ; return 0; }"}}
{"translation": {"en": "read from the input to n [ENDL] print 2 if n is even and 1 if n is odd [ENDL] end statement", "c++": "int main() { cin >> n ; n % 2 == 0 ? cout << 2 << endl : cout << 1 << endl ; ; return 0; }"}}
{"translation": {"en": "declare constant long long INT64M = 0X3F3F3F3F3F3F3F3F [ENDL] declare constant integer INT32M = 0x3F3F3F3F [ENDL] declare constant integer mod = 1e9 + 7 [ENDL] declare n as long long [ENDL] read n [ENDL] if n bitwise and 1 [ENDL] print 1 , newline [ENDL] else [ENDL] print 2 , newline [ENDL] MAX = n , a [ 1005 ] , sum = 0 , m , cmp", "c++": "const long long INT64M = 0X3F3F3F3F3F3F3F3F ; const int INT32M = 0x3F3F3F3F ; const int mod = 1e9 + 7 ; long long n ; int main() { cin >> n ; if ( n & 1 ) cout << 1 << endl ; else cout << 2 << endl ; const int MAX = 1e5 + 5 ; } }"}}
{"translation": {"en": "create long long n [ENDL] read n [ENDL] if n is even [ENDL] print 2 [ENDL] else [ENDL] print 1 and a newline [ENDL] let n be a long integer", "c++": "long long n ; int main() { cin >> n ; if ( n % 2 == 0 ) cout << 2 << endl ; else cout << 1 << endl ; long long n ; return 0; }"}}
{"translation": {"en": "read n [ENDL] if n modulo 2 is equal to 0 [ENDL] print 2 and newline [ENDL] else do the following [ENDL] print 1 and newline [ENDL] n = long long int", "c++": "int main() { cin >> n ; if ( n % 2 == 0 ) cout << 2 << endl ; else cout << 1 << endl ; long long int n ; return 0; }"}}
{"translation": {"en": "read n [ENDL] if n is uneven [ENDL] print 1 [ENDL] else [ENDL] print 2 [ENDL] v is a new vector of long long integers", "c++": "int main() { cin >> n ; if ( n % 2 ) cout << 1 << endl ; else cout << 2 << endl ; vector < long long int > v ; }"}}
{"translation": {"en": "create new long long integer variable n [ENDL] read n from the input [ENDL] if n is even [ENDL] print 2 to the standard output [ENDL] else [ENDL] print 1 [ENDL] create new long long variable called n", "c++": "long long int n ; int main() { cin >> n ; if ( n % 2 == 0 ) cout << 2 << endl ; else cout << 1 << endl ; long long n ; return 0; }"}}
{"translation": {"en": "read the value of n from the input [ENDL] if n modulo 2 is not 0 [ENDL] print \" 1 \" to the output [ENDL] else [ENDL] print \" 2 \" to stdout [ENDL] create new unsigned long long integer called n", "c++": "int main() { cin >> n ; if ( n % 2 ) puts ( \" 1 \" ) ; else puts ( \" 2 \" ) ; unsigned long long int n ; }"}}
{"translation": {"en": "read n [ENDL] if n is even [ENDL] print 2 [ENDL] else [ENDL] print 1 [ENDL] create constant integer inf with value 0x3f3f3f", "c++": "int main() { cin >> n ; if ( n % 2 == 0 ) cout << 2 << endl ; else cout << 1 << endl ; const int inf = 0x3f3f3f ; } }"}}
{"translation": {"en": "create new long long n [ENDL] read n and loop further [ENDL] if n is even [ENDL] print 2 [ENDL] else [ENDL] print 1 to the standard output [ENDL] a = long long", "c++": "long long n ; int main() { while ( cin >> n ) if ( n % 2 == 0 ) cout << 2 << endl ; else cout << 1 << endl ; long long a ; } return 0; }"}}
{"translation": {"en": "read a [ENDL] if a is uneven print 1 else print 2 [ENDL] create constant int INF = 0x3f3f3f3f", "c++": "int main() { cin >> a ; cout << ( a % 2 == 1 ? 1 : 2 ) << endl ; const int INF = 0x3f3f3f3f ; return 0; }"}}
{"translation": {"en": "let long long integer mod = 10000000000LL [ENDL] declare cheng taking in long long integers a , b , and c and returning long long integer [ENDL] make long long int ret = 0 [ENDL] while b is truthy [ENDL] if b & 1 are truthy [ENDL] set ret to ret + a [ENDL] if ret is greater than or equal to c , set ret to ret - c [ENDL] set a to a + a [ENDL] if a is greater than or equal to c , set a to a - c [ENDL] move bits of b 1 place to right [ENDL] return ret [ENDL] create long long int n [ENDL] read n [ENDL] make long long integer ans = cheng ( n , n , mod ) [ENDL] if ans modulo 2 is 0 [ENDL] print 2 [ENDL] else [ENDL] print 1 [ENDL] create constant long long MAX = 1000", "c++": "long long mod = 10000000000LL ; long long cheng ( long long a , long long b , long long c ) long long ret = 0 ; while ( b ) if ( b & 1 ) ret += a ; if ( ret >= c ) ret -= c ; a += a ; } if ( a >= c ) a -= c ; b >>= 1 ; return ret ; } long long n ; } int main() { cin >> n ; long long ans = cheng ( n , n , mod ) ; if ( ans % 2 == 0 ) cout << 2 << endl ; else cout << 1 << endl ; const long long MAX = 1000 ; return 0; }"}}
{"translation": {"en": "declare long long variable n [ENDL] read input to n [ENDL] if n is odd [ENDL] print 1 [ENDL] else [ENDL] print 2 to the output [ENDL] n = long long", "c++": "long long n ; int main() { cin >> n ; if ( n % 2 == 1 ) cout << 1 << endl ; else cout << 2 << endl ; long long n ; }"}}
{"translation": {"en": "read n [ENDL] print 1 if n is odd else 2 [ENDL] create constant int MAX = 1e5 + 5", "c++": "int main() { cin >> n ; cout << ( n % 2 == 1 ? 1 : 2 ) << endl ; const int MAX = 1e5 + 5 ; return 0; }"}}
{"translation": {"en": "let long long n [ENDL] read n [ENDL] if n modulo 2 is 0 [ENDL] print 2 [ENDL] else [ENDL] print 1 [ENDL] declare long long n", "c++": "long long n ; int main() { cin >> n ; if ( n % 2 == 0 ) cout << 2 << endl ; else cout << 1 << endl ; long long n ; return 0; }"}}
{"translation": {"en": "read n from the input [ENDL] print 2 - ( n modulo 2 ) to the standard output [ENDL] n is a new long long variable", "c++": "int main() { cin >> n ; cout << 2 - ( n % 2 ) << endl ; long long n ; }"}}
{"translation": {"en": "declare new long long called a = 1 [ENDL] create new long long called b with value 2 [ENDL] read user input to n [ENDL] if n is even [ENDL] print b to the standard output [ENDL] else [ENDL] print a [ENDL] let n = long long", "c++": "int main() { long long a = 1 ; long long b = 2 ; cin >> n ; if ( n % 2 == 0 ) cout << b << endl ; else cout << a << endl ; long long n ; } }"}}
{"translation": {"en": "read n [ENDL] if n is even [ENDL] print 2 [ENDL] else [ENDL] print 1 [ENDL] create long long n", "c++": "int main() { cin >> n ; if ( n % 2 == 0 ) cout << \" 2 \" << endl ; else cout << \" 1 \" << endl ; long long n ; return 0; }"}}
{"translation": {"en": "read n [ENDL] if n is odd [ENDL] print 1 [ENDL] else [ENDL] print 2 [ENDL] make long long integers a , b , c , e , and f", "c++": "int main() { cin >> n ; if ( n % 2 ) cout << 1 << endl ; else cout << 2 << endl ; long long a , b , c , e , f ; return 0; }"}}
{"translation": {"en": "read a [ENDL] if a modulo 2 is truthy [ENDL] print 1 [ENDL] otherwise do [ENDL] print 2 [ENDL] create long long int n", "c++": "cin >> a ; int main() { if ( a % 2 ) cout << 1 << endl ; else cout << 2 << endl ; long long int n ; }"}}
{"translation": {"en": "read n [ENDL] if n and 1 different from 0 [ENDL] print 1 \\ n [ENDL] else [ENDL] print 2 \\ n [ENDL] create long long int n", "c++": "int main() { cin >> n ; if ( n & 1 ) cout << \" 1\\n \" ; else cout << \" 2\\n \" ; long long int n ; return 0; }"}}
{"translation": {"en": "read n and while n is truthy [ENDL] if n modulo 2 is 1 [ENDL] print \" 1 \" [ENDL] else [ENDL] print \" 2 \" [ENDL] print new line [ENDL] n = unsigned long long", "c++": "int main() { while ( cin >> n ) if ( n % 2 == 1 ) cout << \" 1 \" ; else cout << \" 2 \" ; cout << endl ; unsigned long long n ; } }"}}
{"translation": {"en": "read n [ENDL] if n is even then print 2 else print 1 [ENDL] declare constant integer maxn = 1e5 + 5", "c++": "int main() { cin >> n ; n % 2 == 0 ? cout << 2 << endl : cout << 1 << endl ; const int maxn = 1e5 + 5 ; return 0; }"}}
{"translation": {"en": "declare long long n as argument [ENDL] read n [ENDL] if n % 2 [ENDL] print \" 1 \" , newline [ENDL] else [ENDL] print \" 2 \" , newline [ENDL] declare n as long long", "c++": "long long n ; int main() { cin >> n ; if ( n % 2 ) cout << \" 1 \" << endl ; else cout << \" 2 \" << endl ; long long n ; }"}}
{"translation": {"en": "read n [ENDL] if n % 2 is 0 [ENDL] print \" 2 \" , newline [ENDL] else [ENDL] print \" 1 ' , newline [ENDL] declare long long x", "c++": "int main() { cin >> n ; if ( n % 2 == 0 ) cout << \" 2 \" << endl ; else cout << \" 1 \" << endl ; long long x ; } return 0; }"}}
{"translation": {"en": "read x [ENDL] if x % 2 is 0 [ENDL] print 2 and newline [ENDL] else [ENDL] print 1 and newline [ENDL] declare new long long n", "c++": "int main() { cin >> x ; if ( x % 2 == 0 ) cout << 2 << endl ; else cout << 1 << endl ; long long n ; return 0; }"}}
{"translation": {"en": "read n and keep looping [ENDL] if n is even [ENDL] print \" 2 \" to the otuput stream [ENDL] else [ENDL] print \" 1 \" [ENDL] create long long n", "c++": "int main() { while ( cin >> n ) if ( n % 2 == 0 ) cout << \" 2 \" << endl ; else cout << \" 1 \" << endl ; long long n ; } } return 0; }"}}
{"translation": {"en": "read n [ENDL] print 2 - ( n % 2 ) [ENDL] a_i , b_i , n = long long", "c++": "int main() { cin >> n ; cout << 2 - ( n % 2 ) << endl ; long long a_i , b_i , n ; return 0; }"}}
{"translation": {"en": "read n [ENDL] if n is even [ENDL] print 2 [ENDL] else [ENDL] print 1 [ENDL] declare constant integer maxn = 1e5 + 10", "c++": "int main() { cin >> n ; if ( n % 2 == 0 ) cout << 2 << endl ; else cout << 1 << endl ; const int maxn = 1e5 + 10 ; }"}}
{"translation": {"en": "declare constant integer maxm = 1e6 + 10 [ENDL] declare constant integer INF = 0x3f3f3f3f [ENDL] declare long longs casn , n , m , k [ENDL] declare long long array num size maxn [ENDL] declare cal with long long x as argument , returning lon glong [ENDL] declare long long ans = 1 [ENDL] for i = 1 to x inclusive , let ans be ans * i [ENDL] return ans from function [ENDL] read n [ENDL] print 1 + ( n % 2 is 0 ) , newline [ENDL] let n be a integer", "c++": "const int maxm = 1e6 + 10 ; const int INF = 0x3f3f3f3f ; long long casn , n , m , k ; long long num [ maxn ] ; long long cal ( long long x ) long long ans = 1 ; for ( long long i = 1 ; i <= x ; i ++ ) { ans *= i ; } return ans ; cin >> n ; } int main() { cout << 1 + ( n % 2 == 0 ) << endl ; int n ; return 0; }"}}
{"translation": {"en": "read n [ENDL] let count be a vector of integers [ENDL] for integer i = 0 to n exclusive [ENDL] read x [ENDL] read x [ENDL] increase count [ x ] by 1 [ENDL] print * max_element from beginning to end of count and endline [ENDL] let n , ans = 0 , a [ 111 ] , vis [ 100010 ] be long long", "c++": "int main() { cin >> n ; vector < int > count ( 101 ) ; for ( int i = 0 ; i < n ; i ++ ) int x ; cin >> x ; ++ count [ x ] ; cout << * max_element ( count . begin ( ) , count . end ( ) ) << endl ; } long long n , ans = 0 , a [ 111 ] , vis [ 100010 ] ; return 0; }"}}
{"translation": {"en": "in inline long long function read [ENDL] x = long long = 0 [ENDL] bool = 0 = f [ENDL] ch = char = get char [ENDL] for , until not ch is digit set ch to get char , f bit exclusive or ( ch = = ' - ' ) [ENDL] for , is digit of ch = false , set ch = get char ; set x to ( x < < 3 ) + ( x < < 1 ) + ( ch ^ 48 ) [ENDL] is f not 0 ? then return - x else return x [ENDL] n = read ( ) [ENDL] for resgister int i = 1 to n inclusive , set a [ i ] to read , increment vis at a [ i ] [ENDL] for register int i = 1 to n inclusive [ENDL] if ans < vis at a [ i ] [ENDL] then set ans to vis at a [ i ] [ENDL] max_elemento is a integer function with vector of integers argument coins_array", "c++": "inline long long read ( ) long long x = 0 ; bool f = 0 ; char ch = getchar ( ) ; for ( ; ! isdigit ( ch ) ; ch = getchar ( ) ) f ^= ( ch == ' - ' ) ; for ( ; isdigit ( ch ) ; ch = getchar ( ) ) x = ( x << 3 ) + ( x << 1 ) + ( ch ^ 48 ) ; return f ? - x : x ; n = read ( ) ; } int main() { for ( register int i = 1 ; i <= n ; i ++ ) a [ i ] = read ( ) , vis [ a [ i ] ] ++ ; for ( register int i = 1 ; i <= n ; i ++ ) if ( ans < vis [ a [ i ] ] ) ans = vis [ a [ i ] ] ; cout << ans << endl ; int max_elemento ( vector < int > coins_array ) return 0; }"}}
{"translation": {"en": "create integer max_element with value 0 [ENDL] for i from 0 to length of coins_array exclusive incrementing i [ENDL] if coins_array [ i ] is greater than max_element , set max_element to coins_array [ i ] [ENDL] return max_element [ENDL] create integer coins_nro [ENDL] create new integer variable coin_value [ENDL] create vector of integers coins_array with size 105 filled with 0 [ENDL] result is a new integer variable [ENDL] read variable coins_nro from the input [ENDL] in a for loop , change i from 0 to coins_nro exclusive incrementing i [ENDL] read from the input to coin_value [ENDL] increment coins_array [ coin_value ] by one [ENDL] assign the new value = max_elemento ( coins_array ) to result [ENDL] print result and ' \\ n ' [ENDL] declare integer array a size 10005", "c++": "int max_element = 0 ; for ( int i = 0 ; i < coins_array . size ( ) ; i ++ ) if ( coins_array [ i ] > max_element ) { max_element = coins_array [ i ] ; } return max_element ; } int coins_nro ; } int main() { int coin_value ; vector < int > coins_array ( 105 , 0 ) ; int result ; cin >> coins_nro ; for ( int i = 0 ; i < coins_nro ; i ++ ) cin >> coin_value ; coins_array [ coin_value ] ++ ; result = max_elemento ( coins_array ) ; } cout << result << ' \\n ' ; int a [ 10005 ] ; return 0; }"}}
{"translation": {"en": "declare integers n , m , d = 0 [ENDL] read n [ENDL] for i = 1 to n inclusive [ENDL] read m [ENDL] increment a [ m ] [ENDL] for j = 0 to 10000 exclusive [ENDL] if a [ j ] is greater than d , let d be a [ j ] [ENDL] print d and newline [ENDL] create long long integer n", "c++": "int n , m , d = 0 ; int main() { cin >> n ; for ( int i = 1 ; i <= n ; i ++ ) cin >> m ; a [ m ] ++ ; for ( int j = 0 ; j < 10000 ; j ++ ) } if ( a [ j ] > d ) { d = a [ j ] ; } cout << d << endl ; } long long int n ; return 0; }"}}
{"translation": {"en": "read n [ENDL] make long long int array a of size and long long c = 0 [ENDL] let long long int array x of size 101 containing { 0 } [ENDL] for i = 0 to n exclusive [ENDL] read a [ i ] [ENDL] increment x [ a [ i ] ] [ENDL] display * max_element ( x , x + 101 ) [ENDL] declare integer array a size 250 , integers ans , sum = 1", "c++": "int main() { cin >> n ; long long int a [ n ] , c = 0 ; long long int x [ 101 ] = { 0 } ; for ( int i = 0 ; i < n ; i ++ ) cin >> a [ i ] ; x [ a [ i ] ] ++ ; cout << * max_element ( x , x + 101 ) << endl ; } int a [ 250 ] , ans , sum = 1 ; return 0; }"}}
{"translation": {"en": "declare integer n [ENDL] read n [ENDL] if n is 1 [ENDL] print \" 1 \" and newline [ENDL] for i = 0 to n inclusive , read a [ i ] [ENDL] sort from a + 1 to a + n + 1 [ENDL] for i = 2 to n inclusive [ENDL] if a [ i ] is a [ i - 1 ] , increment sum [ENDL] let ans be maximum of ans and sum [ENDL] if a [ i ] is not a [ i - 1 ] , let sum be 1 [ENDL] print ans and newline [ENDL] integer as n , a [ 1000 ] , i , j", "c++": "int n ; int main() { cin >> n ; if ( n == 1 ) cout << \" 1 \" << endl ; for ( int i = 1 ; i <= n ; i ++ ) cin >> a [ i ] ; return 0; } sort ( a + 1 , a + n + 1 ) ; for ( int i = 2 ; i <= n ; i ++ ) if ( a [ i ] == a [ i - 1 ] ) sum ++ ; ans = max ( ans , sum ) ; if ( a [ i ] != a [ i - 1 ] ) sum = 1 ; cout << ans << endl ; } int n , a [ 1000 ] , i , j ; return 0; }"}}
{"translation": {"en": "create memset with pointer a , value of 0 , and byte size of a [ENDL] read n [ENDL] for = 0 to less than n do the following [ENDL] read j [ENDL] add one to a [ j ] [ENDL] integer as m = - 999 [ENDL] for = 0 to less than 1000 do the following [ENDL] if a [ i ] is greater than m then do the following m = a [ i ] [ENDL] output m [ENDL] let INF be a constant integer with INF = 0x3f3f3f3f", "c++": "int main() { memset ( a , 0 , sizeof ( a ) ) ; cin >> n ; for ( i = 0 ; i < n ; i ++ ) cin >> j ; a [ j ] ++ ; int m = - 999 ; } for ( i = 0 ; i < 1000 ; i ++ ) if ( a [ i ] > m ) { m = a [ i ] ; } cout << m << endl ; } const int INF = 0x3f3f3f3f ; return 0; }"}}
{"translation": {"en": "let v be an integer array of size 105 [ENDL] let i , j , k be integers [ENDL] let n , m , x be integers [ENDL] read n [ENDL] for i = 0 to n exclusive , read x and increase v [ x ] by 1 [ENDL] sort the values v and v + 101 [ENDL] print v [ 100 ] and endline [ENDL] let n be a integer", "c++": "int v [ 105 ] ; int i , j , k ; int main() { int n , m , x ; cin >> n ; for ( i = 0 ; i < n ; i ++ ) cin >> x , v [ x ] ++ ; sort ( v , v + 101 ) ; cout << v [ 100 ] << endl ; int n ; }"}}
{"translation": {"en": "read n [ENDL] arr = array of integers of length n [ENDL] for i = 0 to n exclusive , read arr [ i ] [ENDL] count = array of integers of length 101 [ENDL] for i = 0 to 101 exclusive , count [ i ] is equal to 0 [ENDL] for i = 0 to n exclusive , increment count [ arr [ i ] ] by 1 [ENDL] the integer value of answer = 0 [ENDL] for i = 0 to 101 exclusive [ENDL] if count [ i ] is greater than answer , answer is equal to count [ i ] [ENDL] print answer and newline [ENDL] arr is a vector of integers", "c++": "int main() { cin >> n ; int arr [ n ] ; for ( int i = 0 ; i < n ; ++ i ) { cin >> arr [ i ] ; } int count [ 101 ] ; for ( int i = 0 ; i < 101 ; ++ i ) { count [ i ] = 0 ; } for ( int i = 0 ; i < n ; ++ i ) { count [ arr [ i ] ] ++ ; } int answer = 0 ; for ( int i = 0 ; i < 101 ; ++ i ) if ( count [ i ] > answer ) { answer = count [ i ] ; } cout << answer << endl ; } vector < int > arr ( 10000 ) ; }"}}
{"translation": {"en": "n , x be integers [ENDL] read n [ENDL] for integer i = 0 to n exclusive [ENDL] read x [ENDL] increase arr [ x ] by 1 [ENDL] print * max_element ( arr . begin ( ) , arr . end ( ) ) and endline [ENDL] declare cmp with integers a , b as arguments , returning boolean", "c++": "int n , x ; int main() { cin >> n ; for ( int i = 0 ; i < n ; i ++ ) cin >> x ; ++ arr [ x ] ; cout << * max_element ( arr . begin ( ) , arr . end ( ) ) << endl ; } bool cmp ( int a , int b ) }"}}
{"translation": {"en": "return a is greater than b [ENDL] declare integer n [ENDL] read n [ENDL] declare integer array a size 200 = { 0 } [ENDL] for i = 0 to n exclusive [ENDL] declare integer mid [ENDL] read mid [ENDL] increment a [ mid ] [ENDL] sort from a to a + 105 using cmp to compare [ENDL] print a [ 0 ] and newline [ENDL] integer as array a of size 10005", "c++": "return a > b ; int n ; } int main() { cin >> n ; int a [ 200 ] = { 0 } ; for ( int i = 0 ; i < n ; i ++ ) int mid ; cin >> mid ; a [ mid ] ++ ; sort ( a , a + 105 , cmp ) ; } cout << a [ 0 ] << endl ; int a [ 10005 ] ; return 0; }"}}
{"translation": {"en": "integer as n , m , b = 0 [ENDL] read n [ENDL] for i = 1 to less than or equal to n do the following [ENDL] read m [ENDL] add one to a [ m ] [ENDL] for i = 0 to less than or equal to 10000 do the following [ENDL] if a [ i ] is greater than b then b = a [ i ] [ENDL] output b [ENDL] create long long n", "c++": "int n , m , b = 0 ; int main() { cin >> n ; for ( int i = 1 ; i <= n ; i ++ ) cin >> m ; a [ m ] ++ ; for ( int i = 0 ; i <= 10000 ; i ++ ) } if ( a [ i ] > b ) b = a [ i ] ; cout << b << endl ; } long long n ; return 0; }"}}
{"translation": {"en": "read n [ENDL] make long long vector coins [ENDL] for i = 0 to n exclusive [ENDL] create long long aux [ENDL] read aux [ENDL] append aux to coins [ENDL] sort coins [ENDL] create long long ints cont = 1 and resp = 1 [ENDL] for i = 0 to n exclusive [ENDL] if coins [ i ] is equal to coins [ i - 1 ] [ENDL] increment cont [ENDL] else do [ENDL] if cont is greater than resp , set resp to cont [ENDL] set cont to 1 [ENDL] if cont is greater than resp , set resp to cont [ENDL] display resp [ENDL] declare integers n , max = - 1 , cnt , integer array arr size 105", "c++": "int main() { cin >> n ; vector < long long > coins ; for ( long long i = 0 ; i < n ; i ++ ) long long aux ; cin >> aux ; coins . push_back ( aux ) ; sort ( coins . begin ( ) , coins . end ( ) ) ; } long long cont = 1 , resp = 1 ; for ( long long i = 0 ; i < n ; i ++ ) if ( coins [ i ] == coins [ i - 1 ] ) cont ++ ; else if ( cont > resp ) { resp = cont ; } cont = 1 ; if ( cont > resp ) { resp = cont ; } } } cout << resp << endl ; int n , arr [ 105 ] , max = - 1 , cnt ; return 0; }"}}
{"translation": {"en": "read n [ENDL] for i = 0 to n exclusive , read arr [ i ] [ENDL] for i = 0 to n exclusive [ENDL] let cnt be 0 [ENDL] if arr [ i ] is - 5000000 , end loop iteration [ENDL] declare integer tmp = arr [ i ] [ENDL] for j = 0 to n exclusive [ENDL] if tmp is arr [ j ] [ENDL] increment cnt [ENDL] let arr [ j ] be - 5000000 [ENDL] if cnt is greater than or equal to max , let max be cnt [ENDL] print max , newline [ENDL] create integer n", "c++": "int main() { cin >> n ; for ( int i = 0 ; i < n ; i ++ ) { cin >> arr [ i ] ; } for ( int i = 0 ; i < n ; i ++ ) cnt = 0 ; if ( arr [ i ] == - 5000000 ) { continue ; } int tmp = arr [ i ] ; for ( int j = 0 ; j < n ; j ++ ) if ( tmp == arr [ j ] ) cnt ++ ; arr [ j ] = - 5000000 ; if ( cnt >= max ) { max = cnt ; } } } cout << max << endl ; } int n ; }"}}
{"translation": {"en": "read n [ENDL] make integer ma = 0 [ENDL] make integer array a of size 110 [ENDL] set all content of a to 0 [ENDL] for i = 0 to n exclusive [ENDL] make integer num [ENDL] read num [ENDL] add 1 to a [ num ] [ENDL] set ma to max of a [ num ] and ma [ENDL] print ma [ENDL] integer as n", "c++": "int main() { cin >> n ; int ma = 0 ; int a [ 110 ] ; memset ( a , 0 , sizeof ( a ) ) ; for ( int i = 0 ; i < n ; i ++ ) int num ; cin >> num ; a [ num ] ++ ; ma = max ( a [ num ] , ma ) ; cout << ma << endl ; } int n ; }"}}
{"translation": {"en": "read n [ENDL] create integer vector of v ( 101 , 0 ) [ENDL] for i = 0 to less than n do the following [ENDL] integer as x [ENDL] read x [ENDL] add one to v [ x ] [ENDL] integer as MAX = value pointed to by max_element within v [ENDL] output MAX [ENDL] create long long ints n and i", "c++": "int main() { cin >> n ; vector < int > v ( 101 , 0 ) ; for ( int i = 0 ; i < n ; i ++ ) int x ; cin >> x ; v [ x ] ++ ; int MAX = * max_element ( v . begin ( ) , v . end ( ) ) ; } cout << MAX << endl ; long long int n , i ; return 0; }"}}
{"translation": {"en": "read n [ENDL] make long long array a of size n and long long max = 0 [ENDL] make map m of long long ints to long long ints [ENDL] for i = 0 to n exclusive [ENDL] read a [ i ] [ENDL] increment m [ a [ i ] ] [ENDL] if m [ a [ i ] ] is greater than max , set max to m [ a [ i ] ] [ENDL] print max [ENDL] n is a new integer", "c++": "int main() { cin >> n ; long long int a [ n ] , max = 0 ; map < long long int , long long int > m ; for ( i = 0 ; i < n ; i ++ ) cin >> a [ i ] ; m [ a [ i ] ] ++ ; if ( m [ a [ i ] ] > max ) max = m [ a [ i ] ] ; cout << max << \" \\n \" ; } int n ; }"}}
{"translation": {"en": "loop , reading n from the input [ENDL] declare integer ans with value 0 [ENDL] let p be a map from integers to integers [ENDL] increment i in a loop from 0 to n exclusive [ENDL] new integer val [ENDL] read val [ENDL] increment p [ val ] [ENDL] assign the new value = max of p [ val ] and ans to ans [ENDL] print ans [ENDL] let cont be a long integer array", "c++": "int main() { while ( cin >> n ) int ans = 0 ; map < int , int > p ; for ( int i = 0 ; i < n ; i ++ ) int val ; cin >> val ; p [ val ] ++ ; ans = max ( p [ val ] , ans ) ; cout << ans << endl ; } long long cont [ 101 ] ; } return 0; }"}}
{"translation": {"en": "n is a long integer [ENDL] read n [ENDL] for long integer i = 0 to n exclusive [ENDL] num is a long integer [ENDL] read num [ENDL] increase cont [ num ] by 1 [ENDL] maxi is a long integer 0 [ENDL] for long integer i = 1 to 100 inclusive , maxi = max ( maxi , cont [ i ] [ENDL] print maxi and endline [ENDL] integer as n , i , j , maxx", "c++": "long long n ; int main() { cin >> n ; for ( long long i = 0 ; i < n ; i ++ ) long long num ; cin >> num ; cont [ num ] ++ ; long long maxi = 0 ; } for ( long long i = 1 ; i <= 100 ; i ++ ) { maxi = max ( maxi , cont [ i ] ) ; } cout << maxi << endl ; int n , i , j , maxx ; }"}}
{"translation": {"en": "read n [ENDL] integer as a [ n ] [ENDL] integer as freq [ 101 ] = 0 [ENDL] for i = 0 to less than n do the following [ENDL] read array a [ i ] [ENDL] add one to freq [ a [ i ] ] [ENDL] do nothing [ENDL] set maxx to INT_MIN [ENDL] for i = 0 to less than 101 do the following [ENDL] if freq [ i ] is greater than or equal to maxx then do the following maxx = freq [ i ] [ENDL] output maxx [ENDL] n , m , c = int with m = 0 and c = 0 and arr = int array of size 101", "c++": "int main() { cin >> n ; int a [ n ] ; int freq [ 101 ] = { 0 } ; for ( int i = 0 ; i < n ; i ++ ) cin >> a [ i ] ; freq [ a [ i ] ] ++ ; { } } maxx = INT_MIN ; for ( int i = 0 ; i < 101 ; i ++ ) if ( freq [ i ] >= maxx ) { maxx = freq [ i ] ; } cout << maxx << endl ; } int n , arr [ 101 ] , m = 0 , c = 0 ; return 0; }"}}
{"translation": {"en": "read n [ENDL] read n values into arr [ENDL] sort arr from index 0 to n [ENDL] for i = 1 to n [ENDL] if arr [ i - 1 ] is arr [ i ] [ENDL] increment c [ENDL] else [ENDL] set c to 0 [ENDL] set m to max of m , c [ENDL] if m is 0 [ENDL] print 1 [ENDL] else [ENDL] print m + 1 [ENDL] create integers n , i , t and max = 0", "c++": "int main() { cin >> n ; for ( int i = 0 ; i < n ; i ++ ) cin >> arr [ i ] ; sort ( arr , arr + n ) ; for ( int i = 1 ; i < n ; i ++ ) if ( arr [ i - 1 ] == arr [ i ] ) c ++ ; else c = 0 ; m = max ( m , c ) ; if ( m == 0 ) } cout << 1 << endl ; else cout << m + 1 << endl ; int n = 0 , i = 0 , t = 0 , max = 0 ; return 0; }"}}
{"translation": {"en": "read user input to n [ENDL] f is a new vector of integers with size 101 filled with 0 [ENDL] start for loop from i = 0 to n exclusive incrementing i [ENDL] read standard input to t [ENDL] increment f [ t ] [ENDL] in a for loop , change i from 1 to 100 inclusive , changing max to maximum of f [ i ] and max on each iteration [ENDL] print max [ENDL] create long long n", "c++": "int main() { cin >> n ; vector < int > f ( 101 , 0 ) ; for ( i = 0 ; i < n ; i ++ ) cin >> t ; f [ t ] ++ ; for ( i = 1 ; i <= 100 ; i ++ ) { max = ( f [ i ] > max ) ? f [ i ] : max ; } } cout << max << endl ; long long n ; return 0; }"}}
{"translation": {"en": "read n [ENDL] make long long int array c of size n and int max = 1 [ENDL] for i = 0 to n exclusive , read c [ i ] [ENDL] for i = 0 to n - 1 exclusive [ENDL] create long long cnt = 1 [ENDL] for j = i + 1 to n exclusive [ENDL] if c [ j ] is equal to c [ i ] , increment cnt [ENDL] if i is equal to 0 , set max to cnt [ENDL] if cnt is greater than or equal to max , set max to cnt [ENDL] display max [ENDL] integer as n", "c++": "int main() { cin >> n ; long long c [ n ] , max = 1 ; for ( long long i = 0 ; i < n ; i ++ ) { cin >> c [ i ] ; } for ( long long i = 0 ; i < n - 1 ; i ++ ) long long cnt = 1 ; for ( long long j = i + 1 ; j < n ; j ++ ) if ( c [ j ] == c [ i ] ) { cnt ++ ; } if ( i == 0 ) max = cnt ; } if ( cnt >= max ) max = cnt ; cout << max << endl ; } int n ; return 0; }"}}
{"translation": {"en": "read n [ENDL] create integer vector of coins 101 , 0 [ENDL] for i = 0 to less than n do the following [ENDL] integer as value [ENDL] read value [ENDL] add one to coins [ value ] [ENDL] integer as minPockets = - 1 [ENDL] for i = 0 to less than 101 then minPockets = maximum of minpockets or coins [ i ] [ENDL] output minPockets [ENDL] p1 , p2 , p3 , p4 , a , b = int", "c++": "int main() { cin >> n ; vector < int > coins ( 101 , 0 ) ; for ( int i = 0 ; i < n ; i ++ ) int value ; cin >> value ; coins [ value ] ++ ; int minPockets = - 1 ; } for ( int i = 0 ; i < 101 ; i ++ ) minPockets = max ( minPockets , coins [ i ] ) ; cout << minPockets << endl ; int p1 , p2 , p3 , p4 , a , b ; return 0; }"}}
{"translation": {"en": "read p1 , p2 , p3 , p4 , a , b [ENDL] ans = 0 [ENDL] p = min ( p1 , p2 ) [ENDL] p = min ( p , p3 ) [ENDL] p = min ( p , p4 ) [ENDL] if b < p [ENDL] print b - a + 1 [ENDL] if p - a > 0 ans = p - a [ENDL] print ans [ENDL] declare integer array p size 4 , integers a , b , ans", "c++": "cin >> p1 >> p2 >> p3 >> p4 >> a >> b ; int main() { int ans = 0 ; int p = min ( p1 , p2 ) ; p = min ( p , p3 ) ; p = min ( p , p4 ) ; if ( b < p ) cout << b - a + 1 << \" \\n \" ; if ( p - a > 0 ) { ans = p - a ; } return 0; } cout << ans << \" \\n \" ; int p [ 4 ] , a , b , ans ; return 0; }"}}
{"translation": {"en": "for i = 0 to 4 exclusive , read p [ i ] [ENDL] read a , b [ENDL] let ans be b - a + 1 [ENDL] for i = a to b inclusive [ENDL] for j = 0 to 4 exclusive [ENDL] if i is less than p [ j ] , end loop iteration [ENDL] decrement ans [ENDL] end loop [ENDL] print ans and newline [ENDL] declare integers p1 , p2 , p3 , p4 , a and b", "c++": "for ( int i = 0 ; i < 4 ; ++ i ) cin >> p [ i ] ; int main() { cin >> a >> b ; ans = b - a + 1 ; for ( int i = a ; i <= b ; ++ i ) for ( int j = 0 ; j < 4 ; ++ j ) if ( i < p [ j ] ) continue ; -- ans ; break ; cout << ans << endl ; } } int p1 , p2 , p3 , p4 , a , b ; return 0; }"}}
{"translation": {"en": "read input to p1 , p2 , p3 , p4 , a and b [ENDL] declare integer variable with name sum = 0 [ENDL] for i from a to b inclusive [ENDL] if i % p1 = i and i % p2 = i and i % p3 = i and i % p4 = i , increment sum by one [ENDL] print sum [ENDL] p = array of 4 int", "c++": "int main() { cin >> p1 >> p2 >> p3 >> p4 >> a >> b ; int sum = 0 ; for ( int i = a ; i <= b ; i ++ ) if ( i % p1 == i && i % p2 == i && i % p3 == i && i % p4 == i ) { sum ++ ; } cout << sum << endl ; } int p [ 4 ] ; return 0; }"}}
{"translation": {"en": "for i = 0 to 4 exclusive read p [ i ] [ENDL] esq , dir = int [ENDL] read esq , dir [ENDL] res = 0 [ENDL] for i = esq to dir inclusive [ENDL] sort p [ENDL] cnt = 0 [ENDL] do [ENDL] x = i [ENDL] for j = 0 to 4 exclusive x = x modulo p [ j ] [ENDL] if x is i increment cnt [ENDL] while next_permutation ( p , p + 4 ) [ENDL] if cnt > = 7 increment res [ENDL] print res [ENDL] p1 , p2 , p3 , p4 = int", "c++": "int main() { for ( int i = 0 ; i < 4 ; i ++ ) cin >> p [ i ] ; int esq , dir ; cin >> esq >> dir ; int res = 0 ; for ( int i = esq ; i <= dir ; i ++ ) sort ( p , p + 4 ) ; int cnt = 0 ; do int x = i ; for ( int j = 0 ; j < 4 ; j ++ ) x = x % p [ j ] ; if ( x == i ) cnt ++ ; while ( next_permutation ( p , p + 4 ) ) ; if ( cnt >= 7 ) res ++ ; cout << res << endl ; } int p1 , p2 , p3 , p4 ; return 0; }"}}
{"translation": {"en": "a , b = int [ENDL] ans = int with ans = 0 [ENDL] read p1 then p2 then p3 then p4 then a then b [ENDL] for i = a to b inclusive [ENDL] if i mod p1 is i and i mod p2 is is and i mod p3 is i and i mod p4 is i increment ans [ENDL] print ans [ENDL] create long long ints p1 , p2 , p3 , p4 , a , b , and ans = 0", "c++": "int main() { int a , b ; int ans = 0 ; cin >> p1 >> p2 >> p3 >> p4 >> a >> b ; for ( int i = a ; i <= b ; i ++ ) if ( i % p1 == i && i % p2 == i && i % p3 == i && i % p4 == i ) ans ++ ; cout << ans << endl ; } long long p1 , p2 , p3 , p4 , a , b , ans = 0 ; return 0; }"}}
{"translation": {"en": "read p1 , p2 , p3 , p4 , a , and b [ENDL] for i = a to b [ENDL] if i % p1 is equal to i , i % p2 is equal to i , i % p3 is equal to i , and i % p4 is equal to i , increment ans [ENDL] print ans [ENDL] p1 , p2 , p3 , p4 , a , b , x = int , cnt = 0", "c++": "int main() { cin >> p1 >> p2 >> p3 >> p4 >> a >> b ; for ( int i = a ; i <= b ; i ++ ) if ( i % p1 == i && i % p2 == i && i % p3 == i && i % p4 == i ) ans ++ ; cout << ans << endl ; int p1 , p2 , p3 , p4 , a , b , cnt = 0 , x ; }"}}
{"translation": {"en": "read p1 , p2 , p3 , p4 , a , b [ENDL] for i = a to b inclusive [ENDL] x = ( ( ( i modulo p1 ) modulo p2 ) modulo p3 ) modulo p4 [ENDL] if x is i increment cnt [ENDL] print cnt [ENDL] create integers a , b , c , d , x , y and s where s = 0", "c++": "int main() { cin >> p1 >> p2 >> p3 >> p4 >> a >> b ; for ( int i = a ; i <= b ; i ++ ) x = ( ( ( i % p1 ) % p2 ) % p3 ) % p4 ; if ( x == i ) { cnt ++ ; } cout << cnt << \" \\n \" ; } int a , b , c , d , x , y , s = 0 ; return 0; }"}}
{"translation": {"en": "read standard input to a , b , c , d , x and y [ENDL] for i from x to y inclusive [ENDL] if i % a , i % b , i % c and i % d are all equal to i , increment s [ENDL] print s [ENDL] a , b , p , q , r , s = short", "c++": "int main() { cin >> a >> b >> c >> d >> x >> y ; for ( int i = x ; i <= y ; i ++ ) if ( i % a == i && i % b == i && i % c == i && i % d == i ) s ++ ; cout << s << endl ; short a , b , p , q , r , s ; return 0; }"}}
{"translation": {"en": "read p then q then r then s then a then b [ENDL] ans = short with ans = 0 [ENDL] for i = a to b inclusive [ENDL] if ( ( ( ( i mod p ) mod q ) mod r ) mod s ) is i increment ans [ENDL] print ans [ENDL] create int p , a , b", "c++": "int main() { cin >> p >> q >> r >> s >> a >> b ; short ans = 0 ; for ( int i = a ; i <= b ; i ++ ) if ( ( ( ( ( i % p ) % q ) % r ) % s ) == i ) ans ++ ; cout << ans << endl ; } int p , a , b ; return 0; }"}}
{"translation": {"en": "set min to 99999999 [ENDL] for i = 1 to 4 inclusive [ENDL] read p [ENDL] if p < min , min = p [ENDL] read a and b [ENDL] if min > = a and < = b [ENDL] print min - a [ENDL] else if min < a [ENDL] print 0 [ENDL] else if min > b [ENDL] print b - a + 1 [ENDL] ifstream in ( txt . in )", "c++": "int main() { int min = 99999999 ; for ( int i = 1 ; i <= 4 ; i ++ ) cin >> p ; if ( p < min ) min = p ; cin >> a >> b ; } if ( min >= a && min <= b ) cout << min - a << endl ; else if ( min < a ) cout << 0 << endl ; else if ( min > b ) cout << b - a + 1 << endl ; ifstream in ( \" txt.in \" ) ; }"}}
{"translation": {"en": "ofstream out ( txt . out ) [ENDL] print fixed and setprecision ( 12 ) [ENDL] let mx be a long integer with mx = 2e9 [ENDL] for i = 1 to 4 inclusive [ENDL] let x be a long integer [ENDL] read x [ENDL] mx is equal to minimum of mx , x [ENDL] let a , b be long integers [ENDL] read a , b [ENDL] let cnt be a long integer with cnt = 0 [ENDL] for i = a to b inclusive , cnt is equal to cnt + i is less than mx [ENDL] print cnt and newline [ENDL] declare integers a , b , integer array p size 4", "c++": "ofstream out ( \" txt.out \" ) ; cout << fixed << setprecision ( 12 ) ; int main() { long long mx = 2e9 ; for ( int i = 1 ; i <= 4 ; ++ i ) long long x ; cin >> x ; mx = min ( mx , x ) ; long long a , b ; } cin >> a >> b ; long long cnt = 0 ; for ( int i = a ; i <= b ; ++ i ) { cnt += ( i < mx ) ; } cout << cnt << ' \\n ' ; int a , b , p [ 4 ] ; return 0; }"}}
{"translation": {"en": "for i = 0 to 4 exclusive , read p [ i ] [ENDL] read a and b [ENDL] sort between p and p + 4 [ENDL] declare integers x , cnt = 0 [ENDL] for i = a to b inclusive [ENDL] declare integer match = 0 [ENDL] start loop [ENDL] let x be i [ENDL] for i = 0 to 4 exclusive , let x be x % p [ i ] [ENDL] if x is i , increment match [ENDL] while ( re - arrange elements lexicographically p , p + 4 ) [ENDL] if match is greater than or equal to 7 , increment cnt [ENDL] print cnt and ' \\ n ' [ENDL] declare ints a , b , c , d , x , y and cnt", "c++": "int main() { for ( int i = 0 ; i < 4 ; i ++ ) cin >> p [ i ] ; cin >> a >> b ; sort ( p , p + 4 ) ; int x , cnt = 0 ; for ( int i = a ; i <= b ; i ++ ) int match = 0 ; do x = i ; for ( int i = 0 ; i < 4 ; i ++ ) x %= p [ i ] ; if ( x == i ) match ++ ; while ( next_permutation ( p , p + 4 ) ) ; if ( match >= 7 ) cnt ++ ; cout << cnt << ' \\n ' ; } int a , b , c , d , x , y , cnt ; return 0; }"}}
{"translation": {"en": "read a , b , c , d , x and y and keep looping [ENDL] change the value of cnt to 0 [ENDL] for i from x to y inclusive [ENDL] if i % a % b % c % d is equal to i , increment cnt by one [ENDL] print cnt [ENDL] let a , b , s be integers with s = 0 , p = array of integers of length 4", "c++": "int main() { while ( cin >> a >> b >> c >> d >> x >> y ) cnt = 0 ; for ( int i = x ; i <= y ; i ++ ) if ( i % a % b % c % d == i ) cnt ++ ; cout << cnt << endl ; int p [ 4 ] , a , b , s = 0 ; } return 0; }"}}
{"translation": {"en": "read p [ 0 ] , p [ 1 ] , p [ 2 ] , p [ 3 ] , a , b [ENDL] sort the values p , p + 4 [ENDL] for i = a to b inclusive [ENDL] if i is less than p [ 0 ] , increment s by 1 [ENDL] print s and newline [ENDL] declare integers p1 , p2 , p3 , p4 , a , b", "c++": "int main() { cin >> p [ 0 ] >> p [ 1 ] >> p [ 2 ] >> p [ 3 ] >> a >> b ; sort ( p , p + 4 ) ; for ( int i = a ; i <= b ; i ++ ) if ( i < p [ 0 ] ) s ++ ; cout << s << endl ; int p1 , p2 , p3 , p4 , a , b ; return 0; }"}}
{"translation": {"en": "read p1 , p2 , p3 , p4 , a , b [ENDL] declare ans = 0 as integer [ENDL] for i = a to b inclusive [ENDL] declare integer ans = ( ( ( ( i % p1 ) % p2 ) % p3 ) % p4 ) [ENDL] if ans is i , increment ans [ENDL] print ans and newline [ENDL] create int x", "c++": "int main() { cin >> p1 >> p2 >> p3 >> p4 >> a >> b ; int ans = 0 ; for ( int i = a ; i <= b ; i ++ ) int ans1 = ( ( ( ( i % p1 ) % p2 ) % p3 ) % p4 ) ; if ( ans1 == i ) ans ++ ; cout << ans << endl ; } int x ; }"}}
{"translation": {"en": "read x [ENDL] for i = 0 to 3 exclusive [ENDL] create int y [ENDL] read y [ENDL] x = min of x and y [ENDL] create int a and b [ENDL] read a and b [ENDL] c = 0 [ENDL] for i = a to b inclusive and to x , increment c [ENDL] print c [ENDL] a , b = int and s = int array of size 4", "c++": "int main() { cin >> x ; for ( int i = 0 ; i < ( int ) 3 ; i ++ ) int y ; cin >> y ; x = min ( x , y ) ; int a , b ; } cin >> a >> b ; int c = 0 ; for ( int i = a ; i <= b && i < x ; i ++ ) c ++ ; cout << c << endl ; int s [ 4 ] , a , b ; }"}}
{"translation": {"en": "loop while reading s [ 0 ] then s [ 1 ] then s [ 2 ] then s [ 3 ] then a then b [ENDL] sort s [ENDL] if s [ 0 ] > b [ENDL] print b - a + 1 [ENDL] else if s [ 0 ] > a [ENDL] print s [ 0 ] - a [ENDL] else [ENDL] print \" 0 \" [ENDL] call precision of 7 on cout", "c++": "int main() { while ( cin >> s [ 0 ] >> s [ 1 ] >> s [ 2 ] >> s [ 3 ] >> a >> b ) sort ( s , s + 4 ) ; if ( s [ 0 ] > b ) cout << b - a + 1 << endl ; else if ( s [ 0 ] > a ) cout << s [ 0 ] - a << endl ; else cout << \" 0 \" << endl ; cout . precision ( 7 ) ; } return 0; }"}}
{"translation": {"en": "p1 , p2 , p3 , p4 , a , b = int [ENDL] read p1 then p2 then p3 then p4 then a then b [ENDL] minP = int with minP = mind of p1 , min of p2 , min of p3 , p4 [ENDL] print max of 0 , min of minP - a , b - a + 1 [ENDL] create int a , b , c , d", "c++": "int main() { int p1 , p2 , p3 , p4 , a , b ; { cin >> p1 >> p2 >> p3 >> p4 >> a >> b ; int minP = min ( p1 , min ( p2 , min ( p3 , p4 ) ) ) ; cout << max ( 0 , min ( minP - a , b - a + 1 ) ) << \" \\n \" ; int a , b , c , d ; } return 0; }"}}
{"translation": {"en": "create int p and m [ENDL] set p to 1000 and q to 31415 [ENDL] create int ans [ENDL] read a , b , c and d [ENDL] read n and m [ENDL] set p to min of p and a [ENDL] assign min of p and b to p [ENDL] set p = min of p and c [ENDL] p = min ( p , d ) [ENDL] if p > m [ENDL] set ans to m - n + 1 [ENDL] else [ENDL] set ans = p - n [ENDL] if ans < 0 , set ans equal to 0 [ENDL] print ans [ENDL] declare integers p1 , p2 , p3 , p4", "c++": "int main() { int n , m ; int p = 1000 , q = 31415 ; int ans ; cin >> a >> b >> c >> d ; cin >> n >> m ; p = min ( p , a ) ; p = min ( p , b ) ; p = min ( p , c ) ; p = min ( p , d ) ; if ( p > m ) ans = m - n + 1 ; else ans = p - n ; if ( ans < 0 ) ans = 0 ; cout << ans << endl ; int p1 , p2 , p3 , p4 ; }"}}
{"translation": {"en": "declare integers a , b [ENDL] read p1 , p2 , p3 , p4 , a , b [ENDL] declare integer ans = 0 [ENDL] for i = a to b inclusive [ENDL] if i is ( ( ( i % p1 ) % p2 ) % p3 ) % p4 , increment ans [ENDL] print ans and newline [ENDL] declare new array of integers p with size 4", "c++": "int main() { int a , b ; cin >> p1 >> p2 >> p3 >> p4 >> a >> b ; int ans = 0 ; for ( int i = a ; i <= b ; ++ i ) if ( i == ( ( ( i % p1 ) % p2 ) % p3 ) % p4 ) ++ ans ; cout << ans << endl ; int p [ 4 ] ; return 0; }"}}
{"translation": {"en": "let a and b be new integer variables [ENDL] create integer variable with name cnt [ENDL] read input to p [ 0 ] , p [ 1 ] , p [ 2 ] , p [ 3 ] , a and b [ENDL] start for loop from i = a to b inclusive incrementing i [ENDL] sort p [ENDL] create integer variable s with value 0 [ENDL] start the loop [ENDL] increment s if ( ( ( i % p [ 0 ] ) % p [ 1 ] ) % p [ 2 ] ) % p [ 3 ] = = i [ENDL] loop again while next_permutation ( p , p + 4 ) is true [ENDL] if s > = 7 [ENDL] print cnt [ENDL] declare long longs p1 , p2 , p3 , p4 , a , b , ans = 0", "c++": "int a , b ; int cnt ; cin >> p [ 0 ] >> p [ 1 ] >> p [ 2 ] >> p [ 3 ] >> a >> b ; int main() { for ( int i = a ; i <= b ; ++ i ) sort ( p , p + 4 ) ; int s = 0 ; do if ( ( ( ( i % p [ 0 ] ) % p [ 1 ] ) % p [ 2 ] ) % p [ 3 ] == i ) ++ s ; while ( next_permutation ( p , p + 4 ) ) ; if ( s >= 7 ) ++ cnt ; cout << cnt << endl ; } long long p1 , p2 , p3 , p4 , a , b , ans = 0 ; return 0; }"}}
{"translation": {"en": "declare inline read with no arguments , returning long long [ENDL] declare x = 0 as long long [ENDL] declare f = 0 as boolean [ENDL] declare ch = read character as character [ENDL] for ch is not digit , setting ch to read character , let f be f xor ( ch is ' 0 ' ) [ENDL] for ch is digit , setting ch to read character , let x be ( x bitshift left 3 ) + ( x bitshift left 1 ) + ( ch bitwise xor 48 ) [ENDL] return - x if f is true , else x [ENDL] let p1 = result of run read , p2 = result of run read , p3 = result of run read , p4 = result of run read [ENDL] let a be result of run read , let b be result of run read [ENDL] for i = a to b inclusive [ENDL] declare long longs z = i % p1 , zz = i % p2 , zzz = i % p3 , zzzz = i % p4 [ENDL] if zz is zzz and zz is z and zz is zzzz and z is i , increment ans [ENDL] print ans and newline [ENDL] p1 , p2 , p3 , p4 , a , b = int , p = 0", "c++": "inline long long read ( ) long long x = 0 ; bool f = 0 ; char ch = getchar ( ) ; for ( ; ! isdigit ( ch ) ; ch = getchar ( ) ) f ^= ( ch == ' - ' ) ; for ( ; isdigit ( ch ) ; ch = getchar ( ) ) x = ( x << 3 ) + ( x << 1 ) + ( ch ^ 48 ) ; return f ? - x : x ; p1 = read ( ) , p2 = read ( ) , p3 = read ( ) , p4 = read ( ) ; } int main() { a = read ( ) , b = read ( ) ; for ( register long long i = a ; i <= b ; i ++ ) long long z = i % p1 , zz = i % p2 , zzz = i % p3 , zzzz = i % p4 ; if ( zz == zzz && zz == z && zz == zzzz && z == i ) ans ++ ; cout << ans << endl ; } int p1 , p2 , p3 , p4 , a , b , p = 0 ; return 0; }"}}
{"translation": {"en": "read p1 , p2 , p3 , p4 , a , b [ENDL] for i = a to b inclusive [ENDL] if i modulo p1 modulo p2 modulo p3 modulo p4 is i increment p [ENDL] print p [ENDL] let minn be a integer function which accepts integers a , b , c , d", "c++": "int main() { cin >> p1 >> p2 >> p3 >> p4 >> a >> b ; for ( int i = a ; i <= b ; i ++ ) if ( i % p1 % p2 % p3 % p4 == i ) p ++ ; cout << p << endl ; } int minn ( int a , int b , int c , int d ) }"}}
{"translation": {"en": "a is equal to minimum of a and b [ENDL] c is equal to minimum of c and d [ENDL] return the value minimum of a and c [ENDL] let p1 , p2 , p3 , p4 , a , b be integers [ENDL] while read p1 , p2 , p3 , p4 , a , b [ENDL] if p1 < = a or p2 < = a or p3 < = a or p4 < = a [ENDL] print 0 and newline [ENDL] proceed to next [ENDL] let the value of integer p = minn ( p1 , p2 , p3 , p4 ) [ENDL] if p is greater than b [ENDL] print b - a + 1 and newline [ENDL] proceed to next [ENDL] print p - a and newline [ENDL] a , b = integer , p = integer array of size 5", "c++": "a = min ( a , b ) ; c = min ( c , d ) ; return min ( a , c ) ; int p1 , p2 , p3 , p4 , a , b ; } int main() { while ( cin >> p1 >> p2 >> p3 >> p4 >> a >> b ) if ( p1 <= a || p2 <= a || p3 <= a || p4 <= a ) cout << 0 << endl ; continue ; int p = minn ( p1 , p2 , p3 , p4 ) ; } if ( p > b ) cout << b - a + 1 << endl ; continue ; cout << p - a << endl ; } int p [ 5 ] , a , b ; } return 0; }"}}
{"translation": {"en": "ans = integer = 0 [ENDL] read p [ 1 ] , p [ 2 ] , p [ 3 ] , p [ 4 ] , a , b [ENDL] Min = integer = the lowest value between p [ 1 ] , p [ 2 ] , p [ 3 ] , p [ 4 ] [ENDL] if a < Min [ENDL] ans = ans + ( Min - a ) [ENDL] if b > = Min [ENDL] print ans [ENDL] ans = b = a + 1 [ENDL] print ans [ENDL] create constant double pi = 3 . 14159265358979323846", "c++": "int ans = 0 ; cin >> p [ 1 ] >> p [ 2 ] >> p [ 3 ] >> p [ 4 ] >> a >> b ; int main() { int Min = min ( min ( min ( p [ 1 ] , p [ 2 ] ) , p [ 3 ] ) , p [ 4 ] ) ; if ( a < Min ) ans += ( Min - a ) ; if ( b >= Min ) cout << ans << endl ; ans = b - a + 1 ; return 0; } cout << ans << endl ; } const double pi = 3.14159265358979323846 ; return 0; }"}}
{"translation": {"en": "create int array p of size 4 [ENDL] create integers a and b [ENDL] read p [ 0 ] , p [ 1 ] , p [ 2 ] , p [ 3 ] , a , and b [ENDL] let ints i , j , k , l , and m [ENDL] create integer ctr = 0 [ENDL] make integer ans = 0 [ENDL] for i = a to b + 1 exclusive [ENDL] for j = 0 to 4 exclusive [ENDL] for k = 0 to 4 exclusive [ENDL] if k is equal to j , continue to next loop [ENDL] if l = 0 to 4 exclusive [ENDL] if i is equal to j or l is equal to k , continue to next loop iteration [ENDL] for m = 0 to 4 exclusive [ENDL] if m is 1 or m is j or m is k , continue loop [ENDL] if i is equal to ( ( ( i % p [ j ] ) % p [ k ] ) % p [ l ] ) % p [ m ] , increment ctr [ENDL] if ctr is greater than or equal to 7 , increment ans [ENDL] set ctr to 0 [ENDL] print ans [ENDL] arrA be integer array with 100005 elements", "c++": "int p [ 4 ] ; int main() { int a , b ; cin >> p [ 0 ] >> p [ 1 ] >> p [ 2 ] >> p [ 3 ] >> a >> b ; int i , j , k , l , m ; int ctr = 0 ; int ans = 0 ; for ( i = a ; i < b + 1 ; i ++ ) for ( j = 0 ; j < 4 ; j ++ ) for ( k = 0 ; k < 4 ; k ++ ) if ( k == j ) continue ; for ( l = 0 ; ( l < 4 ) ; l ++ ) if ( ( l == j ) || ( l == k ) ) continue ; for ( m = 0 ; m < 4 ; m ++ ) if ( ( m == l ) || ( m == j ) || ( m == k ) ) continue ; if ( i == ( ( ( i % p [ j ] ) % p [ k ] ) % p [ l ] ) % p [ m ] ) ctr ++ ; if ( ctr >= 7 ) ans ++ ; } } } } ctr = 0 ; cout << ans << \" \\n \" ; } int arrA [ 100005 ] ; return 0; }"}}
{"translation": {"en": "arrB be integer array with 100005 elements [ENDL] nA , nB , k , m be integer [ENDL] read nA , nB [ENDL] read k , m [ENDL] for integer i = 0 to nA exclusive , read arrA [ i ] [ENDL] for integer i = 0 to nA exclusive , read arrB [ i ] [ENDL] if arrA [ k - 1 ] is less than arrB [ nB - m ] [ENDL] print YES and newline [ENDL] else [ENDL] print NO and newline [ENDL] let n1 , n2 , k , m be integers", "c++": "int arrB [ 100005 ] ; int nA , nB , k , m ; cin >> nA >> nB ; int main() { cin >> k >> m ; for ( int i = 0 ; i < nA ; i ++ ) cin >> arrA [ i ] ; for ( int i = 0 ; i < nB ; i ++ ) cin >> arrB [ i ] ; if ( arrA [ k - 1 ] < arrB [ nB - m ] ) cout << \" YES \" << endl ; else cout << \" NO \" << endl ; int n1 , n2 , k , m ; return 0; }"}}
{"translation": {"en": "read n1 , n2 , k , m [ENDL] decrease k by 1 [ENDL] decrease m by 1 [ENDL] v1 , v2 are ineger vectors [ENDL] for integer i = 1 to n1 inclusive , read v1 [ i ] [ENDL] for integer i = 1 to n2 inclusive , read v2 [ i ] [ENDL] sort v1 from begin to end [ENDL] sort v2 from begin to end [ENDL] if v1 [ k ] is less than v2 [ v2 . size ( ) - m - 1 ] [ENDL] print YES and endline [ENDL] else [ENDL] print NO and newline [ENDL] s = 100002", "c++": "int main() { cin >> n1 >> n2 >> k >> m ; k -- ; m -- ; vector < int > v1 ( n1 ) , v2 ( n2 ) ; for ( int i = 0 ; i < n1 ; i ++ ) cin >> v1 [ i ] ; for ( int i = 0 ; i < n2 ; i ++ ) cin >> v2 [ i ] ; sort ( v1 . begin ( ) , v1 . end ( ) ) ; sort ( v2 . begin ( ) , v2 . end ( ) ) ; if ( v1 [ k ] < v2 [ v2 . size ( ) - m - 1 ] ) cout << \" YES \" << endl ; else cout << \" NO \" << endl ; const int s = 1E5 + 2 ; return 0; }"}}
{"translation": {"en": "a and b = array of s int [ENDL] n1 , n2 = int [ENDL] read n1 , n2 [ENDL] k , m = int [ENDL] read k , m [ENDL] for i = 0 to n1 exclusive read a [ i ] [ENDL] for i = 0 to n2 exclusive read b [ i ] [ENDL] if a [ k - 1 ] < b [ n2 - m ] [ENDL] print YES [ENDL] else [ENDL] print NO [ENDL] long long integer as a , b , m , n", "c++": "int a [ s ] , b [ s ] ; int n1 , n2 ; int main() { cin >> n1 >> n2 ; int k , m ; cin >> k >> m ; for ( int i = 0 ; i < n1 ; i ++ ) cin >> a [ i ] ; for ( int i = 0 ; i < n2 ; i ++ ) cin >> b [ i ] ; if ( a [ k - 1 ] < b [ n2 - m ] ) cout << \" YES \" << endl ; else cout << \" NO \" << endl ; long long a , b , m , n ; return 0; }"}}
{"translation": {"en": "read a , b [ENDL] read m , n [ENDL] integer as array ar size a + 5 and array br with size of b + 5 [ENDL] for i = 0 to less than a do the following [ENDL] for j = 0 to less than b do the following [ENDL] if ar [ m - 1 ] is less than br [ b - n ] then do the following [ENDL] output YES [ENDL] else [ENDL] output NO [ENDL] a , b , n , k , c , p , i = int with c = 0 and p = 0 and i = 0", "c++": "int main() { cin >> a >> b ; cin >> m >> n ; int ar [ a + 5 ] , br [ b + 5 ] ; for ( int i = 0 ; i < a ; i ++ ) { cin >> ar [ i ] ; } for ( int j = 0 ; j < b ; j ++ ) { cin >> br [ j ] ; } if ( ar [ m - 1 ] < br [ b - n ] ) cout << \" YES\\n \" ; else cout << \" NO\\n \" ; int a , b , n , k , c = 0 , p = 0 , i = 0 ; return 0; }"}}
{"translation": {"en": "read a then b then n then k [ENDL] A = int array of size a and B = int array of size b [ENDL] read a values into A [ENDL] read b values into B [ENDL] for j = b - 1 to b - 1 - k decrementing j [ENDL] if A [ n - 1 ] < B [ j ] [ENDL] increment c [ENDL] else [ENDL] goto jump [ENDL] goto label jump [ENDL] if c is k [ENDL] print \" YES \" [ENDL] else [ENDL] print \" NO \" [ENDL] na = int64_t", "c++": "int main() { cin >> a >> b >> n >> k ; int A [ a ] , B [ b ] ; for ( i = 0 ; i < a ; i ++ ) { cin >> A [ i ] ; } for ( i = 0 ; i < b ; i ++ ) { cin >> B [ i ] ; } for ( int j = b - 1 ; j > b - 1 - k ; j -- ) if ( A [ n - 1 ] < B [ j ] ) c ++ ; else goto jump ; jump : } if ( c == k ) cout << \" YES \" << endl ; else cout << \" NO \" << endl ; int64_t na ; return 0; }"}}
{"translation": {"en": "nb = int64_t [ENDL] k = int64_t [ENDL] m = int64_t [ENDL] i = 0 [ENDL] a = int64_t [ENDL] read na [ENDL] read nb [ENDL] read k [ENDL] read m [ENDL] an = array of na int64_t [ENDL] bn = array of nb int64_t [ENDL] while i < na [ENDL] read a [ENDL] an [ i ] = a [ENDL] increment i [ENDL] end of while [ENDL] i = 0 [ENDL] while i < nb [ENDL] read a [ENDL] bn [ i ] = a [ENDL] increment i [ENDL] sort an [ENDL] sort bn [ENDL] if an [ k - 1 ] < bn [ nb - m ] [ENDL] print YES [ENDL] else [ENDL] print NO [ENDL] end if [ENDL] a , b , k , m = int", "c++": "int64_t nb ; int64_t k ; int64_t m ; int64_t i = 0 ; int64_t a ; cin >> na ; int main() { cin >> nb ; cin >> k ; cin >> m ; int64_t an [ na ] ; int64_t bn [ nb ] ; while ( i < na ) cin >> a ; an [ i ] = a ; i += 1 ; ; i = 0 ; while ( i < nb ) cin >> a ; bn [ i ] = a ; i += 1 ; sort ( an , an + na ) ; } sort ( bn , bn + nb ) ; if ( an [ k - 1 ] < bn [ nb - m ] ) cout << \" YES \" << endl ; else cout << \" NO \" << endl ; ; int a , b , k , m ; return 0; }"}}
{"translation": {"en": "read a , b , k , m [ENDL] arr1 = array of a + 5 int , arr2 = array of b + 5 int [ENDL] for i = 0 to a exclusive read arr1 [ i ] [ENDL] sort first a items of arr1 [ENDL] for i = 0 to b exclusive read arr2 [ i ] [ENDL] sort first b items of arr2 [ENDL] if arr1 [ k - 1 ] < arr2 [ b - m ] [ENDL] print YES [ENDL] else [ENDL] print NO [ENDL] let n , m , a , b be integers , arr = array of integers of length 100009 , brr = array of integers of length 100009", "c++": "int main() { cin >> a >> b >> k >> m ; int arr1 [ a + 5 ] , arr2 [ b + 5 ] ; for ( int i = 0 ; i < a ; i ++ ) { cin >> arr1 [ i ] ; } sort ( arr1 , arr1 + a ) ; for ( int i = 0 ; i < b ; i ++ ) { cin >> arr2 [ i ] ; } sort ( arr2 , arr2 + b ) ; if ( arr1 [ k - 1 ] < arr2 [ b - m ] ) cout << \" YES \" << endl ; else cout << \" NO \" << endl ; int n , m , a , b , arr [ 100009 ] , brr [ 100009 ] ; } }"}}
{"translation": {"en": "read n , m , a , b [ENDL] for i = 1 to n inclusive , read arr [ i ] [ENDL] for i = 1 to m inclusive , read brr [ i ] [ENDL] if arr [ a ] is less than brr [ m - b + 1 ] [ENDL] print YES and newline [ENDL] else do the following [ENDL] print NO and newline [ENDL] na , nb , ka , kb = int", "c++": "int main() { cin >> n >> m >> a >> b ; for ( int i = 1 ; i <= n ; i ++ ) { cin >> arr [ i ] ; } for ( int i = 1 ; i <= m ; i ++ ) { cin >> brr [ i ] ; } if ( arr [ a ] < brr [ m - b + 1 ] ) cout << \" YES\\n \" ; else cout << \" NO\\n \" ; int na , nb , ka , kb ; }"}}
{"translation": {"en": "read na , nb , ka , kb [ENDL] a = vector of na int , b = vector of nb int [ENDL] for i = 0 to na exclusive read a [ i ] [ENDL] for i = 0 to nb exclusive read b [ i ] [ENDL] k = 0 [ENDL] for i = nb - 1 down to 0 inclusive [ENDL] if a [ ka - 1 ] < b [ i ] [ENDL] increment k [ENDL] else if k < kb and a [ ka - 1 ] > = b [ i ] [ENDL] print NO [ENDL] print YES [ENDL] let a and b be integers", "c++": "int main() { cin >> na >> nb >> ka >> kb ; vector < int > a ( na ) , b ( nb ) ; for ( int i = 0 ; i < na ; i ++ ) { cin >> a [ i ] ; } for ( int i = 0 ; i < nb ; i ++ ) { cin >> b [ i ] ; } int k = 0 ; for ( int i = nb - 1 ; i >= 0 ; i -- ) if ( a [ ka - 1 ] < b [ i ] ) k ++ ; else if ( k < kb && a [ ka - 1 ] >= b [ i ] ) cout << \" NO\\n \" ; cout << \" YES\\n \" ; return 0; } } int a , b ; return 0; }"}}
{"translation": {"en": "read in a and b [ENDL] let n and m be integers [ENDL] read in n and m [ENDL] let mx and mn be integers [ENDL] iterate for a times [ENDL] let x be an integer [ENDL] read in x [ENDL] if i + 1 is equal to n , set mx to x [ENDL] iterate for b times [ENDL] let x be an integer [ENDL] read in x [ENDL] if i is equal to b - m , set mn to x [ENDL] if mx is less than mn [ENDL] print YES [ENDL] or else [ENDL] print NO [ENDL] let line1 , line2 , first , second , i , j be long integers", "c++": "int main() { cin >> a >> b ; int n , m ; cin >> n >> m ; int mx , mn ; for ( int i = 0 ; i < a ; i ++ ) int x ; cin >> x ; if ( i + 1 == n ) { mx = x ; } for ( int i = 0 ; i < b ; i ++ ) } int x ; cin >> x ; if ( i == b - m ) { mn = x ; } if ( mx < mn ) } cout << \" YES \" << endl ; else cout << \" NO \" << endl ; long long int line1 , line2 , first , second , i , j ; }"}}
{"translation": {"en": "read line1 , line2 [ENDL] read first , second [ENDL] stud1 = array of integers of length line1 , stud2 = array of integers of length line2 [ENDL] for i = 0 to line1 exclusive , read stud1 [ i ] [ENDL] for i = 0 to line2 exclusive , read stud2 [ i ] [ENDL] sort the values of stud1 and stud1 + line1 [ENDL] sort the values of stud2 and stud2 + line2 [ENDL] the integer value of mx = stud2 [ line2 - ( second ) ] [ENDL] let tot , y be integers with tot = 0 , y = 0 [ENDL] for i = 0 to line1 exclusive [ENDL] if stud1 [ i ] is less than mx , increment tot by 1 [ENDL] if tot equals first [ENDL] increment y by 1 [ENDL] stop [ENDL] if stud1 [ i ] is greater than mx , stop [ENDL] if y is true [ENDL] print YES and newline [ENDL] else do the following [ENDL] print NO and newline [ENDL] declare integer vector a", "c++": "int main() { cin >> line1 >> line2 ; cin >> first >> second ; long long int stud1 [ line1 ] , stud2 [ line2 ] ; for ( i = 0 ; i < line1 ; i ++ ) { cin >> stud1 [ i ] ; } for ( i = 0 ; i < line2 ; i ++ ) { cin >> stud2 [ i ] ; } sort ( stud1 , stud1 + line1 ) ; sort ( stud2 , stud2 + line2 ) ; int mx = stud2 [ line2 - ( second ) ] ; int tot = 0 , y = 0 ; for ( i = 0 ; i < line1 ; i ++ ) if ( stud1 [ i ] < mx ) { ++ tot ; } if ( tot == first ) ++ y ; break ; if ( stud1 [ i ] > mx ) { break ; } } if ( y ) } cout << \" YES \" << endl ; else cout << \" NO \" << endl ; vector < int > a ; } return 0; }"}}
{"translation": {"en": "declare integer vector b [ENDL] declare integers na , nb , counta = 0 , countb = 0 [ENDL] read na , nb [ENDL] declare integers k , m , A , B [ENDL] read k , m [ENDL] for i = 0 to na exclusive [ENDL] read A [ENDL] add A to end of a [ENDL] for i = 0 to nb exclusive [ENDL] read B [ENDL] add B to end of b [ENDL] sort from beginning of a to end of a [ENDL] sort from reverse beginning of b to reverse end of b [ENDL] if a [ k - 1 ] is less than b [ m - 1 ] [ENDL] print \" YES \\ n \" [ENDL] else [ENDL] print \" NO \\ n \" [ENDL] declare strings n1 , n2 , k , m", "c++": "vector < int > b ; int na , nb , counta = 0 , countb = 0 ; int main() { cin >> na >> nb ; int k , m , A , B ; cin >> k >> m ; for ( int i = 0 ; i < na ; i ++ ) cin >> A ; a . push_back ( A ) ; for ( int i = 0 ; i < nb ; i ++ ) } cin >> B ; b . push_back ( B ) ; sort ( a . begin ( ) , a . end ( ) ) ; } sort ( b . rbegin ( ) , b . rend ( ) ) ; if ( a [ k - 1 ] < b [ m - 1 ] ) cout << \" YES\\n \" ; else cout << \" NO\\n \" ; int n1 , n2 , k , m ; }"}}
{"translation": {"en": "declare integers v1 , v2 , x [ENDL] read n1 , n2 [ENDL] read k , m [ENDL] for i = 0 to n1 exclusive [ENDL] read x [ENDL] if i is k - 1 , let v1 be k [ENDL] for i = 0 to n2 exclusive [ENDL] read x [ENDL] if i is n2 - m , let v2 be x [ENDL] if v1 is less than v2 [ENDL] print \" YES \\ n \" [ENDL] else [ENDL] print \" NO \\ n \" [ENDL] let n1 , n2 be long integers", "c++": "int v1 , v2 , x ; int main() { cin >> n1 >> n2 ; cin >> k >> m ; for ( int i = 0 ; i < n1 ; i ++ ) cin >> x ; if ( i == k - 1 ) { v1 = x ; } for ( int i = 0 ; i < n2 ; i ++ ) } cin >> x ; if ( i == n2 - m ) { v2 = x ; } if ( v1 < v2 ) } cout << \" YES\\n \" ; else cout << \" NO\\n \" ; long long int n1 , n2 ; return 0; }"}}
{"translation": {"en": "a is a long integer array of size 100007 [ENDL] b is a long integer array of size 100007 [ENDL] let k , m be long integers [ENDL] read n1 , n2 [ENDL] read k , m [ENDL] for long integer i = 0 to n1 - 1 , read a [ i ] [ENDL] for long integer i = 0 to n2 - 1 , read b [ i ] [ENDL] sort the values a , a + n1 [ENDL] sort the values b , b + n2 , greater < long long int > ( ) [ENDL] if a [ k - 1 ] is less than b [ m - 1 ] [ENDL] print YES [ENDL] newline [ENDL] else [ENDL] print NO [ENDL] newline [ENDL] let r1 , r2 be integer array of size 100001", "c++": "long long int a [ 100007 ] ; long long int b [ 100007 ] ; long long int k , m ; cin >> n1 >> n2 ; int main() { cin >> k >> m ; for ( long long int i = 0 ; i <= n1 - 1 ; i ++ ) { cin >> a [ i ] ; } for ( long long int i = 0 ; i <= n2 - 1 ; i ++ ) { cin >> b [ i ] ; } sort ( a , a + n1 ) ; sort ( b , b + n2 , greater < long long int > ( ) ) ; if ( a [ k - 1 ] < b [ m - 1 ] ) cout << \" YES \" << \" \\n \" ; else cout << \" NO \" << \" \\n \" ; int r1 [ 100001 ] , r2 [ 100001 ] ; } return 0; }"}}
{"translation": {"en": "let a , b , c , d , e , f , g , h be integers [ENDL] let v be a vector of integers [ENDL] while read a , b [ENDL] read c , d [ENDL] for e = 1 to a inclusive , read r1 [ e ] [ENDL] f equals 0 [ENDL] for e = 1 to b inclusive [ENDL] read r2 [ e ] [ENDL] if r2 [ e ] > r1 [ c ] , increase f by 1 [ENDL] if f is greater than or equal to d [ENDL] print YES and newline [ENDL] else [ENDL] print NO and newline [ENDL] a , b be integer arrays of size 100040", "c++": "int a , b , c , d , e , f , g , h ; int main() { vector < int > v ; while ( cin >> a >> b ) cin >> c >> d ; for ( e = 1 ; e <= a ; e ++ ) { cin >> r1 [ e ] ; } f = 0 ; for ( e = 1 ; e <= b ; e ++ ) cin >> r2 [ e ] ; if ( r2 [ e ] > r1 [ c ] ) { f ++ ; } if ( f >= d ) } cout << \" YES \" << endl ; else cout << \" NO \" << endl ; int a [ 100500 ] , b [ 100040 ] ; } } return 0; }"}}
{"translation": {"en": "let na , nb be integers [ENDL] let x1 , x2 , y1 , y2 be integers [ENDL] let i , k , j , m be integers [ENDL] s is a 2d character array [ENDL] read na , nb [ENDL] read k , m [ENDL] for i = 0 to na exclusive , read a [ i ] [ENDL] for j = 0 to nb exclusive , read b [ j ] [ENDL] sort from a to a + na [ENDL] sort from b to b + nb [ENDL] for i = 0 to nb exclusive [ENDL] if b [ i ] is greater than a [ k - 1 ] , stop [ENDL] if i + m is less than or equal to nb [ENDL] print YES and newline [ENDL] else [ENDL] print NO and newline [ENDL] create integer vector of arr1 , arr2", "c++": "int main() { int na , nb ; int x1 , x2 , y1 , y2 ; int i , k , j , m ; char s [ 20000 ] [ 20 ] ; cin >> na >> nb ; cin >> k >> m ; for ( i = 0 ; i < na ; i ++ ) cin >> a [ i ] ; for ( j = 0 ; j < nb ; j ++ ) cin >> b [ j ] ; sort ( a , a + na ) ; sort ( b , b + nb ) ; for ( i = 0 ; i < nb ; i ++ ) if ( b [ i ] > a [ k - 1 ] ) break ; if ( i + m <= nb ) cout << \" YES \" << endl ; else return 0; cout << \" NO \" << endl ; vector < int > arr1 , arr2 ; return 0; }"}}
{"translation": {"en": "integer as a , b , k , m [ENDL] read a , b , k , m [ENDL] if k is greater than a or m is greater than b then do the following [ENDL] output NO [ENDL] for i = 0 to less than a do the following [ENDL] integer as inp [ENDL] read inp [ENDL] add new element inp to end of vector arr1 [ENDL] for i = 0 to less than b do the following [ENDL] integer as inp [ENDL] read inp [ENDL] add new element inp to end of vector arr2 [ENDL] if arr1 [ k - 1 ] is less than arr2 [ b - m ] then do the following [ENDL] output YES [ENDL] else [ENDL] output NO [ENDL] declare constant integer MAX = 100001", "c++": "int main() { int a , b , k , m ; cin >> a >> b >> k >> m ; if ( k > a || m > b ) cout << \" NO \" << endl ; for ( int i = 0 ; i < a ; i ++ ) return 0; } int inp ; cin >> inp ; arr1 . push_back ( inp ) ; for ( int i = 0 ; i < b ; i ++ ) } int inp ; cin >> inp ; arr2 . push_back ( inp ) ; if ( arr1 [ k - 1 ] < arr2 [ b - m ] ) } cout << \" YES \" << endl ; else cout << \" NO \" << endl ; const int MAX = 100001 ; } return 0; }"}}
{"translation": {"en": "declare long long arrays An size MAX , Bn size MAX [ENDL] declare integers n , m , a , b [ENDL] read n , m , a , b [ENDL] for i = 1 to n inclusive , read An [ i ] [ENDL] for i = 1 to m inclusive , read Bn [ i ] [ENDL] sort from An + 1 to An + n + 1 [ENDL] sort from Bn + 1 to Bn + m + 1 [ENDL] if An [ a ] is less than Bn [ m - b + 1 ] [ENDL] print \" YES \" and newline [ENDL] else [ENDL] print \" NO \" , newline [ENDL] a , b = int", "c++": "long long An [ MAX ] , Bn [ MAX ] ; int n , m , a , b ; int main() { cin >> n >> m >> a >> b ; for ( int i = 1 ; i <= n ; i ++ ) cin >> An [ i ] ; for ( int i = 1 ; i <= m ; i ++ ) cin >> Bn [ i ] ; sort ( An + 1 , An + n + 1 ) ; sort ( Bn + 1 , Bn + m + 1 ) ; if ( An [ a ] < Bn [ m - b + 1 ] ) cout << \" YES \" << endl ; else cout << \" NO \" << endl ; int a , b ; return 0; }"}}
{"translation": {"en": "read a , b [ENDL] k , m = int [ENDL] read k , m [ENDL] ar1 = array of a int [ENDL] ar2 = array of b int [ENDL] for i = 0 to a exclusive read ar1 [ i ] [ENDL] for i = 0 to b exclusive read ar2 [ i ] [ENDL] if ar1 [ k - 1 ] < ar2 [ b - m ] and k < = a and m < = b [ENDL] print YES [ENDL] else [ENDL] print NO [ENDL] define integers a , b , c and d", "c++": "int main() { cin >> a >> b ; int k , m ; cin >> k >> m ; int ar1 [ a ] ; int ar2 [ b ] ; for ( int i = 0 ; i < a ; i ++ ) { cin >> ar1 [ i ] ; } for ( int i = 0 ; i < b ; i ++ ) { cin >> ar2 [ i ] ; } if ( ar1 [ k - 1 ] < ar2 [ b - m ] && k <= a && m <= b ) cout << \" YES \" << endl ; else cout << \" NO \" << endl ; int a , b , c , d ; }"}}
{"translation": {"en": "read user input to a and b [ENDL] if a is less than b [ENDL] assign a to c [ENDL] change the value of d to ( b - a ) / 2 [ENDL] print c , ' ' and d to the standard output [ENDL] else [ENDL] change c to b [ENDL] set the value of d to ( a - b ) / 2 [ENDL] print c , ' ' and d to the output [ENDL] a , b , c , d = int", "c++": "int main() { cin >> a >> b ; if ( a < b ) c = a ; d = ( b - a ) / 2 ; cout << c << '   ' << d << endl ; else c = b ; d = ( a - b ) / 2 ; cout << c << '   ' << d << endl ; int a , b , c , d ; } return 0; }"}}
{"translation": {"en": "read a , b [ENDL] d = min ( a , b ) [ENDL] c = max ( a , b ) - d [ENDL] if c is odd , change sign of c [ENDL] print d , space , c / 2 [ENDL] declare integers a = 0 , b = 0", "c++": "cin >> a >> b ; int main() { d = min ( a , b ) ; c = max ( a , b ) - d ; if ( c % 2 ) c -= 1 ; cout << d << \"   \" << c / 2 << endl ; int a = 0 , b = 0 ; }"}}
{"translation": {"en": "declare integer counter_moda = 0 , counter_utility = 0 [ENDL] read a and b [ENDL] while a is greater than 0 and b is greater than 0 [ENDL] decrement a [ENDL] decrement b [ENDL] increment counter_moda [ENDL] while a is greater than or equal to 2 or b is greater than or equal to 2 [ENDL] increment counter_utility [ENDL] if a is greater than b [ENDL] decrement a by 2 [ENDL] else [ENDL] decrement b by 2 [ENDL] print counter_moda , \" \" , counter_utility , newline [ENDL] a , b = int", "c++": "int main() { int counter_moda = 0 , counter_utility = 0 ; cin >> a >> b ; while ( a > 0 && b > 0 ) a -- ; b -- ; counter_moda ++ ; while ( a >= 2 || b >= 2 ) } counter_utility ++ ; if ( a > b ) a -= 2 ; else b -= 2 ; cout << counter_moda << \"   \" << counter_utility << endl ; } } int a , b ; return 0; }"}}
{"translation": {"en": "read a , b [ENDL] if a > b swap a and b [ENDL] print a , space , ( b - a ) / 2 [ENDL] declare integers a , b", "c++": "int main() { cin >> a >> b ; if ( a > b ) swap ( a , b ) ; cout << a << \"   \" << ( b - a ) / 2 << endl ; int a , b ; return 0; }"}}
{"translation": {"en": "read a , b [ENDL] declare m = minimum of a and b as integer [ENDL] print m , ' ' [ENDL] decrement a by m [ENDL] decrement b by m [ENDL] print a / 2 + b / 2 , newline [ENDL] let a , b be integers", "c++": "int main() { cin >> a >> b ; int m = min ( a , b ) ; cout << m << '   ' ; a -= m ; b -= m ; cout << a / 2 + b / 2 << endl ; int a , b ; return 0; }"}}
{"translation": {"en": "read a , b [ENDL] the integer value of r1 = minimum of a and b [ENDL] the integer value of r2 = ( max ( a , b ) - min ( a , b ) ) / 2 [ENDL] print r1 and space and r2 and newline [ENDL] declare integers a , b", "c++": "int main() { cin >> a >> b ; int r1 = min ( a , b ) ; int r2 = ( max ( a , b ) - min ( a , b ) ) / 2 ; cout << r1 << \"   \" << r2 << endl ; int a , b ; }"}}
{"translation": {"en": "read a , b [ENDL] declare integer MIN = minimum of a and b [ENDL] declare integer MAX = maximum of a and b [ENDL] print MIN and ' ' and ( MAX - MIN ) / 2 and newline [ENDL] let a , b , ans be integers with ans = 0", "c++": "int main() { cin >> a >> b ; int MIN = min ( a , b ) ; int MAX = max ( a , b ) ; cout << MIN << '   ' << ( MAX - MIN ) / 2 << endl ; int a , b , ans = 0 ; return 0; }"}}
{"translation": {"en": "read a , b [ENDL] ans is equal to mimimum of a , b [ENDL] print ans and space [ENDL] ans equals max ( a , b ) - ans ) > > 1 [ENDL] print ans and endline [ENDL] a , b = int", "c++": "int main() { cin >> a >> b ; ans = min ( a , b ) ; cout << ans << \"   \" ; ans = ( ( max ( a , b ) - ans ) >> 1 ) ; cout << ans << endl ; int a , b ; return 0; }"}}
{"translation": {"en": "while read a , b print min ( a , b ) , space , ( max ( a - b ) - min ( a , b ) ) / 2 [ENDL] declare long long n , a , b , res", "c++": "int main() { while ( cin >> a >> b ) { cout << min ( a , b ) << \"   \" << ( max ( a , b ) - min ( a , b ) ) / 2 << endl ; } long long n , a , b , res ; }"}}
{"translation": {"en": "declare string s [ENDL] declare long long array arr size 100005 [ENDL] declare long long array arr1 size 100005 [ENDL] read a , b [ENDL] print minimum of ( a and b ) , \" \" , absolute value of ( a - b ) / 2 [ENDL] print \" \\ n \" [ENDL] declare integer variables a , b and x", "c++": "string s ; long long arr [ 100005 ] ; long long arr1 [ 100005 ] ; cin >> a >> b ; int main() { cout << min ( a , b ) << \"   \" << abs ( a - b ) / 2 ; cout << \" \\n \" ; int a , b , x ; return 0; }"}}
{"translation": {"en": "read variables a and b from the input [ENDL] assign the new value = min of a and b to x [ENDL] print x and \" \" [ENDL] decrease a by x [ENDL] change b to b - x [ENDL] print b / 2 if a = 0 , or a / 2 if a is not 0 [ENDL] print \" \\ n \" [ENDL] declare integers n , m", "c++": "cin >> a >> b ; int main() { x = min ( a , b ) ; cout << x << \"   \" ; a -= x ; b -= x ; a == 0 ? cout << b / 2 : cout << a / 2 ; cout << \" \\n \" ; int n , m ; }"}}
{"translation": {"en": "read n and m [ENDL] declare integer a = minimum of n and m [ENDL] declare integer b = ( maximum of ( n and m ) - a ) / 2 [ENDL] print a and \" \" and b and newline [ENDL] a , b = int", "c++": "int main() { cin >> n >> m ; int a = min ( n , m ) ; int b = ( max ( n , m ) - a ) / 2 ; cout << a << \"   \" << b << endl ; int a , b ; }"}}
{"translation": {"en": "read a , b [ENDL] ds , ss , k = int with ds = 0 , ss = 0 , k = 0 [ENDL] if ( a > b ) [ENDL] ds = b [ENDL] k = a - b [ENDL] ss = k / 2 [ENDL] else if ( a < b ) [ENDL] ds = a [ENDL] k = b - a [ENDL] ss = k / 2 [ENDL] else [ENDL] ds = a [ENDL] ss = 0 [ENDL] print ds , \" \" , ss [ENDL] let a , b be integers", "c++": "int main() { cin >> a >> b ; int ds = 0 , ss = 0 , k = 0 ; if ( a > b ) ds = b ; k = a - b ; ss = k / 2 ; else if ( a < b ) ds = a ; k = b - a ; ss = k / 2 ; else ds = a ; ss = 0 ; cout << ds << \"   \" << ss << endl ; } int a , b ; return 0; }"}}
{"translation": {"en": "read a , b [ENDL] if a equals b [ENDL] print a and space [ENDL] print 0 and newline [ENDL] else if a is greater than b [ENDL] print b and space and ( a - b ) / 2 and newline [ENDL] else do the following [ENDL] print a and space and ( b - a ) / 2 and newline [ENDL] declare integer variables a and b", "c++": "int main() { cin >> a >> b ; if ( a == b ) cout << a << \"   \" << \" 0 \" << endl ; else if ( a > b ) cout << b << \"   \" << ( a - b ) / 2 << endl ; else cout << a << \"   \" << ( b - a ) / 2 << endl ; int a , b ; } return 0; }"}}
{"translation": {"en": "read input to a and b [ENDL] prazn is a new integer with value min of a and b [ENDL] create new integer podin = ( ( max of a and b ) - prazn ) / 2 [ENDL] print prazn , \" \" and podin to the standard output [ENDL] declare ints r and b", "c++": "int main() { cin >> a >> b ; int prazn = min ( a , b ) ; int podin = ( int ) ( ( max ( a , b ) - prazn ) / 2 ) ; cout << prazn << \"   \" << podin << endl ; int r , b ; return 0; };"}}
{"translation": {"en": "read r and b from the user input [ENDL] if r is less than b [ENDL] print r , \" \" and ( b - r ) / 2 [ENDL] else [ENDL] print b , \" \" and ( r - b ) / 2 [ENDL] let n , m , i and k be integers", "c++": "int main() { cin >> r >> b ; if ( r < b ) cout << r << \"   \" << ( b - r ) / 2 << endl ; else ; cout << b << \"   \" << ( r - b ) / 2 << endl ; int n , m , i , k ; ; } }"}}
{"translation": {"en": "while reading in n and m [ENDL] if n is less than m set i to n , otherwise set i to m [ENDL] set k to abs ( n - m ) / 2 [ENDL] print i , ' ' , and k [ENDL] let a , b , count1 , count2 be integers with count1 = 0 , count2 = 0", "c++": "int main() { while ( cin >> n >> m ) i = n < m ? n : m ; k = abs ( n - m ) / 2 ; cout << i << '   ' << k << endl ; int a , b , count1 = 0 , count2 = 0 ; } }"}}
{"translation": {"en": "read a , b [ENDL] for integer i = 0 , the condition is always true , increment i by 1 [ENDL] if ( a equals 0 and b equals 1 ) or ( a equals 1 and b equals 0 ) or ( a equals 0 and b equals 0 ) , stop [ENDL] decrement a by 1 [ENDL] decrement b by 1 [ENDL] increment count1 by 1 [ENDL] if a equals 0 and b is greater than 1 [ENDL] while b is not equal to 0 [ENDL] decrement b by 2 [ENDL] increment count2 by 1 [ENDL] if b is less than 0 or b equals 1 , stop [ENDL] stop [ENDL] if a is greater than 1 and b equals 0 [ENDL] while a is not equal to 0 [ENDL] decrement a by 2 [ENDL] increment count2 by 1 [ENDL] if a is less than 0 or a equals 1 , stop [ENDL] stop [ENDL] print count1 and space and count2 and newline [ENDL] let n , m be integers", "c++": "int main() { cin >> a >> b ; for ( int i = 0 ; ; i ++ ) if ( ( a == 0 && b == 1 ) || ( a == 1 && b == 0 ) || ( a == 0 && b == 0 ) ) break ; -- a ; -- b ; ++ count1 ; if ( a == 0 && b > 1 ) while ( b != 0 ) b = b - 2 ; ++ count2 ; if ( b < 0 || b == 1 ) break ; break ; } if ( a > 1 && b == 0 ) } while ( a != 0 ) a = a - 2 ; ++ count2 ; if ( a < 0 || a == 1 ) break ; break ; } cout << count1 << \"   \" << count2 << endl ; } } int n , m ; }"}}
{"translation": {"en": "read n and m [ENDL] print min ( n , m ) and space and ( max ( n , m ) - min ( n , m ) ) / 2 and newline [ENDL] r , b = int", "c++": "int main() { cin >> n >> m ; cout << min ( n , m ) << \"   \" << ( max ( n , m ) - min ( n , m ) ) / 2 << endl ; int r , b ; return 0; }"}}
{"translation": {"en": "p , q = int [ENDL] read r , b [ENDL] p = min ( r , b ) [ENDL] q = abs ( r - b ) / 2 [ENDL] print p , space , q [ENDL] function prime with int argument n that returns bool", "c++": "int main() { int p , q ; cin >> r >> b ; p = min ( r , b ) ; q = abs ( r - b ) / 2 ; cout << p << \"   \" << q << \" \\n \" ; bool prime ( int n ) return 0; }"}}
{"translation": {"en": "declare integer c with value 0 [ENDL] in a for loop , change i from 1 to n exclusive incrementing i [ENDL] increment c if n modulo i is 0 [ENDL] if c is equal to 1 [ENDL] return true [ENDL] else [ENDL] return false [ENDL] create ints a , b , a2 , b2 , a1 and b1 with a1 and b1 = 0 [ENDL] read standard input to a and b [ENDL] if a is greater than b [ENDL] set a2 to a [ENDL] for i = 0 to a2 exclusive [ENDL] if b ! = 0 [ENDL] increment a1 by one [ENDL] decrement b [ENDL] decrement a by one [ENDL] if b is equal to 0 , set the value of b1 to a / 2 [ENDL] else if a is less than b [ENDL] change b2 to b [ENDL] for i from 0 to b2 exclusive incrementing i [ENDL] if a ! = 0 [ENDL] increment a1 by one [ENDL] decrement b [ENDL] decrement a [ENDL] if a is equal to 0 , set the value of b1 to b / 2 [ENDL] else [ENDL] set a1 to ( a + b ) / 2 [ENDL] print a1 , \" \" and b1 to the standard output [ENDL] a , b = int", "c++": "int c = 0 ; for ( int i = 1 ; i < n ; i ++ ) if ( n % i == 0 ) c ++ ; if ( c == 1 ) } return true ; else return false ; int a , b , a2 , b2 , a1 = 0 , b1 = 0 ; } int main() { cin >> a >> b ; if ( a > b ) a2 = a ; for ( int i = 0 ; i < a2 ; i ++ ) if ( b != 0 ) a1 ++ ; b -- ; a -- ; if ( b == 0 ) { b1 = a / 2 ; } } else if ( a < b ) } b2 = b ; for ( int i = 0 ; i < b2 ; i ++ ) if ( a != 0 ) a1 ++ ; b -- ; a -- ; if ( a == 0 ) { b1 = b / 2 ; } } else } a1 = ( a + b ) / 2 ; cout << a1 << \"   \" << b1 << endl ; } int a , b ; return 0; }"}}
{"translation": {"en": "read a , b [ENDL] mn = min ( a , b ) , mx = max ( a , b ) [ENDL] print mn , space , ( mx - mn ) / 2 [ENDL] let a , b be integers", "c++": "int main() { cin >> a >> b ; int mn = min ( a , b ) , mx = max ( a , b ) ; cout << mn << \"   \" << ( mx - mn ) / 2 << endl ; int a , b ; return 0; }"}}
{"translation": {"en": "read a , b [ENDL] print min ( a , b ) and space and ( max ( a , b ) - min ( a , b ) ) / 2 and newline [ENDL] INF = 3f3f3f3f in exadecimal", "c++": "int main() { cin >> a >> b ; cout << min ( a , b ) << \"   \" << ( max ( a , b ) - min ( a , b ) ) / 2 << endl ; const int INF = 0x7FFFFFFF ; }"}}
{"translation": {"en": "mod = 1000000007 [ENDL] EPS = 0 . 0000000001 [ENDL] PI = 2 * acos ( 0 ) [ENDL] maxn = 101666 [ENDL] a , b = int [ENDL] read a , b [ENDL] c = min ( a , b ) [ENDL] print c , space [ENDL] subtract c from a and from b [ENDL] if a is 0 [ENDL] print b / 2 [ENDL] else [ENDL] print a / 2 [ENDL] a , b = int", "c++": "const int MOD = 1e9 + 7 ; const double EPS = 1e-10 ; const double PI = 2 * acos ( 0.0 ) ; const int maxn = 1e5 + 1666 ; int a , b ; int main() { cin >> a >> b ; int c = min ( a , b ) ; cout << c << \"   \" ; a -= c , b -= c ; if ( a == 0 ) cout << b / 2 << endl ; else cout << a / 2 << endl ; int a , b ; return 0; }"}}
{"translation": {"en": "read a , b [ENDL] ans1 and ans2 = int [ENDL] ans1 = min ( a , b ) [ENDL] ans2 = max ( a , b ) [ENDL] subtract ans1 from ans2 [ENDL] divide ans2 by 2 [ENDL] print ans1 , space , ans2 [ENDL] declare integers a , b", "c++": "int main() { cin >> a >> b ; int ans1 , ans2 ; ans1 = min ( a , b ) ; ans2 = max ( a , b ) ; ans2 = ans2 - ans1 ; ans2 = ans2 / 2 ; cout << ans1 << \"   \" << ans2 << endl ; int a , b ; return 0; }"}}
{"translation": {"en": "while read a , b [ENDL] declare integer ans1 = minimum of a and b [ENDL] declare integer k = maximum of a and b [ENDL] declare integer ans2 = ( k - ans1 ) / 2 [ENDL] print ans1 and \" \" ans2 and newline [ENDL] declare integers a , b , x , y , c = 0", "c++": "int main() { while ( cin >> a >> b ) int ans1 = min ( a , b ) ; int k = max ( a , b ) ; int ans2 = ( k - ans1 ) / 2 ; cout << ans1 << \"   \" << ans2 << endl ; int a , b , x , y , c = 0 ; } return 0; }"}}
{"translation": {"en": "read a , b [ENDL] let x be absolute value of ( a - b ) [ENDL] print minimum of ( a and b ) , \" \" , x / 2 , newline [ENDL] declare integers a , b", "c++": "int main() { cin >> a >> b ; x = abs ( a - b ) ; cout << min ( a , b ) << \"   \" << x / 2 << endl ; int a , b ; return 0; }"}}
{"translation": {"en": "read a , b [ENDL] print minimum of a and b , \" \" , ( maximum of ( a and b ) - minimum of ( a and b ) ) / 2 , newline [ENDL] declare integer dx = { 1 , 0 , - 1 , 0 }", "c++": "cin >> a >> b ; int main() { cout << min ( a , b ) << \"   \" << ( max ( a , b ) - min ( a , b ) ) / 2 << endl ; int dx [ ] = { 1 , 0 , - 1 , 0 } ; return 0; }"}}
{"translation": {"en": "declare integer dy = { 0 , - 1 , 0 , 1 } [ENDL] declare long longs a , b [ENDL] read a , b [ENDL] declare long longs Min , s [ENDL] if a is greater than b [ENDL] let Min be minimum of a and b [ENDL] let s be ( a - Min ) / 2 [ENDL] print Min and \" \" and s and newline [ENDL] else [ENDL] let Min be minimum of a and b [ENDL] let s be ( b - Min ) / 2 [ENDL] print Min and \" \" and s and newline [ENDL] a , b = int", "c++": "int dy [ ] = { 0 , - 1 , 0 , 1 } ; long long a , b ; int main() { cin >> a >> b ; long long Min , s ; if ( a > b ) Min = min ( a , b ) ; s = ( a - Min ) / 2 ; cout << Min << \"   \" << s << endl ; else Min = min ( a , b ) ; s = ( b - Min ) / 2 ; cout << Min << \"   \" << s << endl ; int a , b ; } }"}}
{"translation": {"en": "read a then b [ENDL] if a < b swap a and b [ENDL] print b and a - b [ENDL] a , b , max , min , ans be integers", "c++": "int main() { cin >> a >> b ; if ( a < b ) { swap ( a , b ) ; } cout << b << \"   \" << ( a - b ) / 2 << endl ; int a , b , max , min , ans ; return 0; }"}}
{"translation": {"en": "read a , b [ENDL] if a is greater than b [ENDL] max equals a [ENDL] min equals b [ENDL] else [ENDL] max equals b [ENDL] min equals a [ENDL] ans equals ( max - min ) / 2 [ENDL] print min space ans and endline [ENDL] create long long ints n , m , a and b", "c++": "int main() { cin >> a >> b ; if ( a > b ) max = a ; min = b ; else max = b ; min = a ; ans = ( max - min ) / 2 ; } cout << min << \"   \" << ans << endl ; long long int n , m , a , b ; return 0; }"}}
{"translation": {"en": "read n , m , a and b [ENDL] declare long long int variable _s = 0 [ENDL] if n % m is not 0 [ENDL] create long long int x = n / m * m + m [ENDL] declare long long int variable y = x - m [ENDL] change _s to min of ( x - n ) * a and ( n - y ) * b [ENDL] print _s and \" \\ n \" [ENDL] n , m , a , b = long long", "c++": "cin >> n >> m >> a >> b ; int main() { long long int _s = 0 ; if ( n % m != 0 ) long long int x = ( long long int ) n / m * m + m ; long long int y = x - m ; _s = min ( ( x - n ) * a , ( n - y ) * b ) ; cout << _s << \" \\n \" ; } long long n , m , a , b ; return 0; }"}}
{"translation": {"en": "read n then m then a then b [ENDL] if n is a multiple of m [ENDL] print 0 [ENDL] else if n is greater than m [ENDL] res = long long [ENDL] if n / m equals 1 [ENDL] set res to 2 [ENDL] else [ENDL] set res to n / m + 1 [ENDL] print min of ( n - n / m * m ) * b and ( res * m - n ) * a [ENDL] else [ENDL] print min of n * b and ( m - n ) * a [ENDL] create long longs a , b , n , m and ans", "c++": "int main() { cin >> n >> m >> a >> b ; if ( n % m == 0 ) cout << 0 << endl ; else if ( n > m ) long long res ; if ( n / m == 1 ) res = 2 ; else res = n / m + 1 ; cout << min ( ( n - n / m * m ) * b , ( res * m - n ) * a ) << endl ; } else cout << min ( n * b , ( m - n ) * a ) << endl ; long long a , b , n , m , ans ; } return 0; }"}}
{"translation": {"en": "read n , m , a and b [ENDL] if n % m is 0 [ENDL] assign 0 to ans [ENDL] else if n is less than m [ENDL] assign min ( n * b , ( m - n ) * a ) to ans [ENDL] else [ENDL] declare long longs cnt1 and cnt2 [ENDL] set cnt1 to n modulo m [ENDL] set cnt2 to n / m + 1 [ENDL] assign min ( ( cnt2 * m - n ) * a , cnt1 * b ) to ans [ENDL] print ans [ENDL] S , T = string", "c++": "int main() { cin >> n >> m >> a >> b ; if ( n % m == 0 ) ans = 0 ; else if ( n < m ) ans = min ( n * b , ( m - n ) * a ) ; else long long cnt1 , cnt2 ; cnt1 = n % m ; cnt2 = n / m + 1 ; ans = min ( ( cnt2 * m - n ) * a , cnt1 * b ) ; cout << ans << endl ; } string S , T ; return 0; }"}}
{"translation": {"en": "M , A , B , sum , x , y , K , ans , val , L , a = long long integer [ENDL] create character variable C [ENDL] read N , M , A , B [ENDL] set x to ( ( N - 1 ) / M + 1 ) * M [ENDL] set y to N / M * M [ENDL] output min ( ( x - N ) * A , ( N - y ) * B ) [ENDL] lim = const int with lim = 2e5", "c++": "long long N , M , A , B , sum , x , y , K , ans , val , L , a ; char C ; cin >> N >> M >> A >> B ; int main() { x = ( ( N - 1 ) / M + 1 ) * M ; y = N / M * M ; cout << min ( ( x - N ) * A , ( N - y ) * B ) << ' \\n ' ; int const lim = 2e5 ; }"}}
{"translation": {"en": "inp = int array of size lim + 3 [ENDL] n , m , a , b = long long [ENDL] read n then m then a then b [ENDL] ans = long long with ans = min of ( n mod m ) * b and ( m - ( n mod m ) ) * a [ENDL] print ans [ENDL] declare long longs n , m , a and b", "c++": "int inp [ lim + 3 ] ; long long n , m , a , b ; int main() { cin >> n >> m >> a >> b ; long long ans = min ( ( n % m ) * b , ( m - ( n % m ) ) * a ) ; cout << ans << endl ; long long n , m , a , b ; }"}}
{"translation": {"en": "read n , m , a and b and loop further [ENDL] declare long long tmp = n / m [ENDL] declare long long ans = 1e15 [ENDL] set ans to min of ans and ( n - tmp * m ) * b [ENDL] set ans to min of ans and ( tmp + 1 ) * m - n ) * a [ENDL] print ans [ENDL] n , m = long long integers", "c++": "while ( cin >> n >> m >> a >> b ) int main() { long long tmp = n / m ; long long ans = 1e15 ; ans = min ( ans , ( n - tmp * m ) * b ) ; ans = min ( ans , ( ( tmp + 1 ) * m - n ) * a ) ; cout << ans << endl ; long long n , m ; } return 0; }"}}
{"translation": {"en": "integers = a , b [ENDL] read n , m , a , b [ENDL] set long long x to ( n - n / m * m ) * b , y = ( ( n / m + 1 ) * m - n ) * a [ENDL] if x is greater than y then do [ENDL] output y [ENDL] else [ENDL] output x [ENDL] declare const double pi = acos ( - 1 )", "c++": "int main() { int a , b ; cin >> n >> m >> a >> b ; long long x = ( n - n / m * m ) * b , y = ( ( n / m + 1 ) * m - n ) * a ; if ( x > y ) cout << y << endl ; else cout << x << endl ; const double pi = acos ( - 1 ) ; return 0; }"}}
{"translation": {"en": "declare const double EPS = 1e - 6 [ENDL] declare const int INF = 1e9 + 40 [ENDL] create const long long INF64 = 1e18 + 40 [ENDL] create const double INFd = 1e9 + 40 . 0 [ENDL] declare const long long MOD = ( int ) 1e18 + 7 [ENDL] declare const long long MODf = 998244353 [ENDL] declare const int N = 1000 * 10 + 15 [ENDL] integer function solve [ENDL] declare long longs n , m , a and b [ENDL] read n , m , a and b [ENDL] print min of n % m * b and ( m - n % m ) * a ; print ' \\ n ' [ENDL] call function solve [ENDL] define integers n , m , a , b", "c++": "const double EPS = 1e-6 ; const int INF = 1e9 + 40 ; const long long INF64 = 1e18 + 40 ; const double INFd = 1e9 + 40.0 ; const long long MOD = ( int ) 1e18 + 7 ; const long long MODf = 998244353 ; const int N = 1000 * 10 + 15 ; int solve ( ) long long n , m , a , b ; cin >> n >> m >> a >> b ; cout << min ( n % m * b , ( m - n % m ) * a ) << ' \\n ' ; solve ( ) ; return 0; } int main() { long long int n , m , a , b ; }"}}
{"translation": {"en": "define ints dem , bui , and tm [ENDL] read n , m , a , and b [ENDL] set tm to n / m [ENDL] assign ( n - tm m ) b to dem [ENDL] set bui to ( ( tm + 1 ) m - n ) a [ENDL] print min ( dem , bui ) and a newline [ENDL] m , n , a , b = integers", "c++": "int main() { long long int dem , bui , tm ; cin >> n >> m >> a >> b ; tm = n / m ; dem = ( n - ( tm * m ) ) * b ; bui = ( ( tm + 1 ) * m - n ) * a ; cout << min ( dem , bui ) << endl ; long long m , n , a , b ; return 0; }"}}
{"translation": {"en": "Read m , n , a , b [ENDL] if n modulo m is 0 [ENDL] print 0 and a new line [ENDL] else do the following [ENDL] print minimum value of ( m * ( n / m + 1 ) - n ) * a and n % m * b and a new line [ENDL] i , j , k , m , n , t , a , b = integers", "c++": "cin >> n >> m >> a >> b ; int main() { if ( n % m == 0 ) cout << 0 << ' \\n ' ; else cout << min ( ( ( m * ( n / m + 1 ) ) - n ) * a , n % m * b ) << ' \\n ' ; long long int i , j , k , m , n , t , a , b ; }"}}
{"translation": {"en": "Read n , m , a , b [ENDL] if n modulo m is 0 [ENDL] print 0 and a new line [ENDL] set k to n / m [ENDL] set i to n - k * m [ENDL] set j to ( k + 1 ) * m - n [ENDL] print minimum value of a * j and b * i and a new line [ENDL] create long long int n , m a and b", "c++": "int main() { cin >> n >> m >> a >> b ; if ( n % m == 0 ) cout << 0 << endl ; k = n / m ; return 0; } i = n - k * m ; j = ( k + 1 ) * m - n ; cout << min ( a * j , b * i ) << endl ; long long int n , m , a , b ; return 0; }"}}
{"translation": {"en": "print n , m , a and b [ENDL] let sum , min , ans be long long int [ENDL] if n mod m = 0 [ENDL] set min = 0 [ENDL] else [ENDL] sum = a * ( ( ( n / m + 1 ) * m ) - n ) [ENDL] assign sum to min [ENDL] set ans = b * ( n - ( ( n / m ) * m ) ) [ENDL] if ans less than min , min = ans [ENDL] print min [ENDL] create constant long long mod with mod = 1e9 + 7", "c++": "int main() { cin >> n >> m >> a >> b ; long long int sum , min , ans ; if ( n % m == 0 ) min = 0 ; else sum = a * ( ( ( n / m + 1 ) * m ) - n ) ; { min = sum ; ans = b * ( n - ( ( n / m ) * m ) ) ; if ( ans < min ) min = ans ; cout << min << endl ; } } const long long mod = 1e9 + 7 ; return 0; }"}}
{"translation": {"en": "create constant integer MAX with MAX = 1e6 + 7 [ENDL] create long longs n , d , a , b [ENDL] read n read d read a read b [ENDL] create long long ans with ans = ( n % d ) * b [ENDL] create long long r with r = ( n / d + 1 ) * d [ENDL] set ans to minimum of ( ans and ( r - n ) * a ) [ENDL] print ans print \" \\ n \" [ENDL] n , m , a , b = long long integers", "c++": "const int MAX = 1e6 + 7 ; long long n , d , a , b ; cin >> n >> d >> a >> b ; int main() { long long ans = ( n % d ) * b ; long long r = ( n / d + 1 ) * d ; ans = min ( ans , ( r - n ) * a ) ; cout << ans << \" \\n \" ; long long n , m , a , b ; }"}}
{"translation": {"en": "read n , m , a , b [ENDL] output min ( b * ( n modulo m ) , a * ( ( ( n / m ) + 1 ) * m - n ) ) [ENDL] create long longs n , m , a , b", "c++": "int main() { cin >> n >> m >> a >> b ; cout << min ( b * ( n % m ) , a * ( ( ( n / m ) + 1 ) * m - n ) ) << endl ; long long n , m , a , b ; }"}}
{"translation": {"en": "while read n read m read a read b , print minimum of ( ( m - n % m ) * a and n % m * b ) print newline [ENDL] declare long long variables n and k", "c++": "int main() { while ( cin >> n >> m >> a >> b ) { cout << min ( ( m - n % m ) * a , n % m * b ) << endl ; } long long n , k ; return 0; }"}}
{"translation": {"en": "create ints a and b [ENDL] read n , k , a and b [ENDL] if n % k is 0 [ENDL] print 0 [ENDL] else [ENDL] declare long long sum1 = n % k * b [ENDL] declare long long variable sum2 = ( k - n % k ) * a [ENDL] print min of sum1 and sum2 [ENDL] n , m , a , b = long long integers", "c++": "int a , b ; cin >> n >> k >> a >> b ; int main() { if ( n % k == 0 ) cout << 0 << endl ; else long long sum1 = n % k * b ; long long sum2 = ( k - n % k ) * a ; cout << min ( sum1 , sum2 ) << endl ; long long n , m , a , b ; } }"}}
{"translation": {"en": "read n , m , a , b [ENDL] if n modulo m is 0 then do [ENDL] output 0 [ENDL] else [ENDL] set long long tmp to n / m [ENDL] output min ( ( n - tmp * m ) * b , ( ( tmp + 1 ) * m - n ) * a ) [ENDL] n , m , a , b , sum1 , sum2 = integers", "c++": "int main() { cin >> n >> m >> a >> b ; if ( n % m == 0 ) cout << 0 << endl ; else long long tmp = n / m ; cout << min ( ( n - tmp * m ) * b , ( ( tmp + 1 ) * m - n ) * a ) << endl ; long long n , m , a , b , sum1 , sum2 ; } return 0; }"}}
{"translation": {"en": "Read n , m , a , b [ENDL] if ( n modulo m is 0 [ENDL] print 0 and a new line [ENDL] set sum1 to ( ( n / m + 1 ) * m - n ) * a [ENDL] set sum2 to ( n - ( n / m ) * m ) * b [ENDL] if sum1 is greater than sum2 [ENDL] print sum2 and a new line [ENDL] else do the following [ENDL] print sum1 and a new line [ENDL] n , m = long long", "c++": "int main() { cin >> n >> m >> a >> b ; if ( ( n % m == 0 ) ) cout << 0 << endl ; sum1 = ( ( n / m + 1 ) * m - n ) * a ; return 0; } sum2 = ( n - ( n / m ) * m ) * b ; if ( sum1 > sum2 ) cout << sum2 << endl ; else cout << sum1 << endl ; long long n , m ; return 0; }"}}
{"translation": {"en": "a , b = int [ENDL] read n then m then a then b [ENDL] plus , minus = long long with plus = 0 and minus = 0 [ENDL] mod = long long with mod = n mod m [ENDL] div = long long with div = n / m [ENDL] if n is not a multiple of m [ENDL] if n is less than m [ENDL] set plus to m - n [ENDL] set minus to n [ENDL] else [ENDL] set plus to absolute of n - ( ( div * m ) + m ) [ENDL] set minus to mod [ENDL] else [ENDL] print 0 [ENDL] print min of plus * a and minus * b [ENDL] n , m , a , b , r = long long int", "c++": "int main() { int a , b ; cin >> n >> m >> a >> b ; long long plus = 0 , minus = 0 ; long long mod = n % m ; long long div = n / m ; if ( n % m != 0 ) if ( n < m ) plus = m - n ; minus = n ; else plus = abs ( n - ( ( div * m ) + m ) ) ; minus = mod ; else } cout << 0 << endl ; cout << min ( plus * a , minus * b ) << endl ; return 0; } long long int n , m , a , b , r ; }"}}
{"translation": {"en": "read n , m , a , b [ENDL] r = n modulo m [ENDL] print min of r * b and ( m - r ) * a ) [ENDL] n , m , a , b , x = integers", "c++": "int main() { cin >> n >> m >> a >> b ; r = n % m ; cout << ( min ( r * b , ( m - r ) * a ) ) << ' \\n ' ; long long n , m , a , b , x ; return 0; }"}}
{"translation": {"en": "Read n , m , a , b [ENDL] sum , sum2 = integers , both set to 0 [ENDL] if n is greater than or equal to m [ENDL] if n modulo m is 0 [ENDL] print 0 and a new line [ENDL] set x to n modulo m [ENDL] set sum1 to sum1 + b * x [ENDL] set sum2 to sum2 + a * ( m - x ) [ENDL] print minimum value of sum1 and sum2 and a new line [ENDL] create long longs n , m , a , b", "c++": "int main() { cin >> n >> m >> a >> b ; long long sum1 = 0 , sum2 = 0 ; if ( n >= m ) if ( n % m == 0 ) cout << 0 << endl ; x = n % m ; return 0; } } sum1 += b * x ; sum2 += a * ( m - x ) ; cout << min ( sum1 , sum2 ) << endl ; long long n , m , a , b ; return 0; }"}}
{"translation": {"en": "read n read m read a read b [ENDL] create long longs resa , resb [ENDL] create long long mod with mod = n % m [ENDL] set resb to mod * b [ENDL] if n is greater than or equal to m [ENDL] set resa to ( round up ( double casted ( n ) / m ) * m - n ) * a [ENDL] else [ENDL] set resa to ( m - n ) * a [ENDL] print minimum of resa and resb print newline [ENDL] create constant integer INF with INF = 0x3f3f3f3f", "c++": "int main() { cin >> n >> m >> a >> b ; long long resa , resb ; long long mod = n % m ; resb = mod * b ; if ( n >= m ) resa = ( ceil ( double ( n ) / m ) * m - n ) * a ; else resa = ( m - n ) * a ; cout << min ( resa , resb ) << endl ; const int INF = 0x3f3f3f3f ; }"}}
{"translation": {"en": "create constant double PI with PI = acosign of - 1 . 0 [ENDL] create long longs n , m , a , b [ENDL] read n read m read a read b [ENDL] create long long res with res = minimum of ( ( m - ( n % m ) ) * a and ( n % m ) * b ) [ENDL] print res print newline [ENDL] n , m , a , b num = long long with num having value of 0", "c++": "const double PI = acos ( - 1.0 ) ; long long n , m , a , b ; int main() { cin >> n >> m >> a >> b ; long long res = min ( ( m - ( n % m ) ) * a , ( n % m ) * b ) ; cout << res << endl ; long long n , m , a , b , num = 0 ; return 0; }"}}
{"translation": {"en": "read n , m , a and b [ENDL] if n mod m equals 0 [ENDL] set num to 0 [ENDL] else if n is less than m [ENDL] set num to the minimum of ( a * ( m - n ) ) and n * b [ENDL] else [ENDL] y , z = long long with y value of n mod m and z value of m minus n mod m [ENDL] set num to the minimum of y * b and z * a [ENDL] print num [ENDL] n , m , a , b = integers", "c++": "int main() { cin >> n >> m >> a >> b ; if ( n % m == 0 ) num = 0 ; else if ( n < m ) num = min ( a * ( m - n ) , n * b ) ; else long long y = n % m , z = m - n % m ; num = min ( y * b , z * a ) ; cout << num << endl ; } long long n , m , a , b ; return 0; }"}}
{"translation": {"en": "Read n , m , a , b [ENDL] print minimum value of ( m - n % m ) * a and n % m * b and a new line [ENDL] declare long longs n and m", "c++": "int main() { cin >> n >> m >> a >> b ; cout << min ( ( m - n % m ) * a , n % m * b ) << endl ; long long n , m ; return 0; }"}}
{"translation": {"en": "declare integers a and b [ENDL] read from the input to n , m , a and b [ENDL] print min of n % m * b and ( m - n % m ) * a [ENDL] let n , m , a , b = long long", "c++": "int main() { int a , b ; cin >> n >> m >> a >> b ; cout << min ( n % m * b , ( m - n % m ) * a ) << endl ; long long n , m , a , b ; return 0; }"}}
{"translation": {"en": "whilte reading new values for n , m , a , and b , print min ( ( m - n modulo m ) * a , n modulo m * b ) [ENDL] n , m , a , b = long long", "c++": "int main() { while ( cin >> n >> m >> a >> b ) { cout << min ( ( m - n % m ) * a , n % m * b ) << endl ; } long long n , m , a , b ; return 0; }"}}
{"translation": {"en": "read n , m , a , b [ENDL] ans = long long [ENDL] if n > m [ENDL] ans = min of ( m - n modulo m ) modulo m * a and ( n % m ) * b [ENDL] else [ENDL] if n modulo m is 0 [ENDL] ans = 0 [ENDL] else [ENDL] ans = ( n + ( m - n modulo m ) modulo m ) / m [ENDL] ans = min of ( ans * m - n ) * a and ( n - ( n / m ) * m ) * b [ENDL] print ans [ENDL] n , m , a , b = long long", "c++": "int main() { cin >> n >> m >> a >> b ; long long ans ; if ( n > m ) ans = min ( ( ( m - n % m ) % m ) * a , ( n % m ) * b ) ; else if ( n % m == 0 ) ans = 0 ; else ans = ( n + ( m - n % m ) % m ) / m ; ans = min ( ( ans * m - n ) * a , ( n - ( n / m ) * m ) * b ) ; cout << ans << endl ; } } long long n , m , a , b ; return 0; }"}}
{"translation": {"en": "read n then m then a then b [ENDL] s = long long with s = ( n + m - 1 ) / m [ENDL] t = long long with t = n / m [ENDL] print min of ( s * m - n ) * a and ( n - t * m ) * b [ENDL] n , m , a , b , x , y = integers", "c++": "int main() { cin >> n >> m >> a >> b ; long long s = ( n + m - 1 ) / m ; long long t = n / m ; cout << min ( ( s * m - n ) * a , ( n - t * m ) * b ) << endl ; long long int n , m , a , b , x , y ; return 0; }"}}
{"translation": {"en": "Read n , m , a , b [ENDL] set x to n modulo m [ENDL] set y to m - x [ENDL] set x to x * b [ENDL] set y to y * a [ENDL] print minimum value of x and y and a new line [ENDL] let n , m , a and b be long long", "c++": "int main() { cin >> n >> m >> a >> b ; x = n % m ; y = m - x ; x = x * b ; y = y * a ; cout << min ( x , y ) << \" \\n \" ; long long n , m , a , b ; return 0; }"}}
{"translation": {"en": "read n , m , a and b [ENDL] set k = n / m [ENDL] assign ( n - k * m ) * b to t1 [ENDL] t2 = ( m * ( k + 1 ) - n ) * a [ENDL] if t1 greater than t2 [ENDL] print t2 [ENDL] else [ENDL] print t1 and a newline [ENDL] a , b , c = int", "c++": "int main() { cin >> n >> m >> a >> b ; long long k = n / m ; long long t1 = ( n - k * m ) * b ; long long t2 = ( m * ( k + 1 ) - n ) * a ; if ( t1 > t2 ) cout << t2 << endl ; else cout << t1 << endl ; int a , b , c ; } return 0; }"}}
{"translation": {"en": "read a , b , c [ENDL] x , y , z = int [ENDL] z = sqrt ( ( b * c ) / a ) [ENDL] y = c / z [ENDL] x = b / z [ENDL] print 4 * ( x + y + z ) [ENDL] di = int vector array of size 3", "c++": "int main() { cin >> a >> b >> c ; int x , y , z ; z = sqrt ( ( b * c ) / a ) ; y = c / z ; x = b / z ; cout << 4 * ( x + y + z ) << endl ; vector < int > di [ 3 ] ; }"}}
{"translation": {"en": "linha0 = int vector array of size 10010 [ENDL] linha1 = int vector array of size 10010 [ENDL] linha2 = int vector array of size 10010 [ENDL] in function multiplos taking int a , int b , int h [ENDL] menor = int with menor = a [ENDL] if a > b set b to menor [ENDL] for i = 1 to menor inclusive [ENDL] if a and b are a multiple of i append i to di [ h ] [ENDL] a , b , c , s = int [ENDL] read a then b then c [ENDL] call multiplos on a , b , 0 [ENDL] call multiplos on a , c , 1 [ENDL] call multiplos on b , c , 2 [ENDL] for i = 0 to size of di [ 0 ] [ENDL] for j = 0 to size of di [ 1 ] [ENDL] if di [ 0 ] [ i ] * di [ 1 ] [ j ] is a [ENDL] for u = 0 to size of di [ 2 ] [ENDL] if d [ 0 ] [ i ] * di [ 2 ] [ u ] is b [ENDL] if di [ 1 ] [ j ] * di [ 2 ] [ u ] is c set s to di [ 2 ] [ u ] + di [ 1 ] [ j ] + di [ 0 ] [ i ] [ENDL] total = int with total = 4 * s [ENDL] print total [ENDL] create ints A1 , A2 and A3", "c++": "vector < int > linha0 [ 10010 ] ; vector < int > linha1 [ 10010 ] ; vector < int > linha2 [ 10010 ] ; void multiplos ( int a , int b , int h ) int menor = a ; if ( a > b ) b = menor ; for ( int i = 1 ; i <= menor ; i ++ ) if ( a % i == 0 && b % i == 0 ) { di [ h ] . push_back ( i ) ; } int a , b , c , s ; } } int main() { cin >> a >> b >> c ; multiplos ( a , b , 0 ) ; multiplos ( a , c , 1 ) ; multiplos ( b , c , 2 ) ; for ( int i = 0 ; i < ( int ) di [ 0 ] . size ( ) ; i ++ ) for ( int j = 0 ; j < ( int ) di [ 1 ] . size ( ) ; j ++ ) if ( di [ 0 ] [ i ] * di [ 1 ] [ j ] == a ) for ( int u = 0 ; u < ( int ) di [ 2 ] . size ( ) ; u ++ ) if ( di [ 0 ] [ i ] * di [ 2 ] [ u ] == b ) if ( di [ 1 ] [ j ] * di [ 2 ] [ u ] == c ) { s = di [ 2 ] [ u ] + di [ 1 ] [ j ] + di [ 0 ] [ i ] ; } int total = 4 * s ; } } } } } cout << total << endl ; int A1 , A2 , A3 ; }"}}
{"translation": {"en": "read standard input to A1 , A2 and A3 [ENDL] declare integer variable with name l = square root of ( A1 * A2 / A3 ) [ENDL] declare integer variable b with value = square root of ( A3 * A1 / A2 ) [ENDL] create new integer called h = square root of ( A3 * A2 / A1 ) [ENDL] print 4 * ( l + b + h ) and \" \\ n \" [ENDL] create ints ab , bc , ca , a , b , c and s", "c++": "int main() { cin >> A1 >> A2 >> A3 ; int l = ( int ) sqrt ( A1 * A2 / A3 ) ; int b = ( int ) sqrt ( A3 * A1 / A2 ) ; int h = ( int ) sqrt ( A3 * A2 / A1 ) ; cout << 4 * ( l + b + h ) << \" \\n \" ; int ab , bc , ca , a , b , c , s ; return 0; }"}}
{"translation": {"en": "read user input to ab , bc and ca [ENDL] assign square root of ( ( ab * ca ) / bc ) to a [ENDL] change b to the square root of ( ( bc * ab ) / ca ) [ENDL] set c to the square root of ( ( ca * bc ) / ab ) [ENDL] assign 4 * ( a + b + c ) to s [ENDL] print s [ENDL] create new long longs a , b and c", "c++": "int main() { cin >> ab >> bc >> ca ; a = sqrt ( ( ab * ca ) / bc ) ; b = sqrt ( ( bc * ab ) / ca ) ; c = sqrt ( ( ca * bc ) / ab ) ; s = 4 * ( a + b + c ) ; cout << s << endl ; long long a , b , c ; }"}}
{"translation": {"en": "read from the input to a , b and c [ENDL] create long long variable with name z with value = sqrt ( ( b * c ) / a ) [ENDL] create new long long x = c / z [ENDL] declare long long y = b / z [ENDL] print x * 4 + y * 4 + z * 4 and ' \\ n ' [ENDL] l , h , b , a1 , a2 , a3 = int", "c++": "cin >> a >> b >> c ; int main() { long long z = sqrt ( ( b * c ) / a ) ; long long x = c / z ; long long y = b / z ; cout << x * 4 + y * 4 + z * 4 << ' \\n ' ; int l , h , b , a1 , a2 , a3 ; return 0; }"}}
{"translation": {"en": "read a1 , a2 , a3 [ENDL] l = sqrt ( ( a2 * a3 ) / a1 ) [ENDL] b = sqrt ( ( a1 * a3 ) / a2 ) [ENDL] h = sqrt ( ( a2 * a1 ) / a3 ) [ENDL] print 4 * ( l + b + h ) [ENDL] u , v , w = long long int", "c++": "int main() { cin >> a1 >> a2 >> a3 ; l = sqrt ( ( a2 * a3 ) / a1 ) ; b = sqrt ( ( a1 * a3 ) / a2 ) ; h = sqrt ( ( a2 * a1 ) / a3 ) ; cout << 4 * ( l + b + h ) << endl ; long long int u , v , w ; return 0; }"}}
{"translation": {"en": "read u , v , w [ENDL] t1 , t2 , t3 = long long int [ENDL] t1 = sqrt ( ( u * v * w ) ) / u [ENDL] t2 = sqrt ( ( u * v * w ) ) / v [ENDL] t3 = sqrt ( ( u * v * w ) ) / w [ENDL] print 4 * ( t1 + t2 + t3 ) [ENDL] a , b , c = int", "c++": "int main() { cin >> u >> v >> w ; long long int t1 , t2 , t3 ; t1 = sqrt ( ( u * v * w ) ) / u ; t2 = sqrt ( ( u * v * w ) ) / v ; t3 = sqrt ( ( u * v * w ) ) / w ; cout << 4 * ( t1 + t2 + t3 ) << endl ; int a , b , c ; return 0; }"}}
{"translation": {"en": "read a , b , c [ENDL] print 4 * ( sqrt ( a * c / b ) + sqrt ( b * c / a ) + sqrt ( a * b / c ) ) [ENDL] let a , b , c be double values", "c++": "int main() { cin >> a >> b >> c ; cout << 4 * ( sqrt ( a * c / b ) + sqrt ( b * c / a ) + sqrt ( a * b / c ) ) << endl ; double a , b , c ; }"}}
{"translation": {"en": "read a , b , c [ENDL] let s be a double value with s = square root of a * b * c [ENDL] print 4 . 0 * ( s / a + s / b + s / c ) and newline [ENDL] lb , bh , hl , l , b , h = int", "c++": "int main() { cin >> a >> b >> c ; double s = sqrt ( a * b * c ) ; cout << 4.0 * ( s / a + s / b + s / c ) << endl ; int lb , bh , hl , l , b , h ; return 0; }"}}
{"translation": {"en": "read lb , bh , hl [ENDL] b = sqrt ( lb * bh / hl ) [ENDL] l = lb / b [ENDL] h = hl / l [ENDL] print 4 * ( l + b + h ) [ENDL] create ints a , b and c", "c++": "int main() { cin >> lb >> bh >> hl ; b = ( int ) sqrt ( lb * bh / hl ) ; l = lb / b ; h = hl / l ; cout << 4 * ( l + b + h ) << endl ; int a , b , c ; return 0; }"}}
{"translation": {"en": "read user input to a , b and c [ENDL] create new integer m with value = ( max of a and max ( b , c ) ) [ENDL] declare integer r = 0 [ENDL] in a for loop , change i from 1 to m inclusive incrementing i [ENDL] if a % i = 0 and b % i = 0 and ( a / i ) * ( b / i ) = c [ENDL] change r to a / i + b / i + i [ENDL] set r to r multiplied by 4 [ENDL] print r to the standard output [ENDL] in the function gcd that takes integer a , b and returns integer", "c++": "int main() { cin >> a >> b >> c ; int m = max ( a , max ( b , c ) ) ; int r = 0 ; for ( int i = 1 ; i <= m ; i ++ ) if ( a % i == 0 && b % i == 0 && ( ( a / i ) * ( b / i ) == c ) ) r = a / i + b / i + i ; r *= 4 ; cout << r << endl ; } } int gcd ( int a , int b ) }"}}
{"translation": {"en": "if b is 0 [ENDL] return a [ENDL] else [ENDL] gcd of b and a modulo b [ENDL] x , y , z = integers [ENDL] while read x , y , z [ENDL] c = integer with c = square root of ( z * y ) / x ) [ENDL] a = integer with a = ( x * c ) / y [ENDL] b = integer with b = x / a [ENDL] print a * 4 + b * 4 + c * 4 [ENDL] a , b , c = int", "c++": "if ( b == 0 ) return a ; else gcd ( b , a % b ) ; int x , y , z ; } int main() { while ( cin >> x >> y >> z ) int c = sqrt ( ( z * y ) / x ) ; int a = ( x * c ) / y ; int b = x / a ; cout << a * 4 + b * 4 + c * 4 << endl ; int a , b , c ; } }"}}
{"translation": {"en": "read a then b then c [ENDL] print 4 * ( sqrt of a * b / c + sqrt of b * c / a + sqrt of a * c / b ) [ENDL] a , b , c , i , j , k = int", "c++": "int main() { cin >> a >> b >> c ; cout << 4 * ( sqrt ( a * b / c ) + sqrt ( b * c / a ) + sqrt ( a * c / b ) ) << endl ; int a , b , c , i , j , k ; return 0; }"}}
{"translation": {"en": "read a then b then c [ENDL] for i = 1 to 10005 [ENDL] for j = 1 to 10005 [ENDL] for k = 1 to 10005 [ENDL] if i * j is a and i * k is b and j * k is c [ENDL] print 4 * i + 4 * j + 4 * k [ENDL] if i * k is greater than b or j * k is greater than c break [ENDL] if i * j is greater than a or j is greater than c break [ENDL] if i is greater than a or b beak [ENDL] in function fatora taking int factor , int n and returning pointer to int", "c++": "int main() { cin >> a >> b >> c ; for ( i = 1 ; i < 10005 ; i ++ ) for ( j = 1 ; j < 10005 ; j ++ ) for ( k = 1 ; k < 10005 ; k ++ ) if ( i * j == a && i * k == b && j * k == c ) cout << 4 * i + 4 * j + 4 * k << endl ; if ( i * k > b || j * k > c ) break ; return 0; } if ( i * j > a || j > c ) break ; } if ( i > a || i > b ) break ; } int * fatora ( int factor , int n ) } return 0; }"}}
{"translation": {"en": "f = pointer to int with f = new int of size 2 [ENDL] loop while n mod factor is not 0 increment factor [ENDL] set f [ 0 ] to factor [ENDL] set f [ 1 ] to n / factor [ENDL] return f [ENDL] area = int vector [ENDL] a , f3_1 , f3_2 , edges_sum = int [ENDL] factor = pointer to int [ENDL] for i = 0 to 3 [ENDL] read a [ENDL] append a to area [ENDL] for i = 0 to area [ 0 ] / 2 + 1 [ENDL] set factor to fatora of i + 1 , area [ 0 ] [ENDL] if area [ 1 ] mod factor [ 0 ] is 0 and area [ 2 ] mod factor [ 1 ] is 0 [ENDL] set f3_1 to area [ 1 ] / factor [ 0 ] [ENDL] set f3_2 to area [ 2 ] / factor [ 1 ] [ENDL] if f3_1 is f3_2 break [ENDL] else if area [ 2 ] mod factor [ 0 ] is 0 and area [ 1 ] mod factor [ 1 ] is 0 [ENDL] set f3_1 to area [ 1 ] / factor [ 1 ] [ENDL] set f3_2 to area [ 2 ] / factor [ 0 ] [ENDL] if f3_1 is f3_2 break [ENDL] set edges_sum to 4 * ( factor [ 0 ] + factor [ 1 ] + f3_1 ) [ENDL] print edges_sum [ENDL] let di be a vector containing integers with size 3", "c++": "int * f = new int [ 2 ] ; while ( n % factor != 0 ) { factor ++ ; } f [ 0 ] = factor ; f [ 1 ] = n / factor ; return f ; vector < int > area ; } int main() { int a , f3_1 , f3_2 , edges_sum ; int * factor ; for ( int i = 0 ; i < 3 ; i ++ ) cin >> a ; area . push_back ( a ) ; for ( int i = 0 ; i < ( area [ 0 ] / 2 ) + 1 ; i ++ ) } factor = fatora ( i + 1 , area [ 0 ] ) ; if ( area [ 1 ] % factor [ 0 ] == 0 && area [ 2 ] % factor [ 1 ] == 0 ) f3_1 = area [ 1 ] / factor [ 0 ] ; f3_2 = area [ 2 ] / factor [ 1 ] ; if ( f3_1 == f3_2 ) break ; else if ( area [ 2 ] % factor [ 0 ] == 0 && area [ 1 ] % factor [ 1 ] == 0 ) f3_1 = area [ 1 ] / factor [ 1 ] ; f3_2 = area [ 2 ] / factor [ 0 ] ; if ( f3_1 == f3_2 ) break ; edges_sum = 4 * ( factor [ 0 ] + factor [ 1 ] + f3_1 ) ; } } cout << edges_sum << endl ; vector < int > di [ 3 ] ; return 0; }"}}
{"translation": {"en": "let linha0 be a vector containing integers with size 10010 [ENDL] let linha1 be a vector containing integers with size 10010 [ENDL] let linha2 be a vector containing integers with size 10010 [ENDL] let multiplos be a void function which accepts int a , int b , int h [ENDL] let menor be a integer with menor = a [ENDL] if a is greater than b , b is equal to menor [ENDL] for i = 1 to menor inclusive [ENDL] if a modulo i is equal to 0 and b modulo i is equal to 0 , push_back i in di [ h ] [ENDL] let a , b , c , s be integers [ENDL] read a , b , c , s [ENDL] multiplos of a , b , 0 [ENDL] multiplos of a , c , 1 [ENDL] multiplos of b , c , 2 [ENDL] for i = 0 to ( int ) di [ 0 ] . size ( ) exclusive [ENDL] for j = 0 to ( int ) di [ 1 ] . size ( ) exclusive [ENDL] if di [ 0 ] [ i ] * di [ 1 ] [ j ] is equal to a [ENDL] for u = 0 to ( int ) di [ 2 ] . size ( ) exclusive [ENDL] if di [ 0 ] [ i ] * di [ 2 ] [ u ] is equal to b [ENDL] if di [ 1 ] [ j ] * di [ 2 ] [ u ] is equal to c , the value of s = di [ 2 ] [ u ] + di [ 1 ] [ j ] + di [ 0 ] [ i ] [ENDL] let total be a integer with total = 4 * s [ENDL] print total and newline [ENDL] declare x , y , z as integers", "c++": "vector < int > linha0 [ 10010 ] ; vector < int > linha1 [ 10010 ] ; vector < int > linha2 [ 10010 ] ; void multiplos ( int a , int b , int h ) int menor = a ; if ( a > b ) b = menor ; for ( int i = 1 ; i <= menor ; i ++ ) if ( a % i == 0 && b % i == 0 ) { di [ h ] . push_back ( i ) ; } int a , b , c , s ; } } int main() { cin >> a >> b >> c ; multiplos ( a , b , 0 ) ; multiplos ( a , c , 1 ) ; multiplos ( b , c , 2 ) ; for ( int i = 0 ; i < ( int ) di [ 0 ] . size ( ) ; i ++ ) for ( int j = 0 ; j < ( int ) di [ 1 ] . size ( ) ; j ++ ) if ( di [ 0 ] [ i ] * di [ 1 ] [ j ] == a ) for ( int u = 0 ; u < ( int ) di [ 2 ] . size ( ) ; u ++ ) if ( di [ 0 ] [ i ] * di [ 2 ] [ u ] == b ) if ( di [ 1 ] [ j ] * di [ 2 ] [ u ] == c ) { s = di [ 2 ] [ u ] + di [ 1 ] [ j ] + di [ 0 ] [ i ] ; } int total = 4 * s ; } } } } } cout << total << endl ; int x , y , z ; }"}}
{"translation": {"en": "read x , y , z [ENDL] declare integers a , b , c [ENDL] let a be square root of ( x * z ) / y [ENDL] let b be square root of ( x * y ) / z [ENDL] let c be square root of ( y * z ) / x [ENDL] print 4 * ( a + b + c ) , newline [ENDL] a , b , c = int", "c++": "int main() { cin >> x >> y >> z ; int a , b , c ; a = sqrt ( ( x * z ) / y ) ; b = sqrt ( ( x * y ) / z ) ; c = sqrt ( ( y * z ) / x ) ; cout << 4 * ( a + b + c ) << endl ; int a , b , c ; return 0; }"}}
{"translation": {"en": "loop while reading a then b then c [ENDL] ans = int with ans = 4 * ( sqrt of a * b / c + sqrt of a * c / b + sqrt of b * c / a ) [ENDL] print ans [ENDL] create doubles A , B and C", "c++": "int main() { while ( cin >> a >> b >> c ) int ans = 4 * ( sqrt ( a * b / c ) + sqrt ( a * c / b ) + sqrt ( b * c / a ) ) ; cout << ans << endl ; double A , B , C ; } return 0; }"}}
{"translation": {"en": "declare integers a , b and c [ENDL] read a , b and c [ENDL] change A to the square root of a * b / c [ENDL] assign sqrt ( b * c / a ) to B [ENDL] assign the square root of c * a / b to C [ENDL] create new integer variable count = ( A + B + C ) * 4 [ENDL] print count to the standard output [ENDL] create long long integers a , b , c , and s", "c++": "int main() { int a , b , c ; cin >> a >> b >> c ; A = sqrt ( a * b / c ) ; B = sqrt ( b * c / a ) ; C = sqrt ( c * a / b ) ; int count = ( A + B + C ) * 4 ; cout << count << endl ; long long a , b , c , s ; }"}}
{"translation": {"en": "declare solve [ENDL] read a , b , and c [ENDL] set s to s + ( long long ) sqrt ( a * b / c ) [ENDL] set s to s + ( long long ) sqrt ( b * c / a ) [ENDL] set s to s + ( long long ) sqrt ( a * c / b ) [ENDL] print s * 4 [ENDL] declare prep [ENDL] let long long int t = 1 [ENDL] call prep [ENDL] print fixed and setprecision ( 12 ) [ENDL] while t - - is truthy , call solve [ENDL] declare three integer variables ab , bc , and ac", "c++": "void solve ( ) cin >> a >> b >> c ; s += ( long long ) sqrt ( a * b / c ) ; s += ( long long ) sqrt ( b * c / a ) ; s += ( long long ) sqrt ( a * c / b ) ; cout << s * 4 << endl ; void prep ( ) { } } long long t = 1 ; int main() { prep ( ) ; cout << fixed << setprecision ( 12 ) ; while ( t -- ) solve ( ) ; int ab , bc , ac ; return 0; }"}}
{"translation": {"en": "read in ab , bc and ac [ENDL] variable b is equal to the square root of the value of ab * bc divided by ac [ENDL] variable a is equal to ab divided by b [ENDL] c is equal to bc divided by b [ENDL] print the sum of a multiplied by 4 , b multiplied by 4 and c multiplied by 4 [ENDL] a , b , c = int", "c++": "int main() { cin >> ab >> bc >> ac ; int b = sqrt ( ab * bc / ac ) ; int a = ab / b ; int c = bc / b ; cout << a * 4 + b * 4 + c * 4 << endl ; int a , b , c ; }"}}
{"translation": {"en": "x , y , z = int [ENDL] read a , b , c [ENDL] x = sqrt ( ( a * c ) / b ) [ENDL] y = sqrt ( ( b * a ) / c ) [ENDL] z = sqrt ( ( b * c ) / a ) [ENDL] print x * 4 + y * 4 + z * 4 [ENDL] x , y , z = long long", "c++": "int main() { int x , y , z ; cin >> a >> b >> c ; x = sqrt ( ( a * c ) / b ) ; y = sqrt ( ( b * a ) / c ) ; z = sqrt ( ( b * c ) / a ) ; cout << x * 4 + y * 4 + z * 4 << endl ; long long x , y , z ; return 0; }"}}
{"translation": {"en": "read x then y then z [ENDL] abc = long long with abc = ( sqrt of x * y * z + 0 . 00001 ) as long long [ENDL] ans = long long with ans = 4 * ( abc / x + abc / y + abc / z ) [ENDL] print ans [ENDL] create long long ints a , b , and c", "c++": "int main() { cin >> x >> y >> z ; long long abc = ( long long ) ( sqrt ( x * y * z + 0.00001 ) ) ; long long ans = 4 * ( abc / x + abc / y + abc / z ) ; cout << ans << endl ; long long a , b , c ; return 0; }"}}
{"translation": {"en": "read a , b , and c [ENDL] let long long int p = sqrt ( a * b * c ) [ENDL] let long long integer res = 0 [ENDL] set res to res + ( p / a + p / b + p / c ) [ENDL] print res * 4 [ENDL] create int a , b and c", "c++": "int main() { cin >> a >> b >> c ; long long p = sqrt ( a * b * c ) ; long long res = 0 ; res += ( p / a + p / b + p / c ) ; cout << res * 4 << endl ; int a , b , c ; }"}}
{"translation": {"en": "read a , b , c [ENDL] sum = 0 [ENDL] set sum to square root of ( a * b ) / c ) + sqrt of ( b * c ) / a ) + sqrt ( ( c * a ) / b ) [ENDL] print sum * 4 [ENDL] declare a , b , c , as integers", "c++": "int main() { cin >> a >> b >> c ; int sum = 0 ; sum = sqrt ( ( a * b ) / c ) + sqrt ( ( b * c ) / a ) + sqrt ( ( c * a ) / b ) ; cout << sum * 4 << endl ; int a , b , c ; }"}}
{"translation": {"en": "read a and b and c [ENDL] declare x = 0 , y = 0 , z = 0 , flag = 0 , as integers [ENDL] let x be square root of ( ( b * c ) / a ) [ENDL] let y be square root of ( ( c * a ) / b ) [ENDL] let z be square root of ( ( a * b ) / c ) [ENDL] print 4 * ( x + y + z ) , newline [ENDL] m , n , p = int", "c++": "int main() { cin >> a >> b >> c ; int x = 0 , y = 0 , z = 0 , flag = 0 ; x = sqrt ( ( b * c ) / a ) ; y = sqrt ( ( c * a ) / b ) ; z = sqrt ( ( a * b ) / c ) ; cout << 4 * ( x + y + z ) << endl ; int m , n , p ; return 0; }"}}
{"translation": {"en": "read m , n , p [ENDL] a = sqrt ( p * m / n ) [ENDL] b = sqrt ( m * n / p ) [ENDL] c = sqrt ( n * p / m ) [ENDL] sum = 4 * ( a + b + c ) [ENDL] print sum [ENDL] declare integers m , n , p , sum = 0 , a , b , c", "c++": "int main() { cin >> m >> n >> p ; int a = sqrt ( p * m / n ) ; int b = sqrt ( m * n / p ) ; int c = sqrt ( n * p / m ) ; int sum = 4 * ( a + b + c ) ; cout << sum << endl ; int m , n , p , sum = 0 , a , b , c ; return 0; }"}}
{"translation": {"en": "read m read n read p [ENDL] let a be square root of p * m / n [ENDL] let b be square root of m * n / p [ENDL] let b be square root of n * p / m [ENDL] let sum = 4 * ( a + b + c ) [ENDL] print sum print newline [ENDL] declare integers a , b and c", "c++": "int main() { cin >> m >> n >> p ; a = sqrt ( p * m / n ) ; b = sqrt ( m * n / p ) ; c = sqrt ( n * p / m ) ; sum = 4 * ( a + b + c ) ; cout << sum << endl ; int a , b , c ; return 0; }"}}
{"translation": {"en": "read standard input to a , b and c [ENDL] declare integer variable with name x with value sqrt ( ( a * b ) / c ) [ENDL] declare integer y with value = square root of ( ( a * c ) / b ) [ENDL] z is a new integer = square root of ( ( b * c ) / a ) [ENDL] print 4 * ( x + y + z ) to the standard output [ENDL] x1 , x2 , x3 = integers", "c++": "int main() { cin >> a >> b >> c ; int x = sqrt ( ( a * b ) / c ) ; int y = sqrt ( ( a * c ) / b ) ; int z = sqrt ( ( b * c ) / a ) ; cout << 4 * ( x + y + z ) << endl ; int x1 , x2 , x3 ; return 0; }"}}
{"translation": {"en": "read x1 , x2 , x3 [ENDL] sum = integer with sum = sqrt ( ( x1 * x3 ) / x2 ) + sqrt ( ( x2 * x1 ) / x3 ) + sqrt ( ( x3 * x2 ) / x1 ) [ENDL] sum = sum * 4 [ENDL] print sum [ENDL] create integer array arr of size 104", "c++": "int main() { cin >> x1 >> x2 >> x3 ; int sum = sqrt ( ( x1 * x3 ) / x2 ) + sqrt ( ( x2 * x1 ) / x3 ) + sqrt ( ( x3 * x2 ) / x1 ) ; sum = sum * 4 ; cout << sum << endl ; int arr [ 104 ] ; return 0; }"}}
{"translation": {"en": "make ints n and k [ENDL] read n and k [ENDL] for i = 0 to n exclusive , read arr [ i ] [ENDL] make integer total = 0 [ENDL] for i = 0 to n exclusive [ENDL] for i = 0 to n exclusive [ENDL] set total to total + arr [ i ] [ENDL] subtract min ( total , 8 ) from total [ENDL] if k is less than or equal to 0 [ENDL] print i + 1 [ENDL] show - 1 [ENDL] declare int variables n and k", "c++": "int n , k ; int main() { cin >> n >> k ; for ( int i = 0 ; i < n ; i ++ ) { cin >> arr [ i ] ; } int total = 0 ; for ( int i = 0 ; i < n ; i ++ ) total += arr [ i ] ; k -= min ( total , 8 ) ; total -= min ( total , 8 ) ; if ( k <= 0 ) cout << i + 1 << endl ; cout << - 1 << endl ; return 0; } } int n , k ; return 0; }"}}
{"translation": {"en": "read from the input to n and k [ENDL] define new integer a [ENDL] define integers totalChocolate , days and remain = 0 [ENDL] declare boolean variable with name flag with value false [ENDL] for integer i = 0 to n exclusive [ENDL] read standard input to a [ENDL] change a to the sum of a and remain [ENDL] if a is greater than 8 [ENDL] assign a - 8 to remain [ENDL] change totalChocolate to the sum of totalChocolate and 8 [ENDL] else [ENDL] add a to totalChocolate [ENDL] assign the new value = 0 to remain [ENDL] increment days by one [ENDL] if totalChocolate > = k [ENDL] assign true to flag [ENDL] break [ENDL] if flag is true [ENDL] print days [ENDL] else [ENDL] print \" - 1 \" to the standard output [ENDL] let MAX be a constant integer 100001", "c++": "int main() { cin >> n >> k ; int a ; int totalChocolate = 0 , days = 0 , remain = 0 ; bool flag = false ; for ( int i = 0 ; i < n ; i ++ ) cin >> a ; a += remain ; if ( a > 8 ) remain = a - 8 ; totalChocolate += 8 ; else totalChocolate += a ; remain = 0 ; days ++ ; } if ( totalChocolate >= k ) flag = true ; break ; if ( flag ) } } cout << days << endl ; else cout << \" -1 \" << endl ; const int MAX = 100001 ; } return 0; }"}}
{"translation": {"en": "An , Bn are integer arrays [ENDL] n , k are integers [ENDL] read n , k [ENDL] for integer i = 1 to n inclusive , print An [ i ] [ENDL] sum , flag , coun be integers 0 [ENDL] for integer i = 1 to n inclusive [ENDL] increase coun by An [ i ] [ENDL] if coun is greater than 8 [ENDL] increase sum by 8 [ENDL] decrease coun by 8 [ENDL] else [ENDL] increase sum by coun [ENDL] coun is 0 [ENDL] if sum is greater than k [ENDL] flag is 0 [ENDL] print i and endline [ENDL] stop [ENDL] if flag is 0 , print - 1 and endline [ENDL] n , k , a = int , c , v = 0", "c++": "int An [ MAX ] , Bn [ MAX ] ; int n , k ; int main() { cin >> n >> k ; for ( int i = 1 ; i <= n ; i ++ ) cin >> An [ i ] ; int sum = 0 , flag = 0 , coun = 0 ; for ( int i = 1 ; i <= n ; i ++ ) coun += An [ i ] ; if ( coun > 8 ) sum += 8 ; coun -= 8 ; else sum += coun ; coun = 0 ; if ( sum >= k ) } flag = 1 ; cout << i << endl ; break ; if ( ! flag ) cout << - 1 << endl ; } } int n , k , a , c = 0 , v = 0 ; return 0; }"}}
{"translation": {"en": "read n , k [ENDL] for i = 1 to n inclusive [ENDL] read a [ENDL] if a < = 8 [ENDL] if c > = 8 - a [ENDL] add 8 to v [ENDL] subtract 8 - a from c [ENDL] else [ENDL] add a + c to v [ENDL] c = 0 [ENDL] else [ENDL] add 8 to v [ENDL] add a - 8 to c [ENDL] if v > = k [ENDL] print i [ENDL] print - 1 [ENDL] create int a , b , c , t , l , i , j , m , set sum and count to 0", "c++": "int main() { cin >> n >> k ; for ( int i = 1 ; i <= n ; i ++ ) cin >> a ; if ( a <= 8 ) if ( c >= 8 - a ) v += 8 ; c -= 8 - a ; else v += a + c ; c = 0 ; else } v += 8 ; c += a - 8 ; if ( v >= k ) } cout << i << endl ; cout << - 1 << endl ; return 0; } } int a , b , c , t , l , i , j , sum = 0 , count = 0 , m ; return 0; }"}}
{"translation": {"en": "read a and b [ENDL] for i = 1 to a inclusive [ENDL] read c [ENDL] set sum to sum + c [ENDL] set m to min of 8 and sum [ENDL] set sum to sum - m [ENDL] b = b - m [ENDL] increment count [ENDL] if b < = 0 [ENDL] if b > 0 [ENDL] print - 1 [ENDL] else [ENDL] print count [ENDL] n , k , ans , sum , aux , candies = int", "c++": "int main() { cin >> a >> b ; for ( i = 1 ; i <= a ; i ++ ) cin >> c ; sum += c ; m = min ( 8 , sum ) ; sum -= m ; b -= m ; count ++ ; if ( b <= 0 ) { break ; } if ( b > 0 ) } cout << - 1 << endl ; else cout << count << endl ; int n , k , ans , sum , aux , candies ; } }"}}
{"translation": {"en": "ans , sum , candies = 0 [ENDL] found = false [ENDL] read n , k [ENDL] for i = 0 to n exclusive [ENDL] read aux [ENDL] if found continue [ENDL] add aux to candies [ENDL] aux = min ( candies , 8 ) [ENDL] add aux to sum [ENDL] increment ans [ENDL] subtract aux from candies [ENDL] if sum > = k found = true [ENDL] if not found [ENDL] print - 1 [ENDL] else [ENDL] print ans [ENDL] let n , k , a , b = 1 , c = 0 , d = 0 , e , s be integers", "c++": "int main() { ans = sum = candies = 0 ; bool found = false ; cin >> n >> k ; for ( int i = 0 ; i < n ; i ++ ) cin >> aux ; if ( found ) continue ; candies += aux ; aux = min ( candies , 8 ) ; sum += aux ; ans ++ ; candies -= aux ; if ( sum >= k ) found = true ; if ( ! found ) } cout << \" -1\\n \" ; else cout << ans << \" \\n \" ; int n , k , a , b = 1 , c = 0 , d = 0 , e , s [ 117 ] ; }"}}
{"translation": {"en": "read n . k [ENDL] for integer i = 1 to n inclusive . read s [ i ] [ENDL] while b is less than or equal to n [ENDL] e equals s [ b ] + d [ENDL] if e is less than or equal to 8 [ENDL] c equals c + e [ENDL] d equals 0 [ENDL] b increased by 1 [ENDL] if c is greater than or equal to k , stop [ENDL] else if e is greater than 8 [ENDL] increment c by 8 [ENDL] d equals e minus 8 [ENDL] increment b by 1 [ENDL] if c is greater than or equal to k , stop [ENDL] if c is less than k [ENDL] print - 1 and newline [ENDL] else [ENDL] print b - 1 and newline [ENDL] n , k = integers", "c++": "int main() { cin >> n >> k ; for ( int i = 1 ; i <= n ; i ++ ) { cin >> s [ i ] ; } while ( b <= n ) e = s [ b ] + d ; if ( e <= 8 ) c = c + e ; d = 0 ; b ++ ; if ( c >= k ) { break ; } else if ( e > 8 ) c = c + 8 ; d = e - 8 ; b ++ ; if ( c >= k ) { break ; } if ( c < k ) } } cout << - 1 << endl ; else cout << b - 1 << endl ; long long int n , k ; } return 0; }"}}
{"translation": {"en": "a = array of 1007 integers [ENDL] Read n , k [ENDL] _d , _c = integers with _d = 0 , _c = 0 [ENDL] for i = 1 to n exclusive [ENDL] Read n values into array a [ENDL] if k is greater than 0 [ENDL] set _c to _c + a [ i ] [ENDL] x = integer , set to minimum value of 8LL , and _c [ENDL] set k to k - x [ENDL] set _c to _c - x [ENDL] set _d to i [ENDL] if k is less than or equal to 0 [ENDL] print _d and a new line [ENDL] else do the following [ENDL] print - 1 and a new line [ENDL] n , k = integers", "c++": "long long int a [ 1007 ] ; cin >> n >> k ; int main() { long long int _d = 0 , _c = 0 ; for ( long long int i = 1 ; i <= n ; i ++ ) cin >> a [ i ] ; if ( k > 0 ) _c += a [ i ] ; long long int x = min ( 8LL , _c ) ; k -= x ; _c -= x ; _d = i ; if ( k <= 0 ) } } cout << _d << \" \\n \" ; else cout << - 1 << \" \\n \" ; long long int n , k ; } return 0; }"}}
{"translation": {"en": "Read n , k [ENDL] arr = array of n integers with 0 elements [ENDL] answer = integer with 0 [ENDL] sum = integer with 0 [ENDL] Read n values into array arr [ENDL] temp = integer with 0 [ENDL] for i = 0 to n exclusive [ENDL] set arr [ i ] to arr [ i ] + temp [ENDL] if arr [ i ] is greater than or equal to 8 [ENDL] set k to k - 8 [ENDL] set temp to arr [ i ] - 8 [ENDL] increment answer [ENDL] else do the following [ENDL] set k to k - arr [ i ] [ENDL] set temp to 0 [ENDL] increment answer [ENDL] if k is less than or equal to 0 [ENDL] print answer and a new line [ENDL] print - 1 and a new line [ENDL] n , k , a , b , c , d , e = integers and s = array of 117 integers", "c++": "int main() { cin >> n >> k ; long long int arr [ n ] = { 0 } ; int answer = 0 ; int sum = 0 ; for ( int i = 0 ; i < n ; i ++ ) { cin >> arr [ i ] ; } int temp = 0 ; for ( int i = 0 ; i < n ; i ++ ) arr [ i ] += temp ; if ( arr [ i ] >= 8 ) k -= 8 ; temp = arr [ i ] - 8 ; answer ++ ; else k -= arr [ i ] ; temp = 0 ; answer ++ ; if ( k <= 0 ) } cout << answer << endl ; cout << - 1 << endl ; return 0; } } int n , k , a , b = 1 , c = 0 , d = 0 , e , s [ 117 ] ; return 0; }"}}
{"translation": {"en": "Read n and k [ENDL] Read n values into array s [ENDL] while b is less than or equal to n [ENDL] set e to s [ b ] + d [ENDL] if e is less than or equal to 8 [ENDL] set c to c + e [ENDL] set d to 0 [ENDL] increment b [ENDL] if c is greater than or equal to k , then Terminate the loop [ENDL] else if e is greater than 8 [ENDL] set c to c + 8 [ENDL] set d to e - 8 [ENDL] increment b [ENDL] if c is greater than or equal to k , then Terminate the loop [ENDL] if c is less than k [ENDL] print - 1 and a new line [ENDL] else do the following [ENDL] print b - 1 and a new line [ENDL] define integers n and k", "c++": "int main() { cin >> n >> k ; for ( int i = 1 ; i <= n ; i ++ ) { cin >> s [ i ] ; } while ( b <= n ) e = s [ b ] + d ; if ( e <= 8 ) c = c + e ; d = 0 ; b ++ ; if ( c >= k ) { break ; } else if ( e > 8 ) c = c + 8 ; d = e - 8 ; b ++ ; if ( c >= k ) { break ; } if ( c < k ) } } cout << - 1 << endl ; else cout << b - 1 << endl ; int n , k ; } return 0; }"}}
{"translation": {"en": "read n and k [ENDL] declare integer variables arya and bran = 0 [ENDL] define new integer called s = 0 [ENDL] for i = 0 to n exclusive [ENDL] create integer t [ENDL] read standard input to t [ENDL] if t + arya > = 8 [ENDL] increase bran by 8 [ENDL] increase arya by t - 8 [ENDL] increase s by 1 [ENDL] else [ENDL] add t + arya to bran [ENDL] change arya to 0 [ENDL] increase s by 1 [ENDL] if bran > = k [ENDL] print s [ENDL] if bran < = k , print - 1 to the standard output [ENDL] declare solve taking in ints n and k and int array arr and returning integer", "c++": "int main() { cin >> n >> k ; int arya = 0 , bran = 0 ; int s = 0 ; for ( int i = 0 ; i < n ; ++ i ) int t ; cin >> t ; if ( t + arya >= 8 ) bran += 8 ; arya += t - 8 ; ++ s ; else bran += t + arya ; arya = 0 ; ++ s ; if ( bran >= k ) } cout << s << endl ; if ( bran <= k ) { cout << - 1 << endl ; } return 0; } } int solve ( int arr [ ] , int n , int k ) }"}}
{"translation": {"en": "create integer t = 0 [ENDL] for i = 0 to n exclusive [ENDL] set t to t + arr [ i ] [ENDL] make integer val = min ( 8 , t ) [ENDL] subtract val from k [ENDL] set t to t - val [ENDL] if k is less than or equal to 0 , return i + 1 [ENDL] return - 1 [ENDL] create ints n and k [ENDL] read n and k [ENDL] create int array arr of size n [ENDL] for i = 0 to n exclusive , read arr [ i ] [ENDL] print the result of solve ( arr , n , k ) [ENDL] n , i , k , j , t , m = integers with t = 0", "c++": "int t = 0 ; for ( int i = 0 ; i < n ; i ++ ) t += arr [ i ] ; int val = min ( 8 , t ) ; k -= val ; t -= val ; if ( k <= 0 ) return i + 1 ; return - 1 ; } int n , k ; } int main() { cin >> n >> k ; int arr [ n ] ; for ( int i = 0 ; i < n ; i ++ ) cin >> arr [ i ] ; cout << solve ( arr , n , k ) << endl ; int n , i , k , j , t = 0 , m ; return 0; }"}}
{"translation": {"en": "Read n and k [ENDL] for i = 0 to n exclusive [ENDL] Read j [ENDL] set j to j + t [ENDL] set t to 0 [ENDL] if j is greater than or equal to 8 [ENDL] set t to t + j - 8 [ENDL] set j to 8 [ENDL] set k to k - j [ENDL] if k is greater than or equal to 0 , then Terminate the loop [ENDL] if k is greater than 0 [ENDL] print - 1 and new line [ENDL] else do the following [ENDL] print i + 1 and a new line [ENDL] declare new integer variables n and k", "c++": "int main() { cin >> n >> k ; for ( i = 0 ; i < n ; i ++ ) cin >> j ; j += t ; t = 0 ; if ( j >= 8 ) t += j - 8 ; j = 8 ; k -= j ; } if ( k <= 0 ) { break ; } if ( k > 0 ) } cout << - 1 << endl ; else cout << i + 1 << endl ; int n , k ; } return 0; }"}}
{"translation": {"en": "read n and k from the input [ENDL] create vector of integers a with n elements [ENDL] create new integer called curr = 0 [ENDL] goal is a new integer = k [ENDL] create integer variable count with value 0 [ENDL] for integer i = 0 to n exclusive incrementing i [ENDL] read a [ i ] [ENDL] set curr to curr + a [ i ] [ENDL] declare integer variable with name maxGive = min of 8 and curr [ENDL] set the value of curr to curr - maxGive [ENDL] change goal to goal - maxGive [ENDL] if goal < = 0 [ENDL] else [ENDL] increment count [ENDL] if goal is greater than 0 , set the value of count to - 2 [ENDL] print count + 1 [ENDL] n , k = int", "c++": "int main() { cin >> n >> k ; vector < int > a ( n ) ; int curr = 0 ; int goal = k ; int count = 0 ; for ( int i = 0 ; i < n ; i ++ ) cin >> a [ i ] ; curr = curr + a [ i ] ; int maxGive = min ( 8 , curr ) ; curr = curr - maxGive ; goal = goal - maxGive ; if ( goal <= 0 ) else ; count ++ ; if ( goal > 0 ) { count = - 2 ; } } } cout << count + 1 << endl ; int n , k ; return 0; }"}}
{"translation": {"en": "read n , k [ENDL] c = int array length n [ENDL] for i = 0 to n exclusive , read c [ i ] [ENDL] if k < = n * 8 [ENDL] sum = 0 = int [ENDL] p = 0 = int [ENDL] for i = 0 to n excluisve [ENDL] if c [ i ] < = 8 [ENDL] set c [ i ] to c [ i ] [ENDL] else [ENDL] a = int = c [ i ] - 8 [ENDL] set c [ i ] to 8 [ENDL] set c [ i + 1 ] to c [ i + 1 ] + a [ENDL] increment sum by c [ i ] [ENDL] if sum > = k [ENDL] print i + 1 [ENDL] exit loop [ENDL] else [ENDL] increment p [ENDL] if p = n then print - 1 [ENDL] else [ENDL] print - 1 [ENDL] declare integers a , b , c = 0", "c++": "int main() { cin >> n >> k ; int c [ n ] ; for ( int i = 0 ; i < n ; i ++ ) { cin >> c [ i ] ; } if ( k <= n * 8 ) int sum = 0 ; int p = 0 ; for ( int i = 0 ; i < n ; i ++ ) if ( c [ i ] <= 8 ) c [ i ] = c [ i ] ; else int a = c [ i ] - 8 ; c [ i ] = 8 ; c [ i + 1 ] = ( c [ i + 1 ] + a ) ; sum += c [ i ] ; } if ( sum >= k ) cout << i + 1 << endl ; break ; else p ++ ; if ( p == n ) { cout << \" -1 \" << endl ; } } } else cout << \" -1 \" << endl ; int a , b , c = 0 ; } }"}}
{"translation": {"en": "read a , b [ENDL] while b is true [ENDL] declare integer d = b % 10 [ENDL] let c be c * 10 + d [ENDL] let b be b / 10 [ENDL] print a + c and newline [ENDL] a , b = long long", "c++": "int main() { cin >> a >> b ; while ( b ) int d = b % 10 ; c = c * 10 + d ; b /= 10 ; cout << a + c << endl ; } long long a , b ; return 0; }"}}
{"translation": {"en": "read a , b [ENDL] temp = long long with temp = 0 [ENDL] while ( b > 0 ) [ENDL] temp = ( temp * 10 ) + ( b modulo 10 ) [ENDL] b = b / 10 [ENDL] print a + temp [ENDL] a and num are integers with num = 0", "c++": "int main() { cin >> a >> b ; long long temp = 0 ; while ( b > 0 ) temp = ( temp * 10 ) + ( b % 10 ) ; b /= 10 ; cout << a + temp << endl ; } int a , num = 0 ; return 0; }"}}
{"translation": {"en": "b is a new array of characters with 100 elements [ENDL] read a from the user input [ENDL] read standard input to b [ENDL] reverse b [ENDL] increment i by 1 in a loop , starting from 0 to the length of b , ans change num to ( num * 10 ) + ( b [ i ] - ' 0 ' ) on every loop [ENDL] print num + a [ENDL] a , b = int", "c++": "int main() { char b [ 100 ] ; cin >> a ; cin >> b ; reverse ( b , b + strlen ( b ) ) ; for ( int i ( 0 ) ; i < ( strlen ( b ) ) ; i ++ ) { num = ( num * 10 ) + ( b [ i ] - ' 0 ' ) ; } cout << num + a << endl ; int a , b ; return 0; }"}}
{"translation": {"en": "read a , b [ENDL] y = array of 30 int [ENDL] r = b , d = 0 [ENDL] while r > 0 [ENDL] y [ d ] = r modulo 10 [ENDL] divide r by 10 [ENDL] increment d [ENDL] for i = 0 to d / 2 exclusive swap y [ i ] and y [ d - 1 - i ] [ENDL] w = 0 , k = 1 [ENDL] for i = 0 to d exclusive [ENDL] add y [ i ] * k to w [ENDL] multiply k by 10 [ENDL] print w + a [ENDL] a , b , c = integers set c = 0", "c++": "int main() { cin >> a >> b ; int y [ 30 ] = { } ; int r = b , d = 0 ; while ( r > 0 ) y [ d ] = r % 10 ; r /= 10 ; d ++ ; for ( int i = 0 ; i < d / 2 ; i ++ ) swap ( y [ i ] , y [ d - 1 - i ] ) ; } int w = 0 , k = 1 ; for ( int i = 0 ; i < d ; i ++ ) w += y [ i ] * k ; k *= 10 ; cout << w + a << endl ; } int a , b , c = 0 ; return 0; }"}}
{"translation": {"en": "read a and b [ENDL] while b ! = 0 [ENDL] set c = c * 10 + b decrement 10 [ENDL] set b = b / 10 [ENDL] print a + c [ENDL] a , be and eb are integers with eb = 0", "c++": "int main() { cin >> a >> b ; while ( b != 0 ) c = c * 10 + b % 10 ; b = b / 10 ; cout << a + c << endl ; } int a , be , eb = 0 ; return 0; }"}}
{"translation": {"en": "read standard input to a and be [ENDL] while be is not 0 [ENDL] change the value of eb to 10 * eb + be % 10 [ENDL] change the value of be to be divided by 10 [ENDL] print a + eb and ' \\ n ' [ENDL] let a , b and c be integers , set c to 0", "c++": "cin >> a >> be ; int main() { while ( be ) eb = 10 * eb + be % 10 ; be /= 10 ; cout << a + eb << ' \\n ' ; } int a , b , c = 0 ; }"}}
{"translation": {"en": "read in a and b [ENDL] while b is not 0 [ENDL] let d be an integer and set it to b % 10 [ENDL] set c to c * 10 + d [ENDL] set b to b / 10 [ENDL] print a + c [ENDL] let a , ans , plus be long integers with ans = 0", "c++": "int main() { cin >> a >> b ; while ( b ) int d = b % 10 ; c = c * 10 + d ; b /= 10 ; cout << a + c << endl ; } long long a , ans = 0 , plus ; return 0; }"}}
{"translation": {"en": "let b be a string [ENDL] read a and b [ENDL] for i = 0 to ( length of b ) - 1 inclusive [ENDL] plus = ( int ) b [ i ] - 48 [ENDL] for j = 0 to i inclusive , plus is equal to plus * 10 [ENDL] divide plus by 10 [ENDL] increment ans by plus [ENDL] increment ans by a [ENDL] print ans and new line [ENDL] a , b = integers", "c++": "int main() { string b ; cin >> a >> b ; for ( int i = 0 ; i <= b . size ( ) - 1 ; i ++ ) plus = ( ( int ) b [ i ] - 48 ) ; for ( int j = 0 ; j <= i ; j ++ ) plus *= 10 ; plus /= 10 ; ans += plus ; ans += a ; } cout << ans << endl ; long int a , b ; }"}}
{"translation": {"en": "Read a , b [ENDL] reversedNumber , remainder = integers with reversedNumber = 0 [ENDL] while b is not equal to 0 [ENDL] set remainder to b modulo 10 [ENDL] set reversedNumber to reversedNumber * 10 + remainder [ENDL] set b to b / 10 [ENDL] print a + reversedNumber and a new line [ENDL] in int rever taking n = int", "c++": "int main() { cin >> a >> b ; int reversedNumber = 0 , remainder ; while ( b != 0 ) remainder = b % 10 ; reversedNumber = reversedNumber * 10 + remainder ; b /= 10 ; cout << a + reversedNumber << endl ; } int rever ( int n ) return 0; }"}}
{"translation": {"en": "rn = 0 = int [ENDL] while n [ENDL] set rn to rn * 10 + n mod 10 [ENDL] divide n by 10 [ENDL] return rn [ENDL] a , b = int [ENDL] while reading a and b , print a + rever of b [ENDL] let ff be the ifstream file . txt", "c++": "int rn = 0 ; while ( n ) rn = rn * 10 + n % 10 ; n /= 10 ; return rn ; } int a , b ; } int main() { while ( cin >> a >> b ) { cout << a + rever ( b ) << endl ; } ifstream ff ( \" file.txt \" ) ; return 0; }"}}
{"translation": {"en": "s1 , s2 = string [ENDL] read s1 and s2 [ENDL] reverse s2 [ENDL] while length of s1 is not length of s2 [ENDL] if lenght of s1 is > length of s2 [ENDL] call insert on s2 with args beginning of s2 , 1 , ' 0 ' [ENDL] else [ENDL] call insert on s1 with args beginning of s1 , 1 , ' 0 ' [ENDL] x , y = int [ENDL] iss of s2 = istringstream [ENDL] iss > > x [ENDL] iss1 of s1 = istringstream [ENDL] iss1 > > y [ENDL] print x + y [ENDL] create int int a , b , c , set c to 0", "c++": "int main() { string s1 , s2 ; cin >> s1 >> s2 ; reverse ( s2 . begin ( ) , s2 . end ( ) ) ; while ( s1 . length ( ) != s2 . length ( ) ) if ( s1 . length ( ) > s2 . length ( ) ) s2 . insert ( s2 . begin ( ) , 1 , ' 0 ' ) ; else s1 . insert ( s1 . begin ( ) , 1 , ' 0 ' ) ; int x , y ; } } istringstream iss ( s2 ) ; iss >> x ; istringstream iss1 ( s1 ) ; iss1 >> y ; cout << x + y << endl ; int a , b , c = 0 ; return 0; }"}}
{"translation": {"en": "read a and b [ENDL] while b different from b [ENDL] set d to b mod 10 [ENDL] set c to c * 10 + d [ENDL] assign b / 10 to b [ENDL] print a + c [ENDL] declare rev taking in long long x and returning long long", "c++": "int main() { cin >> a >> b ; while ( b ) int d = b % 10 ; c = c * 10 + d ; b /= 10 ; cout << a + c << endl ; } long long rev ( long long x ) return 0; }"}}
{"translation": {"en": "create long long int ans = 0 [ENDL] while x is truthy [ENDL] set ans to ans * 10 + ( x % 10 ) [ENDL] set x to x / 10 [ENDL] return ans [ENDL] make long long ints a and b [ENDL] read a and b and while a and b are truthy [ENDL] set b to return result of rev ( b ) [ENDL] output a + b [ENDL] declare strings a , b , c", "c++": "long long ans = 0 ; while ( x ) ans = ans * 10 + ( x % 10 ) ; x /= 10 ; return ans ; } long long a , b ; } int main() { while ( cin >> a >> b ) b = rev ( b ) ; cout << a + b << ' \\n ' ; string a , b , c ; } return 0; }"}}
{"translation": {"en": "read a and b [ENDL] reverse sort from beginning of a to end of a [ENDL] while size of a is less than size of b , increment a by \" 0 \" [ENDL] while size of b is less than size of a , increment b by \" 0 \" [ENDL] declare integer vector ans [ENDL] declare integer sisa = 0 [ENDL] for i = 0 to size of a exclusive [ENDL] declare integer x = a [ i ] - ' 0 ' + b [ i ] - ' 0 ' + sisa [ENDL] let sisa be 0 [ENDL] add ( x % 10 ) to end of ans [ENDL] let sisa be x / 10 [ENDL] while sisa is greater than 0 [ENDL] add ( sisa % 10 ) to end of ans [ENDL] let sisa be sisa / 10 [ENDL] while size of ans is greater than 1 and back of ans is 0 , remove last element from ans [ENDL] for i = size of ans - 1 to 0 inclusive , decrementing i , print ans [ i ] [ENDL] print newline [ENDL] declare long longs n , i , j , ans = 0", "c++": "int main() { cin >> a >> b ; reverse ( a . begin ( ) , a . end ( ) ) ; while ( a . size ( ) < b . size ( ) ) a += \" 0 \" ; while ( b . size ( ) < a . size ( ) ) b += \" 0 \" ; vector < int > ans ; int sisa = 0 ; for ( int i = 0 ; i < a . size ( ) ; i ++ ) int x = a [ i ] - ' 0 ' + b [ i ] - ' 0 ' + sisa ; sisa = 0 ; ans . push_back ( x % 10 ) ; sisa = x / 10 ; while ( sisa > 0 ) } ans . push_back ( sisa % 10 ) ; sisa /= 10 ; while ( ans . size ( ) > 1 && ans . back ( ) == 0 ) ans . pop_back ( ) ; } for ( int i = ans . size ( ) - 1 ; i >= 0 ; i -- ) cout << ans [ i ] ; cout << endl ; long long n , i , j , ans = 0 ; return 0; }"}}
{"translation": {"en": "declare strings s1 , s2 [ENDL] read s1 , s2 [ENDL] reverse sort from beginning of s2 to end of s2 [ENDL] declare stringstreams geek initialized with s2 , geek1 initialized with s1 [ENDL] declare long long a [ENDL] read a using geek [ENDL] declare long long b [ENDL] read b using geek1 [ENDL] print a + b and newline [ENDL] declare new string variables a and b", "c++": "string s1 , s2 ; int main() { cin >> s1 >> s2 ; reverse ( s2 . begin ( ) , s2 . end ( ) ) ; stringstream geek ( s2 ) , geek1 ( s1 ) ; long long a ; geek >> a ; long long b ; geek1 >> b ; cout << a + b << endl ; string a , b ; }"}}
{"translation": {"en": "read a and b [ENDL] reverse b [ENDL] create new stringstream n1 from the string a [ENDL] create new stringstream n2 from the string b [ENDL] define new integers num1 and num2 [ENDL] read num1 from n1 [ENDL] read the new value for num2 from n2 [ENDL] declare long long integer res = num1 + num2 [ENDL] print res to the standard output [ENDL] let a , b be strings", "c++": "int main() { cin >> a >> b ; reverse ( b . begin ( ) , b . end ( ) ) ; stringstream n1 ( a ) ; stringstream n2 ( b ) ; int num1 , num2 ; n1 >> num1 ; n2 >> num2 ; long long int res = num1 + num2 ; cout << res << endl ; string a , b ; return 0; }"}}
{"translation": {"en": "read a , b [ENDL] reverse the values of b from beginning to end [ENDL] stringstream allows you to read n1 from a [ENDL] stringstream allows you to read n2 from b [ENDL] let num1 , num2 be integers [ENDL] n1 > > num1 [ENDL] n2 > > num2 [ENDL] the long integer value of res = num1 + num2 [ENDL] print res and newline [ENDL] create int a , b , c , set c to 0", "c++": "int main() { cin >> a >> b ; reverse ( b . begin ( ) , b . end ( ) ) ; stringstream n1 ( a ) ; stringstream n2 ( b ) ; int num1 , num2 ; n1 >> num1 ; n2 >> num2 ; long long int res = num1 + num2 ; cout << res << endl ; int a , b , c = 0 ; return 0; }"}}
{"translation": {"en": "read a and b [ENDL] while b different from 0 [ENDL] d = b mod 10 [ENDL] set c = c * 10 + d [ENDL] b = b / 10 [ENDL] print a + c [ENDL] a1 , a2 , k , a3 = integers with a3 = 0", "c++": "int main() { cin >> a >> b ; while ( b ) int d = b % 10 ; c = c * 10 + d ; b /= 10 ; cout << a + c << endl ; } int a1 , a2 , k , a3 = 0 ; return 0; }"}}
{"translation": {"en": "Read a1 , a2 [ENDL] while a2 is not equal to 0 [ENDL] sett k to a2 modulo 10 [ENDL] set a3 to a3 * 10 + k [ENDL] set a2 to a2 / 10 [ENDL] print a1 + a3 and a new line [ENDL] create int a , b , c", "c++": "int main() { cin >> a1 >> a2 ; while ( a2 != 0 ) k = a2 % 10 ; a3 = a3 * 10 + k ; a2 /= 10 ; cout << a1 + a3 << endl ; } int a , b , c ; return 0; }"}}
{"translation": {"en": "read a and b [ENDL] while b > 0 [ENDL] set d to b mod 10 [ENDL] set c = c * 10 + d [ENDL] assign b / 10 to b [ENDL] print a + c [ENDL] declare boolean flag", "c++": "cin >> a >> b ; int main() { while ( b > 0 ) int d = b % 10 ; c = c * 10 + d ; b /= 10 ; cout << a + c << endl ; } bool flag ; return 0; }"}}
{"translation": {"en": "declare integer arrays a size 71720 , dp size 811 by 811 , integers n , i , sumend , m , j , k , x , y , b , c [ENDL] declare long long integer sum [ENDL] declare boolean cmp with integers a , b as arguments , returning boolean [ENDL] return a is greater than b [ENDL] declare gcd with integers a , b as arguments , returning integer [ENDL] if not b , return a from function [ENDL] return result of run gcd ( b , a % b ) [ENDL] declare maxx with short integers a , b as arguments , returning integer [ENDL] if a is greater than b , return a [ENDL] return b from function [ENDL] declare gqt with integer n as argument , returning integer [ENDL] if not n or n , return 1 from function [ENDL] if n is 2 , return 0 from function [ENDL] for i = 3 to square root of n inclusive [ENDL] if n % i is 0 , return 1 [ENDL] read x , y [ENDL] while y is not 0 [ENDL] let sum be y % 10 [ENDL] let sumend be sumend * 10 [ENDL] increment sumend by sum [ENDL] let y be y / 10 [ENDL] increment sumend by x [ENDL] print sumend and newline [ENDL] declare int variables a and b", "c++": "int a [ 71720 ] , n , i , sumend , dp [ 811 ] [ 811 ] , m , j , k , x , y , b , c ; long long int sum ; bool cmp ( int a , int b ) return a > b ; int gcd ( int a , int b ) } if ( ! b ) return a ; return gcd ( b , a % b ) ; int maxx ( short int a , short int b ) } if ( a > b ) return a ; return b ; int gqt ( int n ) } if ( ! n || n ) return 1 ; if ( n == 2 ) return 0 ; for ( i = 3 ; i <= sqrt ( n ) ; i ++ ) if ( n % i == 0 ) return 1 ; cin >> x >> y ; return 0; } int main() { while ( y != 0 ) sum = y % 10 ; sumend *= 10 ; sumend += sum ; y /= 10 ; sumend += x ; } cout << sumend << endl ; int a , b ; return 0; return 0; }"}}
{"translation": {"en": "read input to a and b [ENDL] create integers vectors x and y [ENDL] while a is not 0 [ENDL] push a % 10 after the last element of x [ENDL] change the value of a to a divided by 10 [ENDL] while b [ENDL] push b % 10 to the end of y [ENDL] set b to b divided by 10 [ENDL] reverse y [ENDL] push 0 to x while size of x < size of y [ENDL] push 0 to y while size of y < size of x [ENDL] for i from 0 to length of y exclusive , increase x [ i ] by y [ i ] [ENDL] declare new long long ans = 0 [ENDL] in a loop for i from size of - 1 to 0 inclusive , counting down , change ans to 10 * ans + x [ i ] [ENDL] print ans to the standard output [ENDL] create integers a , b , i , j , and x", "c++": "int main() { cin >> a >> b ; vector < int > x , y ; while ( a ) x . push_back ( a % 10 ) ; a /= 10 ; while ( b ) } y . push_back ( b % 10 ) ; b /= 10 ; reverse ( y . begin ( ) , y . end ( ) ) ; } while ( x . size ( ) < y . size ( ) ) x . push_back ( 0 ) ; while ( y . size ( ) < x . size ( ) ) y . push_back ( 0 ) ; for ( int i = 0 ; i < y . size ( ) ; i ++ ) x [ i ] += y [ i ] ; long long ans = 0 ; for ( int i = x . size ( ) - 1 ; i >= 0 ; i -- ) ans = ( long long ) 10 * ans + ( long long ) x [ i ] ; cout << ans << endl ; int a , b , i , j , x ; return 0; }"}}
{"translation": {"en": "read a and b [ENDL] create integer sum = 0 [ENDL] while b is not 0 [ENDL] set sum to sum * 10 [ENDL] set sum to sum + b % 10 [ENDL] divide b by 10 [ENDL] set sum to sum + a [ENDL] display sum [ENDL] let s , ss be strings", "c++": "int main() { cin >> a >> b ; int sum = 0 ; while ( b != 0 ) sum = sum * 10 ; sum += b % 10 ; b /= 10 ; sum += a ; } cout << sum << endl ; string s , ss ; return 0; }"}}
{"translation": {"en": "read s , ss [ENDL] reverse the values of ss from beginning to end [ENDL] let x , y be integers [ENDL] read a stringstream into sss and read a stringstream into ssss [ENDL] shift sss to the right by s [ENDL] shift sss to the left by x [ENDL] shift ssss to the right by ss [ENDL] shift ssss to the left by y [ENDL] print x + y and newline [ENDL] create string b", "c++": "int main() { cin >> s >> ss ; reverse ( ss . begin ( ) , ss . end ( ) ) ; int x , y ; stringstream sss , ssss ; sss << s ; sss >> x ; ssss << ss ; ssss >> y ; cout << x + y << endl ; string b ; }"}}
{"translation": {"en": "create long long a , c , d [ENDL] read a and b [ENDL] c = 0 [ENDL] for I00 to length of b - 1 exclusive , set c = c * 10 + b [ i ] - 0 [ENDL] d = a + c [ENDL] print d [ENDL] n = integer", "c++": "int main() { long long a , c , d ; cin >> a >> b ; c = 0 ; for ( int i = b . length ( ) - 1 ; i >= 0 ; i -- ) { c = c * 10 + b [ i ] - ' 0 ' ; } d = a + c ; cout << d << endl ; int n ; }"}}
{"translation": {"en": "Read n [ENDL] print 25 and a new line [ENDL] n = int", "c++": "int main() { cin >> n ; cout << 25 << endl ; int n ; return 0; }"}}
{"translation": {"en": "read n [ENDL] print 25 [ENDL] let n be a long integer", "c++": "int main() { cin >> n ; cout << \" 25 \" << endl ; long long int n ; return 0; }"}}
{"translation": {"en": "read n [ENDL] print 25 and newline [ENDL] declare new int variables a and b", "c++": "int main() { cin >> n ; cout << 25 << endl ; int a , b ; return 0; }"}}
{"translation": {"en": "read variable a from the input [ENDL] print \" 25 \" [ENDL] n = long long", "c++": "int main() { cin >> a ; cout << \" 25 \" << endl ; long long n ; }"}}
{"translation": {"en": "read n [ENDL] print \" 25 \" [ENDL] let n , a , i be float values", "c++": "int main() { cin >> n ; cout << \" 25 \" << endl ; float n , a , i ; return 0; }"}}
{"translation": {"en": "let s be a integer [ENDL] read n [ENDL] s is equal to 25 [ENDL] if n is equal to 1 , s is equal to 5 [ENDL] print s and newline [ENDL] n = long long int", "c++": "int main() { int s ; cin >> n ; s = 25 ; if ( n == 1 ) { s = 5 ; } cout << s << endl ; long long int n ; return 0; }"}}
{"translation": {"en": "read n [ENDL] print 25 [ENDL] n = integer", "c++": "int main() { cin >> n ; cout << \" 25 \" << endl ; long long n ; return 0; }"}}
{"translation": {"en": "Read n [ENDL] print 25 and a new line [ENDL] n = long long", "c++": "int main() { cin >> n ; cout << \" 25 \" << endl ; long long n ; }"}}
{"translation": {"en": "loop while reading n [ENDL] if n is 1 [ENDL] print 5 [ENDL] else [ENDL] print 25 [ENDL] n = integer", "c++": "int main() { while ( cin >> n ) if ( n == 1 ) cout << 5 << endl ; else cout << 25 << endl ; int n ; } } }"}}
{"translation": {"en": "read n [ENDL] print 25 [ENDL] create long long int n", "c++": "int main() { cin >> n ; cout << \" 25 \" << endl ; long long n ; return 0; }"}}
{"translation": {"en": "read n [ENDL] if n is equal to 1 , print 5 [ENDL] if n equals 0 , print 1 [ENDL] if n is greater than or equal to 2 , print 25 [ENDL] long long function Q_pow with long long arguments a and b", "c++": "int main() { cin >> n ; if ( n == 1 ) { cout << 5 << endl ; } if ( n == 0 ) { cout << 1 << endl ; } if ( n >= 2 ) { cout << 25 << endl ; } long long Q_pow ( long long a , long long b ) }"}}
{"translation": {"en": "declare long long variable with name ans = 1 [ENDL] while b > 0 [ENDL] if b is odd [ENDL] change a to the remainder of a divided by 100 [ENDL] change ans to the ans modulo 100 [ENDL] set ans to ans multiplied by a [ENDL] change a to a modulo 100 [ENDL] multiply a by a [ENDL] divide b by 2 [ENDL] return ans % 100 [ENDL] create long long variable n [ENDL] read n and print the result of Q_pow ( 5 , n ) [ENDL] n = integer", "c++": "long long ans = 1 ; while ( b > 0 ) if ( b % 2 == 1 ) a %= 100 ; ans %= 100 ; ans *= a ; a %= 100 ; } a *= a ; b /= 2 ; return ans % 100 ; } long long n ; } int main() { while ( cin >> n ) { cout << Q_pow ( 5 , n ) << endl ; } long long n ; }"}}
{"translation": {"en": "Read n [ENDL] print 25 and a new line [ENDL] in , ans = integer with ans = 25", "c++": "int main() { cin >> n ; cout << 25 << endl ; int in , ans = 25 ; return 0; }"}}
{"translation": {"en": "Read in [ENDL] print ans and a new line [ENDL] n = integer", "c++": "int main() { cin >> in ; cout << ans << endl ; long long n ; return 0; }"}}
{"translation": {"en": "Read n [ENDL] print 25 and a new line [ENDL] create integer i , j", "c++": "int main() { cin >> n ; cout << 25 << endl ; int i , j ; return 0; }"}}
{"translation": {"en": "create long long n [ENDL] read n [ENDL] print 25 [ENDL] n = long long", "c++": "long long n ; int main() { cin >> n ; cout << 25 << endl ; long long n ; }"}}
{"translation": {"en": "while n can be read as a valid long long , print 25 [ENDL] print 25 and a new line", "c++": "int main() { while ( cin >> n ) { cout << \" 25 \" << endl ; } cout << 25 << endl ; }"}}
{"translation": {"en": "create unsigned long long variable n", "c++": "int main() { unsigned long long n ; return 0; }"}}
{"translation": {"en": "read user input to n [ENDL] print 25 to the standard output [ENDL] j = integer", "c++": "int main() { cin >> n ; cout << 25 << endl ; int j ; }"}}
{"translation": {"en": "Read j [ENDL] print 25 and a new line [ENDL] n , b = integers with b = 25", "c++": "int main() { cin >> j ; cout << \" 25 \" << endl ; int n , b = 25 ; return 0; }"}}
{"translation": {"en": "Read n [ENDL] print b and a new line [ENDL] n = int", "c++": "int main() { cin >> n ; cout << b << endl ; int n ; return 0; }"}}
{"translation": {"en": "read n [ENDL] print 25 [ENDL] print 25", "c++": "cin >> n ; int main() { cout << 25 << endl ; cout << 25 << endl ; return 0; }"}}
{"translation": {"en": "print 25 and a new line", "c++": "int main() { cout << 25 << endl ; }"}}
{"translation": {"en": "let n be a long integer", "c++": "int main() { long long n ; return 0; }"}}
{"translation": {"en": "while read n , print 25 and newline [ENDL] create long long int n", "c++": "int main() { while ( cin >> n ) { cout << \" 25 \" << endl ; } long long int n ; }"}}
{"translation": {"en": "read n [ENDL] print 25 [ENDL] n = integer", "c++": "int main() { cin >> n ; cout << 25 << endl ; long long int n ; return 0; }"}}
{"translation": {"en": "Read n [ENDL] print 25 and a new line [ENDL] in function Q_pow that returns a long long and takes arguments a , b = long long", "c++": "int main() { cin >> n ; cout << 25 << endl ; long long Q_pow ( long long a , long long b ) return 0; }"}}
{"translation": {"en": "ans = long long with value of 1 [ENDL] while b is greater than 0 [ENDL] if b mod 2 equals 1 [ENDL] set a to a mod 100 [ENDL] set ans to ans mod 100 [ENDL] set ans to ans * a [ENDL] set a to a mod 100 [ENDL] set a to a * a [ENDL] set b to b / 2 [ENDL] return ans mod 100 [ENDL] n = long long [ENDL] while read n do print the return of function Q_pow with arguments a = 5 and b = n [ENDL] n = integer", "c++": "long long ans = 1 ; while ( b > 0 ) if ( b % 2 == 1 ) a %= 100 ; ans %= 100 ; ans *= a ; a %= 100 ; } a *= a ; b /= 2 ; return ans % 100 ; } long long n ; } int main() { while ( cin >> n ) { cout << Q_pow ( 5 , n ) << endl ; } int n ; }"}}
{"translation": {"en": "Read n [ENDL] print 25 and a new line [ENDL] n = integer", "c++": "int main() { cin >> n ; cout << \" 25 \" << endl ; long long int n ; return 0; }"}}
{"translation": {"en": "Read n [ENDL] print 25 and a new line [ENDL] n = long long", "c++": "int main() { cin >> n ; cout << 25 << endl ; long long n ; return 0; }"}}
{"translation": {"en": "loop while reading n print 25 [ENDL] n = integer", "c++": "int main() { while ( cin >> n ) { cout << 25 << endl ; } long long int n ; return 0; }"}}
{"translation": {"en": "Read n [ENDL] print 25 and a new line [ENDL] n = integer", "c++": "int main() { cin >> n ; cout << \" 25 \" << endl ; int n ; }"}}
{"translation": {"en": "Read n [ENDL] print 25 and a new line [ENDL] n = unsigned long lon", "c++": "int main() { cin >> n ; cout << 25 << endl ; unsigned long long n ; return 0; }"}}
{"translation": {"en": "read n [ENDL] print 25 [ENDL] n = integer", "c++": "int main() { cin >> n ; cout << \" 25 \" << endl ; int n ; }"}}
{"translation": {"en": "read n [ENDL] print 25 [ENDL] mod = const long long with mod = 100", "c++": "cin >> n ; int main() { cout << \" 25 \" << endl ; const long long mod = 100 ; return 0; }"}}
{"translation": {"en": "in function re taking long long a , long long n and returning long long [ENDL] ans = long long with ans = 1 [ENDL] loop while n > 0 [ENDL] if n bitwise - and 1 set ans to ( ans * a ) modulo mod [ENDL] set a to ( a * a ) modulo mod [ENDL] set n to n bitshfit right by 1 [ENDL] return ans [ENDL] n = long long [ENDL] loop while reading n [ENDL] result = long long with result = re of 5 , n [ENDL] print result [ENDL] n = long long", "c++": "long long re ( long long a , long long n ) long long ans = 1 ; while ( n > 0 ) if ( n & 1 ) ans = ( ans * a ) % mod ; a = ( a * a ) % mod ; n >>= 1 ; return ans ; } long long n ; } int main() { while ( cin >> n ) long long result = re ( 5 , n ) ; cout << result << endl ; long long n ; } return 0; }"}}
{"translation": {"en": "while reading n print 25 [ENDL] create long long integer n", "c++": "int main() { while ( cin >> n ) { cout << 25 << endl ; } long long int n ; return 0; }"}}
{"translation": {"en": "read n [ENDL] print 25 [ENDL] MOD = const integer with MOD = 100", "c++": "int main() { cin >> n ; cout << \" 25 \" << endl ; const int MOD = 100 ; }"}}
{"translation": {"en": "n = long long [ENDL] read n [ENDL] v = integer with v = 5 [ENDL] ans = integer with ans = 1 [ENDL] for i = 0 to 62 with increment i , v = ( v * v ) modulo MOD [ENDL] if ( n bitwise and ( left shift i 1 place ) ) , ans = ( ans * v ) modulo MOD [ENDL] print ans [ENDL] create int n", "c++": "long long n ; int main() { cin >> n ; int v = 5 ; int ans = 1 ; for ( int i = 0 ; i <= 62 ; i ++ , v = ( v * v ) % MOD ) if ( n & ( 1 << i ) ) { ans = ( ans * v ) % MOD ; } cout << ans << endl ; } int n ; return 0; }"}}
{"translation": {"en": "read n [ENDL] print 25 [ENDL] create long long n", "c++": "int main() { cin >> n ; cout << 25 << endl ; long long n ; }"}}
{"translation": {"en": "read n and while n is truthy , print 25 [ENDL] declare integer n", "c++": "int main() { while ( cin >> n ) { cout << 25 << endl ; } int n ; return 0; }"}}
{"translation": {"en": "read n [ENDL] print \" 25 \" and newline [ENDL] i , j , n , c , ans = integers with c = 0 and ans = 25", "c++": "int main() { cin >> n ; cout << \" 25 \" << endl ; long long i , j , n , c = 0 , ans = 25 ; return 0; }"}}
{"translation": {"en": "Read n [ENDL] print ans and a new line [ENDL] n = long long", "c++": "int main() { cin >> n ; cout << ans << endl ; long long n ; return 0; }"}}
{"translation": {"en": "read n [ENDL] print \" 25 \" [ENDL] n = integer", "c++": "int main() { cin >> n ; cout << \" 25 \" << endl ; int n ; return 0; }"}}
{"translation": {"en": "read n [ENDL] print 25 [ENDL] n = long long", "c++": "int main() { cin >> n ; cout << \" 25 \" << endl ; long long n ; return 0; }"}}
{"translation": {"en": "read n [ENDL] print 25 [ENDL] n = int", "c++": "int main() { cin >> n ; cout << \" 25 \" << endl ; int n ; }"}}
{"translation": {"en": "read n [ENDL] print 25 [ENDL] n = integer", "c++": "int main() { cin >> n ; cout << 25 << endl ; int n ; return 0; }"}}
{"translation": {"en": "Read n [ENDL] print 25 and a new line [ENDL] n = unsigned long long", "c++": "int main() { cin >> n ; cout << 25 << endl ; unsigned long long n ; }"}}
{"translation": {"en": "read n [ENDL] print 25 [ENDL] n = integer", "c++": "int main() { cin >> n ; cout << \" 25 \" << endl ; int n ; }"}}
{"translation": {"en": "Read n [ENDL] print 25 and a new line [ENDL] create char n [ 20 ]", "c++": "int main() { cin >> n ; cout << \" 25 \" << endl ; char n [ 20 ] ; }"}}
{"translation": {"en": "while read n , print 25 [ENDL] n = integer", "c++": "int main() { while ( cin >> n ) { cout << 25 << endl ; } long long int n ; return 0; }"}}
{"translation": {"en": "Read n [ENDL] print 25 and a new line [ENDL] n = integer", "c++": "int main() { cin >> n ; cout << \" 25 \" << endl ; int n ; }"}}
{"translation": {"en": "Read n [ENDL] print 25 and a new line [ENDL] n = integer", "c++": "int main() { cin >> n ; cout << 25 << endl ; int n ; return 0; }"}}
{"translation": {"en": "read n [ENDL] print 25 [ENDL] create constant double eps = 1e - 6", "c++": "int main() { cin >> n ; cout << 25 << endl ; const double eps = 1e-6 ; return 0; }"}}
{"translation": {"en": "let const int MAXN = 8000 [ENDL] let double array a of size MAXN [ENDL] create int n [ENDL] read n [ENDL] let double x [ENDL] for i = 0 to 2 exclusive , read a [ i ] [ENDL] let double sum = 0 [ENDL] create int num = 0 [ENDL] for i = 0 to 2 exclusive [ENDL] set x to ( ( int ) a [ i ] + 1 ) * 1 . 0 - a [ i ] [ENDL] if ( fabs ( x - 1 ) < = eps [ENDL] increment num + + [ENDL] else [ENDL] set sum to sum + x [ENDL] create integer m = 0 [ENDL] if num is less than 0 , set m to n - num [ENDL] let double res = 0x3f3f3f3f * 1 . 0 [ENDL] loop until m < = min ( 2 * n - num , n ) , set res to min of res and fabs ( sum - m ) [ENDL] print fixed , setprecision ( 3 ) , and res [ENDL] create ifstream infile", "c++": "const int MAXN = 8000 ; double a [ MAXN ] ; int n ; int main() { cin >> n ; double x ; for ( int i = 0 ; i < 2 * n ; i ++ ) cin >> a [ i ] ; double sum = 0 ; int num = 0 ; for ( int i = 0 ; i < 2 * n ; i ++ ) x = ( ( int ) a [ i ] + 1 ) * 1.0 - a [ i ] ; if ( fabs ( x - 1 ) <= eps ) num ++ ; else sum += x ; int m = 0 ; } if ( num < n ) m = n - num ; double res = 0x3f3f3f3f * 1.0 ; for ( ; m <= min ( 2 * n - num , n ) ; m ++ ) res = min ( res , fabs ( sum - m ) ) ; cout << fixed << setprecision ( 3 ) << res << endl ; ifstream infile ; return 0; }"}}
{"translation": {"en": "create ofstream outfile [ENDL] create long double array a with size 2 * 2005 , create 2d long double array dp with size 2 * 2005 by 2005 [ENDL] create integer n [ENDL] declare OpenFile with no arguments , returning integer [ENDL] using infile open file \" 351A . INP \" in ios : : in mode [ENDL] using outfile open file \" 351A . OUT \" in ios : : out mode [ENDL] if stream infile failed [ENDL] print \" Khong mo duoc file input ! \" print newline [ENDL] return - 1 from function [ENDL] if stream outfile failed [ENDL] print \" khong mo duoc file output ! \" print newline [ENDL] return - 1 from function [ENDL] declare input with no arguments , returning void [ENDL] read n [ENDL] for i = 1 to 2 * n inclusive , read a [ i ] [ENDL] declare init with no arguments , returning void [ENDL] for i = 0 to 2 * n inclusive [ENDL] for j = 0 to n inclusive , set dp [ i ] [ j ] to INT_MAX [ENDL] set dp [ 0 ] [ 0 ] to 0 [ENDL] declare process with no arguments , returning void [ENDL] for i = 1 to 2 * n inclusive [ENDL] for j = 0 to minimum of i and n inclusive [ENDL] create long doubles val1 , val2 with val1 = INT_MAX , val2 = INT_MAX [ENDL] if j is greater than 0 , set val to dp [ i - 1 ] [ j - 1 ] + round up ( a [ i ] ) - a [ i ] [ENDL] if i - j is less than or equal to n , set val2 to dp [ i - 1 ] [ j ] + round down ( a [ i ] ) - a [ i ] [ENDL] set dp [ i ] [ j ] to val1 [ENDL] if absolute value of val2 is less than absolute value of val1 , set dp [ i ] [ j ] to val2 [ENDL] declare output with no arguments , returning void [ENDL] set stream format to fixed , set precision to 3 , print absolute value of dp [ 2 * n ] [ n ] print newline [ENDL] declare in with no arguments , returning void [ENDL] for i = 0 to 2 * n inclusive [ENDL] for j = 0 to n inclusive [ENDL] if dp [ i ] [ j ] is INT_MAX [ENDL] print 999999 print \" \" [ENDL] else if dp [ i ] [ j ] is greater than or equal to 0 [ENDL] print \" \" print dp [ i ] [ j ] print \" \" [ENDL] else [ENDL] print dp [ i ] [ j ] print \" \" [ENDL] print newline [ENDL] run input [ENDL] run init [ENDL] run process [ENDL] run output [ENDL] create ifstream infile", "c++": "ofstream outfile ; long double a [ 2 * 2005 ] , dp [ 2 * 2005 ] [ 2005 ] ; int n ; int OpenFile ( ) infile . open ( \" 351A.INP \" , ios :: in ) ; outfile . open ( \" 351A.OUT \" , ios :: out ) ; if ( infile . fail ( ) ) cout << \" Khong mo duoc file input ! \" << endl ; return - 1 ; if ( outfile . fail ( ) ) } cout << \" khong mo duoc file output! \" << endl ; return - 1 ; void input ( ) } } cin >> n ; for ( int i = 1 ; i <= 2 * n ; i ++ ) cin >> a [ i ] ; void init ( ) } for ( int i = 0 ; i <= 2 * n ; i ++ ) for ( int j = 0 ; j <= n ; j ++ ) dp [ i ] [ j ] = INT_MAX ; dp [ 0 ] [ 0 ] = 0 ; void process ( ) } for ( int i = 1 ; i <= 2 * n ; i ++ ) for ( int j = 0 ; j <= min ( i , n ) ; j ++ ) long double val1 = INT_MAX , val2 = INT_MAX ; if ( j > 0 ) val1 = dp [ i - 1 ] [ j - 1 ] + ceil ( a [ i ] ) - a [ i ] ; if ( ( i - j ) <= n ) val2 = dp [ i - 1 ] [ j ] + floor ( a [ i ] ) - a [ i ] ; dp [ i ] [ j ] = val1 ; if ( fabs ( val2 ) < fabs ( val1 ) ) dp [ i ] [ j ] = val2 ; void output ( ) } } } cout << fixed << setprecision ( 3 ) << fabs ( dp [ 2 * n ] [ n ] ) << endl ; void in ( ) } for ( int i = 0 ; i <= 2 * n ; i ++ ) for ( int j = 0 ; j <= n ; j ++ ) if ( dp [ i ] [ j ] == INT_MAX ) cout << 999999 << \"   \" ; else if ( dp [ i ] [ j ] >= 0 ) cout << \"   \" << dp [ i ] [ j ] << \"   \" ; else cout << dp [ i ] [ j ] << \"   \" ; cout << endl ; } input ( ) ; } } int main() { init ( ) ; process ( ) ; output ( ) ; ifstream infile ; }"}}
{"translation": {"en": "create ofstream outfile [ENDL] create long double array a with size 2 * 2005 , create 2d long double array dp with size 2 * 2005 by 2005 [ENDL] create integer n [ENDL] declare OpenFile with no arguments , returning integer [ENDL] using infile open \" input . txt \" using ios : : in mode [ENDL] using outfile open \" output . txt \" using ios : : out mode [ENDL] if infile failed [ENDL] print \" Khong mo duoc file input ! \" print newline [ENDL] return - 1 from function [ENDL] if outfile failed [ENDL] print \" khong mo duoc file output ! \" print newline [ENDL] return - 1 from function [ENDL] declare input with no arguments , returning void [ENDL] read n [ENDL] for i = 1 to 2 * n inclusive , read a [ i ] [ENDL] declare init with no arguments , returning void [ENDL] for i = 0 to 2 * n inclusive [ENDL] for j = 0 to n inclusive , set dp [ i ] [ j ] to INT_MAX [ENDL] set dp [ 0 ] [ 0 ] to 0 [ENDL] declare process with no arguments , returning void [ENDL] for i = 1 to 2 * n inclusive [ENDL] for j = 0 to minimum of i and n inclusive [ENDL] create long doubles val1 , val2 with val1 = INT_MAX , val2 = INT_MAX [ENDL] if j is greater than 0 , set val1 to dp [ i - 1 ] [ j - 1 ] + round up ( a [ i ] ) - a [ i ] [ENDL] if ( i - j ) is less than or equal to n , set val2 to dp [ i - 1 ] [ j ] + round down ( a [ i ] ) - a [ i ] [ENDL] set dp [ i ] [ j ] to val1 [ENDL] if absolute value of val2 is less than absolute value of val1 , set dp [ i ] [ j ] to val2 [ENDL] declare output with no arguments , returning void [ENDL] set cout flag fixed , set cout precision to 3 , print absolute value of dp [ 2 * n ] [ n ] print newline [ENDL] declare in with no arguments , returning void [ENDL] for i = 0 to 2 * n inclusive [ENDL] for j = 0 to n inclusive [ENDL] if dp [ i ] [ j ] is INT_MAX [ENDL] print 999999 print \" \" [ENDL] else if dp [ i ] [ j ] is greater than or equal to 0 [ENDL] print \" \" print dp [ i ] [ j ] print \" \" [ENDL] else [ENDL] print dp [ i ] [ j ] print \" \" [ENDL] print newline [ENDL] run input [ENDL] run init [ENDL] run process [ENDL] run output [ENDL] in function fastMax taking two ints x and y and returning an int", "c++": "ofstream outfile ; long double a [ 2 * 2005 ] , dp [ 2 * 2005 ] [ 2005 ] ; int n ; int OpenFile ( ) infile . open ( \" input.txt \" , ios :: in ) ; outfile . open ( \" output.txt \" , ios :: out ) ; if ( infile . fail ( ) ) cout << \" Khong mo duoc file input ! \" << endl ; return - 1 ; if ( outfile . fail ( ) ) } cout << \" khong mo duoc file output! \" << endl ; return - 1 ; void input ( ) } } cin >> n ; for ( int i = 1 ; i <= 2 * n ; i ++ ) cin >> a [ i ] ; void init ( ) } for ( int i = 0 ; i <= 2 * n ; i ++ ) for ( int j = 0 ; j <= n ; j ++ ) dp [ i ] [ j ] = INT_MAX ; dp [ 0 ] [ 0 ] = 0 ; void process ( ) } for ( int i = 1 ; i <= 2 * n ; i ++ ) for ( int j = 0 ; j <= min ( i , n ) ; j ++ ) long double val1 = INT_MAX , val2 = INT_MAX ; if ( j > 0 ) val1 = dp [ i - 1 ] [ j - 1 ] + ceil ( a [ i ] ) - a [ i ] ; if ( ( i - j ) <= n ) val2 = dp [ i - 1 ] [ j ] + floor ( a [ i ] ) - a [ i ] ; dp [ i ] [ j ] = val1 ; if ( fabs ( val2 ) < fabs ( val1 ) ) dp [ i ] [ j ] = val2 ; void output ( ) } } } cout << fixed << setprecision ( 3 ) << fabs ( dp [ 2 * n ] [ n ] ) << endl ; void in ( ) } for ( int i = 0 ; i <= 2 * n ; i ++ ) for ( int j = 0 ; j <= n ; j ++ ) if ( dp [ i ] [ j ] == INT_MAX ) cout << 999999 << \"   \" ; else if ( dp [ i ] [ j ] >= 0 ) cout << \"   \" << dp [ i ] [ j ] << \"   \" ; else cout << dp [ i ] [ j ] << \"   \" ; cout << endl ; } input ( ) ; } } int main() { init ( ) ; process ( ) ; output ( ) ; int fastMax ( int x , int y ) }"}}
{"translation": {"en": "return ( ( ( y - x ) bitshift right by ( 32 - 1 ) ) bitwise - and ( x bitwise - xor y ) ) bitwise - xor y [ENDL] in function fastMin taking two ints x and y and returning an int [ENDL] return ( ( ( y - x ) bitshift right by ( 32 - 1 ) ) bitwise - and ( x bitwise - xor y ) ) bitwise - xor x [ENDL] MAX = const long long int with MAXN = 2001 [ENDL] a = long double array of size 2 * MAXN [ENDL] n = long long int [ENDL] dp = two dimensional long double array of sizes MAXN and MAXN [ENDL] visit = two dimensional bool array of sizes MAXN and MAXN [ENDL] in function recursion taking three long long ints i , ceils and floors and returning a double [ENDL] if i is greater than 2 * n then return 0 [ENDL] if visit [ ceils ] [ floors ] is true return dp [ ceils ] [ floors ] [ENDL] val1 = long double with val1 = INT_MAX [ENDL] val2 = long double with val2 = INT_MAX [ENDL] if ceils is less than n set val1 to ceil of a [ i ] - a [ i ] + recursion of i + 1 , ceils + 1 and floors [ENDL] if floors is less than n then set val2 to floor of a [ i ] - a [ i ] + recursion of i + 1 , ceils and floors + 1 [ENDL] ans = long double [ENDL] if fabs of val is less than fabs of val2 [ENDL] set ans to val1 [ENDL] else [ENDL] set ans to val2 [ENDL] set visit [ ceils ] [ floors ] to true [ENDL] set dp [ ceils ] [ floors ] to ans and return dp [ ceils ] [ floors ] [ENDL] in function solve [ENDL] read n [ENDL] for i = 1 to 2 * n inclusive read a [ i ] [ENDL] call fixed and setprectision of 3 on cout [ENDL] print fabs of recursion of 1 , 0 , 0 [ENDL] t = long long int [ENDL] set t to 1 [ENDL] call solve t times [ENDL] frac is a double function with double argument x", "c++": "return ( ( ( y - x ) >> ( 32 - 1 ) ) & ( x ^ y ) ) ^ y ; int fastMin ( int x , int y ) } return ( ( ( y - x ) >> ( 32 - 1 ) ) & ( x ^ y ) ) ^ x ; const long long int MAXN = 2001 ; } long double a [ 2 * MAXN ] ; long long int n ; long double dp [ MAXN ] [ MAXN ] ; bool visit [ MAXN ] [ MAXN ] ; double recursion ( long long int i , long long int ceils , long long int floors ) if ( i > 2 * n ) return 0 ; if ( visit [ ceils ] [ floors ] ) return dp [ ceils ] [ floors ] ; long double val1 = INT_MAX ; long double val2 = INT_MAX ; if ( ceils < n ) val1 = ceil ( a [ i ] ) - a [ i ] + recursion ( i + 1 , ceils + 1 , floors ) ; if ( floors < n ) val2 = floor ( a [ i ] ) - a [ i ] + recursion ( i + 1 , ceils , floors + 1 ) ; long double ans ; if ( fabs ( val1 ) < fabs ( val2 ) ) ans = val1 ; else ans = val2 ; visit [ ceils ] [ floors ] = true ; return dp [ ceils ] [ floors ] = ans ; void solve ( ) } cin >> n ; for ( int i = ( 1 ) ; i <= ( 2 * n ) ; ++ i ) cin >> a [ i ] ; cout << fixed << setprecision ( 3 ) ; cout << fabs ( recursion ( 1 , 0 , 0 ) ) << endl ; long long int t ; } int main() { t = 1 ; while ( t -- ) solve ( ) ; double frac ( double x ) }"}}
{"translation": {"en": "return x - ( x casted to long long ) [ENDL] create integer n [ENDL] read variable n from the input [ENDL] declare double variable diff with value 0 [ENDL] create new long long called c with value 0 [ENDL] a is a new vector of doubles [ENDL] loop i from 0 to 2 * n exclusive [ENDL] x is a new double [ENDL] read x from the user input [ENDL] push frac ( x ) to the end of a [ENDL] if a [ i ] = 0 , increment c [ENDL] increase diff by a [ i ] [ENDL] create new double ans = 1e9 [ENDL] for i from 0 to c inclusive [ENDL] if i is less than c - n , go to the start of the loop [ENDL] declare new double variable p = abs ( diff - ( n - i ) * 1 . 0 ) [ENDL] set ans to min of p and ans [ENDL] set decimal output precision to 3 and force it to usefixed floating - point notation [ENDL] print ans and ' \\ n ' to the output [ENDL] create ifstrean called infile", "c++": "return x - ( long long ) x ; int n ; } int main() { cin >> n ; double diff = 0 ; long long c = 0 ; vector < double > a ; for ( int i = 0 ; i < 2 * n ; i ++ ) double x ; cin >> x ; a . push_back ( frac ( x ) ) ; if ( a [ i ] == 0 ) c ++ ; diff += a [ i ] ; double ans = 1e9 ; } for ( int i = 0 ; i <= c ; i ++ ) if ( i < c - n ) { continue ; } double p = abs ( diff - ( n - i ) * 1.0 ) ; ans = min ( p , ans ) ; cout << setprecision ( 3 ) << fixed ; } cout << ans << ' \\n ' ; ifstream infile ; return 0; }"}}
{"translation": {"en": "create ofstream outfile [ENDL] declare an array of long doubles a with 2 * 2005 elements and 2d array dp with size 2 * 2005 by 2005 [ENDL] create new integer variable n [ENDL] OpenFile is a integer function [ENDL] open file called \" 351A . INP \" with parameter ios : : in , to ifstream [ENDL] open file called \" 351A . OUT \" with parameter ios : : out , to ofstream [ENDL] if infile . fail ( ) [ENDL] print \" Khong mo duoc file input ! \" [ENDL] return - 1 [ENDL] if outfile . fail ( ) [ENDL] print \" khong mo duoc file output ! \" [ENDL] return - 1 [ENDL] function input [ENDL] read n from the input [ENDL] start for loop from i = 1 to 2 * n inclusive , read user input to a [ i ] on each loop [ENDL] define function init [ENDL] in a for loop , change i from 0 to 2 * n inclusive incrementing i [ENDL] for loop , changing j from 0 to n inclusive and assigning INT_MAX to dp [ i ] [ j ] on each iteration [ENDL] change dp [ 0 ] [ 0 ] to 0 [ENDL] function process [ENDL] in a for loop , change i from 1 to 2 * n inclusive incrementing i [ENDL] for integer j = 0 to min of i and n inclusive [ENDL] create long double variables val1 with value INT_MAX and val2 = INT_MAX [ENDL] if j is greater than 0 , change val1 to dp [ i - 1 ] [ j - 1 ] + ceil ( a [ i ] ) - a [ i ] [ENDL] if ( i - j ) < = n , set val2 to dp [ i - 1 ] [ j ] + ( a [ i ] ) - a [ i ] ) rounded down [ENDL] assign val1 to dp [ i ] [ j ] [ENDL] if fabs ( val2 ) is less than fabs ( val1 ) , change dp [ i ] [ j ] to val2 [ENDL] void function output [ENDL] change output format to fixed , set decimal precision to 3 and print fabs ( dp [ 2 * n ] [ n ] ) [ENDL] in the function in [ENDL] start for loop from i = 0 to 2 * n inclusive incrementing i [ENDL] start for loop from j = 0 to n inclusive [ENDL] if dp [ i ] [ j ] is equal to INT_MAX [ENDL] print 999999 and \" \" to the standard output [ENDL] else if dp [ i ] [ j ] > = 0 [ENDL] print \" \" , dp [ i ] [ j ] and \" \" [ENDL] else [ENDL] print dp [ i ] [ j ] and \" \" to the standard output [ENDL] print new line [ENDL] call input ( ) [ENDL] call function init ( ) [ENDL] call method process ( ) [ENDL] call output ( ) [ENDL] declare int n", "c++": "ofstream outfile ; long double a [ 2 * 2005 ] , dp [ 2 * 2005 ] [ 2005 ] ; int n ; int OpenFile ( ) infile . open ( \" 351A.INP \" , ios :: in ) ; outfile . open ( \" 351A.OUT \" , ios :: out ) ; if ( infile . fail ( ) ) cout << \" Khong mo duoc file input ! \" << endl ; return - 1 ; if ( outfile . fail ( ) ) } cout << \" khong mo duoc file output! \" << endl ; return - 1 ; void input ( ) } } cin >> n ; for ( int i = 1 ; i <= 2 * n ; i ++ ) cin >> a [ i ] ; void init ( ) } for ( int i = 0 ; i <= 2 * n ; i ++ ) for ( int j = 0 ; j <= n ; j ++ ) dp [ i ] [ j ] = INT_MAX ; dp [ 0 ] [ 0 ] = 0 ; void process ( ) } for ( int i = 1 ; i <= 2 * n ; i ++ ) for ( int j = 0 ; j <= min ( i , n ) ; j ++ ) long double val1 = INT_MAX , val2 = INT_MAX ; if ( j > 0 ) val1 = dp [ i - 1 ] [ j - 1 ] + ceil ( a [ i ] ) - a [ i ] ; if ( ( i - j ) <= n ) val2 = dp [ i - 1 ] [ j ] + floor ( a [ i ] ) - a [ i ] ; dp [ i ] [ j ] = val1 ; if ( fabs ( val2 ) < fabs ( val1 ) ) dp [ i ] [ j ] = val2 ; void output ( ) } } } cout << fixed << setprecision ( 3 ) << fabs ( dp [ 2 * n ] [ n ] ) << endl ; void in ( ) } for ( int i = 0 ; i <= 2 * n ; i ++ ) for ( int j = 0 ; j <= n ; j ++ ) if ( dp [ i ] [ j ] == INT_MAX ) cout << 999999 << \"   \" ; else if ( dp [ i ] [ j ] >= 0 ) cout << \"   \" << dp [ i ] [ j ] << \"   \" ; else cout << dp [ i ] [ j ] << \"   \" ; cout << endl ; } input ( ) ; } } int main() { init ( ) ; process ( ) ; output ( ) ; int n ; }"}}
{"translation": {"en": "read n [ENDL] set n to 2 * n [ENDL] declare an array of long doubles a with 100005 elements [ENDL] declare integer i [ENDL] declare vectors of long doubles v , v1 and v2 [ENDL] for i = 0 to n exclusive [ENDL] read a [ i ] [ENDL] if a [ i ] = ( int ) a [ i ] [ENDL] push a [ i ] into v [ENDL] else [ENDL] push a [ i ] into v1 [ENDL] for i from 0 to length of v1 exclusive [ENDL] declare long double variable g = v1 [ i ] rounded up - v1 [ i ] [ENDL] push g into v2 [ENDL] sort v2 [ENDL] declare integer h = n / 2 [ENDL] create int j [ENDL] declare int variable hh = length of v2 [ENDL] declare long double variables ans1 and ans = 0 and ans2 = 1e9 [ENDL] for i from - 1 to hh exclusive [ENDL] if i is equal to - 1 [ENDL] else [ENDL] increase ans by v2 [ i ] [ENDL] assign 0 to ans1 [ENDL] if ( ( i + 1 ) + length of v ) > = h and ( n - ( i + 1 ) ) > = h [ENDL] for j from i + 1 to hh exclusive , subtract 1 - v2 [ j ] from ans1 [ENDL] set ans2 to min of ans2 and abs ( ans + ans1 ) [ENDL] set output fixed flag , set decimal precision to 3 and print ans2 [ENDL] create long double array a with size 2 * 2005 , create 2d long double array dp with size 2 * 2005 by 2005", "c++": "int main() { cin >> n ; n = 2 * n ; long double a [ 100005 ] ; int i ; vector < long double > v1 , v , v2 ; for ( i = 0 ; i < n ; i ++ ) cin >> a [ i ] ; if ( a [ i ] == ( int ) a [ i ] ) v . push_back ( a [ i ] ) ; else v1 . push_back ( a [ i ] ) ; for ( i = 0 ; i < v1 . size ( ) ; i ++ ) } } long double g = ceil ( v1 [ i ] ) - v1 [ i ] ; v2 . push_back ( g ) ; sort ( v2 . begin ( ) , v2 . end ( ) ) ; } int h = n / 2 ; int j ; int hh = v2 . size ( ) ; long double ans1 = 0 , ans = 0 , ans2 = 1e9 ; for ( i = - 1 ; i < hh ; i ++ ) if ( i == - 1 ) else ans += v2 [ i ] ; ans1 = 0 ; } if ( ( ( i + 1 ) + v . size ( ) ) >= h && ( n - ( i + 1 ) ) >= h ) for ( j = i + 1 ; j < hh ; j ++ ) { ans1 -= 1 - v2 [ j ] ; } ans2 = min ( ans2 , abs ( ans + ans1 ) ) ; cout << fixed << setprecision ( 3 ) << ans2 << endl ; } } long double a [ 2 * 2005 ] , dp [ 2 * 2005 ] [ 2005 ] ; }"}}
{"translation": {"en": "create integer n [ENDL] declare input with no arguments , returning integer [ENDL] read n [ENDL] for i = 1 to 2 * n inclusive , read a [ i ] [ENDL] declare init with no arguments , returning integer [ENDL] for i = 0 to 2 * n inclusive [ENDL] for j = 0 to n inclusive , set dp [ i ] [ j ] to INT_MAX [ENDL] set dp [ 0 ] [ 0 ] to 0 [ENDL] declare process with no arguments , returning integer [ENDL] for i = 1 to 2 * n inclusive [ENDL] for cei = 0 to minimum of i and n inclusive [ENDL] create long doubles val1 , val2 with val1 = INT_MAX , val2 = INT_MAX [ENDL] if cei is greater than 0 , set val1 to dp [ i - 1 ] [ cei - 1 ] + round up ( a [ i ] ) - a [ i ] [ENDL] if ( i - cei ) is less than or equal to n , set val2 to dp [ i - 1 ] [ cei ] + round down ( a [ i ] ) - a [ i ] [ENDL] set dp [ i ] [ cei ] to val1 [ENDL] if absolute value of val2 is less than absolute value of val1 , set dp [ i ] [ cei ] to val2 [ENDL] declare output with no arguments , returning integer [ENDL] print fixed , set cout precision to 3 , print absolute value of dp [ 2 * n ] [ n ] , print newline [ENDL] declare in with no arguments , returning void [ENDL] for i = 0 to 2 * n inclusive [ENDL] for j = 0 to n inclusive [ENDL] if dp [ i ] [ j ] is INT_MAX [ENDL] print 999999 print \" \" [ENDL] else if dp [ i ] [ j ] is greater than or equal to 0 [ENDL] print \" \" print dp [ i ] [ j ] print \" \" [ENDL] else [ENDL] print dp [ i ] [ j ] print \" \" [ENDL] print newline [ENDL] run input [ENDL] run init [ENDL] run process [ENDL] run output [ENDL] n = integer", "c++": "int n ; int input ( ) cin >> n ; for ( int i = 1 ; i <= 2 * n ; i ++ ) cin >> a [ i ] ; int init ( ) return 0; } for ( int i = 0 ; i <= 2 * n ; i ++ ) for ( int j = 0 ; j <= n ; j ++ ) dp [ i ] [ j ] = INT_MAX ; dp [ 0 ] [ 0 ] = 0 ; int process ( ) return 0; } for ( int i = 1 ; i <= 2 * n ; i ++ ) for ( int cei = 0 ; cei <= min ( i , n ) ; cei ++ ) long double val1 = INT_MAX , val2 = INT_MAX ; if ( cei > 0 ) val1 = dp [ i - 1 ] [ cei - 1 ] + ceil ( a [ i ] ) - a [ i ] ; if ( ( i - cei ) <= n ) val2 = dp [ i - 1 ] [ cei ] + floor ( a [ i ] ) - a [ i ] ; dp [ i ] [ cei ] = val1 ; if ( fabs ( val2 ) < fabs ( val1 ) ) dp [ i ] [ cei ] = val2 ; int output ( ) } } return 0; } cout << fixed << setprecision ( 3 ) << fabs ( dp [ 2 * n ] [ n ] ) << endl ; void in ( ) return 0; } for ( int i = 0 ; i <= 2 * n ; i ++ ) for ( int j = 0 ; j <= n ; j ++ ) if ( dp [ i ] [ j ] == INT_MAX ) cout << 999999 << \"   \" ; else if ( dp [ i ] [ j ] >= 0 ) cout << \"   \" << dp [ i ] [ j ] << \"   \" ; else cout << dp [ i ] [ j ] << \"   \" ; cout << endl ; } input ( ) ; } } int main() { init ( ) ; process ( ) ; output ( ) ; int n ; }"}}
{"translation": {"en": "Read n [ENDL] if n is 1 [ENDL] print 1 and a new line [ENDL] else do the following [ENDL] if n is odd , then decrement n [ENDL] print n / 2 + 1 and a new line [ENDL] Create global constant integers n = 100010 and INF = 1000000007", "c++": "int main() { cin >> n ; if ( n == 1 ) cout << 1 << endl ; else if ( n % 2 != 0 ) n -- ; cout << n / 2 + 1 << endl ; const int N = 1e5 + 10 , INF = 1e9 + 7 ; } return 0; }"}}
{"translation": {"en": "Create n as a global integer [ENDL] Set n to the input [ENDL] Output one plus n divided by 2 [ENDL] set const int maxa to 1000000", "c++": "int n ; cin >> n ; int main() { cout << ( n / 2 ) + 1 << ' \\n ' ; const int maxa = 1000000 ; return 0; }"}}
{"translation": {"en": "integers = n [ENDL] read n [ENDL] if n is 1 then do the following [ENDL] output 1 [ENDL] else [ENDL] output ( n / 2 ) + 1 [ENDL] create integer n", "c++": "int n ; int main() { cin >> n ; if ( n == 1 ) cout << \" 1 \" << endl ; else cout << int ( n / 2 ) + 1 << endl ; int n ; } return 0; }"}}
{"translation": {"en": "while read n is true , print n / 2 + 1 print newline [ENDL] declare int n", "c++": "int main() { while ( cin >> n ) { cout << ( n ) / 2 + 1 << endl ; } int n ; return 0; }"}}
{"translation": {"en": "read from the input to n [ENDL] print n / 2 + 1 and ' \\ n ' [ENDL] create const long long int MOD = 1000000007", "c++": "int main() { cin >> n ; cout << n / 2 + 1 << ' \\n ' ; const long long int MOD = 1000000007 ; return 0; }"}}
{"translation": {"en": "create long long ints N , M , K , H , W , L and R [ENDL] read from the input to N [ENDL] print N / 2 + 1 [ENDL] n = integer", "c++": "long long int N , M , K , H , W , L , R ; cin >> N ; int main() { cout << N / 2 + 1 << endl ; int n ; return 0; }"}}
{"translation": {"en": "Read n [ENDL] print n / 2 + 1 and a new line [ENDL] n = integer", "c++": "int main() { cin >> n ; cout << n / 2 + 1 << endl ; int n ; }"}}
{"translation": {"en": "Read n [ENDL] print n / 2 + 1 and a new line [ENDL] a = integer", "c++": "int main() { cin >> n ; cout << n / 2 + 1 << endl ; int a ; return 0; }"}}
{"translation": {"en": "Read a [ENDL] print a / 2 + 1 and a new line [ENDL] num = integer", "c++": "cin >> a ; int main() { cout << a / 2 + 1 << endl ; long long int num ; return 0; }"}}
{"translation": {"en": "Read num [ENDL] print ( num / 2 ) + 1 and a new line [ENDL] create integer n", "c++": "int main() { cin >> num ; cout << ( num / 2 ) + 1 << endl ; int n ; return 0; }"}}
{"translation": {"en": "read input to n [ENDL] print n / 2 + 1 [ENDL] create int n", "c++": "int main() { cin >> n ; cout << n / 2 + 1 << endl ; int n ; return 0; }"}}
{"translation": {"en": "read n [ENDL] print n / 2 + 1 [ENDL] pi = const double with pi = 2 * acos of 0 . 0", "c++": "int main() { cin >> n ; cout << n / 2 + 1 << endl ; const double pi = 2 * acos ( 0.0 ) ; return 0; }"}}
{"translation": {"en": "maxn = const int with maxn = 2e2 + 10 [ENDL] n = int [ENDL] read n [ENDL] set n to n / 2 [ENDL] print n + 1 [ENDL] create unsigned long integer i , j , n , sum with sum = 0", "c++": "const int maxn = 2e2 + 10 ; int n ; int main() { cin >> n ; n /= 2 ; cout << n + 1 << endl ; unsigned long int i , j , n , sum = 0 ; return 0; }"}}
{"translation": {"en": "read n [ENDL] set sum to n / 2 + 1 [ENDL] print sum print newline [ENDL] integers = n", "c++": "int main() { cin >> n ; sum = n / 2 + 1 ; cout << sum << endl ; int n ; }"}}
{"translation": {"en": "read n [ENDL] output n / 2 + 1 [ENDL] create int n", "c++": "int main() { cin >> n ; cout << n / 2 + 1 << endl ; int n ; return 0; }"}}
{"translation": {"en": "read n [ENDL] print n divided by 2 + 1 [ENDL] n , k , s , p = integers", "c++": "int main() { cin >> n ; cout << n / 2 + 1 << endl ; long long n , k , s , p ; return 0; }"}}
{"translation": {"en": "read n [ENDL] print n / 2 + 1 [ENDL] n = integer", "c++": "cin >> n ; int main() { cout << n / 2 + 1 << ' \\n ' ; int n ; }"}}
{"translation": {"en": "Read n [ENDL] print ( n / 2 ) + 1 and a new line [ENDL] create integers n and m", "c++": "int main() { cin >> n ; cout << ( n / 2 ) + 1 << endl ; int n , m ; return 0; }"}}
{"translation": {"en": "read n [ENDL] set m to n divided by 2 [ENDL] print m + 1 [ENDL] integers = n", "c++": "int main() { cin >> n ; m = n / 2 ; cout << m + 1 << endl ; int n ; return 0; }"}}
{"translation": {"en": "read n [ENDL] output n / 2 + 1 [ENDL] integers = n", "c++": "cin >> n ; int main() { cout << n / 2 + 1 << endl ; int n ; return 0; }"}}
{"translation": {"en": "read n [ENDL] if n is 1 then do the following [ENDL] output 1 [ENDL] else [ENDL] output n / 2 + 1 [ENDL] let n be a integer", "c++": "int main() { cin >> n ; if ( n == 1 ) cout << 1 << endl ; else cout << n / 2 + 1 << endl ; int n ; return 0; }"}}
{"translation": {"en": "read n [ENDL] print n / 2 + 1 and newline [ENDL] n , ans = long long with ans = 2", "c++": "int main() { cin >> n ; cout << n / 2 + 1 << endl ; long long n , ans = 2 ; return 0; }"}}
{"translation": {"en": "read n [ENDL] if n is 1 [ENDL] print 1 [ENDL] if n is 2 or n is 3 [ENDL] print 2 [ENDL] print n / 2 + 1 [ENDL] declare constant double PI to 2 times the arccosine of 0", "c++": "int main() { cin >> n ; if ( n == 1 ) cout << 1 << endl ; if ( n == 2 || n == 3 ) return 0; } cout << 2 << endl ; cout << n / 2 + 1 << endl ; return 0; } const double PI = 2.0 * acos ( 0.0 ) ; return 0; }"}}
{"translation": {"en": "declare constant int MOD to be 1e9 + 7 [ENDL] declare constant int oo to be 2 * MOD plus 1e3 [ENDL] declare function long long gcd of long long a , long long b [ENDL] if not b , return a , and if b , return gcd of b and a mod b [ENDL] declare int n [ENDL] input n [ENDL] output n over 1 plus 1 and a newline [ENDL] PI = const double with PI = acos of - 1 . 0", "c++": "const int MOD = 1e9 + 7 ; const int oo = 2 * MOD + 1e3 ; long long gcd ( long long a , long long b ) return ! b ? a : gcd ( b , a % b ) ; int n ; } int main() { cin >> n ; cout << n / 2 + 1 << ' \\n ' ; const double PI = acos ( - 1.0 ) ; return 0; }"}}
{"translation": {"en": "eps = const double with eps = 1e - 6 [ENDL] INF = const int with INF = 0x3f3f3f3f [ENDL] maxn = const int with maxn = 100 [ENDL] T , n , m = int [ENDL] loop while reading n print n / 2 + 1 [ENDL] integers = long int n", "c++": "const double eps = 1e-6 ; const int INF = 0x3f3f3f3f ; const int maxn = 100 ; int T , n , m ; while ( cin >> n ) { cout << n / 2 + 1 << endl ; } int main() { long long int n ; return 0; }"}}
{"translation": {"en": "read n [ENDL] output ( n / 2 + 1 ) [ENDL] n = integer", "c++": "int main() { cin >> n ; cout << ( n / 2 + 1 ) << endl ; int n ; return 0; }"}}
{"translation": {"en": "Read n [ENDL] print n / 2 + 1 and a new line [ENDL] set inf = 205", "c++": "int main() { cin >> n ; cout << n / 2 + 1 << endl ; const int inf = 205 ; return 0; }"}}
{"translation": {"en": "let a [ inf ] be int array [ENDL] create int array b [ inf ] [ENDL] create int m , n , k , t , x [ENDL] while read n , print n / 2 + 1 [ENDL] set long long n , m , a , b , x , ff to 2e7 + 1 , l , r , cnt , ans", "c++": "int a [ inf ] ; int b [ inf ] ; int m , n , k , t , x ; int main() { while ( cin >> n ) { cout << n / 2 + 1 << endl ; } long long n , m , a , b , x , ff = 2e7 + 1 , l , r , cnt , ans ; return 0; }"}}
{"translation": {"en": "make a vector using long long integer out of v , f , and res [ENDL] s1 , s2 = string [ENDL] used array of 1001 = long long integers [ENDL] read n [ENDL] output n / 2 + 1 [ENDL] n , k = integers", "c++": "vector < long long > v , f , res ; string s1 , s2 ; long long used [ 1001 ] ; cin >> n ; int main() { cout << n / 2 + 1 << endl ; int n , k ; }"}}
{"translation": {"en": "Read n [ENDL] set k to n / 2 [ENDL] increment k [ENDL] print k and a new line [ENDL] n = long long integers", "c++": "int main() { cin >> n ; k = n / 2 ; k ++ ; cout << k << endl ; long long n ; return 0; }"}}
{"translation": {"en": "read n [ENDL] output n / 2 + 1 [ENDL] integers = a", "c++": "cin >> n ; int main() { cout << n / 2 + 1 << endl ; int a ; }"}}
{"translation": {"en": "while input of a output ( a / 2 ) + 1 [ENDL] n = integer", "c++": "int main() { while ( cin >> a ) { cout << ( a / 2 ) + 1 << endl ; } long long n ; return 0; }"}}
{"translation": {"en": "Read n [ENDL] print n / 2 + 1 and a new line [ENDL] n , b = integers", "c++": "int main() { cin >> n ; cout << n / 2 + 1 << endl ; int n , b ; }"}}
{"translation": {"en": "Read n [ENDL] set b to n / 2 + 1 [ENDL] print b and a new line [ENDL] n = integer", "c++": "int main() { cin >> n ; b = n / 2 + 1 ; cout << b << endl ; int n ; return 0; }"}}
{"translation": {"en": "Read n [ENDL] print n / 2 + 1 and a new line [ENDL] n , ans = integers", "c++": "cin >> n ; int main() { cout << n / 2 + 1 << endl ; long long n , ans ; return 0; }"}}
{"translation": {"en": "while reading values n [ENDL] set ans to n / 2 + 1 [ENDL] print ans and a new line [ENDL] create long long n", "c++": "int main() { while ( cin >> n ) ans = n / 2 + 1 ; cout << ans << endl ; long long n ; } }"}}
{"translation": {"en": "read n [ENDL] print n / 2 + 1 print \" \\ n \" [ENDL] integers = n", "c++": "int main() { cin >> n ; cout << n / 2 + 1 << \" \\n \" ; int n ; }"}}
{"translation": {"en": "read n [ENDL] output n / 2 + 1 [ENDL] n = integer", "c++": "int main() { cin >> n ; cout << n / 2 + 1 << endl ; int n ; return 0; }"}}
{"translation": {"en": "Read n [ENDL] print ( n / 2 ) + 1 and a new line [ENDL] = long long integers", "c++": "int main() { cin >> n ; cout << ( n / 2 ) + 1 << endl ; long long n ; }"}}
{"translation": {"en": "read n [ENDL] integers = m , ans [ENDL] set m to n / 2 [ENDL] set ans to m + 1 [ENDL] output ans [ENDL] create integer n", "c++": "while ( cin >> n ) int main() { int m , ans ; m = n / 2 ; ans = m + 1 ; cout << ans << endl ; int n ; } return 0; }"}}
{"translation": {"en": "read n and print n / 2 + 1 in a loop [ENDL] N = integer", "c++": "int main() { while ( cin >> n ) { cout << n / 2 + 1 << endl ; } int N ; return 0; }"}}
{"translation": {"en": "Read N [ENDL] print N / 2 + 1 and a new line [ENDL] declare integer n", "c++": "cin >> N ; int main() { cout << N / 2 + 1 << endl ; int n ; return 0; }"}}
{"translation": {"en": "read from the input to n [ENDL] print ( n + 2 ) / 2 [ENDL] num = integer", "c++": "int main() { cin >> n ; cout << ( n + 2 ) / 2 << endl ; int num ; }"}}
{"translation": {"en": "Read num [ENDL] print num / 2 + 1 and a new line [ENDL] declare integers n and ans with ans = 0", "c++": "int main() { cin >> num ; cout << num / 2 + 1 << endl ; int n , ans = 0 ; return 0; }"}}
{"translation": {"en": "read n and keep looping , printing n / 2 + 1 on each iteration [ENDL] create integer n", "c++": "int main() { while ( cin >> n ) { cout << n / 2 + 1 << endl ; } int n ; }"}}
{"translation": {"en": "read n [ENDL] print n / 2 + 1 print ' \\ n ' [ENDL] declare 2d int array dp with size 5000 by 5", "c++": "int main() { cin >> n ; cout << n / 2 + 1 << ' \\n ' ; int dp [ 5000 ] [ 5 ] ; }"}}
{"translation": {"en": "declare integer arrays s and c with size 5000 [ENDL] create int n [ENDL] read input to n [ENDL] print n / 2 + 1 [ENDL] declare long longs n and ans where ans = 2", "c++": "int s [ 5000 ] , c [ 5000 ] ; int n ; int main() { cin >> n ; cout << n / 2 + 1 << endl ; long long n , ans = 2 ; return 0; }"}}
{"translation": {"en": "read from the input to n [ENDL] if n = 1 [ENDL] print 1 [ENDL] if n is 2 or n is 3 [ENDL] print 2 [ENDL] print n / 2 + 1 [ENDL] declare an uninitialized integer n and initialize integer count to zero", "c++": "int main() { cin >> n ; if ( n == 1 ) cout << 1 << endl ; if ( n == 2 || n == 3 ) return 0; } cout << 2 << endl ; cout << n / 2 + 1 << endl ; return 0; } int n , count = 0 ; return 0; }"}}
{"translation": {"en": "read n [ENDL] print the value of n with one added after being divided by two and a newline [ENDL] n = integer", "c++": "int main() { cin >> n ; cout << n / 2 + 1 << endl ; int n ; return 0; }"}}
{"translation": {"en": "Read n [ENDL] print n / 2 + 1 and a new line [ENDL] l , r , x , y , k = long long", "c++": "int main() { cin >> n ; cout << n / 2 + 1 << endl ; long long l , r , x , y , k ; return 0; }"}}
{"translation": {"en": "read l , r , x , y , k [ENDL] for long long i = x to y inclusive [ENDL] if i * k > = l and di * k < = r [ENDL] print YES [ENDL] print NO [ENDL] declare long long variables z , x , c , v and b", "c++": "int main() { cin >> l >> r >> x >> y >> k ; for ( long long i = x ; i <= y ; i ++ ) if ( i * k >= l && i * k <= r ) cout << \" YES \" << endl ; cout << \" NO \" << endl ; return 0; } } long long z , x , c , v , b ; return 0; }"}}
{"translation": {"en": "read standard input to z , x , c , v and b [ENDL] create new boolean cek with value false [ENDL] in a for loop , change q from c to v inclusive [ENDL] declare long long variable asd = q * b [ENDL] if asd > = z and asd < = x , assign the new value = true to cek [ENDL] if cek = true [ENDL] print \" YES \" [ENDL] else [ENDL] print \" NO \" to the standard output [ENDL] l , r , x , y , k , flag = long long integers with flag = 0", "c++": "int main() { cin >> z >> x >> c >> v >> b ; bool cek = false ; for ( long long q = c ; q <= v ; q ++ ) long long asd = q * b ; if ( asd >= z && asd <= x ) cek = true ; if ( cek == true ) } cout << \" YES \" << endl ; else cout << \" NO \" << endl ; long long int l , r , x , y , k , flag = 0 ; }"}}
{"translation": {"en": "read l , r , x , y , k [ENDL] for j = x to y [ENDL] if ( ( k * j ) > = l and ( k * j ) < = r ) , flag = 1 [ENDL] if ( flag ) [ENDL] print YES [ENDL] else [ENDL] print NO [ENDL] create long long l , r , x , y , k , i , j , c , c = 0", "c++": "int main() { cin >> l >> r >> x >> y >> k ; for ( int j = x ; j <= y ; j ++ ) if ( ( k * j ) >= l && ( k * j ) <= r ) { flag = 1 ; } if ( flag ) } cout << \" YES\\n \" ; else cout << \" NO\\n \" ; long long l , r , x , y , k , i , j , c = 0 ; } return 0; }"}}
{"translation": {"en": "read l , r , x , y , k [ENDL] for j = x to y inclusive [ENDL] if k * j < = r and k * j > = l [ENDL] print YES [ENDL] c = 1 [ENDL] break [ENDL] if c = 0 , print NO [ENDL] let l , r , x , y , and k long long ints", "c++": "int main() { cin >> l >> r >> x >> y >> k ; for ( j = x ; j <= y ; j ++ ) if ( k * j <= r && k * j >= l ) cout << \" YES \" << endl ; c = 1 ; break ; if ( c == 0 ) { cout << \" NO \" << endl ; } } } long long int l , r , x , y , k ; return 0; }"}}
{"translation": {"en": "let exist a bool with value false [ENDL] read l , r , x , y , and k [ENDL] for i from x to y [ENDL] if i * k at most r and i * k at least l [ENDL] set exist to true [ENDL] leave loop [ENDL] if exist [ENDL] print YES [ENDL] otherwise [ENDL] print NO [ENDL] let l , r , x , y , k be long integers", "c++": "int main() { bool exist = false ; cin >> l >> r >> x >> y >> k ; for ( int i = x ; i <= y ; i ++ ) if ( ( i * k ) <= r and ( i * k ) >= l ) exist = true ; break ; if ( exist ) } } cout << \" YES\\n \" ; else cout << \" NO\\n \" ; long long l , r , x , y , k ; return 0; }"}}
{"translation": {"en": "read l , r , x , y , k [ENDL] let i be a long integer [ENDL] let ok be an integer which equals 0 [ENDL] for i = x to y inclusive [ENDL] if l < = i * k and r > = i * k , ok = 1 [ENDL] if ok is true [ENDL] print YES and newline [ENDL] else do the following [ENDL] print NO and newline [ENDL] l , r , x , y , k = long long", "c++": "cin >> l >> r >> x >> y >> k ; int main() { long long i ; int ok = 0 ; for ( i = x ; i <= y ; i ++ ) if ( l <= i * k && r >= i * k ) ok = 1 ; if ( ok ) cout << \" YES \" << endl ; else cout << \" NO \" << endl ; long long l , r , x , y , k ; return 0; }"}}
{"translation": {"en": "read l , r , x , y , k [ENDL] for i = x to y inclusive [ENDL] if k * i > = l and k * i < = r [ENDL] print YES [ENDL] goto end [ENDL] print NO [ENDL] label end [ENDL] let l , r , x , y , k be integers", "c++": "int main() { cin >> l >> r >> x >> y >> k ; for ( int i = x ; i <= y ; i ++ ) if ( k * i >= l && k * i <= r ) cout << \" YES \" << endl ; goto end ; cout << \" NO \" << endl ; } } end : ; int l , r , x , y , k ; return 0; }"}}
{"translation": {"en": "read l , r , x , y , k [ENDL] for integer i is equal to l , j is equal to x , i < = r and j < = y [ENDL] if i / j is equal to k and i modulo j is equal to 0 [ENDL] print YES and newline [ENDL] else if i / j > = k [ENDL] increment j by 1 [ENDL] else do the following [ENDL] increment i by 1 [ENDL] print NO and newline [ENDL] let l , r , x , and y be doubles", "c++": "int main() { cin >> l >> r >> x >> y >> k ; for ( int i = l , j = x ; i <= r && j <= y ; ) if ( i / j == k && i % j == 0 ) cout << \" YES \" << endl ; else if ( i / j >= k ) return 0; j ++ ; else i ++ ; cout << \" NO \" << endl ; } } double l , r , x , y ; return 0; }"}}
{"translation": {"en": "let k be a double [ENDL] let flag be a boolean , set flag to false [ENDL] read in l , r , x , y , and k [ENDL] for i = 0 iterate until i < = y [ENDL] if k * i < = r and k * i > = l , set flag to true [ENDL] if flag is true [ENDL] print YES [ENDL] or else [ENDL] print NO [ENDL] l , r , x , y , k = long long", "c++": "int main() { double k ; bool flag = false ; cin >> l >> r >> x >> y >> k ; for ( double i = x ; i <= y ; i ++ ) if ( k * i <= r && k * i >= l ) flag = true ; if ( flag ) } cout << \" YES \" << endl ; else cout << \" NO \" << endl ; long long l , r , x , y , k ; return 0; }"}}
{"translation": {"en": "read l , r , x , y , k [ENDL] flag = 0 = int [ENDL] for i = x to y inclusve [ENDL] if i * k > = 1 and i * k < = r [ENDL] set flag to 1 [ENDL] exit loop [ENDL] if flag [ENDL] print YES [ENDL] else [ENDL] print NO [ENDL] create long long int l , r , x , y , k", "c++": "int main() { cin >> l >> r >> x >> y >> k ; int flag = 0 ; for ( int i = x ; i <= y ; i ++ ) if ( i * k >= l && i * k <= r ) flag = 1 ; break ; if ( flag ) } } cout << \" YES \" << endl ; else cout << \" NO \" << endl ; long long int l , r , x , y , k ; }"}}
{"translation": {"en": "read l , r , x , y , k [ENDL] found = false [ENDL] for b = x to y inclusive [ENDL] set a = k * b [ENDL] if a > = 1 and a < = r [ENDL] set found to true [ENDL] break [ENDL] if found different from 0 [ENDL] print YES [ENDL] print a newline [ENDL] else [ENDL] print NO [ENDL] print a newline [ENDL] l , r , x , y , k = long long int", "c++": "int main() { cin >> l >> r >> x >> y >> k ; bool found = false ; for ( long long int b = x ; b <= y ; ++ b ) long long int a = k * b ; if ( a >= l && a <= r ) found = true ; break ; if ( found ) } } cout << \" YES \" << \" \\n \" ; else cout << \" NO \" << \" \\n \" ; long long int l , r , x , y , k ; } return 0; }"}}
{"translation": {"en": "read l , r , x , y , k [ENDL] for i = x to i < = y [ENDL] if i * k > = 1 and i * k < = r [ENDL] print YES [ENDL] print NO [ENDL] create new constant integer maxn = 15", "c++": "int main() { cin >> l >> r >> x >> y >> k ; for ( int i = x ; i <= y ; i ++ ) if ( ( i * k ) >= l && ( i * k ) <= r ) cout << \" YES \" << endl ; cout << \" NO \" << endl ; return 0; } } const int maxn = 15 ; return 0; }"}}
{"translation": {"en": "declare new cons integer called inf = 0x3f3f3f3f [ENDL] declare new constant double eps with value 1e - 10 [ENDL] declare doubles l , r , x , y and k [ENDL] read standard input to l , r , x , y and k [ENDL] if r < k * x or l > k * y [ENDL] print \" NO \" [ENDL] else [ENDL] start for loop from i = x to y inclusive incrementing i [ENDL] if i * k > = l and i * k < = r [ENDL] print \" YES \" to the standard output [ENDL] print \" NO \" [ENDL] let maxn a constant long long int with value 2e5 + 3", "c++": "const int inf = 0x3f3f3f3f ; const double eps = 1e-10 ; double l , r , x , y , k ; int main() { cin >> l >> r >> x >> y >> k ; if ( r < k * x || l > k * y ) cout << \" NO \" << endl ; else for ( long long i = x ; i <= y ; i ++ ) if ( i * k >= l && i * k <= r ) cout << \" YES \" << endl ; cout << \" NO \" << endl ; return 0; } } const long long int maxn = 2e5 + 3 ; } return 0; }"}}
{"translation": {"en": "let l , r , x , y , k , t long long ints with t = 0 [ENDL] read l , r , x , y , and k [ENDL] for long long int i from x to y [ENDL] if i * k at least l and i * k at most r [ENDL] set t to 1 [ENDL] leave loop [ENDL] if t [ENDL] print YES [ENDL] otherwise [ENDL] print NO [ENDL] declare long longs l , r , x , y , k", "c++": "long long int l , r , x , y , k , t = 0 ; int main() { cin >> l >> r >> x >> y >> k ; for ( long long int i = x ; i <= y ; i ++ ) if ( i * k >= l && i * k <= r ) t = 1 ; break ; if ( t ) } } cout << \" YES \" << endl ; else cout << \" NO \" << endl ; long long l , r , x , y , k ; }"}}
{"translation": {"en": "read l , r , x , y , k [ENDL] if l is greater than k * y or r is less than k * x [ENDL] print \" NO \" , newline [ENDL] for i = l to r inclusive [ENDL] for j = x to y inclusive [ENDL] if i is greater than k * y or i is less than k * x [ENDL] end loop [ENDL] else if i is k * j [ENDL] print \" YES \" and newline [ENDL] print \" NO \" and newline [ENDL] declare integer array marked with size 101", "c++": "int main() { cin >> l >> r >> x >> y >> k ; if ( l > k * y || r < k * x ) cout << \" NO \" << endl ; for ( long long i = l ; i <= r ; i ++ ) return 0; } for ( long long j = x ; j <= y ; j ++ ) if ( i > k * y || i < k * x ) break ; else if ( i == k * j ) cout << \" YES \" << endl ; cout << \" NO \" << endl ; return 0; } } } int marked [ 101 ] ; return 0; }"}}
{"translation": {"en": "declare long longs l , r , x , y , k [ENDL] read l , r , x , y , k [ENDL] for i = x to y inclusive [ENDL] if i * k is greater than or equal to l and i * k is less than or equal to r [ENDL] print \" YES \" and newline [ENDL] go to jump point pause [ENDL] print \" NO \" and newline [ENDL] mark jump point pause [ENDL] declare integer pause [ENDL] read pause [ENDL] create float a , s , d , f , g", "c++": "long long l , r , x , y , k ; int main() { cin >> l >> r >> x >> y >> k ; for ( long long i = x ; i <= y ; i ++ ) if ( i * k >= l && i * k <= r ) cout << \" YES \" << endl ; goto pause ; cout << \" NO \" << endl ; } } pause : int pause ; cin >> pause ; float a , s , d , f , g ; return 0; }"}}
{"translation": {"en": "create int i and flag , set flag to 0 [ENDL] read a , s , d , f , g [ENDL] for i = d to f inclusive [ENDL] if i * g < = s and g * i > = a [ENDL] flag = 1 [ENDL] break [ENDL] if flag different from 0 [ENDL] print YES [ENDL] else [ENDL] print NO and a newline [ENDL] l , r , x , y , k = integers", "c++": "int main() { int i , flag = 0 ; cin >> a >> s >> d >> f >> g ; for ( i = d ; i <= f ; i ++ ) if ( i * g <= s && g * i >= a ) flag = 1 ; break ; if ( flag ) } cout << \" YES \" << endl ; else cout << \" NO \" << endl ; long long int l , r , x , y , k ; return 0; }"}}
{"translation": {"en": "Read l , r , x , y , k [ENDL] for i = x to y exclusive [ENDL] if i * k is greater than or equal to l an i * k is less than or equal to r [ENDL] print YES and a new line [ENDL] print NO and a new line [ENDL] create long long l , r , x , y , k", "c++": "int main() { cin >> l >> r >> x >> y >> k ; for ( long long i = x ; i <= y ; i ++ ) if ( i * k >= l && i * k <= r ) cout << \" YES \" << endl ; cout << \" NO \" << endl ; return 0; } } long long l , r , x , y , k ; return 0; }"}}
{"translation": {"en": "read l , r , x , y , k [ENDL] while l < = r and x < = y [ENDL] if l / x < k [ENDL] increment l [ENDL] else if l / x = k [ENDL] print YES [ENDL] else [ENDL] increment x [ENDL] print NO and a newline [ENDL] declare constant integer variable inf = 0x3f3f3f3f", "c++": "int main() { cin >> l >> r >> x >> y >> k ; while ( l <= r && x <= y ) if ( l / x < k ) l ++ ; else if ( l / float ( x ) == k ) cout << \" YES \" << endl ; else return 0; x ++ ; cout << \" NO \" << endl ; } const int inf = 0x3f3f3f3f ; return 0; }"}}
{"translation": {"en": "declare long ints l , r , x , y and k [ENDL] bool function find with long int arguments start and end [ENDL] create new long integer variable mid = ( start + end ) / 2 [ENDL] return false if start + 1 is equal to end [ENDL] if mid * k is greater than r [ENDL] if find ( start , mid ) returned true [ENDL] return true [ENDL] else [ENDL] return false [ENDL] else if mid * k is less than l [ENDL] if find ( mid , end ) returned true [ENDL] return true [ENDL] else [ENDL] return false [ENDL] else [ENDL] return true [ENDL] create long long ints a , b , c , d and e [ENDL] read input to a , b , c , d and e [ENDL] for i = c to d inclusive incrementing i [ENDL] declare new long long num with value i * e [ENDL] if num > = a and num < = b [ENDL] print \" YES \" [ENDL] else if num is greater than b [ENDL] break [ENDL] print \" NO \" [ENDL] create long long l , r , x , y , k", "c++": "long int l , r , x , y , k ; bool find ( long int start , long int end ) long int mid = ( start + end ) / 2 ; if ( start + 1 == end ) return false ; if ( mid * k > r ) if ( find ( start , mid ) ) return true ; else return false ; else if ( mid * k < l ) if ( find ( mid , end ) ) return true ; else return false ; else return true ; long long int a , b , c , d , e ; } int main() { cin >> a >> b >> c >> d >> e ; for ( int i = c ; i <= d ; i ++ ) long long num = i * e ; if ( num >= a && num <= b ) cout << \" YES \" << endl ; else if ( num > b ) return 0; break ; cout << \" NO \" << endl ; } } long long l , r , x , y , k ; return 0; return 0; }"}}
{"translation": {"en": "read l , r , x , y , k [ENDL] for b = x to y inclusive [ENDL] set a to k * b [ENDL] if a > = 1 and a < = r [ENDL] print YES [ENDL] print NO [ENDL] l , r , x , y = int", "c++": "int main() { cin >> l >> r >> x >> y >> k ; for ( int b = x ; b <= y ; b ++ ) long long a = k * b ; if ( a >= l && a <= r ) cout << \" YES \" << endl ; cout << \" NO \" << endl ; return 0; } } int l , r , x , y ; return 0; }"}}
{"translation": {"en": "k = float [ENDL] flag = 0 [ENDL] read l , r , x , y , k [ENDL] for i = x to y inclusive [ENDL] if l < = k * i and k * i > = r flag = 1 [ENDL] if flag [ENDL] print YES [ENDL] else [ENDL] print NO [ENDL] create ints n and k", "c++": "int main() { float k ; int flag = 0 ; cin >> l >> r >> x >> y >> k ; for ( int i = x ; i <= y ; i ++ ) if ( l <= k * i && k * i <= r ) { flag = 1 ; } if ( flag ) } cout << \" YES\\n \" ; else cout << \" NO\\n \" ; int n , k ; return 0; }"}}
{"translation": {"en": "read n and k and while they ' re truthy [ENDL] create int a = n * 2 / k + ( n * 2 % k = = 0 ? 0 : 1 ) [ENDL] make integer b = n * 5 / k + ( n * 5 % k = = 0 ? 0 : 1 ) [ENDL] let int c = n * 8 / k + ( n * 8 % k = = 0 ? 0 : 1 ) [ENDL] show the result of a + b + c [ENDL] make ints n and k", "c++": "int main() { while ( cin >> n >> k ) int a = n * 2 / k + ( n * 2 % k == 0 ? 0 : 1 ) ; int b = n * 5 / k + ( n * 5 % k == 0 ? 0 : 1 ) ; int c = n * 8 / k + ( n * 8 % k == 0 ? 0 : 1 ) ; cout << a + b + c << endl ; int n , k ; } return 0; }"}}
{"translation": {"en": "read n and k [ENDL] create integer red = n * 2 / k [ENDL] make int green = n * 5 / k [ENDL] let int blue = n * 8 / k [ENDL] if red is less than n * 2 . 0 / k , set red to red + 1 [ENDL] if green is less than n * 5 . 0 / k , add 1 to green [ENDL] if blue is less than n * 8 . 0 / k , increase blue by 1 [ENDL] print the result of red + green + blue [ENDL] let n , k be long integers", "c++": "int main() { cin >> n >> k ; int red = n * 2 / k ; int green = n * 5 / k ; int blue = n * 8 / k ; if ( red < n * 2.0 / k ) { red = red + 1 ; } if ( green < n * 5.0 / k ) { green = green + 1 ; } if ( blue < n * 8.0 / k ) { blue += 1 ; } cout << red + green + blue << endl ; long long n , k ; return 0; }"}}
{"translation": {"en": "read n , k [ENDL] let ans be a long integer with ans = 0LL [ENDL] ans is equal to ( n * 2LL ) / k + ( n * 2LL modulo k is not equal to 0 ) [ENDL] increment ans by ( n * 5LL ) / k + ( n * 5LL modulo k is not equal to 0 ) [ENDL] increment ans by ( n * 8LL ) / k + ( n * 8LL modulo k is not equal to 0 ) [ENDL] print ans and newline [ENDL] n , k = integers", "c++": "cin >> n >> k ; int main() { long long ans = 0LL ; ans = ( n * 2LL ) / k + ( n * 2LL % k != 0 ) ; ans += ( n * 5LL ) / k + ( n * 5LL % k != 0 ) ; ans += ( n * 8LL ) / k + ( n * 8LL % k != 0 ) ; cout << ans << ' \\n ' ; int n , k ; return 0; }"}}
{"translation": {"en": "Read n and k [ENDL] sum = integer with 0 [ENDL] if n * 2 modulo k is 0 [ENDL] set sum to sum + n * 2 / k [ENDL] else do the following [ENDL] set sum to sum + n * 2 / k + 1 [ENDL] if n * 5 modulo k is 0 [ENDL] set sum to sum + n * 5 / k [ENDL] else do the following [ENDL] set sum to sum + n * 5 / k + 1 [ENDL] if n * 8 modulo k is 0 [ENDL] set sum to sum + n * 8 / k [ENDL] else do the following [ENDL] set sum to sum + n * 8 / k + 1 [ENDL] print sum and a new line [ENDL] n , k , red , green , blue , notebooks = long long integers", "c++": "int main() { cin >> n >> k ; int sum = 0 ; if ( n * 2 % k == 0 ) sum += n * 2 / k ; else sum += n * 2 / k + 1 ; if ( n * 5 % k == 0 ) } sum += n * 5 / k ; else sum += n * 5 / k + 1 ; if ( n * 8 % k == 0 ) } sum += n * 8 / k ; else sum += n * 8 / k + 1 ; cout << sum << endl ; } long long n , k , red , green , blue , notebooks ; }"}}
{"translation": {"en": "read n , k [ENDL] set red to 2 * n [ENDL] set green to 5 * n [ENDL] set blue to 8 * n [ENDL] set notebooks to ( red / k ) + ( green / k ) + ( blue / k ) [ENDL] if red modulo k is not equal to 0 then do the following notebooks + = 1 [ENDL] if green modulo k is not equal to 0 then do the following notebooks + = 1 [ENDL] if blue modulo k is not equal to 0 then do the following notebooks + = 1 [ENDL] write notebooks value [ENDL] p , q , lal , sobuj , nil = integers", "c++": "int main() { cin >> n >> k ; red = 2 * n ; green = 5 * n ; blue = 8 * n ; notebooks = ( red / k ) + ( green / k ) + ( blue / k ) ; if ( red % k != 0 ) { notebooks += 1 ; } if ( green % k != 0 ) { notebooks += 1 ; } if ( blue % k != 0 ) { notebooks += 1 ; } cout << notebooks << endl ; double p , q , lal , sobuj , nil ; return 0; }"}}
{"translation": {"en": "read p , q [ENDL] lal = ceil ( ( p * 2 ) / q ) [ENDL] sobuj = ceil ( ( p * 5 ) / q ) [ENDL] nil = ceil ( ( p * 8 ) / q ) [ENDL] mot = integer with mot = lal + sobuj + nil [ENDL] print mot [ENDL] n , k = int", "c++": "int main() { cin >> p >> q ; lal = ceil ( ( p * 2 ) / q ) ; sobuj = ceil ( ( p * 5 ) / q ) ; nil = ceil ( ( p * 8 ) / q ) ; int mot = lal + sobuj + nil ; cout << mot << endl ; int n , k ; }"}}
{"translation": {"en": "res , cur = int [ENDL] read n then k [ENDL] set res to 0 [ENDL] set cur to 2 * n [ENDL] increment res by ( cur + k - 1 ) / k [ENDL] set cur to n * 5 [ENDL] increment res by ( cur + k - 1 ) / k [ENDL] set cur to n * 8 [ENDL] increment res by ( cur + k - 1 ) / k [ENDL] print res [ENDL] declare integer divUp", "c++": "int main() { int res , cur ; cin >> n >> k ; res = 0 ; cur = n * 2 ; res += ( cur + k - 1 ) / k ; cur = n * 5 ; res += ( cur + k - 1 ) / k ; cur = n * 8 ; res += ( cur + k - 1 ) / k ; cout << res << endl ; int divUp ( int a , int b ) }"}}
{"translation": {"en": "return a / b + ( 1 if a % b is greater than 0 , else 0 ) [ENDL] declare integers n , k [ENDL] read n and k [ENDL] print result of run divUp with 2 * n , k as arguments + result of run divUp ( 5 * n , k ) + result of run divUp ( 8 * n , k ) , newline [ENDL] make doubles n and k", "c++": "return a / b + ( a % b > 0 ? 1 : 0 ) ; int n , k ; } int main() { cin >> n >> k ; cout << ( divUp ( 2 * n , k ) + divUp ( 5 * n , k ) + divUp ( 8 * n , k ) ) << endl ; double n , k ; }"}}
{"translation": {"en": "read n and k [ENDL] create long long ints red = n * 2 , green = n * 5 , and blue = n * 8 [ENDL] display ( long long ) ( ceil ( red / k ) + ceil ( green / k ) + ceil ( blue / k ) ) [ENDL] create long long constant inf = 1e16", "c++": "int main() { cin >> n >> k ; long long red = n * 2 , green = n * 5 , blue = n * 8 ; cout << ( long long ) ( ceil ( red / k ) + ceil ( green / k ) + ceil ( blue / k ) ) << endl ; const long long inf = 1e16 ; }"}}
{"translation": {"en": "new long long constant MAXN with value 1e6 [ENDL] declare new double constant variable pi = acos of - 1 [ENDL] declare new long longs n , k and ans [ENDL] read from the input to n and k [ENDL] decrement k by one [ENDL] change ans to ans + ( n * 2 + k ) / ( k + 1 ) [ENDL] change ans to the sum of ans and ( n * 5 + k ) / ( k + 1 ) [ENDL] add ( n * 8 + k ) / ( k + 1 ) to ans [ENDL] print ans to the standard output [ENDL] create long long ints sum = 0 , a , and b", "c++": "const long long MAXN = 1e6 ; const double pi = acos ( - 1 ) ; long long n , k , ans ; cin >> n >> k ; int main() { k -- ; ans += ( n * 2 + k ) / ( k + 1 ) ; ans += ( n * 5 + k ) / ( k + 1 ) ; ans += ( n * 8 + k ) / ( k + 1 ) ; cout << ans << endl ; long long sum = 0 , a , b ; return 0; }"}}
{"translation": {"en": "read a and b [ENDL] if ( a * 2 ) % b is equal to 0 [ENDL] add ( a * 2 ) / b to sum [ENDL] otherwise [ENDL] add ( ( a * 2 ) / b ) + 1 to sum [ENDL] if ( a * 5 ) % b is equal to 0 [ENDL] set sum to sum + ( a * 5 ) / b [ENDL] else do [ENDL] set sum to sum + ( ( a * 5 ) / b ) + 1 [ENDL] if ( a * 8 ) % b is equal to 0 [ENDL] set sum to sum + ( a * 8 ) / b [ENDL] else do [ENDL] set sum to sum + ( ( a * 8 ) / b ) + 1 [ENDL] show sum [ENDL] create long longs n and k", "c++": "int main() { cin >> a >> b ; if ( ( a * 2 ) % b == 0 ) sum += ( a * 2 ) / b ; else sum += ( ( a * 2 ) / b ) + 1 ; if ( ( a * 5 ) % b == 0 ) sum += ( a * 5 ) / b ; else sum += ( ( a * 5 ) / b ) + 1 ; if ( ( a * 8 ) % b == 0 ) sum += ( a * 8 ) / b ; else sum += ( ( a * 8 ) / b ) + 1 ; cout << sum << endl ; long long n , k ; return 0; }"}}
{"translation": {"en": "loop , reading n and k from the input [ENDL] declare new long longs sum1 , sum2 and sum3 [ENDL] set sum1 to 2 * n / k [ENDL] if 2 * n % k ! = 0 , add 1 to sum1 [ENDL] assign 5 * n / k to sum2 [ENDL] if 5 * n modulo k is not 0 , increment sum2 [ENDL] change sum3 to 8 * n / k [ENDL] if 8 * n modulo k ! = 0 , increment sum3 by one [ENDL] print sum1 + sum2 + sum3 [ENDL] n , k , ans = long", "c++": "int main() { while ( cin >> n >> k ) long long sum1 , sum2 , sum3 ; sum1 = 2 * n / k ; if ( 2 * n % k != 0 ) { sum1 ++ ; } sum2 = 5 * n / k ; if ( 5 * n % k != 0 ) { sum2 ++ ; } sum3 = 8 * n / k ; if ( 8 * n % k != 0 ) { sum3 ++ ; } cout << sum1 + sum2 + sum3 << endl ; long n , k , ans ; } return 0; }"}}
{"translation": {"en": "in the function sheets that takes long a , b and returns long [ENDL] d , m = long [ENDL] d = a / b [ENDL] m = a modulo b [ENDL] if ( m ) , return ( d + 1 ) [ENDL] return d [ENDL] read n , k [ENDL] ans = ans + sheets ( 2 * n , k ) [ENDL] ans = ans + sheets ( 5 * n , k ) [ENDL] ans = ans + sheets ( 8 * n , k ) [ENDL] print ans [ENDL] n , k , a , b , c , x , y , z , s = integers", "c++": "long sheets ( long a , long b ) long d , m ; d = a / b ; m = a % b ; if ( m ) return ( d + 1 ) ; return d ; cin >> n >> k ; } int main() { ans += sheets ( 2 * n , k ) ; ans += sheets ( 5 * n , k ) ; ans += sheets ( 8 * n , k ) ; cout << ans << endl ; int n , k , a , b , c , x , y , z , s ; return 0; }"}}
{"translation": {"en": "Read n and k [ENDL] set a to n * 2 [ENDL] set b to n * 5 [ENDL] set c to n * 8 [ENDL] if a is less than k [ENDL] set x to 1 [ENDL] else do the following [ENDL] if a modulo k is 0 [ENDL] set x to a / k [ENDL] else do the following [ENDL] set x to ( a / k ) + 1 [ENDL] if b is less than k [ENDL] set y to 1 [ENDL] else do the following [ENDL] if b modulo k is 0 [ENDL] set y to b / k [ENDL] else do the following [ENDL] set y to ( b / k ) + 1 [ENDL] if c is less than k [ENDL] set z to 1 [ENDL] else do the following [ENDL] if c modulo k is 0 [ENDL] set z to c / k [ENDL] else do the following [ENDL] set z to ( c / k ) + 1 [ENDL] set s to x + y + z [ENDL] print s and a new line [ENDL] n , k , r = integer", "c++": "int main() { cin >> n >> k ; a = ( n * 2 ) ; b = ( n * 5 ) ; c = ( n * 8 ) ; if ( a < k ) x = 1 ; else if ( a % k == 0 ) x = ( a / k ) ; else x = ( a / k ) + 1 ; if ( b < k ) } } y = 1 ; else if ( b % k == 0 ) y = ( b / k ) ; else y = ( b / k ) + 1 ; if ( c < k ) } } z = 1 ; else if ( c % k == 0 ) z = ( c / k ) ; else z = ( c / k ) + 1 ; s = x + y + z ; } } cout << s << endl ; int n , k , r ; return 0; }"}}
{"translation": {"en": "read n , k [ENDL] r = ( ( 2 * n ) / k ) + ( ( 5 * n ) / k ) + ( ( 8 * n ) / k ) [ENDL] if ( 2 * n ) modulo k is not 0 , increase r by 1 [ENDL] if ( 5 * n ) modulo k is not 0 , increase r by 1 [ENDL] if ( 8 * n ) modulo k is not 0 , increase r by 1 [ENDL] print r [ENDL] s , n and k are integers with s = 0", "c++": "int main() { cin >> n >> k ; r = ( int ) ( ( 2 * n ) / k ) + ( int ) ( ( 5 * n ) / k ) + ( int ) ( ( 8 * n ) / k ) ; if ( ( 2 * n ) % k != 0 ) r ++ ; if ( ( 5 * n ) % k != 0 ) r ++ ; if ( ( 8 * n ) % k != 0 ) r ++ ; cout << r << endl ; int s = 0 , n , k ; return 0; }"}}
{"translation": {"en": "read n and k from the user input [ENDL] if ( 8 * n ) modulo k = 0 [ENDL] assign the new value = s + 8 * n / k to s [ENDL] else [ENDL] change s to s + 8 * n / k + 1 [ENDL] if ( 2 * n ) % k is equal to 0 [ENDL] assign s + 2 * n / k to s [ENDL] else [ENDL] assign s + 2 * n / k + 1 to s [ENDL] if ( 5 * n ) modulo k is 0 [ENDL] assign the new value = s + 5 * n / k to s [ENDL] else [ENDL] change the value of s to s + 5 * n / k + 1 [ENDL] print s [ENDL] n , k = integers", "c++": "int main() { cin >> n >> k ; if ( ( 8 * n ) % k == 0 ) s = s + 8 * n / k ; else s = s + 8 * n / k + 1 ; if ( ( 2 * n ) % k == 0 ) } s = s + 2 * n / k ; else s = s + 2 * n / k + 1 ; if ( ( 5 * n ) % k == 0 ) } s = s + 5 * n / k ; else s = s + 5 * n / k + 1 ; cout << s << endl ; } int n , k ; return 0; }"}}
{"translation": {"en": "ans , asn = integers [ENDL] Read n , k [ENDL] set ans to 0 [ENDL] set asn to n * 2 [ENDL] set ans to ans + ( asn + k - 1 ) / k [ENDL] set asn to n * 5 [ENDL] set ans to ans + ( asn + k - 1 ) / k [ENDL] set asn to n * 8 [ENDL] set ans to ans + ( asn + k - 1 ) / k [ENDL] print ans and a new line [ENDL] n , k , red , green , blue = integers", "c++": "int main() { int ans , asn ; cin >> n >> k ; ans = 0 ; asn = n * 2 ; ans += ( asn + k - 1 ) / k ; asn = n * 5 ; ans += ( asn + k - 1 ) / k ; asn = n * 8 ; ans += ( asn + k - 1 ) / k ; cout << ans << endl ; int n , k , red , green , blue ; return 0; }"}}
{"translation": {"en": "Read n and k [ENDL] set red to 2 * n [ENDL] set green to 5 * n [ENDL] set blue to 8 * n [ENDL] if red modulo k is 0 [ENDL] set red to red / k [ENDL] else do the following [ENDL] set red to red / k + 1 [ENDL] if green modulo k is 0 [ENDL] set green to green / k [ENDL] else do the following [ENDL] set green to green / k + 1 [ENDL] if blue modulo k is 0 [ENDL] set blue to blue / k [ENDL] else do the following [ENDL] set blue to blue / k + 1 [ENDL] print red + green + blue and a new line [ENDL] n , k , t , l , m , g = integers", "c++": "int main() { cin >> n >> k ; red = 2 * n ; green = 5 * n ; blue = 8 * n ; if ( red % k == 0 ) red = red / k ; else red = red / k + 1 ; if ( green % k == 0 ) green = green / k ; else green = green / k + 1 ; if ( blue % k == 0 ) blue = blue / k ; else blue = blue / k + 1 ; cout << red + green + blue << endl ; int n , k , t , l , m , g ; return 0; }"}}
{"translation": {"en": "Read n and k [ENDL] if n * 2 modulo k is 0 [ENDL] set t to n * 2 / k [ENDL] else do the following [ENDL] set t to n * 2 / k + 1 [ENDL] if n * 5 modulo k is 0 [ENDL] set l to n * 5 / k [ENDL] else do the following [ENDL] set l to n * 5 / k + 1 [ENDL] if n * 8 modulo k is 0 [ENDL] set m to n * 8 / k [ENDL] else do the following [ENDL] set m to n * 8 / k + 1 [ENDL] set g to m + l + t [ENDL] print g and a new line [ENDL] create ints n and a", "c++": "int main() { cin >> n >> k ; if ( n * 2 % k == 0 ) t = n * 2 / k ; else t = n * 2 / k + 1 ; if ( n * 5 % k == 0 ) } l = n * 5 / k ; else l = n * 5 / k + 1 ; if ( n * 8 % k == 0 ) } m = n * 8 / k ; else m = n * 8 / k + 1 ; g = m + l + t ; } cout << g << endl ; int n , a ; return 0; }"}}
{"translation": {"en": "make ints ans and cnt [ENDL] read n and a [ENDL] set ans to 0 [ENDL] set cnt to n * 2 [ENDL] set ans to ans + ( cnt + a - 1 ) / a [ENDL] set cnt to n * 5 [ENDL] add ( cnt + a - 1 ) / a to ans [ENDL] set cnt to n * 8 [ENDL] set ans to ans + ( cnt + a - 1 ) / a [ENDL] show ans [ENDL] let n , k be integers", "c++": "int main() { int ans , cnt ; cin >> n >> a ; ans = 0 ; cnt = n * 2 ; ans += ( cnt + a - 1 ) / a ; cnt = n * 5 ; ans += ( cnt + a - 1 ) / a ; cnt = n * 8 ; ans += ( cnt + a - 1 ) / a ; cout << ans << endl ; int n , k ; return 0; }"}}
{"translation": {"en": "read n , k [ENDL] let red , green , blue be integers with red = 0 , green = 0 , blue = 0 [ENDL] let bookred , bookgreen , bookblue be integers with bookred = 0 , bookgreen = 0 , bookblue = 0 [ENDL] red is equal to n * 2 [ENDL] green is equal to n * 5 [ENDL] blue is equal to n * 8 [ENDL] if red modulo k is equal to 0 [ENDL] bookred is equal to red / k [ENDL] else do the following [ENDL] bookred is equal to red / k + 1 [ENDL] if blue modulo k is equal to 0 [ENDL] bookblue is equal to blue / k [ENDL] else do the following [ENDL] bookblue is equal to blue / k + 1 [ENDL] if green modulo k is equal to 0 [ENDL] bookgreen is equal to green / k [ENDL] else do the following [ENDL] bookgreen is equal to green / k + 1 [ENDL] let total be a integer with total is equal to 0 [ENDL] total is equal to bookred + bookblue + bookgreen [ENDL] print total and newline [ENDL] function Ceil with int arguments n and k that returns int", "c++": "int main() { cin >> n >> k ; int red = 0 , green = 0 , blue = 0 ; int bookred = 0 , bookgreen = 0 , bookblue = 0 ; red = n * 2 ; green = n * 5 ; blue = n * 8 ; if ( red % k == 0 ) bookred = red / k ; else bookred = red / k + 1 ; if ( blue % k == 0 ) } bookblue = blue / k ; else bookblue = blue / k + 1 ; if ( green % k == 0 ) } bookgreen = green / k ; else bookgreen = green / k + 1 ; int total = 0 ; } total = bookred + bookblue + bookgreen ; cout << total << endl ; int Ceil ( int n , int k ) return 0; }"}}
{"translation": {"en": "return ( n + k - 1 ) / k [ENDL] declare new ints n and k [ENDL] read input to n and k [ENDL] ans is a new integer variable = Ceil ( 2 * n , k ) + Ceil ( 5 * n , k ) + Ceil ( 8 * n , k ) [ENDL] print ans and ' \\ n ' [ENDL] a = int array of size 1010", "c++": "return ( n + k - 1 ) / k ; int n , k ; } int main() { cin >> n >> k ; int ans = Ceil ( 2 * n , k ) + Ceil ( 5 * n , k ) + Ceil ( 8 * n , k ) ; cout << ans << ' \\n ' ; int a [ 1010 ] ; return 0; }"}}
{"translation": {"en": "n = int [ENDL] read n [ENDL] read n values into a [ENDL] sort a from beginning to n [ENDL] i = int [ENDL] for i = n - 1 to 0 inclusive decrementing i [ENDL] b = int with b = sqrt of a [ i ] [ENDL] if b * b is a [ i ] [ENDL] continue [ENDL] else [ENDL] break [ENDL] print a [ i ] [ENDL] create integers n , i , x , maxi , tem , flag , with maxi = - 1000000007", "c++": "int n ; int main() { cin >> n ; for ( int i = 0 ; i < n ; i ++ ) { cin >> a [ i ] ; } sort ( a , a + n ) ; int i ; for ( i = n - 1 ; i >= 0 ; i -- ) int b = sqrt ( a [ i ] ) ; if ( b * b == a [ i ] ) continue ; else break ; cout << a [ i ] << endl ; } int n , i , x , maxi = - 1000000007 , tem , flag ; return 0; }"}}
{"translation": {"en": "create double p [ENDL] read n [ENDL] for i = 1 to n inclusive [ENDL] set flag to 0 [ENDL] read x [ENDL] if x is less than 0 [ENDL] if x is greater than maxi , set maxi to x [ENDL] set flag to 1 [ENDL] if flag is 1 , set x to - x [ENDL] set p to square root of ( x * 1 . 00 ) [ENDL] set tem to p [ENDL] if tem is not p and flag is not 1 [ENDL] if x is greater than maxi , set maxi to x [ENDL] print maxi print newline [ENDL] declare integer variables n and a", "c++": "int main() { double p ; cin >> n ; for ( i = 1 ; i <= n ; i ++ ) flag = 0 ; cin >> x ; if ( x < 0 ) if ( x > maxi ) maxi = x ; flag = 1 ; if ( flag == 1 ) x = - x ; } p = sqrt ( x * 1.00 ) ; tem = p ; if ( tem != p && flag != 1 ) if ( x > maxi ) maxi = x ; cout << maxi << endl ; } } int n , a ; return 0; }"}}
{"translation": {"en": "read n [ENDL] create priority_queue of integers t [ENDL] for i from 0 to n exclusive [ENDL] read input to a [ENDL] declare int variable l = square root of a [ENDL] if l squared ! = a , push a into t [ENDL] print top element of t [ENDL] let INF be a constant integer with INF = 0x3f3f3f3f", "c++": "int main() { cin >> n ; priority_queue < int > t ; for ( int i = 0 ; i < n ; i ++ ) cin >> a ; int l = sqrt ( a ) ; if ( ( l * l ) != a ) { t . push ( a ) ; } cout << t . top ( ) << endl ; } const int INF = 0x3f3f3f3f ; }"}}
{"translation": {"en": "let i , j , k be integers [ENDL] let n , m , t be integers [ENDL] a = array of integers of length 1005 [ENDL] read n [ENDL] for i = 0 to n exclusive , read a [ i ] [ENDL] sort the values a and a + n [ENDL] let x be a integer with x = 0 [ENDL] for i is equal to n - 1 , i greater than or equal to 0 , decrement i by 1 [ENDL] if a [ i ] is less than 0 , stop [ENDL] if i is less than 0 [ENDL] the value of x is equal to 0 [ENDL] else do the following [ENDL] the value of x is equal to i [ENDL] for i is equal to n - 1 , i greater than x , decrement i by 1 [ENDL] if square root of a [ i ] - floor of square root of a [ i ] is greater than 0 . 000001 [ENDL] print a [ i ] and newline [ENDL] stop [ENDL] if i < = x , print a [ x ] and newline [ENDL] create integers n , i , j , x , ans", "c++": "int i , j , k ; int main() { int n , m , t ; int a [ 1005 ] ; cin >> n ; for ( i = 0 ; i < n ; i ++ ) cin >> a [ i ] ; sort ( a , a + n ) ; int x = 0 ; for ( i = n - 1 ; i >= 0 ; i -- ) if ( a [ i ] < 0 ) break ; if ( i < 0 ) x = 0 ; else x = i ; for ( i = n - 1 ; i > x ; i -- ) if ( sqrt ( a [ i ] ) - floor ( sqrt ( a [ i ] ) ) > 0.000001 ) cout << a [ i ] << endl ; break ; if ( i <= x ) { cout << a [ x ] << endl ; } } } int n , i , j , x , ans ; }"}}
{"translation": {"en": "create vector of integers vec [ENDL] while read n is not 0 [ENDL] for i = 0 to n inclusive [ENDL] read n [ENDL] add x to the end of vec [ENDL] sort vec [ENDL] let flag be an int = 0 [ENDL] for i = n - 1 to i 0 inclusive decrement 1 [ENDL] set ans to the square root of vec [ i ] [ENDL] set ans to ans squared [ENDL] if ans is different from vec [ i ] [ENDL] set flag to i [ENDL] exit loop [ENDL] print vec [ flag ] and new line [ENDL] create const int maxn = 1010", "c++": "int main() { vector < int > vec ; while ( cin >> n ) for ( i = 1 ; i <= n ; i ++ ) cin >> x ; vec . push_back ( x ) ; sort ( vec . begin ( ) , vec . end ( ) ) ; } int flag = 0 ; for ( i = n - 1 ; i >= 0 ; i -- ) ans = sqrt ( vec [ i ] ) ; ans *= ans ; if ( ans != vec [ i ] ) flag = i ; break ; cout << vec [ flag ] << endl ; } } const int maxn = 1010 ; } return 0; }"}}
{"translation": {"en": "declare int n [ENDL] declare int array a with size maxn [ENDL] read n [ENDL] loop i from 0 to n exclusive , read a [ i ] [ENDL] sort a [ENDL] for i from n - 1 to 0 inclusive counting down [ENDL] if square root of a [ i ] * square root of a [ i ] ! = a [ i ] [ENDL] print a [ i ] [ENDL] stop the loop [ENDL] n , i , x = integers , ans = integer = - 1000001", "c++": "int n ; int a [ maxn ] ; cin >> n ; int main() { for ( int i = 0 ; i < n ; ++ i ) { cin >> a [ i ] ; } sort ( a , a + n ) ; for ( int i = n - 1 ; i >= 0 ; -- i ) if ( ( ( int ) ( sqrt ( a [ i ] ) ) ) * ( ( int ) ( sqrt ( a [ i ] ) ) ) != a [ i ] ) cout << a [ i ] << endl ; break ; int n , i , x , ans = - 1000001 ; } } return 0; }"}}
{"translation": {"en": "read n [ENDL] for i = 0 to n exclusive [ENDL] read x [ENDL] if the square root of x to the power of 2 is not x and x > ans , then ans = x [ENDL] print ans [ENDL] maxn = const int with maxn = 1e3 + 5", "c++": "int main() { cin >> n ; for ( i = 0 ; i < n ; i ++ ) cin >> x ; if ( ( int ) pow ( ( int ) sqrt ( x ) , 2 ) != x && x > ans ) ans = x ; cout << ans << endl ; } const int maxn = 1e3 + 5 ; return 0; }"}}
{"translation": {"en": "arr = int array of size maxn [ENDL] n = int [ENDL] read n [ENDL] read n values into arr [ENDL] sort arr from beginning to n [ENDL] for i = n - 1 to 0 inclusive decrementing i [ENDL] if arr [ i ] is less than 0 [ENDL] print arr [ i ] [ENDL] temp = int with temp = arr [ i ] [ENDL] if floor of sqrt of temp is sqrt of temp [ENDL] continue [ENDL] else [ENDL] print arr [ i ] [ENDL] let t be integer", "c++": "int arr [ maxn ] ; int n ; int main() { cin >> n ; for ( int i = 0 ; i < n ; i ++ ) cin >> arr [ i ] ; sort ( arr , arr + n ) ; for ( int i = n - 1 ; i >= 0 ; i -- ) if ( arr [ i ] < 0 ) cout << arr [ i ] << endl ; int temp = arr [ i ] ; return 0; } if ( floor ( sqrt ( temp ) ) == sqrt ( temp ) ) continue ; else cout << arr [ i ] << endl ; int t ; return 0; } } return 0; }"}}
{"translation": {"en": "let a be integer array with length 1005 [ENDL] function cmp with integer argument a and b returns boolean [ENDL] return a greater than b [ENDL] read t [ENDL] for i = 1 to t inclusive read i element of array a [ENDL] call sort function on a + 1 , a + 1 + t , and cmp [ENDL] for i = 1 to t inclusive [ENDL] if ( ( int ) sqrt ( a [ i ] ) * ( int ) sqrt ( a [ i ] ) is not equal to i element of array a [ENDL] print i element of array a [ENDL] break [ENDL] define Boolean function cmp , consuming pass - by - reference int constants A and B", "c++": "int a [ 1005 ] ; bool cmp ( int a , int b ) return a > b ; cin >> t ; } int main() { for ( int i = 1 ; i <= t ; i ++ ) { cin >> a [ i ] ; } sort ( a + 1 , a + 1 + t , cmp ) ; for ( int i = 1 ; i <= t ; i ++ ) if ( ( int ) sqrt ( a [ i ] ) * ( int ) sqrt ( a [ i ] ) != a [ i ] ) cout << a [ i ] << endl ; break ; bool cmp ( const int & A , const int & B ) } } return 0; }"}}
{"translation": {"en": "return A > B [ENDL] define 1 , 005 - element int array num [ENDL] define int n [ENDL] read n [ENDL] for i from 0 to n ( exclusive ) by 1 , read num [ i ] [ENDL] sort ( num , num + n , cmp ) [ENDL] define int i and set it to 0 [ENDL] for i from 0 to n ( exclusive ) by 1 [ENDL] define int p , set to squareroot of num [ i ] [ENDL] if p ^ 2 isn ' t num [ i ] , then break [ENDL] print num [ i ] and newline [ENDL] create integer t", "c++": "return A > B ; int num [ 1005 ] ; } int n ; int main() { cin >> n ; for ( int i = 0 ; i < n ; i ++ ) { cin >> num [ i ] ; } sort ( num , num + n , cmp ) ; int i = 0 ; for ( i = 0 ; i < n ; i ++ ) int p = sqrt ( num [ i ] ) ; if ( p * p != num [ i ] ) break ; cout << num [ i ] << endl ; } int t ; return 0; }"}}
{"translation": {"en": "create integer array a with size 1005 [ENDL] declare cmp with integers a , b as arguments , returning boolean [ENDL] return a is greater than b from function [ENDL] read t [ENDL] for i = 1 to t inclusive , read a [ i ] [ENDL] sort elements from a + 1 to a + 1 + t using cmp to compare [ENDL] for i = 1 to t inclusive [ENDL] if integer casted square root of a [ i ] * integer casted square root of a [ i ] is not a [ i ] [ENDL] print a [ i ] print newline [ENDL] break loop [ENDL] create integer array nums with size 1001", "c++": "int a [ 1005 ] ; bool cmp ( int a , int b ) return a > b ; cin >> t ; } int main() { for ( int i = 1 ; i <= t ; i ++ ) { cin >> a [ i ] ; } sort ( a + 1 , a + 1 + t , cmp ) ; for ( int i = 1 ; i <= t ; i ++ ) if ( ( int ) sqrt ( a [ i ] ) * ( int ) sqrt ( a [ i ] ) != a [ i ] ) cout << a [ i ] << endl ; break ; int nums [ 1001 ] ; } } return 0; }"}}
{"translation": {"en": "declare compare_int with integer addresses lhs , rhs as arguments , returning boolean [ENDL] return lhs is greater than rhs from function [ENDL] create integer n [ENDL] read n [ENDL] create integer max_num with max_num = 0 [ENDL] for currnum = 0 to n exclusive , read nums [ currnum ] [ENDL] sort elements from nums to nums + n using compare_int to compare [ENDL] create integer non_perfect with non_perfect = 0 [ENDL] for currnum = 0 to n exclusive [ENDL] create integer sqrtroot with sqrtroot = square root of nums [ currnum ] [ENDL] if sqrtroot * sqrtroot is not nums [ currnum ] [ENDL] set non_perfect to nums [ currnum ] [ENDL] break loop [ENDL] print non_perfect print newline [ENDL] declare check taking in integer x and returning integer", "c++": "bool compare_int ( int & lhs , int & rhs ) return lhs > rhs ; int n ; } int main() { cin >> n ; int max_num = 0 ; for ( int currnum = 0 ; currnum < n ; ++ currnum ) { cin >> nums [ currnum ] ; } sort ( nums , nums + n , compare_int ) ; int non_perfect = 0 ; for ( int currnum = 0 ; currnum < n ; ++ currnum ) int sqrtroot = sqrt ( nums [ currnum ] ) ; if ( sqrtroot * sqrtroot != nums [ currnum ] ) non_perfect = nums [ currnum ] ; break ; cout << non_perfect << endl ; } } int check ( int x ) return 0; }"}}
{"translation": {"en": "if x is less than 0 , return 1 [ENDL] create integer t = sqrt ( x ) [ENDL] if t * t is equal to x [ENDL] else [ENDL] return 1 [ENDL] create integer n [ENDL] read n [ENDL] create integer a [ 1005 ] [ENDL] for i = 0 to n exclusive , read a [ i ] [ENDL] sort array a [ENDL] for i = n - 1 to 0 [ENDL] if check ( a [ i ] ) returns truthy [ENDL] print a [ i ] [ENDL] break loop [ENDL] n = integer", "c++": "if ( x < 0 ) return 1 ; int t = sqrt ( x ) ; if ( t * t == x ) else return 0; return 1 ; int n ; } int main() { cin >> n ; int a [ 1005 ] ; for ( int i = 0 ; i < n ; i ++ ) cin >> a [ i ] ; sort ( a , a + n ) ; for ( int i = n - 1 ; i >= 0 ; i -- ) if ( check ( a [ i ] ) ) cout << a [ i ] << endl ; break ; int n ; } } }"}}
{"translation": {"en": "Read n [ENDL] a = array of 1005 integers [ENDL] Read n values into array a [ENDL] sort array elements of a in ascending order [ENDL] for i = n - 1 to 0 exclusive [ENDL] t = integer , set to square root of a [ i ] [ENDL] if t * t is not a [ i ] [ENDL] print a [ i ] and a new line [ENDL] a = array of integers of length 2000005", "c++": "int main() { cin >> n ; int a [ 1005 ] ; for ( int i = 0 ; i < n ; i ++ ) { cin >> a [ i ] ; } sort ( a , a + n ) ; for ( int i = n - 1 ; i >= 0 ; i -- ) int t = sqrt ( a [ i ] ) ; if ( t * t != a [ i ] ) cout << a [ i ] << endl ; int a [ 2000005 ] ; return 0; } } }"}}
{"translation": {"en": "let n , tmp be integers [ENDL] read n [ENDL] for i = 0 to n exclusive [ENDL] read tmp [ENDL] increment a [ tmp + 1000000 ] by 1 [ENDL] let ans be integer with ans = 0 [ENDL] for i = 0 to 1000 inclusive , the value of a [ i * i + 1000000 ] is equal to 0 [ENDL] for i = 0 to 2000005 exclusive [ENDL] if a [ i ] is true , the value of ans = i - 1000000 [ENDL] print ans and newline [ENDL] create integer array sq with size 1001 with sq =", "c++": "int n , tmp ; int main() { cin >> n ; for ( int i = 0 ; i < n ; i ++ ) cin >> tmp ; a [ tmp + 1000000 ] ++ ; int ans = 0 ; } for ( int i = 0 ; i <= 1000 ; i ++ ) { a [ i * i + 1000000 ] = 0 ; } for ( int i = 0 ; i < 2000005 ; i ++ ) if ( a [ i ] ) { ans = i - 1000000 ; } cout << ans << endl ; int sq [ 1001 ] = return 0; }"}}
{"translation": {"en": "0 [ENDL] end statement [ENDL] declare check with integer x as argument , returning integer [ENDL] if not element between sq and sq + 1001 is x [ENDL] return 1 from function [ENDL] else [ENDL] create integer n [ENDL] read n [ENDL] create integer array a with size n [ENDL] for i = 0 to 1000 inclusive , set sq [ i ] to i * i [ENDL] for i = 0 to n exclusive , read a [ i ] [ENDL] create integer m with m = INT_MIN [ENDL] for i = 0 to n exclusive [ENDL] if a [ i ] is greater than m and result of run check with a [ i ] as argument is true , set m to a [ i ] [ENDL] print m print newline [ENDL] create integer array a with size 10000", "c++": "0 , ; int check ( int x ) if ( ! binary_search ( sq , sq + 1001 , x ) ) return 1 ; else int n ; return 0; } int main() { cin >> n ; int a [ n ] ; for ( int i = 0 ; i <= 1000 ; i ++ ) { sq [ i ] = i * i ; } for ( int i = 0 ; i < n ; i ++ ) cin >> a [ i ] ; int m = INT_MIN ; for ( int i = 0 ; i < n ; i ++ ) if ( a [ i ] > m && check ( a [ i ] ) ) { m = a [ i ] ; } cout << m << endl ; } int a [ 10000 ] ; }"}}
{"translation": {"en": "for i = 0 to 1001 exclusive , set a [ i ] to i * i [ENDL] create integer b create integer array c with size 10000 [ENDL] read b [ENDL] for i = 0 to b exclusive , read c [ i ] [ENDL] sort elements form c to c + b [ENDL] for i = b - 1 to - 1 exclusive , decrementing i [ENDL] for j = 0 to 1001 exclusive [ENDL] if c [ i ] is a [ j ] , go to jump point momo [ENDL] print c [ i ] print newline [ENDL] mark jump point momo [ENDL] create integer array a with size 1005", "c++": "int main() { for ( int i = 0 ; i < 1001 ; i ++ ) { a [ i ] = i * i ; } int b , c [ 10000 ] ; cin >> b ; for ( int i = 0 ; i < b ; i ++ ) { cin >> c [ i ] ; } sort ( c , c + b ) ; for ( int i = b - 1 ; i > - 1 ; i -- ) for ( int j = 0 ; j < 1001 ; j ++ ) if ( c [ i ] == a [ j ] ) { goto momo ; } cout << c [ i ] << endl ; } momo : ; return 0; int a [ 1005 ] ; } }"}}
{"translation": {"en": "create map mp from integer to integer [ENDL] create constant double eps with eps = 1e - 8 [ENDL] declare init with no arguments , returning void [ENDL] for i = 0 to 1000 inclusive , set mp [ i * i ] to 1 [ENDL] run init [ENDL] create integer n [ENDL] read n [ENDL] for i = 0 to n exclusive , read a [ i ] [ENDL] sort elements from a to a + n [ENDL] for i = n - 1 to 0 inclusive , decrementing i [ENDL] if not mp [ a [ i ] ] [ENDL] print a [ i ] print newline [ENDL] n = int", "c++": "map < int , int > mp ; const double eps = 1e-8 ; void init ( ) for ( int i = 0 ; i <= 1000 ; i ++ ) { mp [ i * i ] = 1 ; } init ( ) ; } int main() { int n ; cin >> n ; for ( int i = 0 ; i < n ; i ++ ) { cin >> a [ i ] ; } sort ( a , a + n ) ; for ( int i = n - 1 ; i >= 0 ; i -- ) if ( ! mp [ a [ i ] ] ) cout << a [ i ] << endl ; int n ; return 0; } } }"}}
{"translation": {"en": "read n [ENDL] arr = vector of int [ENDL] for i = 0 to n exclusive [ENDL] temp = int [ENDL] read temp [ENDL] add temp at end of arr [ENDL] sort arr [ENDL] for i = n - 1 down to 0 inclusive [ENDL] s = sqrt ( arr [ i ] ) [ENDL] if s ^ 2 not equal arr [ i ] [ENDL] print arr [ i ] [ENDL] break [ENDL] create int A , B , C , D", "c++": "int main() { cin >> n ; vector < int > arr ; for ( int i = 0 ; i < n ; ++ i ) int temp ; cin >> temp ; arr . push_back ( temp ) ; sort ( arr . begin ( ) , arr . end ( ) ) ; } for ( int i = n - 1 ; i >= 0 ; -- i ) int s = sqrt ( arr [ i ] ) ; if ( s * s != arr [ i ] ) cout << arr [ i ] << endl ; break ; int A , B , C , D ; } } }"}}
{"translation": {"en": "read A , B , C , D [ENDL] if ( A * 2 + 3 > D and D + 1 > = A ) or ( B * 2 + 3 > C and C + 1 > = B ) [ENDL] print YES [ENDL] otherwise [ENDL] print NO and a new line [ENDL] let A , B , C , D be integers", "c++": "int main() { cin >> A >> B >> C >> D ; if ( ( A * 2 + 3 > D && D + 1 >= A ) || ( B * 2 + 3 > C && C + 1 >= B ) ) cout << \" YES \" << endl ; else cout << \" NO \" << endl ; int A , B , C , D ; } return 0; }"}}
{"translation": {"en": "read A , B , C , D [ENDL] if ( ( A * 2 + 3 is greater than D and D + 1 is greater than or equal to A ) or ( B * 2 + 3 is greater than C and C + 1 is greater than or equal to B ) ) [ENDL] print YES and newline [ENDL] else do the following [ENDL] print NO and newline [ENDL] let boolean solve ( int a , int b ) be a function which accepts integers a and b and returns integer values", "c++": "int main() { cin >> A >> B >> C >> D ; if ( ( A * 2 + 3 > D && D + 1 >= A ) || ( B * 2 + 3 > C && C + 1 >= B ) ) cout << \" YES \" << endl ; else cout << \" NO \" << endl ; bool solve ( int a , int b ) } return 0; }"}}
{"translation": {"en": "return the value of ( a is less than or equal to b + 1 and b is less than or equal to ( a + 1 ) * 2 ) [ENDL] let la , ra , lb , rb be integers [ENDL] read la , ra , lb , rb [ENDL] if ( solve ( la , rb ) or solve ( ra , lb ) ) [ENDL] print YES and newline [ENDL] else do the following [ENDL] print NO and newline [ENDL] declare integers gl , gr , bl and br", "c++": "return a <= b + 1 && b <= ( a + 1 ) * 2 ; int la , ra , lb , rb ; } int main() { cin >> la >> ra >> lb >> rb ; if ( solve ( la , rb ) || solve ( ra , lb ) ) cout << \" YES\\n \" ; else cout << \" NO\\n \" ; int gl , gr , bl , br ; return 0; }"}}
{"translation": {"en": "read gl , gr , bl and br [ENDL] if 2 * ( gl + 1 ) > = br & & gl - 1 < = br | | 2 * ( gr + 1 ) > = bl & & gr < = bl [ENDL] print \" YES \" [ENDL] else [ENDL] print \" NO \" [ENDL] create integers a , s , z , x", "c++": "int main() { cin >> gl >> gr >> bl >> br ; if ( 2 * ( gl + 1 ) >= br && gl - 1 <= br || 2 * ( gr + 1 ) >= bl && gr <= bl ) cout << \" YES \" << endl ; else cout << \" NO \" << endl ; int a , s , z , x ; return 0; }"}}
{"translation": {"en": "read a read s read z read x [ENDL] create boolean cek with cek = false [ENDL] if ( x is greater than or equal to a - 1 and x is less than or equal to a * 2 + 2 ) or ( z is greater than or equal to s - 1 and z is less than or equal to s * 2 + 2 ) , set cek to true [ENDL] if cek is true [ENDL] print \" YES \" print newline [ENDL] else [ENDL] print \" NO \" print newline [ENDL] declare integers l , r , ml and mr", "c++": "int main() { cin >> a >> s >> z >> x ; bool cek = false ; if ( ( x >= ( a - 1 ) && x <= ( a * 2 ) + 2 ) || ( z >= ( s - 1 ) && z <= ( s * 2 ) + 2 ) ) cek = true ; if ( cek ) cout << \" YES \" << endl ; else cout << \" NO \" << endl ; int l , r , ml , mr ; }"}}
{"translation": {"en": "judge is a boolean function with integer arguments g and b [ENDL] if b is less than g - 1 [ENDL] return false [ENDL] else if b is greater than 2 * g + 2 [ENDL] return false [ENDL] else [ENDL] return true [ENDL] read l , r , ml and mr [ENDL] if judge ( l , mr ) or judge ( r , ml ) are true [ENDL] print \" YES \" [ENDL] else [ENDL] print \" NO \" [ENDL] let a , b , c , d be long integers", "c++": "bool judge ( int g , int b ) if ( b < g - 1 ) return false ; else if ( b > 2 * g + 2 ) return false ; else return true ; cin >> l >> r >> ml >> mr ; } int main() { if ( judge ( l , mr ) || judge ( r , ml ) ) cout << \" YES \" << endl ; else cout << \" NO \" << endl ; long long a , b , c , d ; return 0; }"}}
{"translation": {"en": "while ( read the values a , b , c , d ) [ENDL] let ck be a long integer with value as 0 [ENDL] let a1 be a long integer with value as a1 is equal to a * 2 + 2 [ENDL] let a2 be a long integer with value a2 is equal to a - 1 [ENDL] if ( d is greater than or equal to a2 and d is less than or equal to a1 ) , ck is equal to 1 [ENDL] let a1 is equal to ( b * 2 + 2 ) [ENDL] let a2 is equal to b - 1 [ENDL] if ( c is greater than or equal to a2 and c is less than or equal to a1 ) , ck is equal to 1 [ENDL] if ( ck is equal to 1 ) [ENDL] print YES and newline [ENDL] else do the following [ENDL] print NO and newline [ENDL] create long longs gl , gr , bl , br", "c++": "int main() { while ( cin >> a >> b >> c >> d ) long long ck = 0 ; long long a1 = a * 2 + 2 ; long long a2 = a - 1 ; if ( d >= a2 && d <= a1 ) ck = 1 ; a1 = b * 2 + 2 ; a2 = b - 1 ; if ( c >= a2 && c <= a1 ) ck = 1 ; if ( ck == 1 ) cout << \" YES \" << endl ; else cout << \" NO \" << endl ; long long gl , gr , bl , br ; } }"}}
{"translation": {"en": "read gl read gr read bl read br [ENDL] if br is greater than or equal to gl - 1 and br is less than or equal to 2 * ( gl + 1 ) [ENDL] print \" YES \" print newline [ENDL] if bl is greater than or equal to gr - 1 and bl is less than or equal to 2 * ( gr + 1 ) [ENDL] print \" YES \" print newline [ENDL] else [ENDL] print \" NO \" print newline [ENDL] create integers gl , gr , bl , br", "c++": "int main() { cin >> gl >> gr >> bl >> br ; if ( br >= gl - 1 && br <= 2 * ( gl + 1 ) ) cout << \" YES \" << endl ; if ( bl >= gr - 1 && bl <= 2 * ( gr + 1 ) ) return 0; } cout << \" YES \" << endl ; else return 0; cout << \" NO \" << endl ; int gl , gr , bl , br ; }"}}
{"translation": {"en": "read gl read gr read bl read br [ENDL] if gl - 1 is less than or equal to br and br is less than or equal to 2 * gl + 2 [ENDL] print \" YES \" print ' \\ n ' [ENDL] else if gr - 1 is less than or equal to bl and bl is less than or equal to 2 * gr + 2 [ENDL] print \" YES \" print ' \\ n ' [ENDL] else [ENDL] print \" NO \" print ' \\ n ' [ENDL] create integers A , B , C , D", "c++": "cin >> gl >> gr >> bl >> br ; int main() { if ( gl - 1 <= br && br <= 2 * gl + 2 ) cout << \" YES \" << ' \\n ' ; else if ( gr - 1 <= bl && bl <= 2 * gr + 2 ) cout << \" YES \" << ' \\n ' ; else cout << \" NO \" << ' \\n ' ; int A , B , C , D ; return 0; }"}}
{"translation": {"en": "read A read B read C read D [ENDL] if ( A * 2 + 3 is greater than D and D + 1 is greater than or equal to A ) or ( B * 2 + 3 is greater than C and C + 1 is greater than or equal to B ) [ENDL] print \" YES \" print newline [ENDL] else [ENDL] print \" NO \" print newline [ENDL] create integers a1 , a2 , a11 , a12 , b1 , b2 , b11 , b12", "c++": "int main() { cin >> A >> B >> C >> D ; if ( ( A * 2 + 3 > D && D + 1 >= A ) || ( B * 2 + 3 > C && C + 1 >= B ) ) cout << \" YES \" << endl ; else cout << \" NO \" << endl ; int a1 , a2 , a11 , a12 , b1 , b2 , b11 , b12 ; } return 0; }"}}
{"translation": {"en": "read b1 read b2 read a1 read a2 [ENDL] if a1 % 2 is 0 [ENDL] set a11 to a1 / 2 - 1 [ENDL] else [ENDL] set a11 to a1 / 2 [ENDL] if a2 % 2 is 0 [ENDL] set a12 to a2 / 2 - 1 [ENDL] else [ENDL] set a12 to a2 / 2 [ENDL] set b11 to b1 - 1 [ENDL] set b12 to b2 - 1 [ENDL] if b12 is less than or equal to a1 and a11 is less than or equal to b2 or a12 is less than or equal to b1 and b11 is less than or equal to a2 [ENDL] print \" YES \" print newline [ENDL] else [ENDL] print \" NO \" print newline [ENDL] create integers vl , vr , ml and mr", "c++": "int main() { cin >> b1 >> b2 >> a1 >> a2 ; if ( a1 % 2 == 0 ) a11 = a1 / 2 - 1 ; else a11 = a1 / 2 ; if ( a2 % 2 == 0 ) a12 = a2 / 2 - 1 ; else a12 = a2 / 2 ; b11 = b1 - 1 ; b12 = b2 - 1 ; if ( b12 <= a1 && a11 <= b2 || a12 <= b1 && b11 <= a2 ) cout << \" YES \" << endl ; else cout << \" NO \" << endl ; int vl , vr , ml , mr ; return 0; }"}}
{"translation": {"en": "boolean function judge with integer arguments g and b [ENDL] if b is less than g - 1 [ENDL] return false [ENDL] else if b is greater than 2 * g + 2 [ENDL] return false [ENDL] else [ENDL] return true [ENDL] read vl , vr , ml and mr [ENDL] if either judge ( vl , mr ) or judge ( vr , ml ) is true [ENDL] print \" YES \" [ENDL] else [ENDL] print \" NO \" [ENDL] create integers b , bb , g , gg , yes , with yes = 0", "c++": "bool judge ( int g , int b ) if ( b < g - 1 ) return false ; else if ( b > 2 * g + 2 ) return false ; else return true ; cin >> vl >> vr >> ml >> mr ; } int main() { if ( judge ( vl , mr ) || judge ( vr , ml ) ) cout << \" YES \" << endl ; else cout << \" NO \" << endl ; int b , bb , g , gg , yes = 0 ; return 0; }"}}
{"translation": {"en": "read g read gg read b read bb [ENDL] if g is less than or equal to bb + 1 and bb is less than or equal to ( g + 1 ) * 2 , set yes to 1 [ENDL] if gg is less than or equal to b + 1 and b is less than or equal to ( gg + 1 ) * 2 , set yes to 1 [ENDL] if yes is true [ENDL] print \" YES \" print newline [ENDL] else [ENDL] print \" NO \" print newline [ENDL] create integers A , B , C , D", "c++": "int main() { cin >> g >> gg >> b >> bb ; if ( g <= bb + 1 && bb <= ( g + 1 ) * 2 ) { yes = 1 ; } if ( gg <= b + 1 && b <= ( gg + 1 ) * 2 ) { yes = 1 ; } if ( yes ) cout << \" YES \" << endl ; else cout << \" NO \" << endl ; int A , B , C , D ; } return 0; }"}}
{"translation": {"en": "read A read B read C read D [ENDL] if ( A * 2 + 3 is greater than D and D + 1 is greater than or equal to A ) or ( B * 2 + 3 is greater than C and C + 1 is greater than or equal to B ) [ENDL] print \" YES \" print newline [ENDL] else [ENDL] print \" NO \" print newline [ENDL] M = constant integer = 1000 + 5", "c++": "int main() { cin >> A >> B >> C >> D ; if ( ( A * 2 + 3 > D && D + 1 >= A ) || ( B * 2 + 3 > C && C + 1 >= B ) ) cout << \" YES \" << endl ; else cout << \" NO \" << endl ; const int M = 1000 + 5 ; } return 0; }"}}
{"translation": {"en": "create int gl , gr [ENDL] read gl and gr [ENDL] bl , br = integers [ENDL] read bl and br [ENDL] create boolean ok = false [ENDL] if gr - 1 is equal to or less than bl and bl is equal to or less than 2 * ( gr + 1 ) , set ok = true [ENDL] if gl - 1 is equal to or less than br and br is equal to or less than 2 * ( gl + 1 ) , set ok = true [ENDL] if ok is true [ENDL] print YES [ENDL] otherwise [ENDL] print NO [ENDL] declare integers vl , vr , ml and mr", "c++": "int gl , gr ; int main() { cin >> gl >> gr ; int bl , br ; cin >> bl >> br ; bool ok = false ; if ( gr - 1 <= bl && bl <= 2 * ( gr + 1 ) ) { ok = true ; } if ( gl - 1 <= br && br <= 2 * ( gl + 1 ) ) { ok = true ; } if ( ok ) cout << \" YES \" << endl ; else cout << \" NO \" << endl ; int vl , vr , ml , mr ; } return 0; }"}}
{"translation": {"en": "boolean function judge with integer arguments g and b [ENDL] if b is less than g - 1 [ENDL] return false [ENDL] else if b is greater than 2 * g + 2 [ENDL] return false [ENDL] else [ENDL] return true [ENDL] read vl , vr , ml and mr [ENDL] if judge ( vl , mr ) or judge ( vr , ml ) [ENDL] print \" YES \" [ENDL] else [ENDL] print \" NO \" [ENDL] declare check with integers d , m as arguments , returning boolean", "c++": "bool judge ( int g , int b ) if ( b < g - 1 ) return false ; else if ( b > 2 * g + 2 ) return false ; else return true ; cin >> vl >> vr >> ml >> mr ; } int main() { if ( judge ( vl , mr ) || judge ( vr , ml ) ) cout << \" YES \" << endl ; else cout << \" NO \" << endl ; bool check ( int d , int m ) return 0; }"}}
{"translation": {"en": "if m is less than or equal to 2 * ( d + 1 ) and ( m is greater than or equal to d - 1 ) , return 1 from function [ENDL] create integers l1 , r1 , l2 , r2 [ENDL] read l1 read r1 read l2 read r2 [ENDL] if result of run check with l1 , r2 as arguments or result of run check with r1 , l2 as arguments [ENDL] print \" YES \\ n \" [ENDL] else [ENDL] print \" NO \\ n \" [ENDL] let INF be a constant integer with value as INF = 0x3f3f3f3f", "c++": "if ( m <= 2 * ( d + 1 ) && ( m >= d - 1 ) ) return 1 ; int l1 , r1 , l2 , r2 ; return 0; } int main() { cin >> l1 >> r1 >> l2 >> r2 ; if ( check ( l1 , r2 ) || check ( r1 , l2 ) ) cout << \" YES\\n \" ; else cout << \" NO\\n \" ; const int INF = 0x3f3f3f3f ; }"}}
{"translation": {"en": "let i , j , k be integers [ENDL] let n , m be integers [ENDL] let a , b , c , d be integers [ENDL] read a , b , c , d [ENDL] if ( ( c - ( b - 1 ) ) is less than 5 and c - b + 1 is greater than or equal to 0 ) [ENDL] print YES and newline [ENDL] if ( ( d - ( a - 1 ) ) is less than 5 and d - a + 1 is greater than or equal to 0 ) [ENDL] print YES and newline [ENDL] if ( ( c - ( b - 1 ) * 2 ) is less than 5 and c - ( b - 1 ) is greater than or equal to 0 ) [ENDL] print YES and newline [ENDL] if ( ( d - ( a - 1 ) * 2 ) is less than 5 and d - ( a - 1 ) is greater than or equal to 0 ) [ENDL] print YES and newline [ENDL] print NO and newline [ENDL] create integers gl , gr , bl , br", "c++": "int i , j , k ; int main() { int n , m ; int a , b , c , d ; cin >> a >> b >> c >> d ; if ( ( c - ( b - 1 ) ) < 5 && c - b + 1 >= 0 ) cout << \" YES \" << endl ; if ( ( d - ( a - 1 ) ) < 5 && d - a + 1 >= 0 ) return 0; } cout << \" YES \" << endl ; if ( ( c - ( b - 1 ) * 2 ) < 5 && c - ( b - 1 ) >= 0 ) return 0; } cout << \" YES \" << endl ; if ( ( d - ( a - 1 ) * 2 ) < 5 && d - ( a - 1 ) >= 0 ) return 0; } cout << \" YES \" << endl ; cout << \" NO \" << endl ; return 0; } int gl , gr , bl , br ; return 0; }"}}
{"translation": {"en": "create boolean verdict [ENDL] read gl read gr read bl read br [ENDL] if 2 * ( gl + 1 ) is greater than or equal to br and gl - 1 is less than or equal to br or 2 * ( gr + 1 ) is greater than or equal to bl and gr is less than or equal to bl [ENDL] print \" YES \" print newline [ENDL] else [ENDL] print \" NO \" print newline [ENDL] integer function pan with integer arguments x and y", "c++": "int main() { bool verdict ; cin >> gl >> gr >> bl >> br ; if ( 2 * ( gl + 1 ) >= br && gl - 1 <= br || 2 * ( gr + 1 ) >= bl && gr <= bl ) cout << \" YES \" << endl ; else cout << \" NO \" << endl ; int pan ( int x , int y ) return 0; }"}}
{"translation": {"en": "if x = 0 return true if y < 2 or false otherwise [ENDL] if y = 0 return true if x < 3 or false otherwise [ENDL] if x = y return 1 [ENDL] if x is less than y [ENDL] if y - x < = 1 return 1 [ENDL] else [ENDL] if x / ( y + 1 ) < = 2 [ENDL] if x / ( y + 1 ) = 1 return 1 [ENDL] if x / ( y + 1 ) = 2 [ENDL] if x modulo ( y + 1 ) is less than 1 return 1 [ENDL] declare integers a , b , x and y [ENDL] read a , b , x and y [ENDL] if pan ( x , b ) or pan ( y , a ) is not 0 [ENDL] print \" YES \" [ENDL] else [ENDL] print \" NO \" [ENDL] function fp with long long arguments n and p that returns long long", "c++": "if ( x == 0 ) return y < 2 ; if ( y == 0 ) return x < 3 ; if ( x == y ) return 1 ; if ( x < y ) if ( y - x <= 1 ) return 1 ; else return 0; if ( x / ( y + 1 ) <= 2 ) if ( x / ( y + 1 ) == 1 ) return 1 ; if ( x / ( y + 1 ) == 2 ) if ( x % ( y + 1 ) < 1 ) return 1 ; int a , b , x , y ; return 0; } } return 0; } } int main() { cin >> a >> b >> x >> y ; if ( pan ( x , b ) || pan ( y , a ) ) cout << \" YES \" << endl ; else cout << \" NO \" << endl ; long long fp ( long long n , long long p ) return 0; }"}}
{"translation": {"en": "if p is 0 , return 1 [ENDL] if p is 1 , return n [ENDL] create long long res [ENDL] res = fp ( n , p / 2 ) % int ( 1e9 + 7 ) [ENDL] res = ( res * res ) % int ( 1e9 + 7 ) [ENDL] if p % 2 > 0 , set res = ( res * n ) % int ( 1e9 + 7 ) [ENDL] return res % int ( 1e9 + 7 ) [ENDL] function get with integer arguments a and b that returns integer [ENDL] while b < = 2011 [ENDL] declare integer variables dif = 0 , t = b and tt = a [ENDL] while a > 0 and dif < 2 [ENDL] increment dif if a % 10 ! = b % 10 [ENDL] divide a and b by 10 [ENDL] set b = t , a = tt [ENDL] return bif dif is less than 2 [ENDL] increment b [ENDL] return 1e5 [ENDL] create integers a , b , c and d [ENDL] read a , b , c and d [ENDL] if a - 2 < d and d < 2 * a + 3 or b - 2 < c and c < 2 * b + 3 [ENDL] print \" YES \" and ' \\ n ' [ENDL] else [ENDL] print \" NO \" and ' \\ n ' [ENDL] create long longs gl , gr , bl , br", "c++": "if ( p == 0 ) return 1 ; if ( p == 1 ) return n ; long long res ; res = fp ( n , p / 2 ) % int ( 1e9 + 7 ) ; res = ( res * res ) % int ( 1e9 + 7 ) ; if ( p % 2 ) res = ( res * n ) % int ( 1e9 + 7 ) ; return res % int ( 1e9 + 7 ) ; int get ( int a , int b ) } while ( b <= 2011 ) int dif = 0 , t = b , tt = a ; while ( a > 0 && dif < 2 ) if ( a % 10 != b % 10 ) dif ++ ; a /= 10 , b /= 10 ; b = t , a = tt ; } if ( dif < 2 ) return b ; b ++ ; return 1e5 ; } int a , b , c , d ; } int main() { cin >> a >> b >> c >> d ; if ( a - 2 < d && d < 2 * a + 3 || b - 2 < c && c < 2 * b + 3 ) cout << \" YES \" << ' \\n ' ; else cout << \" NO \" << ' \\n ' ; long long gl , gr , bl , br ; return 0; }"}}
{"translation": {"en": "read gl read gr read bl read br [ENDL] if br is greater than or equal to gl - 1 and br is less than or equal to 2 * ( gl + 1 ) [ENDL] print \" YES \" print newline [ENDL] if bl is greater than or equal to gr - 1 and bl is less than or equal to 2 * ( gr + 1 ) [ENDL] print \" YES \" print newline [ENDL] else [ENDL] print \" NO \" print newline [ENDL] a , b , c , d = integers", "c++": "int main() { cin >> gl >> gr >> bl >> br ; if ( br >= gl - 1 && br <= 2 * ( gl + 1 ) ) cout << \" YES \" << endl ; if ( bl >= gr - 1 && bl <= 2 * ( gr + 1 ) ) return 0; } cout << \" YES \" << endl ; else return 0; cout << \" NO \" << endl ; int a , b , c , d ; }"}}
{"translation": {"en": "read a , b , c , d [ENDL] if ( d > = a - 1 and d < = 2 * ( a + 1 ) ) or ( c > = b - 1 and c < = 2 * ( b + 1 ) ) [ENDL] print YES [ENDL] else [ENDL] print NO [ENDL] n is a new integer variable", "c++": "int main() { cin >> a >> b >> c >> d ; if ( ( d >= a - 1 && d <= 2 * ( a + 1 ) ) || ( c >= b - 1 && c <= 2 * ( b + 1 ) ) ) cout << \" YES\\n \" ; else cout << \" NO\\n \" ; int n ; return 0; }"}}
{"translation": {"en": "read standard input to n [ENDL] create new vector of integers v with 2 * n elements [ENDL] read all elements from the input to the vector v [ENDL] sort v [ENDL] if v [ n - 1 ] is less than v [ n ] [ENDL] print \" YES \\ n \" to the standard output [ENDL] else [ENDL] print \" NO \\ n \" to the standard output [ENDL] let n be an int", "c++": "int main() { cin >> n ; vector < int > v ( 2 * n ) ; for ( int i = 0 ; i < 2 * n ; i ++ ) { cin >> v [ i ] ; } sort ( v . begin ( ) , v . end ( ) ) ; if ( v [ n - 1 ] < v [ n ] ) cout << \" YES\\n \" ; else cout << \" NO\\n \" ; int n ; }"}}
{"translation": {"en": "let arr be an int vector of size 210 [ENDL] read n [ENDL] for i = 1 to 2 * n inclusive , increment i , read arr [ i ] [ENDL] sort form arr + 1 to arr + 2 * n + 1 using greater < int > [ENDL] if arr [ n ] > arr [ n + 1 ] [ENDL] print YES and [ENDL] new line [ENDL] else [ENDL] print NO and [ENDL] new line [ENDL] declare integer n", "c++": "vector < int > arr ( 210 ) ; cin >> n ; int main() { for ( int i = 1 ; i <= 2 * n ; ++ i ) { cin >> arr [ i ] ; } sort ( arr . begin ( ) + 1 , arr . begin ( ) + 2 * n + 1 , greater < int > ( ) ) ; if ( arr [ n ] > arr [ n + 1 ] ) cout << \" YES \" << \" \\n \" ; else cout << \" NO \" << \" \\n \" ; int n ; } return 0; }"}}
{"translation": {"en": "read n [ENDL] declare integer array a size n + n [ENDL] for i = 0 to 2 * n exclusive , read a [ i ] [ENDL] sort from a to a + n * 2 [ENDL] if a [ n ] is greater than a [ n - 1 ] [ENDL] print \" YES \\ n \" [ENDL] else [ENDL] print \" NO \\ n \" [ENDL] function read that returns inline integer", "c++": "int main() { cin >> n ; int a [ n + n ] ; for ( int i = 0 ; i < 2 * n ; i ++ ) { cin >> a [ i ] ; } sort ( a , a + n * 2 ) ; if ( a [ n ] > a [ n - 1 ] ) cout << \" YES\\n \" ; else cout << \" NO\\n \" ; inline int read ( ) } return 0; }"}}
{"translation": {"en": "declare new integers x = 0 and f = 1 [ENDL] ch is a new character variable read from the user input [ENDL] while ch is not a digit character [ENDL] if ch is equal to ' - ' , change f to - 1 [ENDL] set ch to char from the input [ENDL] while c is a digit character [ENDL] change x to x * 10 + ch - ' 0 ' [ENDL] change ch to char from the input [ENDL] return x multiplied by f [ENDL] create int n and an array of ints a with size 1005 [ENDL] change n to the result of read ( ) * 2 [ENDL] in a for loop , change i from 1 to n inclusive , changing a [ i ] to the result of read ( ) on each loop [ENDL] sort a from position 1 to n + 1 [ENDL] if a [ n > > 1 ] is less than a [ ( n > > 1 ) + 1 ] , return 0 * puts ( \" YES \" ) [ENDL] print \" NO \" to stdout [ENDL] declare integer n", "c++": "int x = 0 , f = 1 ; char ch = getchar ( ) ; while ( ch < ' 0 ' || ch > ' 9 ' ) if ( ch == ' - ' ) f = - 1 ; ch = getchar ( ) ; while ( ch >= ' 0 ' && ch <= ' 9 ' ) } x = x * 10 + ch - ' 0 ' ; ch = getchar ( ) ; return x * f ; } int n , a [ 1005 ] ; } n = read ( ) * 2 ; int main() { for ( int i = 1 ; i <= n ; ++ i ) a [ i ] = read ( ) ; sort ( a + 1 , a + n + 1 ) ; if ( a [ n >> 1 ] < a [ ( n >> 1 ) + 1 ] ) return 0 * puts ( \" YES \" ) ; puts ( \" NO \" ) ; int n ; return 0; }"}}
{"translation": {"en": "create vector of integers arr with 210 elements [ENDL] read variable n from the input [ENDL] start for loop from i = 1 to 2 * n inclusive , read input to arr [ i ] on each loop iteration [ENDL] sort arr from index 1 to 2 * n + 1 , using greater < int > ( ) as a comparator [ENDL] if arr [ n ] is greater than arr [ n + 1 ] [ENDL] print \" YES \" [ENDL] print \" \\ n \" [ENDL] else [ENDL] print \" NO \" to the standard output [ENDL] print \" \\ n \" [ENDL] declare an array of integers named a of size 204", "c++": "vector < int > arr ( 210 ) ; cin >> n ; int main() { for ( int i = 1 ; i <= 2 * n ; ++ i ) { cin >> arr [ i ] ; } sort ( arr . begin ( ) + 1 , arr . begin ( ) + 2 * n + 1 , greater < int > ( ) ) ; if ( arr [ n ] > arr [ n + 1 ] ) cout << \" YES \" << \" \\n \" ; else cout << \" NO \" << \" \\n \" ; int a [ 2 * 102 ] ; } return 0; }"}}
{"translation": {"en": "declare an integer named n [ENDL] read in n [ENDL] loop through the code 2 multiplied by n times and input a value into a every time [ENDL] sort the inputted values in the array in ascending order [ENDL] if the value of position n in a is greater than the value of position n - 1 in a [ENDL] print YES [ENDL] or else [ENDL] print NO [ENDL] let int n", "c++": "int n ; int main() { cin >> n ; for ( int i = 0 ; i < 2 * n ; i ++ ) cin >> a [ i ] ; sort ( a , a + 2 * n ) ; if ( a [ n - 1 ] < a [ n ] ) cout << \" YES \" << endl ; else cout << \" NO \" << endl ; int n ; return 0; }"}}
{"translation": {"en": "create int array arr of size 210 [ENDL] read n [ENDL] for i = 1 to 2 * n , read arr [ i ] [ENDL] sort arr + 1 using argument arr + n + n + 1 [ENDL] print \" YES \" if arr [ n ] < arr [ n + 1 ] is true or \" NO \" if not [ENDL] n = integer , a = integer array of size 210", "c++": "int arr [ 210 ] ; cin >> n ; int main() { for ( int i = 1 ; i <= 2 * n ; ++ i ) { cin >> arr [ i ] ; } sort ( arr + 1 , arr + n + n + 1 ) ; puts ( ( arr [ n ] < arr [ n + 1 ] ? \" YES \" : \" NO \" ) ) ; int n , a [ 210 ] ; return 0; }"}}
{"translation": {"en": "read n [ENDL] for i = 0 to 2 * n exlusive , then read a [ i ] [ENDL] sort a in asecnding order [ENDL] if a [ n - 1 ] > = a [ n ] [ENDL] print NO [ENDL] else [ENDL] print YES [ENDL] n = long long , a = long long array of size 205", "c++": "cin >> n ; int main() { for ( int i = 0 ; i < 2 * n ; i ++ ) { cin >> a [ i ] ; } sort ( a , a + 2 * n ) ; if ( a [ n - 1 ] >= a [ n ] ) puts ( \" NO \" ) ; else puts ( \" YES \" ) ; long long n , a [ 205 ] ; } return 0; }"}}
{"translation": {"en": "in function solve that returns nothing [ENDL] read n [ENDL] for i = 1 to 2 * n + 1 exclusive , read a [ i ] [ENDL] sort a for all elements that contain a value [ENDL] if a [ n ] is not a [ n + 1 ] [ENDL] print YES [ENDL] else [ENDL] print NO [ENDL] in function prep that returns nothing [ENDL] t = integer = 1 [ENDL] call prep [ENDL] any output to the user is in fixed - point notation and is precise to 10 decimal points [ENDL] while looping decrease t by 1 , the contents of the loop is to call solve [ENDL] declare integer a", "c++": "void solve ( ) cin >> n ; for ( __typeof ( ( 2 * n + 1 ) ) i = ( 1 ) ; i < ( 2 * n + 1 ) ; i ++ ) cin >> a [ i ] ; sort ( a + 1 , a + 2 * n + 1 ) ; if ( a [ n ] != a [ n + 1 ] ) cout << \" YES \" << endl ; else cout << \" NO \" << endl ; void prep ( ) { } } int t = 1 ; int main() { prep ( ) ; cout << fixed << setprecision ( 10 ) ; while ( t -- ) solve ( ) ; int a ; return 0; }"}}
{"translation": {"en": "read a [ENDL] declare integer arrays b size 10000 , c size a , d size a [ENDL] for i = 0 to a * 2 exclusive , read b [ i ] [ENDL] sort from b to b + a * 2 [ENDL] for i = 0 to a exclusive , let c [ i ] be b [ i ] [ENDL] for i = a to a * 2 exclusive , let d [ i - a ] be b [ i ] [ENDL] for i = 0 to a exclusive [ENDL] for j = 0 to a exclusive [ENDL] if c [ j ] is greater than or equal to d [ i ] [ENDL] print \" NO \" , newline [ENDL] print \" YES \" , newline [ENDL] declare integer array a size 205", "c++": "int main() { cin >> a ; int b [ 10000 ] , c [ a ] , d [ a ] ; for ( int i = 0 ; i < a * 2 ; i ++ ) { cin >> b [ i ] ; } sort ( b , b + a * 2 ) ; for ( int i = 0 ; i < a ; i ++ ) { c [ i ] = b [ i ] ; } for ( int i = a ; i < a * 2 ; i ++ ) { d [ i - a ] = b [ i ] ; } for ( int i = 0 ; i < a ; i ++ ) for ( int j = 0 ; j < a ; j ++ ) if ( c [ j ] >= d [ i ] ) cout << \" NO \" << endl ; cout << \" YES \" << endl ; return 0; } } } int a [ 205 ] ; }"}}
{"translation": {"en": "declare integer n [ENDL] read n [ENDL] for i = 1 to 2 * n inclusive , read a [ i ] [ENDL] sort elements from a to a + 2 * n + 1 [ENDL] for i = 1 to n inclusive [ENDL] for j = n + 1 to 2 * n inclusive [ENDL] if a [ i ] is greater than or equal to a [ j ] [ENDL] print \" NO \" , newline [ENDL] print \" YES \" , newline [ENDL] make integer n", "c++": "int n ; int main() { cin >> n ; for ( int i = 1 ; i <= 2 * n ; ++ i ) cin >> a [ i ] ; sort ( a , a + 2 * n + 1 ) ; for ( int i = 1 ; i <= n ; ++ i ) for ( int j = n + 1 ; j <= 2 * n ; ++ j ) if ( a [ i ] >= a [ j ] ) cout << \" NO \" << endl ; cout << \" YES \" << endl ; return 0; } int n ; }"}}
{"translation": {"en": "create int array a of size 1001 [ENDL] let int array b of size 1001 [ENDL] read n [ENDL] for i = 1 to 2 * n , read a [ i ] [ENDL] make int max = 1 [ENDL] for i = 1 to 2 * n [ENDL] for j = 1 to 2 * n [ENDL] if a [ max ] is less than a [ j ] , set max to j [ENDL] set b [ i ] to a [ max ] [ENDL] set a [ max ] to - 1 [ENDL] if b [ n ] is greater than b [ n + 1 ] [ENDL] print \" YES \" [ENDL] else do [ENDL] print \" NO \" [ENDL] n = integer", "c++": "int main() { int a [ 1001 ] ; int b [ 1001 ] ; cin >> n ; for ( int i = 1 ; i <= 2 * n ; i ++ ) { cin >> a [ i ] ; } int max = 1 ; for ( int i = 1 ; i <= 2 * n ; i ++ ) for ( int j = 1 ; j <= 2 * n ; j ++ ) if ( a [ max ] < a [ j ] ) { max = j ; } b [ i ] = a [ max ] ; } a [ max ] = - 1 ; if ( b [ n ] > b [ n + 1 ] ) } cout << \" YES \" << endl ; else cout << \" NO \" << endl ; int n ; return 0; }"}}
{"translation": {"en": "a = integer array of size 210 [ENDL] read n [ENDL] for i = 0 to 2 * n , read a [ i ] [ENDL] sort a and a + 2 * n [ENDL] if a [ n ] > a [ n - 1 ] [ENDL] print YES [ENDL] else [ENDL] print NO [ENDL] n = integer", "c++": "int main() { int a [ 210 ] ; cin >> n ; for ( int i = 0 ; i < 2 * n ; i ++ ) cin >> a [ i ] ; sort ( a , a + 2 * n ) ; if ( a [ n ] > a [ n - 1 ] ) cout << \" YES\\n \" ; else cout << \" NO\\n \" ; int n ; return 0; }"}}
{"translation": {"en": "read n [ENDL] a = integer array of size 2 * n [ENDL] for i = 0 to 2 * n exclusive , read a [ i ] [ENDL] sort a in ascending order [ENDL] if a [ n ] is a [ n - 1 ] [ENDL] print NO [ENDL] else [ENDL] print YES [ENDL] create new array of 4 integers dx with values 0 , 0 , - 1 , 1", "c++": "int main() { cin >> n ; int a [ 2 * n ] ; for ( int i = 0 ; i < 2 * n ; i ++ ) cin >> a [ i ] ; sort ( a , a + 2 * n ) ; if ( a [ n ] == a [ n - 1 ] ) cout << \" NO \" << endl ; else cout << \" YES \" << endl ; int dx [ 4 ] = { 0 , 0 , - 1 , 1 } ; } }"}}
{"translation": {"en": "dy is a new array of 4 integers with elements 1 , - 1 , 0 , 0 [ENDL] declare integer variable n [ENDL] read n from the input [ENDL] a is an array of integers with size 2 * n [ENDL] for integer i = 0 to 2 * n exclusive increasing i by 1 , read user input to a [ i ] [ENDL] sort all elements of a [ENDL] declare integer variable with name x = a [ n ] [ENDL] for i = 0 to n exclusive increasing i by 1 [ENDL] if x < = a [ i ] [ENDL] print \" NO \\ n \" [ENDL] print \" YES \\ n \" [ENDL] a = int array of size 205 with all values set to 0", "c++": "int dy [ 4 ] = { 1 , - 1 , 0 , 0 } ; int n ; int main() { cin >> n ; int a [ 2 * n ] ; for ( int i = 0 ; i < 2 * n ; i += 1 ) cin >> a [ i ] ; sort ( a , a + 2 * n ) ; int x = a [ n ] ; for ( int i = 0 ; i < n ; i += 1 ) if ( x <= a [ i ] ) cout << \" NO\\n \" ; cout << \" YES\\n \" ; return 0; } } int a [ 205 ] = { 0 } ; }"}}
{"translation": {"en": "N = int [ENDL] read N [ENDL] set N to N * 2 [ENDL] read N values into a [ENDL] sort a from position 0 to N [ENDL] set N to N / 2 [ENDL] decrement N [ENDL] if a [ N ] > = a [ N + 1 ] [ENDL] print \" NO \" [ENDL] else [ENDL] print \" YES \" [ENDL] n = int and a = int array of size 10000", "c++": "int N ; cin >> N ; int main() { N *= 2 ; for ( int i = 0 ; i < N ; i ++ ) { cin >> a [ i ] ; } sort ( a , a + N ) ; N /= 2 ; N -= 1 ; if ( a [ N ] >= a [ N + 1 ] ) cout << \" NO \" << endl ; else cout << \" YES \" << endl ; int n , a [ 10000 ] ; return 0; }"}}
{"translation": {"en": "read n [ENDL] for i = 1 to 2 * n inclusive read a [ i ] [ENDL] sort a from position 1 to 2 * n + 1 [ENDL] if a [ n ] is a [ n + 1 ] [ENDL] print \" NO \" [ENDL] else [ENDL] print \" YES \" [ENDL] create new integer called n", "c++": "cin >> n ; int main() { for ( int i = 1 ; i <= 2 * n ; i ++ ) cin >> a [ i ] ; sort ( a + 1 , a + 2 * n + 1 ) ; if ( a [ n ] == a [ n + 1 ] ) cout << \" NO \" << endl ; else cout << \" YES \" << endl ; int n ; return 0; }"}}
{"translation": {"en": "x is an array of integers with size 200001 [ENDL] read n from the user input [ENDL] for i = 1 to 2 * n inclusive , read user input to x [ i ] [ENDL] sort x from position 1 to 1 + 2 * n [ENDL] if x [ n ] is less than x [ n + 1 ] [ENDL] print \" YES \" to the standard output [ENDL] else [ENDL] print \" NO \" [ENDL] n = int", "c++": "int x [ 200001 ] ; cin >> n ; int main() { for ( int i = 1 ; i <= 2 * n ; i ++ ) cin >> x [ i ] ; sort ( x + 1 , x + 1 + 2 * n ) ; if ( x [ n ] < x [ n + 1 ] ) cout << \" YES \" << endl ; else cout << \" NO \" << endl ; int n ; }"}}
{"translation": {"en": "read n [ENDL] vet = int array of size 2 * n [ENDL] read 2 * n values into vet [ENDL] sort vet [ENDL] if vet [ n - 1 ] < vet [ n ] [ENDL] print \" YES \" [ENDL] else [ENDL] print \" NO \" [ENDL] create long long integer variable with name n", "c++": "int main() { cin >> n ; int vet [ 2 * n ] ; for ( int i = 0 ; i < 2 * n ; i ++ ) { cin >> vet [ i ] ; } sort ( vet , vet + ( 2 * n ) ) ; if ( vet [ n - 1 ] < vet [ n ] ) cout << \" YES \" << endl ; else cout << \" NO \" << endl ; long long int n ; return 0; }"}}
{"translation": {"en": "read n from the input [ENDL] create new vector of long long integers v [ENDL] for i = 0 to 2 * n exclusive incrementing i [ENDL] declare new long long integer x [ENDL] read variable x from the input [ENDL] push x to the end of vector v [ENDL] sort vector v [ENDL] if v [ n ] is greater than v [ n - 1 ] [ENDL] print \" YES \" [ENDL] else [ENDL] print \" NO \" to the standard output [ENDL] print new line to the output [ENDL] create constant int N = 210", "c++": "int main() { cin >> n ; vector < long long int > v ; for ( long long int i = 0 ; i < 2 * n ; i ++ ) long long int x ; cin >> x ; v . push_back ( x ) ; sort ( v . begin ( ) , v . end ( ) ) ; } if ( v [ n ] > v [ n - 1 ] ) cout << \" YES \" ; else cout << \" NO \" ; cout << endl ; const int N = 210 ; return 0; }"}}
{"translation": {"en": "let integer n [ENDL] make int array in of size N [ENDL] read n and while n is truthy [ENDL] for i = 0 to 2 * n exclusive , read in [ i ] [ENDL] sort in using argument in + 2 * n [ENDL] if in [ n ] is greater than in [ n - 1 ] [ENDL] print \" YES \" [ENDL] else do [ENDL] print \" NO \" [ENDL] declare integer n", "c++": "int n ; int in [ N ] ; while ( cin >> n ) int main() { for ( int i = 0 ; i < 2 * n ; i ++ ) { cin >> in [ i ] ; } sort ( in , in + 2 * n ) ; if ( in [ n ] > in [ n - 1 ] ) cout << \" YES \" << endl ; else cout << \" NO \" << endl ; int n ; } } return 0; }"}}
{"translation": {"en": "read n [ENDL] let n be n * 2 [ENDL] declare integer array a size 1005 [ENDL] for i = 0 to n exclusive , read a [ i ] [ENDL] sort from a to a + n [ENDL] if a [ n / 2 - 1 ] is not a [ n / 2 ] [ENDL] print \" YES \" , newline [ENDL] else [ENDL] print \" NO \" , newline [ENDL] create integer n", "c++": "int main() { cin >> n ; n *= 2 ; int a [ 1005 ] ; for ( int i = 0 ; i < n ; i ++ ) cin >> a [ i ] ; sort ( a , a + n ) ; if ( a [ n / 2 - 1 ] != a [ n / 2 ] ) cout << \" YES \" << endl ; else cout << \" NO \" << endl ; int n ; return 0; }"}}
{"translation": {"en": "read n [ENDL] create int vector v of size 2 * n [ENDL] for i = 0 to 2 * n exclusive , read v [ i ] [ENDL] sort vector v [ENDL] print ( v [ n ] > v [ n - 1 ] ? \" YES \\ n \" : \" NO \\ n \" ) [ENDL] n is a new long long variable", "c++": "int main() { cin >> n ; vector < int > v ( 2 * n ) ; for ( int i = 0 ; i < 2 * n ; ++ i ) cin >> v [ i ] ; sort ( v . begin ( ) , v . end ( ) ) ; cout << ( v [ n ] > v [ n - 1 ] ? \" YES\\n \" : \" NO\\n \" ) ; long long n ; return 0; }"}}
{"translation": {"en": "read standard input to n [ENDL] p is a new long long with value 2 * n [ENDL] create new array of long longs arr with p elements [ENDL] start for loop from i = 0 to 2 * n exclusive , read input to arr [ i ] on each loop [ENDL] sort arr [ENDL] if arr [ n - 1 ] = arr [ n ] [ENDL] print \" NO \" to the standard output [ENDL] else [ENDL] print \" YES \" [ENDL] create integer N", "c++": "int main() { cin >> n ; long long p = 2 * n ; long long arr [ p ] ; for ( long long i = 0 ; i < 2 * n ; i ++ ) { cin >> arr [ i ] ; } sort ( arr , arr + p ) ; if ( arr [ n - 1 ] == arr [ n ] ) cout << \" NO \" << endl ; else cout << \" YES \" << endl ; int N ; } }"}}
{"translation": {"en": "declare string variable S [ENDL] read N and S [ENDL] sort array S [ENDL] print S and ' \\ n ' [ENDL] MaxN = constant long long equal to 301002", "c++": "string S ; cin >> N >> S ; int main() { sort ( S . begin ( ) , S . end ( ) ) ; cout << S << ' \\n ' ; const long long MaxN = 301002 ; return 0; }"}}
{"translation": {"en": "create long long n [ENDL] create string s [ENDL] read n [ENDL] read s [ENDL] call sort on s [ENDL] print s and a new line [ENDL] create integer n", "c++": "long long n ; string s ; cin >> n ; int main() { cin >> s ; sort ( s . begin ( ) , s . end ( ) ) ; cout << s << \" \\n \" ; int n ; }"}}
{"translation": {"en": "read n [ENDL] create string a [ENDL] read a [ENDL] sort a from beginning to end [ENDL] print a and a new line [ENDL] const is keyword for declaration of function then integer oo = 1e9", "c++": "int main() { cin >> n ; string a ; cin >> a ; sort ( a . begin ( ) , a . end ( ) ) ; cout << a << endl ; const int oo = 1e9 ; return 0; }"}}
{"translation": {"en": "integer = n [ENDL] read n [ENDL] string = s [ENDL] read s [ENDL] sort the function begin to end in descending order [ENDL] print s [ENDL] n = integer", "c++": "int n ; int main() { cin >> n ; string s ; cin >> s ; sort ( s . begin ( ) , s . end ( ) ) ; cout << s << ' \\n ' ; int n ; return 0; }"}}
{"translation": {"en": "read n [ENDL] create string s [ENDL] read s [ENDL] sort s [ENDL] print s and a new line [ENDL] create integer n", "c++": "int main() { cin >> n ; string s ; cin >> s ; sort ( s . begin ( ) , s . end ( ) ) ; cout << s << \" \\n \" ; int n ; return 0; }"}}
{"translation": {"en": "read n [ENDL] create string str [ENDL] read str [ENDL] sort elements from beginning of str to end of str [ENDL] print str print newline [ENDL] create constant integer inf 0x3f3f3f3f", "c++": "int main() { cin >> n ; string str ; cin >> str ; sort ( str . begin ( ) , str . end ( ) ) ; cout << str << endl ; const int inf = 0x3f3f3f3f ; return 0; }"}}
{"translation": {"en": "create long long a [ENDL] create string s [ENDL] create integer n [ENDL] read n [ENDL] read s [ENDL] sort elements from beginning of s to end of s [ENDL] print s print newline [ENDL] let v be a vector of ints", "c++": "long long a ; string s ; int n ; int main() { cin >> n ; cin >> s ; sort ( s . begin ( ) , s . end ( ) ) ; cout << s << endl ; vector < int > v ; return 0; }"}}
{"translation": {"en": "let n be an int [ENDL] read n [ENDL] let s be a string [ENDL] read s [ENDL] sort ( s . begin ( ) , s . end ( ) ) [ENDL] print s and a newline [ENDL] create integer n", "c++": "int n ; int main() { cin >> n ; string s ; cin >> s ; sort ( s . begin ( ) , s . end ( ) ) ; cout << s << \" \\n \" ; int n ; return 0; }"}}
{"translation": {"en": "create string s [ENDL] read n read s [ENDL] sort elements from beginning of s to end of s [ENDL] print s print newline [ENDL] create integer n", "c++": "int main() { string s ; cin >> n >> s ; sort ( s . begin ( ) , s . end ( ) ) ; cout << s << endl ; int n ; return 0; }"}}
{"translation": {"en": "read n [ENDL] create string str [ENDL] read str [ENDL] sort elements from beginning of str to end of str [ENDL] print str print newline [ENDL] n = integer", "c++": "int main() { cin >> n ; string str ; cin >> str ; sort ( str . begin ( ) , str . end ( ) ) ; cout << str << endl ; int n ; }"}}
{"translation": {"en": "s = string [ENDL] Read n and s [ENDL] sort strings in alphabetical order [ENDL] print s and a new line [ENDL] create integer n", "c++": "int main() { string s ; cin >> n >> s ; sort ( s . begin ( ) , s . end ( ) ) ; cout << s << endl ; int n ; return 0; }"}}
{"translation": {"en": "read n [ENDL] create string s [ENDL] read s [ENDL] sort elements from beginning of s to end of s [ENDL] print s print \" \\ n \" [ENDL] create string s", "c++": "int main() { cin >> n ; string s ; cin >> s ; sort ( s . begin ( ) , s . end ( ) ) ; cout << s << \" \\n \" ; string s ; return 0; }"}}
{"translation": {"en": "create integer n [ENDL] read n and s [ENDL] sort s [ENDL] print s [ENDL] create integer n", "c++": "int main() { int n ; cin >> n >> s ; sort ( s . begin ( ) , s . end ( ) ) ; cout << s << endl ; int n ; return 0; }"}}
{"translation": {"en": "create string s [ENDL] read n read s [ENDL] sort elements from beginning of s to end of s [ENDL] print s print newline [ENDL] n = integer", "c++": "int main() { string s ; cin >> n >> s ; sort ( s . begin ( ) , s . end ( ) ) ; cout << s << endl ; int n ; }"}}
{"translation": {"en": "read n [ENDL] s = string [ENDL] read s [ENDL] sort string s [ENDL] print s [ENDL] a = int", "c++": "int main() { cin >> n ; string s ; cin >> s ; sort ( s . begin ( ) , s . end ( ) ) ; cout << s << endl ; int a ; }"}}
{"translation": {"en": "read a [ENDL] s = string [ENDL] read s [ENDL] arr = int array of size 26 with each value set to 0 [ENDL] for i = 0 to a increment arr [ s [ i ] - ' a ' ] [ENDL] for i = 0 to 26 [ENDL] for j = 0 to arr [ i ] print ' a ' + i as char [ENDL] print a newline [ENDL] n = integer", "c++": "int main() { cin >> a ; string s ; cin >> s ; int arr [ 26 ] = { 0 } ; for ( int i = 0 ; i < a ; i ++ ) arr [ s [ i ] - ' a ' ] ++ ; for ( int i = 0 ; i < 26 ; i ++ ) for ( int j = 0 ; j < arr [ i ] ; j ++ ) cout << ( char ) ( ' a ' + i ) ; cout << endl ; int n ; return 0; }"}}
{"translation": {"en": "read n [ENDL] s = string [ENDL] read s [ENDL] sort the elements of s [ENDL] print s [ENDL] create long long n", "c++": "int main() { cin >> n ; string s ; cin >> s ; sort ( s . begin ( ) , s . end ( ) ) ; cout << s << endl ; long long n ; }"}}
{"translation": {"en": "read n [ENDL] declare string variable s [ENDL] read s [ENDL] sort s [ENDL] print s and \" \\ n \" [ENDL] create constant double PI with PI = 2 . 0 * acosign of 0 . 0", "c++": "int main() { cin >> n ; string s ; cin >> s ; sort ( s . begin ( ) , s . end ( ) ) ; cout << s << \" \\n \" ; const double PI = 2.0 * acos ( 0.0 ) ; }"}}
{"translation": {"en": "create constant integer MOD with MOD = 1e9 + 7 [ENDL] create constant integer oo with oo = 2 * MOD + 1e3 [ENDL] declare gcd with long longs a , b as arguments , returning long long [ENDL] return a if not b , else return result of run gcd with b , a % b as arguments from function [ENDL] create integer n [ENDL] create string str [ENDL] read n read str [ENDL] sort elements from beginning of str to end of str [ENDL] print str print ' \\ n ' [ENDL] declare integer variable n", "c++": "const int MOD = 1e9 + 7 ; const int oo = 2 * MOD + 1e3 ; long long gcd ( long long a , long long b ) return ! b ? a : gcd ( b , a % b ) ; int n ; } int main() { string str ; cin >> n >> str ; sort ( str . begin ( ) , str . end ( ) ) ; cout << str << ' \\n ' ; int n ; return 0; }"}}
{"translation": {"en": "declare string variable s [ENDL] read n and s [ENDL] sort s [ENDL] print s [ENDL] create int64_t variable n", "c++": "int main() { string s ; cin >> n >> s ; sort ( s . begin ( ) , s . end ( ) ) ; cout << s << endl ; int64_t n ; return 0; }"}}
{"translation": {"en": "create string s [ENDL] read n and s [ENDL] sort s [ENDL] print s [ENDL] declare constant integer mod = 1000000007", "c++": "int main() { string s ; cin >> n >> s ; sort ( s . begin ( ) , s . end ( ) ) ; cout << s << endl ; const int mod = 1000000007 ; return 0; }"}}
{"translation": {"en": "declare constant long long inf = 1000000000000 [ENDL] declare integer variable n [ENDL] read n [ENDL] declare string variable s [ENDL] read s [ENDL] sort s [ENDL] print s and ' \\ n ' [ENDL] int the function fpow that takes long long n , k , p with p = 1000000007 and returns long long", "c++": "const long long inf = 1000000000000 ; int n ; int main() { cin >> n ; string s ; cin >> s ; sort ( s . begin ( ) , s . end ( ) ) ; cout << s << ' \\n ' ; long long fpow ( long long n , long long k , long long p = 1000000007 ) return 0; }"}}
{"translation": {"en": "r = 1 [ENDL] for k > > = 1 if k [ENDL] if k & 1 r = r * n % p [ENDL] n = n * n % p [ENDL] return r [ENDL] in the function inv that takes long long a , p with p = 1000000007 and returns long long [ENDL] return fpow with a , p - 2 and p as arguments [ENDL] n = integer [ENDL] read n [ENDL] s = string [ENDL] read s [ENDL] sort s . begin ( ) and s . end ( ) [ENDL] print s [ENDL] create character array a with size 100005", "c++": "long long r = 1 ; for ( ; k ; k >>= 1 ) if ( k & 1 ) r = r * n % p ; n = n * n % p ; return r ; } long long inv ( long long a , long long p = 1000000007 ) } return fpow ( a , p - 2 , p ) ; int n ; } int main() { cin >> n ; string s ; cin >> s ; sort ( s . begin ( ) , s . end ( ) ) ; cout << s << endl ; char a [ 100005 ] ; return 0; }"}}
{"translation": {"en": "create integer n [ENDL] read n [ENDL] read character [ENDL] read string into a [ENDL] sort elements from a to a + n [ENDL] print a [ENDL] declare integer variable n", "c++": "int main() { int n ; cin >> n ; getchar ( ) ; gets ( a ) ; sort ( a , a + n ) ; puts ( a ) ; int n ; }"}}
{"translation": {"en": "read n [ENDL] declare string variable second [ENDL] read second [ENDL] sort second [ENDL] print second [ENDL] vis = array of 100005 boolean values", "c++": "int main() { cin >> n ; string second ; cin >> second ; sort ( ( second ) . begin ( ) , ( second ) . end ( ) ) ; cout << second << endl ; bool vis [ 100005 ] ; return 0; }"}}
{"translation": {"en": "define comp which takes a = pair from int to char , b = pair int to char as parameters [ENDL] return a . first > b . first [ENDL] let n be an int [ENDL] read n [ENDL] let s be a string [ENDL] read s [ENDL] execute sort with s . begin ( ) , s . end ( ) as arguments [ENDL] print s and one newline [ENDL] declare gcd with long longs a , b as arguments , returning long long", "c++": "bool comp ( pair < int , char > a , pair < int , char > b ) return a . first > b . first ; int n ; } int main() { cin >> n ; string s ; cin >> s ; sort ( s . begin ( ) , s . end ( ) ) ; cout << s << endl ; long long gcd ( long long a , long long b ) }"}}
{"translation": {"en": "return result of run gcd with b % a , a as arguments if a is true , else b [ENDL] declare swap with character points a , b as arguments , returning void [ENDL] create character temmp with temp = value of a [ENDL] set value of a to value of b [ENDL] set value of b to temp [ENDL] declare maxPrimeFactors with long long n as argument , returning long long [ENDL] create long long maxPrime with maxPrime = - 1 [ENDL] while n % 2 is 0 [ENDL] set maxPrime to 2 [ENDL] set n to n bitshift right 1 [ENDL] for i = 3 to square root of n inclusive , incrementing i by 2 [ENDL] while n % i is 0 [ENDL] set maxPrime to i [ENDL] set n to n / i [ENDL] if n is greater than 2 , set maxPrime to n [ENDL] return maxPrime [ENDL] declare bin_gen with ulong longs n , num , returning string [ENDL] create string bin with bin = \" \" [ENDL] while decrement n is true [ENDL] if num % 2 [ENDL] increment bin by \" 1 \" [ENDL] else [ENDL] increment bin by \" 0 \" [ENDL] set num to num / 2 [ENDL] return bin from function [ENDL] create long long n [ENDL] read n [ENDL] create character array arr with size n [ENDL] for i = 0 to n exclusive , read arr [ i ] [ENDL] sort elements from arr to arr + n [ENDL] fo ri = 0 to n exclusive , print arr [ i ] [ENDL] print newline [ENDL] mod = unsigned long long const with mod = 1000000007", "c++": "return a ? gcd ( b % a , a ) : b ; void swap ( char * a , char * b ) } char temp = * a ; * a = * b ; * b = temp ; long long maxPrimeFactors ( long long n ) } long long maxPrime = - 1 ; while ( n % 2 == 0 ) maxPrime = 2 ; n >>= 1 ; for ( int i = 3 ; i <= sqrt ( n ) ; i += 2 ) } while ( n % i == 0 ) maxPrime = i ; n = n / i ; if ( n > 2 ) maxPrime = n ; } } return maxPrime ; string bin_gen ( ulong long n , ulong long num ) } string bin = \"  \" ; while ( n -- ) if ( num % 2 ) bin += \" 1 \" ; else bin += \" 0 \" ; num /= 2 ; return bin ; } long long n ; } int main() { cin >> n ; char arr [ n ] ; for ( long long i = 0 ; i < n ; i ++ ) { cin >> arr [ i ] ; } sort ( arr , arr + n ) ; for ( long long i = 0 ; i < n ; i ++ ) { cout << arr [ i ] ; } cout << endl ; unsigned long long const mod = 1000000007 ; return 0; }"}}
{"translation": {"en": "md = unsigned long long const with md = 998244353 [ENDL] in function mypow taking two unsigned long longs a and b and returning an unsigned long long [ENDL] res = unsigned long long with res = 1 [ENDL] set a to a modulo mod [ENDL] call assert on b is greater or equal to 0 [ENDL] loop while b is not 0 bitshifting b right by 1 each time [ENDL] if b bitwise - and 1 is not 0 then set res to res * a modulo mod [ENDL] set a to a * a modulo mod [ENDL] return res [ENDL] in = ifstream on \" txt . in \" [ENDL] out = ofstream on \" txt . out \" [ENDL] call fixed and setprecision of 12 on cout [ENDL] n = unsigned long long [ENDL] read n [ENDL] s = string [ENDL] read s [ENDL] sort s [ENDL] print s [ENDL] declare int variable N", "c++": "unsigned long long const md = 998244353 ; unsigned long long mypow ( unsigned long long a , unsigned long long b ) unsigned long long res = 1 ; a %= mod ; assert ( b >= 0 ) ; for ( ; b ; b >>= 1 ) if ( b & 1 ) res = res * a % mod ; a = a * a % mod ; return res ; } ifstream in ( \" txt.in \" ) ; } ofstream out ( \" txt.out \" ) ; cout << fixed << setprecision ( 12 ) ; int main() { unsigned long long n ; cin >> n ; string s ; cin >> s ; sort ( s . begin ( ) , s . end ( ) ) ; cout << s << ' \\n ' ; int N ; return 0; }"}}
{"translation": {"en": "read N [ENDL] declare string variable S [ENDL] read S [ENDL] sort S [ENDL] print S and \" \\ n \" [ENDL] create int n", "c++": "int main() { cin >> N ; string S ; cin >> S ; sort ( ( S ) . begin ( ) , ( S ) . end ( ) ) ; cout << S << \" \\n \" ; int n ; }"}}
{"translation": {"en": "read n [ENDL] create string s [ENDL] read s [ENDL] sort array s [ENDL] print s and a newline [ENDL] create float A and C", "c++": "int main() { cin >> n ; string s ; cin >> s ; sort ( s . begin ( ) , s . end ( ) ) ; cout << s << \" \\n \" ; float A , C ; return 0; }"}}
{"translation": {"en": "create float max , min [ENDL] read A and C [ENDL] if A and C equal to 0 [ENDL] max = 0 [ENDL] assign 0 to min [ENDL] else if A = 0 [ENDL] print Impossible [ENDL] else if C = 0 [ENDL] max = A [ENDL] set min equal to A [ENDL] else if C less than A [ENDL] min = A [ENDL] set max to A + C - 1 [ENDL] else [ENDL] set max = A + C - q [ENDL] assign C / A * A to min [ENDL] print min , \" \" , max and a newline [ENDL] declare const int N = 1e6", "c++": "int main() { float max , min ; cin >> A >> C ; if ( A == 0 && C == 0 ) max = 0 ; min = 0 ; else if ( A == 0 ) cout << \" Impossible \" << endl ; else if ( C == 0 ) return 0; max = A ; min = A ; else if ( C < A ) min = A ; max = A + ( C - 1 ) ; else max = A + ( C - 1 ) ; min = C / A * A ; cout << min << \"   \" << max << endl ; } const int N = 1e6 ; return 0; }"}}
{"translation": {"en": "declare integers n and m [ENDL] declare ints mx and mn [ENDL] read input to n and m [ENDL] if n = 0 and m > 0 [ENDL] print \" Impossible \" [ENDL] if m is equal to 0 [ENDL] print n , \" \" and n [ENDL] change mx to n + m - 1 [ENDL] if n > = m [ENDL] change mn to n [ENDL] else [ENDL] change mn to m [ENDL] print mn , \" \" and mx [ENDL] define integers n and m", "c++": "int n , m ; int mx , mn ; cin >> n >> m ; int main() { if ( n == 0 && m > 0 ) cout << \" Impossible \" << endl ; if ( m == 0 ) return 0; } cout << n << \"   \" << n << endl ; mx = n + m - 1 ; return 0; } if ( n >= m ) mn = n ; else mn = m ; cout << mn << \"   \" << mx << endl ; long long int n , m ; return 0; }"}}
{"translation": {"en": "read n , m [ENDL] if n is 0 and m is nonzero [ENDL] print Impossible [ENDL] otherwise [ENDL] print n + maximum of 0LL and m - n , \" \" , n + maximum of 0LL and m - 1 , and a newline [ENDL] ; [ENDL] n , m = long long", "c++": "cin >> n >> m ; int main() { if ( n == 0 and m != 0 ) puts ( \" Impossible \" ) ; else cout << ( n + max ( 0LL , m - n ) ) << \"   \" << ( n + max ( 0LL , m - 1 ) ) << endl ; ; long long n , m ; }"}}
{"translation": {"en": "read n , m [ENDL] if n is 0 and m is 0 [ENDL] print 0 0 [ENDL] if n is 0 [ENDL] print Impossible [ENDL] mx = long long = n + m [ENDL] if m carries a nonzero value , decrease mx by 1 [ENDL] mn = long long = n + m [ENDL] mn = mn = lowest number between n and m [ENDL] print mn mx [ENDL] n , m = integers", "c++": "int main() { cin >> n >> m ; if ( ! n && ! m ) cout << \" 0 0\\n \" ; if ( ! n ) return 0; } cout << \" Impossible\\n \" ; long long mx = n + m ; return 0; } if ( m ) mx -- ; long long mn = n + m ; mn -= min ( n , m ) ; cout << mn << \"   \" << mx << endl ; long long n , m ; return 0; }"}}
{"translation": {"en": "Read n and m [ENDL] if n is equal to 0 [ENDL] if m is equal to 0 [ENDL] print 0 , 0 and a new line [ENDL] else do the following [ENDL] print Impossible and a new line [ENDL] else do the following [ENDL] mn , mx , a , b , c , d = integers [ENDL] if m is equal to 0 [ENDL] set mx to n [ENDL] else do the following [ENDL] set mx to m + n - 1 [ENDL] set mn to n - 1 [ENDL] set m to m - n - 1 [ENDL] if m is greater than 0 [ENDL] set mn to mn + m [ENDL] else do the following [ENDL] set mn to mn + 1 [ENDL] print mn , mx and a new line [ENDL] let mn be a long integer", "c++": "int main() { cin >> n >> m ; if ( n == 0 ) if ( m == 0 ) cout << 0 << \"   \" << 0 << endl ; else cout << \" Impossible \" << endl ; else long long mn , mx , a , b , c , d ; if ( m == 0 ) mx = n ; else mx = m + ( n - 1 ) ; mn = ( n - 1 ) ; m = m - ( n - 1 ) ; if ( m > 0 ) mn = mn + m ; else mn = mn + 1 ; cout << mn << \"   \" << mx << endl ; long long mn ; } }"}}
{"translation": {"en": "let a , b be integers [ENDL] read a and b [ENDL] if a is equal to 0 and b is equal to 0 [ENDL] print 0 and space and 0 and newline [ENDL] if a is equal to 0 [ENDL] print Impossible and newline [ENDL] semicolumn [ENDL] if b is equal to 0 [ENDL] print a and space and a and newline [ENDL] let mx be a long integer [ENDL] if b > = a [ENDL] the value of mn = a + ( b - a ) [ENDL] else do the following [ENDL] the value of mn is equal to a [ENDL] the value of mx is equal to a + ( b - 1 ) [ENDL] print mn and space and mx and newline [ENDL] create integers n , m", "c++": "int main() { int a , b ; cin >> a >> b ; if ( a == 0 && b == 0 ) cout << 0 << '   ' << 0 << endl ; if ( a == 0 ) return 0; } cout << \" Impossible \" << endl ; ; if ( b == 0 ) return 0; } cout << a << '   ' << a << endl ; long long mx ; return 0; } if ( b >= a ) mn = a + ( b - a ) ; else mn = a ; mx = a + ( b - 1 ) ; } cout << mn << '   ' << mx << endl ; int n , m ; return 0; }"}}
{"translation": {"en": "read n read m [ENDL] if n is 0 and m is greater than 0 [ENDL] print \" Impossible \" print newline [ENDL] create integers mn , mx [ENDL] set mn to n + ( maximum of ( 0 and m - n ) ) [ENDL] set mx to n + maximum of ( m - 1 ) [ENDL] print mn print \" \" print mx print newline [ENDL] declare integer variables n and m", "c++": "int main() { cin >> n >> m ; if ( n == 0 && m > 0 ) cout << \" Impossible \" << endl ; int mn , mx ; return 0; } mn = n + ( max ( 0 , m - n ) ) ; mx = n + max ( 0 , m - 1 ) ; cout << mn << \"   \" << mx << endl ; int n , m ; return 0; }"}}
{"translation": {"en": "read n and m and keep looping [ENDL] create integer mx = n + max of m - 1 and 0 [ENDL] create integer mn = n + max of 0 and m - n [ENDL] if mn is greater than mx [ENDL] print \" Impossible \" [ENDL] else [ENDL] print mn , \" \" and mx [ENDL] ch , ad = integers", "c++": "int main() { while ( cin >> n >> m ) int mx = n + max ( m - 1 , 0 ) ; int mn = n + max ( 0 , m - n ) ; if ( mn > mx ) cout << \" Impossible \" << endl ; else cout << mn << \"   \" << mx << endl ; int ch , ad ; } }"}}
{"translation": {"en": "read ch , ad [ENDL] if ad is 0 and ch > 0 [ENDL] print Impossible [ENDL] else [ENDL] print ad + ch - min ( ad , ch ) , \" \" , ad + max ( ch - 1 , 0 ) [ENDL] create long longs n , m", "c++": "int main() { cin >> ad >> ch ; if ( ad == 0 && ch > 0 ) cout << \" Impossible \" << endl ; else cout << ad + ch - min ( ad , ch ) << \"   \" << ad + max ( ch - 1 , 0 ) << endl ; long long n , m ; return 0; }"}}
{"translation": {"en": "read n read m [ENDL] create long longs x , y [ENDL] if n is 0 [ENDL] if m is true [ENDL] print \" Impossible \\ n \" [ENDL] else [ENDL] print \" 0 0 \\ n \" [ENDL] else [ENDL] if m is true [ENDL] set y to ( n - 1 ) + m [ENDL] set x to n [ENDL] if m is greater than n , increment x by ( m - n ) [ENDL] else [ENDL] set x to y to n [ENDL] print x print \" \" print y print \" \\ n \" [ENDL] n , m = integers", "c++": "int main() { cin >> n >> m ; long long x , y ; if ( n == 0 ) if ( m ) cout << \" Impossible\\n \" ; else cout << \" 0 0\\n \" ; else if ( m ) y = ( n - 1 ) + m ; x = n ; if ( m > n ) x += ( m - n ) ; else x = y = n ; cout << x << \"   \" << y << \" \\n \" ; int n , m ; } return 0; }"}}
{"translation": {"en": "read n , m [ENDL] if n is 0 and m is 0 [ENDL] print 0 , \" \" , 0 [ENDL] else if n is 0 [ENDL] print Impossible [ENDL] else [ENDL] print if n > m , n else m , \" \" , if m > 0 , n + m - 1 else n [ENDL] create integers n , m", "c++": "int main() { cin >> n >> m ; if ( n == 0 && m == 0 ) cout << 0 << \"   \" << 0 << endl ; else if ( n == 0 ) cout << \" Impossible \" << endl ; else cout << ( n > m ? n : m ) << \"   \" << ( m > 0 ? n + m - 1 : n ) << endl ; int n , m ; } return 0; }"}}
{"translation": {"en": "read n read m [ENDL] if n is 0 and m is greater than 0 [ENDL] print \" Impossible \" print newline [ENDL] else [ENDL] print n + m - minimum of n and m print \" \" print n + maximum of m - 1 and 0 , print newline [ENDL] n , m , mn , mx = integers", "c++": "int main() { cin >> n >> m ; if ( n == 0 && m > 0 ) cout << \" Impossible \" << endl ; else cout << n + m - min ( n , m ) << \"   \" << n + max ( m - 1 , 0 ) << endl ; int n , m , mn , mx ; return 0; }"}}
{"translation": {"en": "Read n and m [ENDL] if n is equal to 0 [ENDL] if m is equal to 0 [ENDL] print 0 0 and a new line [ENDL] else do the following [ENDL] print Impossible and a new line [ENDL] if m is equal to 0 [ENDL] print n , \" \" , n and a new line [ENDL] set mx to n + m - 1 [ENDL] if n is greater than or equal to m [ENDL] set mn to n [ENDL] else do the following [ENDL] set mn to n [ENDL] print mn , \" \" , mx and a new line [ENDL] n , m = long long int", "c++": "int main() { cin >> n >> m ; if ( n == 0 ) if ( m == 0 ) cout << \" 0 0 \" << endl ; else cout << \" Impossible \" << endl ; if ( m == 0 ) return 0; } cout << n << \"   \" << n << endl ; mx = n + m - 1 ; return 0; } if ( n >= m ) mn = n ; else mn = m ; cout << mn << \"   \" << mx << endl ; long long int n , m ; return 0; }"}}
{"translation": {"en": "read n then m [ENDL] if n is 0 and m is greater than 0 [ENDL] print \" Impossible \" [ENDL] else [ENDL] if n is greater or equal to m [ENDL] print n and ' ' [ENDL] else [ENDL] print ( m / n ) * n + ( m % n ) and ' ' [ENDL] if m is greater than 0 [ENDL] print ( n - 1 ) + m [ENDL] else [ENDL] print n [ENDL] declare integers n and m", "c++": "int main() { cin >> n >> m ; if ( n == 0 && m > 0 ) cout << \" Impossible\\n \" ; else if ( n >= m ) cout << n << '   ' ; else cout << ( m / n ) * n + ( m % n ) << '   ' ; if ( m > 0 ) cout << ( n - 1 ) + m << endl ; else cout << n << endl ; int n , m ; } return 0; }"}}
{"translation": {"en": "read n and m [ENDL] if n = 0 and m > 0 [ENDL] print \" Impossible \" [ENDL] declare int variables mn and mx [ENDL] set mn to n [ENDL] if m = 0 [ENDL] assign n to mx [ENDL] else [ENDL] set mx to n + ( m - 1 ) [ENDL] if m is greater than n , increase mn by m - n [ENDL] print mn , \" \" and mx [ENDL] n , m = long long", "c++": "int main() { cin >> n >> m ; if ( n == 0 && m > 0 ) cout << \" Impossible \" << endl ; int mn , mx ; return 0; } mn = n ; if ( m == 0 ) mx = n ; else mx = n + ( m - 1 ) ; if ( m > n ) mn += ( m - n ) ; cout << mn << \"   \" << mx << endl ; long long n , m ; return 0; }"}}
{"translation": {"en": "read n , m [ENDL] if n is 0 and m is not 0 [ENDL] print Impossible [ENDL] if n is 0 and m is 0 [ENDL] print 0 , \" \" , 0 [ENDL] if n is not 0 and m is 0 [ENDL] print n , \" \" , n [ENDL] if n < = m [ENDL] print m , \" \" , n - 1 + m [ENDL] else [ENDL] print n , \" \" , n + m - 1 [ENDL] let n , m , c , d be integers", "c++": "int main() { cin >> n >> m ; if ( n == 0 && m != 0 ) cout << \" Impossible \" << endl ; if ( n == 0 && m == 0 ) return 0; } cout << 0 << \"   \" << 0 << endl ; if ( n != 0 && m == 0 ) return 0; } cout << n << \"   \" << n << endl ; if ( n <= m ) return 0; } cout << m << \"   \" << n - 1 + m << endl ; else cout << n << \"   \" << n + m - 1 << endl ; int n , m , c , d ; } return 0; }"}}
{"translation": {"en": "while read n , m [ENDL] if n is equal to 0 and m is equal to 0 [ENDL] print 0 and space and 0 and newline [ENDL] else do the following [ENDL] if n is equal to 0 [ENDL] print Impossible and newline [ENDL] else do the following [ENDL] if n is equal to 1 [ENDL] if m is equal to 0 [ENDL] print n and space and n and newline [ENDL] else do the following [ENDL] print m and space and m and newline [ENDL] else do the following [ENDL] if n > = m [ENDL] if m is equal to 0 [ENDL] print n and space and n and newline [ENDL] else do the following [ENDL] c is equal to m + n - 1 [ENDL] print n and space and c and newline [ENDL] else do the following [ENDL] d is equal to m + n - 1 [ENDL] print m and space and d and newline [ENDL] declare int variables n and m", "c++": "int main() { while ( cin >> n >> m ) if ( n == 0 && m == 0 ) cout << 0 << \"   \" << 0 << endl ; else if ( n == 0 ) cout << \" Impossible \" << endl ; else if ( n == 1 ) if ( m == 0 ) cout << n << \"   \" << n << endl ; else cout << m << \"   \" << m << endl ; else } if ( n >= m ) if ( m == 0 ) cout << n << \"   \" << n << endl ; else c = m + n - 1 ; cout << n << \"   \" << c << endl ; else } d = m + n - 1 ; cout << m << \"   \" << d << endl ; int n , m ; } } } } } }"}}
{"translation": {"en": "read input to n and m [ENDL] if n = 0 and m ! = 0 [ENDL] print \" Impossible \" [ENDL] else if n = 0 and m = 0 [ENDL] print 0 , \" \" and 0 [ENDL] else [ENDL] declare integer mx = n + ( max of 0 and m - 1 ) [ENDL] declare integer mn = n + ( max of 0 and m - n ) [ENDL] print mn , \" \" and mx [ENDL] create integer array dx with dx = { - 1 , 0 , 1 , 0 }", "c++": "int main() { cin >> n >> m ; if ( n == 0 and m != 0 ) cout << \" Impossible \" << endl ; else if ( n == 0 and m == 0 ) cout << 0 << \"   \" << 0 << endl ; else int mx = n + max ( 0 , m - 1 ) ; int mn = n + max ( 0 , m - n ) ; cout << mn << \"   \" << mx << endl ; int dx [ ] = { - 1 , 0 , 1 , 0 } ; } }"}}
{"translation": {"en": "create integer array dy with dy = { 0 , 1 , 0 , - 1 } [ENDL] create long longs n , m [ENDL] read n read m [ENDL] if m is 0 and n is greater than or equal to 0 [ENDL] print n print \" \" print n print newline [ENDL] if n is 0 and m is greater than 0 [ENDL] print \" Impossible \" print newline [ENDL] create long long maxsum with maxsum = m + n - 1 [ENDL] create long long minsum with minsum = n + maximum of ( m - n and 0LL ) [ENDL] print minsum print \" \" print maxsum print newline [ENDL] create int t , s , q", "c++": "int dy [ ] = { 0 , 1 , 0 , - 1 } ; long long n , m ; int main() { cin >> n >> m ; if ( m == 0 && n >= 0 ) cout << n << \"   \" << n << endl ; if ( n == 0 && m > 0 ) return 0; } cout << \" Impossible \" << endl ; long long maxsum = m + n - 1 ; return 0; } long long minsum = n + max ( m - n , 0LL ) ; cout << minsum << \"   \" << maxsum << endl ; int t , s , q ; }"}}
{"translation": {"en": "cnt = 0 [ENDL] read t , s and q [ENDL] while s < t [ENDL] set s to s * q [ENDL] increment cnt [ENDL] print cnt [ENDL] declare integers t , s , q", "c++": "int main() { int cnt = 0 ; cin >> t >> s >> q ; while ( s < t ) s = s * q ; cnt ++ ; cout << cnt << endl ; } int t , s , q ; return 0; }"}}
{"translation": {"en": "read t , s , q [ENDL] declare integer ans = 1 [ENDL] declare integer temp = s * q [ENDL] while temp is less than t [ENDL] increment ans [ENDL] let temp be temp * q [ENDL] print ans , newline [ENDL] create long long ints a , b , c , and coun = 0", "c++": "cin >> t >> s >> q ; int main() { int ans = 1 ; int temp = s * q ; while ( temp < t ) ++ ans ; temp *= q ; cout << ans << endl ; } long long a , b , c , coun = 0 ; return 0; }"}}
{"translation": {"en": "read a , b , and c [ENDL] while a is greater than b [ENDL] set b to b * c [ENDL] add 1 to coun [ENDL] show coun [ENDL] the constant double value of PI = acos ( - 1 )", "c++": "int main() { cin >> a >> b >> c ; while ( a > b ) b *= c ; coun ++ ; cout << coun << endl ; } const long double PI = acos ( - 1 ) ; }"}}
{"translation": {"en": "let mod be a inline function that accepts long long n , long long m and returns a long integer value [ENDL] the long integer value of ret = n modulo m [ENDL] if ret is less than 0 , increment ret by m [ENDL] return the value of ret [ENDL] let gcd be a function that accepts long long a , long long b and returns a long integer [ENDL] if a equals 0 [ENDL] return the value of b [ENDL] else do the following [ENDL] return the value of gcd of b modulo a and a [ENDL] let q , s , t be long integers [ENDL] read t , s , q [ENDL] the long integer value of ans = 0 [ENDL] while s is less than t [ENDL] s is equal to s * q [ENDL] increment ans by 1 [ENDL] print ans and newline [ENDL] declare constant integer MAXN = 1e4 + 4", "c++": "inline long long mod ( long long n , long long m ) long long ret = n % m ; if ( ret < 0 ) ret += m ; return ret ; long long gcd ( long long a , long long b ) } if ( a == 0 ) return b ; else return gcd ( b % a , a ) ; long long q , s , t ; } int main() { cin >> t >> s >> q ; long long ans = 0 ; while ( s < t ) s *= q ; ans ++ ; cout << ans << ' \\n ' ; } const int MAXN = 1e4 + 4 ; }"}}
{"translation": {"en": "declare integers n , a , b [ENDL] read n , a , b [ENDL] declare integer ans = 0 [ENDL] while a is less than n [ENDL] let a be a * b [ENDL] increment ans [ENDL] print ans and \" \\ n \" [ENDL] let t , s , q , c be long integers with c = 0", "c++": "int n , a , b ; cin >> n >> a >> b ; int main() { int ans = 0 ; while ( a < n ) a *= b ; ans ++ ; cout << ans << \" \\n \" ; } long int t , s , q , c = 0 ; return 0; }"}}
{"translation": {"en": "read t , s , q [ENDL] while t is greater than s [ENDL] s is equal to s * q [ENDL] increment c by 1 [ENDL] print c and newline [ENDL] let t , s , q be integers", "c++": "int main() { cin >> t >> s >> q ; while ( t > s ) s *= q ; c ++ ; cout << c << endl ; } int t , s , q ; return 0; }"}}
{"translation": {"en": "while read t , s , q [ENDL] let ans be integer 0 [ENDL] while s is less than t [ENDL] increment ans by 1 [ENDL] multiply s by q [ENDL] print ans and newline [ENDL] create new integer constant called maxn with value 2e3 + 10", "c++": "int main() { while ( cin >> t >> s >> q ) int ans = 0 ; while ( s < t ) ans ++ ; s *= q ; cout << ans << endl ; } const int maxn = 2e3 + 10 ; } }"}}
{"translation": {"en": "create constant integer eps = 1e - 14 [ENDL] mod is a new constant integer with value 1e9 + 7 [ENDL] declare long long constant inf = 1e18 [ENDL] define integers t , s and p [ENDL] read standard input to t , s and p [ENDL] cnt is a new integer with value 0 [ENDL] while s < t [ENDL] multiply s by p [ENDL] add 1 to cnt [ENDL] print cnt [ENDL] create ints t , s , and q", "c++": "const int eps = 1e-14 ; const int mod = 1e9 + 7 ; const long long inf = 1e18 ; int t , s , p ; int main() { cin >> t >> s >> p ; int cnt = 0 ; while ( s < t ) s *= p ; ++ cnt ; cout << cnt << endl ; } int t , s , q ; }"}}
{"translation": {"en": "make integer ans = 1 [ENDL] read t , s , and q [ENDL] make long double now = 0 [ENDL] create long double last = s [ENDL] while last is less than t [ENDL] make long double tmp = ( last - now ) * q [ENDL] if last + tmp * ( q - 1 ) / 2 is greater than or equal to t , break loop [ENDL] set last to last + ceil ( tmp ) * ( q - 1 ) / q [ENDL] add ceil ( tmp ) to now [ENDL] subtract last from now [ENDL] increment ans [ENDL] show ans [ENDL] create long long int s , t , and q", "c++": "int ans = 1 ; cin >> t >> s >> q ; int main() { long double now = 0 ; long double last = s ; while ( last < t ) long double tmp = ( last - now ) * q ; if ( last + tmp * ( q - 1 ) / q >= t ) break ; last += ceil ( tmp ) * ( q - 1 ) / q ; now += ceil ( tmp ) ; now -= last ; ans ++ ; cout << ans << endl ; } long long s , t , q ; }"}}
{"translation": {"en": "read t , s , and q [ENDL] make long long ans = 0 [ENDL] while s is less than t [ENDL] set s to s * q [ENDL] increment ans [ENDL] show ans [ENDL] declare integers t , s and q", "c++": "int main() { cin >> t >> s >> q ; long long ans = 0 ; while ( s < t ) s *= q ; ans ++ ; cout << ans << endl ; } int t , s , q ; return 0; }"}}
{"translation": {"en": "read from the input to t , s and q [ENDL] ans is a new integer variable = 1 [ENDL] while s * q < t [ENDL] increment ans by one [ENDL] set s to s multiplied by q [ENDL] print ans [ENDL] declare new integers t , s and q", "c++": "int main() { cin >> t >> s >> q ; int ans = 1 ; while ( s * q < t ) ans ++ ; s *= q ; cout << ans << endl ; } int t , s , q ; return 0; }"}}
{"translation": {"en": "read variables t , s and q from the input [ENDL] create new integer variable ans = 0 [ENDL] while s < t [ENDL] set s to s multiplied by q [ENDL] increment ans [ENDL] print ans [ENDL] declare new int variables t , s and q", "c++": "int main() { cin >> t >> s >> q ; int ans = 0 ; while ( s < t ) s *= q ; ans ++ ; cout << ans << endl ; } int t , s , q ; }"}}
{"translation": {"en": "read input to t , s and q [ENDL] define integer ans = 1 [ENDL] define new integer x with value s * q [ENDL] while x < t [ENDL] increment ans [ENDL] change the value of x to x multiplied by q [ENDL] print ans [ENDL] declare integers n , m", "c++": "int main() { cin >> t >> s >> q ; int ans = 1 ; int x = s * q ; while ( x < t ) ans ++ ; x *= q ; cout << ans << endl ; } int n , m ; return 0; }"}}
{"translation": {"en": "declare integer array b size 200007 [ENDL] declare integer arrays a size 200007 , c size 200007 [ENDL] declare integer vector v [ENDL] declare integers i , j , l , h , t = 0 [ENDL] declare strings s , s1 , s2 , s3 [ENDL] declare long longs RE , DE , HE [ENDL] read RE and DE and HE [ENDL] while DE * HE is less than RE [ENDL] increment t [ENDL] let DE be DE * HE [ENDL] print t + 1 and newline [ENDL] declare integer variables a , b and c", "c++": "int b [ 200007 ] ; int a [ 200007 ] , c [ 200007 ] ; vector < int > v ; int i , j , l , h , t = 0 ; int main() { string s , s1 , s2 , s3 ; long long RE , DE , HE ; cin >> RE >> DE >> HE ; while ( DE * HE < RE ) t ++ ; DE *= HE ; cout << t + 1 << endl ; } int a , b , c ; return 0; }"}}
{"translation": {"en": "declare integer variable ans = 0 [ENDL] read variables a , b and c from the input [ENDL] while b < a [ENDL] change the value of b to b multiplied by c [ENDL] increment ans [ENDL] print ans [ENDL] create ints t , s , and q", "c++": "int main() { int ans = 0 ; cin >> a >> b >> c ; while ( b < a ) b *= c ; ans ++ ; cout << ans << endl ; } int t , s , q ; }"}}
{"translation": {"en": "make int count = 0 [ENDL] read t , s , and q [ENDL] while s is less than t [ENDL] set s to s * q [ENDL] set count to count + 1 [ENDL] show count [ENDL] declare doubles t , s , q , c and ans with c and ans = 0", "c++": "int main() { int count = 0 ; cin >> t >> s >> q ; while ( s < t ) s = s * q ; count += 1 ; cout << count << endl ; } double t , s , q , c = 0 , ans = 0 ; }"}}
{"translation": {"en": "read user input to t , s and q [ENDL] while s < t [ENDL] change s to the product of s and q [ENDL] increment ans by one [ENDL] print ans to the standard output [ENDL] create const int maxn = 1e5 + 5", "c++": "int main() { cin >> t >> s >> q ; while ( s < t ) s = s * q ; ans ++ ; cout << ans << endl ; } const int maxn = 1e5 + 5 ; return 0; }"}}
{"translation": {"en": "create long long ints t , s , q , and ans = 0 [ENDL] read t , s , and q [ENDL] while s is less than t [ENDL] set s to s * q [ENDL] add 1 to ans [ENDL] show ans [ENDL] t , s , q = int , ans = 0", "c++": "long long t , s , q , ans = 0 ; int main() { cin >> t >> s >> q ; while ( s < t ) s *= q ; ans ++ ; cout << ans << endl ; } int t , s , q , ans = 0 ; return 0; }"}}
{"translation": {"en": "read t , s , q [ENDL] downloaded = s [ENDL] while downloaded < t [ENDL] add s * ( q - 1 ) to downloaded [ENDL] s = downloaded [ENDL] increment ans [ENDL] print ans [ENDL] let MOD be a integer constant which equals 1e9 + 7", "c++": "int main() { cin >> t >> s >> q ; int downloaded = s ; while ( downloaded < t ) downloaded += s * ( q - 1 ) ; s = downloaded ; ans ++ ; cout << ans << endl ; } const int MOD = 1e9 + 7 ; return 0; }"}}
{"translation": {"en": "let INF be a integer constant which equals INT_MAX [ENDL] let LINF be a long long constant which equals LLONG_MAX [ENDL] let ans be integer [ENDL] let t , s , q be long double values [ENDL] read t , s , q [ENDL] let x , z , y be long integers with x , z equals 0 and y equals s [ENDL] while s is less than t [ENDL] multiply s by q [ENDL] increase ans by 1 [ENDL] print ans and endline [ENDL] declare integer variables ans , t , s and q", "c++": "const int INF = INT_MAX ; const long long LINF = LLONG_MAX ; int ans ; long double t , s , q ; cin >> t >> s >> q ; int main() { long double x = 0 , z = 0 , y = s ; while ( s < t ) s *= q ; ans ++ ; cout << ans << endl ; } int ans , t , s , q ; }"}}
{"translation": {"en": "set ans to 0 [ENDL] read standard input to t , s and q [ENDL] while s < t [ENDL] multiply s by q [ENDL] increment ans by one [ENDL] print ans to the standard output [ENDL] let a , b , c be integers", "c++": "ans = 0 ; int main() { cin >> t >> s >> q ; while ( s < t ) s *= q ; ans ++ ; cout << ans << endl ; } int a , b , c ; return 0; }"}}
{"translation": {"en": "read a [ENDL] read b [ENDL] read c [ENDL] let s ( b ) , x ( 0 ) be integers [ENDL] while s is less than a [ENDL] s is equal to s * c [ENDL] increment x by 1 [ENDL] print x and newline [ENDL] create long longs t , s and q", "c++": "int main() { cin >> a ; cin >> b ; cin >> c ; int s ( b ) , x ( 0 ) ; while ( s < a ) s *= c ; ++ x ; cout << x << endl ; } long long t , s , q ; return 0; }"}}
{"translation": {"en": "new integer cnt = 1 [ENDL] read input to t , s and q [ENDL] in the infinite loop [ENDL] if s * q > = t [ENDL] stop the loop [ENDL] else [ENDL] set s to s * q [ENDL] increment cnt [ENDL] print cnt to the standard output [ENDL] declare integers n , s , q", "c++": "int cnt = 1 ; int main() { cin >> t >> s >> q ; while ( 1 ) if ( s * q >= t ) break ; else s = s * q ; cnt ++ ; cout << cnt << endl ; } } int n , s , q ; return 0; }"}}
{"translation": {"en": "declare integers t , w , i , j , k , cnt , ans = 0 [ENDL] read n , s , q [ENDL] while s is less than n [ENDL] increment ans [ENDL] let s be s * q [ENDL] print ans , newline [ENDL] integer as t , s , q , cnt = 0", "c++": "int t , w , i , j , k , cnt , ans = 0 ; int main() { cin >> n >> s >> q ; while ( s < n ) ans ++ ; s *= q ; cout << ans << endl ; } int t , s , q , cnt = 0 ; return 0; }"}}
{"translation": {"en": "read t , s , q [ENDL] if s is less than t then do the following [ENDL] add one to cnt [ENDL] multiply s by q [ENDL] output cnt [ENDL] create integers t , s and q", "c++": "int main() { cin >> t >> s >> q ; while ( s < t ) cnt ++ ; s *= q ; cout << cnt << endl ; } int t , s , q ; }"}}
{"translation": {"en": "read t , s and q and keep looping [ENDL] declare integer variable with name ans = 0 [ENDL] while s < t [ENDL] increment ans by one [ENDL] multiply s by q [ENDL] print ans to the standard output [ENDL] let T , S , q be integers", "c++": "int main() { while ( cin >> t >> s >> q ) int ans = 0 ; while ( s < t ) ans ++ ; s *= q ; cout << ans << endl ; } int T , S , q ; } }"}}
{"translation": {"en": "read T , S , q [ENDL] print ( int ) ceil ( log ( T * 1 . 0 / S ) / log ( q ) ) and newline [ENDL] create long long t , s , q", "c++": "int main() { cin >> T >> S >> q ; cout << ( int ) ceil ( log ( T * 1.0 / S ) / log ( q ) ) << endl ; long long t , s , q ; }"}}
{"translation": {"en": "read t , s and q [ENDL] ans = 0 [ENDL] while s < t [ENDL] s = s * q [ENDL] increment ans [ENDL] print ans [ENDL] n , m and a are long long integers", "c++": "int main() { cin >> t >> s >> q ; long long ans = 0 ; while ( s < t ) s *= q ; ans ++ ; cout << ans << endl ; } long long int n , m , a ; return 0; }"}}
{"translation": {"en": "read n , m and a [ENDL] n = n % 10000000000 [ENDL] m = m % 10000000000 [ENDL] a = a % 10000000000 [ENDL] let int ans be long longs [ENDL] if a > n and a > m [ENDL] assign value of 1 to the ans [ENDL] else [ENDL] if n % a is greater than 0 [ENDL] n = n / a + 1 [ENDL] else [ENDL] n = n / a [ENDL] if m % a is greater than 0 [ENDL] m = m / a + 1 [ENDL] else [ENDL] m = m / a [ENDL] ans = n * m [ENDL] print ans and a new line [ENDL] create integers n , m and a", "c++": "int main() { cin >> n >> m >> a ; n = n % 10000000000 ; m = m % 10000000000 ; a = a % 10000000000 ; long long int ans ; if ( a > n && a > m ) ans = 1 ; else if ( ( n % a ) > 0 ) n = n / a + 1 ; else n = n / a ; if ( m % a > 0 ) } m = m / a + 1 ; else m = m / a ; ans = n * m ; } cout << ans << endl ; } int n , m , a ; }"}}
{"translation": {"en": "read n , m and a [ENDL] print 1ll * ( n + a - 1 ) / a * ( ( m + a - 1 ) / a ) and a new line [ENDL] create integers m , n , a", "c++": "int main() { cin >> n >> m >> a ; cout << 1ll * ( n + a - 1 ) / a * ( ( m + a - 1 ) / a ) << endl ; int m , n , a ; }"}}
{"translation": {"en": "read m [ENDL] read n [ENDL] read a [ENDL] create integer l with l = round up ( n / ( a * 1 . 0 ) ) [ENDL] create integer w with w = round up ( m / ( a * 1 . 0 ) ) [ENDL] print long long casted l * long long casted w print newline [ENDL] m , n and a = integers", "c++": "cin >> m ; int main() { cin >> n ; cin >> a ; int l = ceil ( n / ( a * 1.0 ) ) ; int w = ceil ( m / ( a * 1.0 ) ) ; cout << ( long long ) l * ( long long ) w << endl ; int m , n , a ; return 0; }"}}
{"translation": {"en": "read m [ENDL] read n [ENDL] read a [ENDL] int l = ceil of n / ( a * 1 . 0 ) [ENDL] int w = ceil of m / ( a * 1 . 0 ) [ENDL] print l * w and a new line [ENDL] declare long longs called a , b and c", "c++": "cin >> m ; int main() { cin >> n ; cin >> a ; int l = ceil ( n / ( a * 1.0 ) ) ; int w = ceil ( m / ( a * 1.0 ) ) ; cout << ( long long ) l * ( long long ) w << endl ; long long a , b , c ; return 0; }"}}
{"translation": {"en": "read a , b and c [ENDL] print ( ( ( a + c - 1 ) / c ) * ( ( b + c - 1 ) / c ) ) and \" \\ n \" [ENDL] create doubles n , m and a", "c++": "int main() { cin >> a >> b >> c ; cout << ( ( ( a + c - 1 ) / c ) * ( ( b + c - 1 ) / c ) ) << \" \\n \" ; double n , m , a ; }"}}
{"translation": {"en": "read n , m and a [ENDL] print ( n / a * 1 . 0 ) rounded upward * ( m / a * 1 . 0 ) rounded upward , and a new line [ENDL] n , m , a , x and y are long longs", "c++": "int main() { cin >> n >> m >> a ; cout << ( long long ) ceil ( n / a * 1.0 ) * ( long long ) ceil ( m / a * 1.0 ) << endl ; long long n , m , a , x , y ; return 0; }"}}
{"translation": {"en": "read n , m and a [ENDL] if n % a ! = 0 and m % a ! = 0 [ENDL] x = n / a + 1 [ENDL] y = m / a + 1 [ENDL] else if n % a = 0 and m % a ! = 0 [ENDL] x = n / a [ENDL] y = m / a + 1 [ENDL] else if n % a ! = 0 and m % a = 0 [ENDL] x = n / a + 1 [ENDL] y = m / a [ENDL] else [ENDL] x = n / a [ENDL] y = m / a [ENDL] print x * y and a new line [ENDL] create long longs n , m , a , x , y", "c++": "int main() { cin >> n >> m >> a ; if ( n % a != 0 and m % a != 0 ) x = n / a + 1 ; y = m / a + 1 ; else if ( n % a == 0 and m % a != 0 ) x = n / a ; y = m / a + 1 ; else if ( n % a != 0 and m % a == 0 ) x = n / a + 1 ; y = m / a ; else x = n / a ; y = m / a ; cout << x * y << endl ; } long long n , m , a , x , y ; }"}}
{"translation": {"en": "read n read m read a [ENDL] if a % a is not 0 and m % a is not 0 [ENDL] set x to n / a + 1 [ENDL] set y to m / a + 1 [ENDL] else if n % a is 0 and m % a is not 0 [ENDL] set x to n / a [ENDL] set y to m / a + 1 [ENDL] else if n % a is not 0 and m % a is 0 [ENDL] set x to n / a + 1 [ENDL] set y to m / a [ENDL] else [ENDL] set x to n / a [ENDL] set y to m / a [ENDL] print x * y print newline [ENDL] declare long longs i , j , c1 , c2 , n , m and a", "c++": "int main() { cin >> n >> m >> a ; if ( n % a != 0 and m % a != 0 ) x = n / a + 1 ; y = m / a + 1 ; else if ( n % a == 0 and m % a != 0 ) x = n / a ; y = m / a + 1 ; else if ( n % a != 0 and m % a == 0 ) x = n / a + 1 ; y = m / a ; else x = n / a ; y = m / a ; cout << x * y << endl ; } long long i , j , c1 , c2 , n , m , a ; }"}}
{"translation": {"en": "read n , m and a [ENDL] if n % a = 0 [ENDL] c1 = n / a [ENDL] else [ENDL] c1 = n / a + 1 [ENDL] if m % a = 0 [ENDL] c2 = m / a [ENDL] else [ENDL] c2 = m / a + 1 [ENDL] print c1 * c2 and a new line [ENDL] create long longs n , m and a", "c++": "int main() { cin >> n >> m >> a ; if ( n % a == 0 ) c1 = n / a ; else c1 = n / a + 1 ; if ( m % a == 0 ) c2 = m / a ; else c2 = m / a + 1 ; cout << c1 * c2 << endl ; long long n , m , a ; return 0; }"}}
{"translation": {"en": "read n , m and a [ENDL] long long stones = ( n / a ) * ( m / a ) [ENDL] if n % a ! = 0 add m / a to stones [ENDL] if m % a ! = 0 add n / a to stones [ENDL] if m % a ! = 0 & & n % a ! = 0 add 1 to stones [ENDL] print stones and a new line [ENDL] let n , m and a be long longs", "c++": "int main() { cin >> n >> m >> a ; long long stones = ( n / a ) * ( m / a ) ; if ( n % a != 0 ) { stones += m / a ; } if ( m % a != 0 ) { stones += n / a ; } if ( m % a != 0 && n % a != 0 ) { ++ stones ; } cout << stones << endl ; long long n , m , a ; return 0; }"}}
{"translation": {"en": "read n , m and a [ENDL] set long long ans to 0 [ENDL] if n % a is equal to 0 [ENDL] n = n / a [ENDL] else [ENDL] n = n / a + 1 [ENDL] if m % a is equal to 0 [ENDL] m = m / a [ENDL] else [ENDL] m = m / a + 1 [ENDL] print m * n and a new line [ENDL] m , n and a are integers", "c++": "int main() { cin >> n >> m >> a ; long long ans = 0 ; if ( n % a == 0 ) n = n / a ; else n = n / a + 1 ; if ( m % a == 0 ) } m = m / a ; else m = m / a + 1 ; cout << m * n << endl ; } int m , n , a ; return 0; }"}}
{"translation": {"en": "read m , n and a [ENDL] int l = n / ( a * 1 . 0 ) rounded down [ENDL] int w = m / ( a * 1 . 0 ) rounded down [ENDL] print l * w and a new line [ENDL] n , m and a = doubles", "c++": "cin >> m >> n >> a ; int main() { int l = ceil ( n / ( a * 1.0 ) ) ; int w = ceil ( m / ( a * 1.0 ) ) ; cout << ( ( long long ) l * ( long long ) w ) << endl ; double n , m , a ; return 0; }"}}
{"translation": {"en": "read n , m and a [ENDL] print ( n / a ) rounded up * ( m / a ) rounded up , and a new line [ENDL] let n , m and a be long longs", "c++": "int main() { cin >> n >> m >> a ; cout << ( long long ) ceil ( n / a ) * ( long long ) ceil ( m / a ) << endl ; long long n , m , a ; }"}}
{"translation": {"en": "i and j are long longs with i = 0 and j = 0 [ENDL] while car rean n , m and a [ENDL] if n % a is 1 [ENDL] i = n / a + 1 [ENDL] else [ENDL] i = n / a [ENDL] if m % a is 1 [ENDL] j = m / a + 1 [ENDL] else [ENDL] j = m / a [ENDL] print i * j and a new line [ENDL] create long longs n , m , a", "c++": "int main() { long long i = 0 , j = 0 ; while ( cin >> n >> m >> a ) if ( n % a ) i = n / a + 1 ; else i = n / a ; if ( m % a ) j = m / a + 1 ; else j = m / a ; cout << i * j << endl ; long long n , m , a ; } return 0; }"}}
{"translation": {"en": "create long longs i , j , with i = 0 , j = 0 [ENDL] while read n read m read a is true [ENDL] if n % a is true [ENDL] set i to n / a + 1 [ENDL] else [ENDL] set i to n / a [ENDL] if m % a [ENDL] set j to m / a + 1 [ENDL] else [ENDL] set j to m / a [ENDL] print i * j print newline [ENDL] n = long long", "c++": "int main() { long long i = 0 , j = 0 ; while ( cin >> n >> m >> a ) if ( n % a ) i = n / a + 1 ; else i = n / a ; if ( m % a ) j = m / a + 1 ; else j = m / a ; cout << i * j << endl ; long long n ; } return 0; }"}}
{"translation": {"en": "m = long long [ENDL] a = long long [ENDL] read n , m and a [ENDL] print ( ( n + a - 1 ) / a ) * ( ( m + a - 1 ) / a ) and a new line [ENDL] create long long n", "c++": "int main() { long long m ; long long a ; cin >> n >> m >> a ; cout << ( ( n + a - 1 ) / a ) * ( ( m + a - 1 ) / a ) << endl ; long long n ; return 0; }"}}
{"translation": {"en": "create long long m [ENDL] create long long a [ENDL] read n read m read a [ENDL] print ( ( n + a - 1 ) / a ) * ( ( m + a - 1 ) / a ) print newline [ENDL] int n , m , a and ans = long longs", "c++": "int main() { long long m ; long long a ; cin >> n >> m >> a ; cout << ( ( n + a - 1 ) / a ) * ( ( m + a - 1 ) / a ) << endl ; long long int n , m , a , ans ; return 0; }"}}
{"translation": {"en": "read n , m and a in a loop [ENDL] if a > and a > m [ENDL] print \" 1 \" and a new line [ENDL] else [ENDL] if n % a is greater than 0 [ENDL] n = ( n / a ) + 1 [ENDL] else [ENDL] n = ( n / a ) [ENDL] if m % a is greater than 0 [ENDL] m = ( m / a ) + 1 [ENDL] else [ENDL] m = ( m / a ) [ENDL] ans = n * m [ENDL] print ans and a new line [ENDL] create long longs x , y and a", "c++": "int main() { while ( cin >> n >> m >> a ) if ( a > n && a > m ) cout << \" 1 \" << endl ; else if ( n % a > 0 ) n = ( n / a ) + 1 ; else n = ( n / a ) ; if ( m % a > 0 ) m = ( m / a ) + 1 ; else m = ( m / a ) ; ans = n * m ; cout << ans << endl ; long long x , y , a ; } } return 0; }"}}
{"translation": {"en": "read x , y and a [ENDL] declare long longs xx = x / a and yy = y / a [ENDL] if x % a ! = 0 increment xx [ENDL] if y % a ! = 0 increment yy [ENDL] print xx * yy and a new line [ENDL] create long longs x , y , a", "c++": "int main() { cin >> x >> y >> a ; long long xx = x / a , yy = y / a ; if ( x % a != 0 ) xx ++ ; if ( y % a != 0 ) yy ++ ; cout << xx * yy << endl ; long long x , y , a ; }"}}
{"translation": {"en": "read x read y read a [ENDL] create long longs xx , yy , with xx = x / a , yy = y / a [ENDL] if x % a is not 0 , increment xx [ENDL] if y % a is not 0 , increment yy [ENDL] print xx * yy print newline [ENDL] declare long longs called n , m and a", "c++": "int main() { cin >> x >> y >> a ; long long xx = x / a , yy = y / a ; if ( x % a != 0 ) xx ++ ; if ( y % a != 0 ) yy ++ ; cout << xx * yy << endl ; long long n , m , a ; }"}}
{"translation": {"en": "read n , m and a [ENDL] create long long rows = ( n + a - 1 ) / a [ENDL] create long long cols = ( m + a - 1 ) / a [ENDL] print rows * cols and a new line [ENDL] let n , m , a be long integers", "c++": "int main() { cin >> n >> m >> a ; long long rows = ( n + a - 1 ) / a ; long long cols = ( m + a - 1 ) / a ; cout << rows * cols << endl ; long long n , m , a ; }"}}
{"translation": {"en": "read n , m , a [ENDL] if n modulo a is equal to 0 [ENDL] the value of n = n / a [ENDL] else do the following [ENDL] the value of n = n / a + 1 [ENDL] if m modulo a is equal to 0 [ENDL] the value of m = m / a [ENDL] else do the following [ENDL] the value of m = m / a + 1 [ENDL] print n * m and newline [ENDL] create long longs a , b , c", "c++": "int main() { cin >> n >> m >> a ; if ( n % a == 0 ) n /= a ; else n = n / a + 1 ; if ( m % a == 0 ) m /= a ; else m = m / a + 1 ; cout << n * m << endl ; long long a , b , c ; return 0; }"}}
{"translation": {"en": "while read a read b read c [ENDL] create long longs d , e [ENDL] if a % c is not 0 , set d to a / c + 1 [ENDL] if b % c is not 0 , set e to b / c + 1 [ENDL] if a % c is 0 , set d to a / c [ENDL] if b % c is 0 , set e to b / c [ENDL] create long long f with f = d * e [ENDL] print f print newline [ENDL] n , m , a = long lon", "c++": "int main() { while ( cin >> a >> b >> c ) long long d , e ; if ( a % c != 0 ) d = a / c + 1 ; if ( b % c != 0 ) e = b / c + 1 ; if ( a % c == 0 ) d = a / c ; if ( b % c == 0 ) e = b / c ; long long f = d * e ; cout << f << endl ; long long n , m , a ; } return 0; }"}}
{"translation": {"en": "while reading n then m then a print ( ( n + a - 1 ) / a ) * ( ( m + a - 1 ) / a ) [ENDL] create long long x , y and a", "c++": "int main() { while ( cin >> n >> m >> a ) cout << ( ( n + a - 1 ) / a ) * ( ( m + a - 1 ) / a ) << endl ; long long x , y , a ; return 0; }"}}
{"translation": {"en": "read x , y and a [ENDL] set xx to x / a and yy = y / a [ENDL] if x mod a different from 0 , increment xx [ENDL] if y mod a different from 0 , add 1 to yy [ENDL] print xx * yy [ENDL] create long longs n , m , a", "c++": "int main() { cin >> x >> y >> a ; long long xx = x / a , yy = y / a ; if ( x % a != 0 ) xx ++ ; if ( y % a != 0 ) yy ++ ; cout << xx * yy << endl ; long long n , m , a ; }"}}
{"translation": {"en": "read n read m read a [ENDL] create long longs nN , nM [ENDL] set nN to n / a [ENDL] set nM to m / a [ENDL] if n % a is not 0 , increment nN [ENDL] if m % a is not 0 , increment nM [ENDL] print nN * nM print newline [ENDL] a , b , c , d = integers", "c++": "int main() { cin >> n >> m >> a ; long long nN , nM ; nN = n / a ; nM = m / a ; if ( n % a != 0 ) { nN ++ ; } if ( m % a != 0 ) { nM ++ ; } cout << nN * nM << endl ; long long a , b , c , d ; return 0; }"}}
{"translation": {"en": "Read a , b , c [ENDL] if c is greater than or equal to a and c is greater than or equal to b [ENDL] print 1 and a new line [ENDL] if c is less than a and c is greater than or equal to b [ENDL] if a modulo c is 0 [ENDL] print a / c and a new line [ENDL] else do the following [ENDL] print a / c + 1 and a new line [ENDL] if c is greater than or equal to a and c is less than b [ENDL] if b modulo c is 0 [ENDL] print b / c and a new line [ENDL] else do the following [ENDL] print b / c + 1 and a new line [ENDL] if c is less than a and c is less than b [ENDL] if b modulo c is 0 and a modulo c is 0 [ENDL] print ( a * b ) / ( c * c ) and a new line [ENDL] else if b modulo c is not 0 and a modulo c is 0 [ENDL] print ( a / c ) * ( b / c + 1 ) and a new line [ENDL] else if b modulo c is 0 and a modulo c is not 0 [ENDL] print ( b / c ) * ( a / c + 1 ) and a new line [ENDL] else do the following [ENDL] print ( a / c + 1 ) * ( b / c + 1 ) and a new line [ENDL] noOfOranges , Orange , maxSize , maxWaste , Waste , cnt = integers with Waste = 0 , cnt = 0", "c++": "int main() { cin >> a >> b >> c ; if ( c >= a && c >= b ) cout << \" 1 \" << endl ; if ( c < a && c >= b ) return 0; } if ( a % c == 0 ) cout << a / c << endl ; else cout << a / c + 1 << endl ; if ( c >= a && c < b ) return 0; } if ( b % c == 0 ) cout << b / c << endl ; else cout << b / c + 1 << endl ; if ( c < a && c < b ) return 0; } if ( b % c == 0 && a % c == 0 ) cout << ( a * b ) / ( c * c ) << endl ; else if ( b % c != 0 && a % c == 0 ) cout << ( a / c ) * ( b / c + 1 ) << endl ; else if ( b % c == 0 && a % c != 0 ) cout << ( b / c ) * ( a / c + 1 ) << endl ; else cout << ( a / c + 1 ) * ( b / c + 1 ) << endl ; int noOfOranges , Orange , maxSize , maxWaste , Waste = 0 , cnt = 0 ; return 0; } return 0; }"}}
{"translation": {"en": "read noOfOranges , maxSize , maxWaste [ENDL] for i = 0 to noOfOranges exclusive [ENDL] read Orange [ENDL] if ( Orange > maxSize ) [ENDL] continue next itereation [ENDL] else [ENDL] Waste = Waste + Orange [ENDL] if ( Waste > maxWaste ) [ENDL] increment cnt [ENDL] Waste = 0 [ENDL] print cnt [ENDL] let n , b , d , v , sum , c be integers with sum = 0 , c = 0", "c++": "int main() { cin >> noOfOranges >> maxSize >> maxWaste ; for ( int i = 0 ; i < noOfOranges ; i ++ ) cin >> Orange ; if ( Orange > maxSize ) continue ; else Waste += Orange ; if ( Waste > maxWaste ) cnt ++ ; Waste = 0 ; cout << cnt << endl ; } } } int n , b , d , v , sum = 0 , c = 0 ; return 0; }"}}
{"translation": {"en": "read n , b , d [ENDL] for x = 0 to n exclusive [ENDL] read v [ENDL] if v < = b , increment sum by v [ENDL] if sum is greater than d [ENDL] sum is equal to 0 [ENDL] increment c by 1 [ENDL] print c and endline [ENDL] new constant integer N = 1e5 + 100", "c++": "int main() { cin >> n >> b >> d ; for ( int x = 0 ; x < n ; x ++ ) cin >> v ; if ( v <= b ) sum += v ; if ( sum > d ) sum = 0 ; c ++ ; cout << c << endl ; } } const int N = 1e5 + 100 ; return 0; }"}}
{"translation": {"en": "define constant double PI with value 3 . 14159 [ENDL] create vector of booleans v [ENDL] declare integers n , m , now , ans , b and d , and an array of integers a with N elements [ENDL] st is a set of integers [ENDL] define strings s and t [ENDL] read n , b and d [ENDL] in a for loop , change i from 0 to n exclusive [ENDL] read a [ i ] from the input [ENDL] go to the start of the loop if a [ i ] is greater than b [ENDL] change now to now + a [ i ] [ENDL] if now is greater than d [ENDL] increment ans by one [ENDL] change the value of now to 0 [ENDL] print ans to the standard output [ENDL] n , b , d , a , c , c2 = integers", "c++": "const double PI = 3.14159 ; vector < bool > v ; int n , m , a [ N ] , now , ans , b , d ; set < int > st ; string s , t ; cin >> n >> b >> d ; int main() { for ( int i = 0 ; i < n ; i ++ ) cin >> a [ i ] ; if ( a [ i ] > b ) continue ; now += a [ i ] ; if ( now > d ) ans ++ ; now = 0 ; cout << ans << endl ; } } int n { } , b { } , d { } , a { } , c { } , c2 { } ; return 0; }"}}
{"translation": {"en": "read n , b , d [ENDL] while decrement n [ENDL] read a [ENDL] if ( a < = b ) , c = c + a [ENDL] if ( c > d ) [ENDL] increment c2 [ENDL] c = 0 [ENDL] print c2 [ENDL] create integer n , b , d , result , counter with result = 0 , counter = 0", "c++": "int main() { cin >> n >> b >> d ; while ( n -- ) cin >> a ; if ( a <= b ) { c += a ; } ; if ( c > d ) c2 ++ ; c = 0 ; cout << c2 << endl ; } } int n , b , d , result = 0 , counter = 0 ; return 0; }"}}
{"translation": {"en": "read n , b , d [ENDL] create integer array oranges with size n [ENDL] for integer i = 0 to n - 1 with increment i [ENDL] read oranges [ i ] [ENDL] if oranges [ i ] less than or equal to b then add oranges [ i ] to counter [ENDL] if counter greater than d then [ENDL] increment result [ENDL] set counter to 0 [ENDL] print result [ENDL] n = integer", "c++": "int main() { cin >> n >> b >> d ; int oranges [ n ] ; for ( int i = 0 ; i < n ; i ++ ) cin >> oranges [ i ] ; if ( oranges [ i ] <= b ) { counter += oranges [ i ] ; } if ( counter > d ) result ++ ; counter = 0 ; cout << result << endl ; } } int n ; return 0; }"}}
{"translation": {"en": "Read n [ENDL] b = integer [ENDL] Read b [ENDL] d = integer [ENDL] Read d [ENDL] orange , volume , counter = integers with volume = 0 , counter = 0 [ENDL] for i = 0 to n exclusive [ENDL] Read orange [ENDL] if orange is less than or equal to b , set volume to volume + orange [ENDL] if volume is greater than d [ENDL] set volume to 0 [ENDL] increment counter [ENDL] print counter and a new line [ENDL] n , b , d = integers", "c++": "int main() { cin >> n ; int b ; cin >> b ; int d ; cin >> d ; int orange , volume = 0 , counter = 0 ; for ( int i = 0 ; i < n ; i ++ ) cin >> orange ; if ( orange <= b ) volume += orange ; if ( volume > d ) volume = 0 ; counter ++ ; cout << counter << endl ; } } int n , b , d ; return 0; }"}}
{"translation": {"en": "Read n , b , d [ENDL] temp , ans = integers with ans = 0 [ENDL] cont = integer with 0 [ENDL] for i = 0 to n exclusive [ENDL] Read temp [ENDL] if temp is less than or equal to b [ENDL] set cont to cont + temp [ENDL] if cont is greater than d [ENDL] increment ans [ENDL] set cont to 0 [ENDL] print ans and new line [ENDL] n = long double with value of 0", "c++": "int main() { cin >> n >> b >> d ; int temp , ans = 0 ; long long cont = 0 ; for ( int i = 0 ; i < n ; i ++ ) cin >> temp ; if ( temp <= b ) cont += temp ; if ( cont > d ) ans ++ ; cont = 0 ; cout << ans << ' \\n ' ; } } } long double n = 0 ; return 0; }"}}
{"translation": {"en": "s = long double with value of 0 [ENDL] b = long double with value of 0 [ENDL] d = long double with value of 0 [ENDL] e = long double with value of 0 [ENDL] output = integer with value of 0 [ENDL] read n , b and d [ENDL] for i = 0 to n exclusive [ENDL] read s [ENDL] if s is greater than b [ENDL] continue [ENDL] else [ENDL] increase e by s [ENDL] if e is greater than d [ENDL] add 1 to output [ENDL] set e to 0 [ENDL] print output [ENDL] create long long ints n , b , d , and i", "c++": "int main() { long double s = 0 ; long double b = 0 ; long double d = 0 ; long double e = 0 ; int output = 0 ; cin >> n >> b >> d ; for ( int i = 0 ; i < n ; i ++ ) cin >> s ; if ( s > b ) continue ; else e += s ; if ( e > d ) ++ output ; e = 0 ; cout << output << endl ; } } } long long int n , b , d , i ; }"}}
{"translation": {"en": "read n , b , and d and while they ' re truthy [ENDL] create long long ints sum = 0 and c = 0 and int array a of size n + 5 [ENDL] for i = 0 to n exclusive , read a [ i ] [ENDL] for i = 0 to n exclusive [ENDL] if a [ i ] is less than or equal to b , set sum to sum + a [ i ] [ENDL] if sum is greater than d [ENDL] set sum to 0 [ENDL] add 1 to c [ENDL] display c [ENDL] let n , b , d , v , sum and c be unsigned long integers with sum and c = 0", "c++": "int main() { while ( cin >> n >> b >> d ) long long int a [ n + 5 ] , sum = 0 , c = 0 ; for ( i = 0 ; i < n ; i ++ ) { cin >> a [ i ] ; } for ( i = 0 ; i < n ; i ++ ) if ( a [ i ] <= b ) { sum += a [ i ] ; } if ( sum > d ) sum = 0 ; c ++ ; cout << c << endl ; } } unsigned long int n , b , d , v , sum = 0 , c = 0 ; } }"}}
{"translation": {"en": "read from the input to n , b and d [ENDL] start a loop from x = 0 to n exclusive incrementing x [ENDL] read standard input to v [ENDL] if v < = b , change sum to sum + v [ENDL] if sum is greater than d [ENDL] assign 0 to sum [ENDL] increment c by one [ENDL] print c [ENDL] create integers n , b , d , i , cnt and tmp with cnt and tmp = 0 ; create an array of integers a with 100001 element", "c++": "int main() { cin >> n >> b >> d ; for ( int x = 0 ; x < n ; x ++ ) cin >> v ; if ( v <= b ) sum += v ; if ( sum > d ) sum = 0 ; c ++ ; cout << c << endl ; } } int n , b , d , i , cnt = 0 , a [ 100001 ] , tmp = 0 ; return 0; }"}}
{"translation": {"en": "read n , b and d from the input [ENDL] read elements of a from the input n times in a loop [ENDL] start for loop from i = 0 to n exclusive incrementing i [ENDL] if a [ i ] < = b and cnt < = d , add a [ i ] to cnt [ENDL] if cnt is greater than d [ENDL] assign 0 to cnt [ENDL] increment tmp by one [ENDL] print tmp to the standard output [ENDL] create int int n , b , d , , set result and temp to 0", "c++": "int main() { cin >> n >> b >> d ; for ( i = 0 ; i < n ; i ++ ) { cin >> a [ i ] ; } for ( i = 0 ; i < n ; i ++ ) if ( a [ i ] <= b and cnt <= d ) cnt += a [ i ] ; if ( cnt > d ) cnt = 0 ; tmp ++ ; cout << tmp << endl ; } } int n , b , d , result = 0 , temp = 0 ; return 0; }"}}
{"translation": {"en": "read n , b and d [ENDL] for i = 0 to n exclusive [ENDL] create int size [ENDL] read size [ENDL] if size < = b , set temp to temp + size [ENDL] if temp > d [ENDL] increment result [ENDL] set temp to 0 [ENDL] print result [ENDL] n , b , d = integers", "c++": "int main() { cin >> n >> b >> d ; for ( int i = 0 ; i < n ; i ++ ) int size ; cin >> size ; if ( size <= b ) { temp += size ; } if ( temp > d ) result ++ ; temp = 0 ; cout << result << endl ; } } int n , b , d ; return 0; }"}}
{"translation": {"en": "read n , b , d [ENDL] ans , cnt = integers with ans = 0 , cnt = 0 [ENDL] for i = 0 to n exclusive [ENDL] x = integer [ENDL] read x [ENDL] if ( x < = b ) [ENDL] cnt = cnt + x [ENDL] if ( cnt > d ) [ENDL] increment ans [ENDL] cnt = 0 [ENDL] print ans [ENDL] n , b , d , sum and ans are integers where sum and ans = 0", "c++": "cin >> n >> b >> d ; int main() { int ans = 0 , cnt = 0 ; for ( int i = 0 ; i < n ; i ++ ) int x ; cin >> x ; if ( x <= b ) cnt += x ; if ( cnt > d ) ans ++ ; cnt = 0 ; cout << ans << \" \\n \" ; } } } int n , b , d , sum = 0 , ans = 0 ; return 0; }"}}
{"translation": {"en": "read input to n , b and d [ENDL] for integer i = 0 to n exclusive incrementing i [ENDL] t is a new integer variable [ENDL] read t [ENDL] if t < = b [ENDL] increase sum by t [ENDL] if sum is greater than d [ENDL] assign 0 to sum [ENDL] increment ans [ENDL] print ans to the output stream [ENDL] let n , b , d be integers", "c++": "int main() { cin >> n >> b >> d ; for ( int i = 0 ; i < n ; i ++ ) int t ; cin >> t ; if ( t <= b ) sum += t ; if ( sum > d ) sum = 0 ; ans ++ ; cout << ans << endl ; } } } int n , b , d ; }"}}
{"translation": {"en": "read n , b , d [ENDL] let integer value of sum = 0 [ENDL] let integer value of count = 0 [ENDL] for i = 0 to n exclusive [ENDL] let a be a integer [ENDL] read a [ENDL] if a < = b , increment sum by a [ENDL] if sum is greater than d [ENDL] increment count by 1 [ENDL] sum is equal to 0 [ENDL] print count and newline [ENDL] s is a new array of integers with 100000 + 5 elements", "c++": "int main() { cin >> n >> b >> d ; int sum = 0 ; int count = 0 ; for ( int i = 0 ; i < n ; i ++ ) int a ; cin >> a ; if ( a <= b ) { sum += a ; } if ( sum > d ) count ++ ; sum = 0 ; cout << count << endl ; } } int s [ 100000 + 5 ] ; }"}}
{"translation": {"en": "create integers n , b , d , ans and sum with ans and sum = 0 [ENDL] read n , b and d from the user input [ENDL] start for loop from i = 0 to n exclusive [ENDL] read s [ i ] from the input [ENDL] if s [ i ] is greater than b [ENDL] skip the rest of the loop [ENDL] else [ENDL] increase sum by s [ i ] [ENDL] if sum is greater than d [ENDL] change sum to 0 [ENDL] increment ans by one [ENDL] print ans to the standard output [ENDL] create long n , b , d , c , set c to 0", "c++": "int n , b , d , ans = 0 , sum = 0 ; int main() { cin >> n >> b >> d ; for ( int i = 0 ; i < n ; i ++ ) cin >> s [ i ] ; if ( s [ i ] > b ) continue ; else sum += s [ i ] ; if ( sum > d ) sum = 0 ; ans ++ ; cout << ans << endl ; } } long n , b , d , c = 0 ; return 0; }"}}
{"translation": {"en": "read n , b and d [ENDL] create long orange [ n ] [ENDL] out = 0 [ENDL] for i = 0 to n exclusive [ENDL] read orange [ i ] [ENDL] if orange [ i ] > b [ENDL] continue [ENDL] else [ENDL] set out to out + orange [ i ] [ENDL] if out > d [ENDL] increment c [ENDL] out = 0 [ENDL] print c [ENDL] let n , b , d be long integers", "c++": "int main() { cin >> n >> b >> d ; long orange [ n ] ; long long out = 0 ; for ( int i = 0 ; i < n ; i ++ ) cin >> orange [ i ] ; if ( orange [ i ] > b ) continue ; else out += orange [ i ] ; if ( out > d ) c ++ ; out = 0 ; cout << c << endl ; } } } long long int n , b , d ; }"}}
{"translation": {"en": "a = array of long integers of length 100007 [ENDL] read n , b , d [ENDL] for long integer $ i = 0 to n - 1 inclusive , read a [ $ i ] [ENDL] let c be a long integer with c = 0 [ENDL] let s be a long integer with s = 0 [ENDL] for long integer i = 0 to n - 1 inclusive [ENDL] if a [ i ] < = b [ENDL] increment s by a [ i ] [ENDL] if s is greater than d [ENDL] increment c by 1 [ENDL] s is equal to 0 [ENDL] print c and newline [ENDL] let n , b , d be integers", "c++": "long long int a [ 100007 ] ; cin >> n >> b >> d ; int main() { for ( long long int $i = 0 ; $i <= n - 1 ; $i ++ ) cin >> a [ $i ] ; { long long int c = 0 ; } long long int s = 0 ; for ( long long int i = 0 ; i <= n - 1 ; i ++ ) if ( a [ i ] <= b ) s += a [ i ] ; if ( s > d ) c ++ ; s = 0 ; cout << c << \" \\n \" ; } } } int n , b , d ; return 0; }"}}
{"translation": {"en": "read n , b , d [ENDL] ret , tot = integers with value of 0 [ENDL] for int i = 0 to n [ENDL] a = int [ENDL] read a [ENDL] if a > b , continue [ENDL] add a to tot [ENDL] if tot > d [ENDL] add one to ret [ENDL] let tot = 0 [ENDL] print ret [ENDL] x , y , a , b = integers", "c++": "int main() { cin >> n >> b >> d ; int tot = 0 , ret = 0 ; for ( int i = 0 ; i < n ; i ++ ) int a ; cin >> a ; if ( a > b ) continue ; tot += a ; if ( tot > d ) ret ++ ; tot = 0 ; cout << ret << endl ; } } int x , y , a , b ; return 0; }"}}
{"translation": {"en": "read x , y , a , b [ENDL] x = ( x * y ) / the result of calling __gcd with arguments of x and y [ENDL] print the result of b / x - ( a - 1 ) / x [ENDL] let gcd be a long integer function which accepts long integers a , b", "c++": "int main() { cin >> x >> y >> a >> b ; x = ( x * y ) / __gcd ( x , y ) ; cout << b / x - ( a - 1 ) / x << \" \\n \" ; long long gcd ( long long a , long long b ) return 0; }"}}
{"translation": {"en": "if a is equal to 0 or b is equal to 0 , return 0 [ENDL] if a is equal to b , return a [ENDL] if a is greater than b , return gcd of a - b , b [ENDL] return gcd of a , b - a [ENDL] let f , l , x , y , a , b , i , cnt be long integers with cnt = 0 [ENDL] read x , y , a , b [ENDL] let lcm be a long integer with lcm is equal to ( x * y ) / gcd of x , y [ENDL] print ( ( b / lcm ) - ( ( a - 1 ) / lcm ) ) and newline [ENDL] declare x , y , a , b as integers", "c++": "if ( a == 0 || b == 0 ) return 0 ; if ( a == b ) return a ; if ( a > b ) return gcd ( a - b , b ) ; return gcd ( a , b - a ) ; long long f , l , x , y , a , b , i , cnt = 0 ; } int main() { cin >> x >> y >> a >> b ; long long lcm = ( x * y ) / gcd ( x , y ) ; cout << ( ( b / lcm ) - ( ( a - 1 ) / lcm ) ) << endl ; int x , y , a , b ; }"}}
{"translation": {"en": "read x read y read a read b [ENDL] declare val = ( x * y ) / ( run __gcd ( x , y ) ) as integer [ENDL] declare integer ans [ENDL] if a % val is 0 [ENDL] let ans be b / val - a / val + 1 [ENDL] else [ENDL] let ans be b / val - a / val [ENDL] print ans , \" \\ n \" [ENDL] declare long long integers a , b , x , y", "c++": "int main() { cin >> x >> y >> a >> b ; int val = ( x * y ) / ( __gcd ( x , y ) ) ; int ans ; if ( a % val == 0 ) ans = b / val - a / val + 1 ; else ans = b / val - a / val ; cout << ans << \" \\n \" ; } long long int a , b , x , y ; }"}}
{"translation": {"en": "read x , y , a , b [ENDL] declare long long integer g = run __gcd ( x , y ) [ENDL] let x be ( x * y ) / g [ENDL] if a % x is 0 [ENDL] print b / x - a / x + 1 [ENDL] else [ENDL] print b / x - a / x [ENDL] print newline [ENDL] create new integers x , y , a and b", "c++": "int main() { cin >> x >> y >> a >> b ; long long int g = __gcd ( x , y ) ; x = ( x * y ) / g ; if ( a % x == 0 ) cout << b / x - a / x + 1 ; else cout << b / x - a / x ; cout << endl ; int x , y , a , b ; return 0; }"}}
{"translation": {"en": "read standard input to x , y , a and b [ENDL] create integer variable with name lcm = x * y / __gcd ( x , y ) [ENDL] declare integer ans with value b / lcm - ( a - 1 ) / lcm [ENDL] print ans [ENDL] in function gcd with arguments integer a and integer b that returns an integer", "c++": "int main() { cin >> x >> y >> a >> b ; int lcm = x * y / __gcd ( x , y ) ; int ans = b / lcm - ( a - 1 ) / lcm ; cout << ans << endl ; int gcd ( int a , int b ) return 0; }"}}
{"translation": {"en": "return the result of calling gcd with arguments of b and a modulo b if b is nonzero else return a [ENDL] x , y , a , b , v , k = integers [ENDL] read x , y , a , b [ENDL] v = x * y / the result of calling gcd with arguments of x and y [ENDL] k = b / v - ( a - 1 ) / v [ENDL] print k [ENDL] integer function gcd with int arguments a and b", "c++": "return ( b ? gcd ( b , a % b ) : a ) ; int x , y , a , b , v , k ; } int main() { cin >> x >> y >> a >> b ; v = x * y / gcd ( x , y ) ; k = b / v - ( a - 1 ) / v ; cout << k << endl ; int gcd ( int a , int b ) return 0; }"}}
{"translation": {"en": "return a if b = 0 , or gcd ( b , a % b ) otherwise [ENDL] function lcm with int arguments a and b that returns integer [ENDL] return a * ( b / gcd ( a , b ) ) [ENDL] declare integers x , y , a and b [ENDL] read variables x , y , a and b from the input [ENDL] declare integer variable MCM with value = result of lcm ( x , y ) [ENDL] print ( b / MCM ) - ( ( a - 1 ) / MCM ) to the standard output [ENDL] in function gcd taking int a , int b and returning int", "c++": "return b == 0 ? a : gcd ( b , a % b ) ; int lcm ( int a , int b ) } return a * ( b / gcd ( a , b ) ) ; int x , y , a , b ; } int main() { cin >> x >> y >> a >> b ; int MCM = lcm ( x , y ) ; cout << ( b / MCM ) - ( ( a - 1 ) / MCM ) << endl ; int gcd ( int a , int b ) return 0; }"}}
{"translation": {"en": "if b is 0 return a [ENDL] return gcd of b , a mod b [ENDL] in function LCM taking int a , int b and returning int [ENDL] return ( a * b ) / gcd of a , b [ENDL] ans , x , y , aa , bb , m = int [ENDL] read x then y then aa then bb [ENDL] set m to LCM of max of x , y , min of x , y [ENDL] set ans to ( bb / m ) - ( aa - 1 ) / m [ENDL] print ans [ENDL] x , y , a , b , m , n = int", "c++": "if ( b == 0 ) return a ; return gcd ( b , a % b ) ; int LCM ( int a , int b ) } return ( a * b ) / gcd ( a , b ) ; int ans , x , y , aa , bb , m ; } int main() { cin >> x >> y >> aa >> bb ; m = LCM ( max ( x , y ) , min ( x , y ) ) ; ans = ( bb / m ) - ( aa - 1 ) / m ; cout << ans << endl ; int x , y , a , b , m , n ; }"}}
{"translation": {"en": "read x then y then a then b [ENDL] p , q = int with p = x and q = y [ENDL] loop while q [ENDL] set n to q [ENDL] set q to p mod q [ENDL] set p to n [ENDL] set n to ( x * y ) / n [ENDL] set m to not ( a mod n ) [ENDL] print ( b / n - a / n + m ) [ENDL] declare integer f with integers a , b as arguments", "c++": "int main() { cin >> x >> y >> a >> b ; int p = x , q = y ; while ( q ) n = q ; q = p % q ; p = n ; n = ( x * y ) / n ; } m = a % n ? 0 : 1 ; cout << ( b / n - a / n + m ) << endl ; int f ( int a , int b ) return 0; }"}}
{"translation": {"en": "declare integers t , x = a , y = b [ENDL] if x is less than y [ENDL] let t be x [ENDL] let x be y [ENDL] let y be t [ENDL] while x % y is not 0 [ENDL] let t be y [ENDL] let y be x % y [ENDL] let x be t [ENDL] return a * b / y [ENDL] declare integers x , y , a , b [ENDL] while read x , y , a , b is true [ENDL] declare integer t = result of run f ( x , y ) [ENDL] declare integer p = b / t - a / t + 1 if a % t is 0 , else b / t - a / t [ENDL] print p , newline [ENDL] declare function GCD taking int a , int b and returning int", "c++": "int t , x = a , y = b ; if ( x < y ) t = x ; x = y ; y = t ; while ( x % y != 0 ) } t = y ; y = x % y ; x = t ; return a * b / y ; } int x , y , a , b ; } int main() { while ( cin >> x >> y >> a >> b ) int t = f ( x , y ) ; int p = ( a % t == 0 ) ? b / t - a / t + 1 : b / t - a / t ; cout << p << endl ; int GCD ( int a , int b ) ; } return 0; }"}}
{"translation": {"en": "x , y = int [ENDL] a , b = int [ENDL] read x then y then a then b [ENDL] set x to x * y / GCD of x , y [ENDL] print b / x - ( a - 1 ) / x [ENDL] in function GCD taking int a , int b and returning int [ENDL] n = int with n = a mod b [ENDL] loop while n is not 0 [ENDL] set a to b [ENDL] set b to n [ENDL] set n to a mod b [ENDL] return b [ENDL] function gcd ( gets two ints a and b , return int )", "c++": "int x , y ; int main() { int a , b ; cin >> x >> y >> a >> b ; x = x * y / GCD ( x , y ) ; cout << b / x - ( a - 1 ) / x << endl ; int GCD ( int a , int b ) } int n = a % b ; while ( n != 0 ) a = b ; b = n ; n = a % b ; return b ; } int gcd ( int a , int b ) }"}}
{"translation": {"en": "if a is 0 return b [ENDL] return gcd ( b modulo a , a ) [ENDL] x , y = int [ENDL] a , b = int [ENDL] read x [ENDL] read y [ENDL] read a [ENDL] read b [ENDL] M = x / gcd ( x , y ) * y [ENDL] l = a / M [ENDL] r = b / M [ENDL] if l * M < a increment l [ENDL] print r - l + 1 [ENDL] let x , y , a , b be integers", "c++": "if ( a == 0 ) return b ; return gcd ( b % a , a ) ; int x , y ; } int main() { int a , b ; cin >> x ; cin >> y ; cin >> a ; cin >> b ; int M = x / gcd ( x , y ) * y ; int l = a / M ; int r = b / M ; if ( l * M < a ) { l ++ ; } cout << r - l + 1 << endl ; int x , y , a , b ; return 0; }"}}
{"translation": {"en": "let ans be a integer [ENDL] it is a function which returns Greatest Common Divisor of two integers k , l [ENDL] if l is equal to 0 [ENDL] return the value of k [ENDL] else do the following [ENDL] return the Greatest Common Divisor of l , k modulo l [ENDL] it is a function which returns Least Common Multiple of two integers m , n [ENDL] return the value of ( m * n ) / Greatest Common Divisor of m , n [ENDL] ans is equal to 0 [ENDL] read x , y , a , b [ENDL] let kpk be a integer [ENDL] kpk is equal to Least Common Multiple of x , y [ENDL] ans is equal to floor ( b / kpk ) - floor ( ( a - 1 ) / kpk ) [ENDL] print ans and newline [ENDL] let x , y , a , b , p , ans , u , v , gcd , lcm be int", "c++": "int ans ; int GCD ( int k , int l ) if ( l == 0 ) return k ; else return GCD ( l , k % l ) ; int LCM ( int m , int n ) } return ( m * n ) / GCD ( m , n ) ; ans = 0 ; } int main() { cin >> x >> y >> a >> b ; int kpk ; kpk = LCM ( x , y ) ; ans = floor ( b / kpk ) - floor ( ( a - 1 ) / kpk ) ; cout << ans << endl ; int x , y , a , b , p , ans , u , v , gcd , lcm ; return 0; }"}}
{"translation": {"en": "read x , y , a , b [ENDL] set p to the __gcd of x and y [ENDL] set lcm to x * y / p [ENDL] set u = a / lcm [ENDL] set v = b / lcm [ENDL] set ans = v - u [ENDL] if a mod lcm is 0 then increment ans [ENDL] print ans [ENDL] declare integer gcd with integers a , b as arguments", "c++": "int main() { cin >> x >> y >> a >> b ; p = __gcd ( x , y ) ; lcm = ( x * y ) / p ; u = a / lcm ; v = b / lcm ; ans = v - u ; if ( ( a % lcm ) == 0 ) { ans = ans + 1 ; } cout << ans << endl ; int gcd ( int a , int b ) return 0; }"}}
{"translation": {"en": "return a if b is 0 , else gcd ( b , a % b ) [ENDL] declare lcm as integer with integers a , b as arguments [ENDL] return a / result of run gcd with a , b as arguments * b [ENDL] declare x , y , a , b as integers [ENDL] read x and y and a and b [ENDL] declare LCM = run lcm ( x , y ) [ENDL] print ( b / LCM ) - ( ( a - 1 ) / LCM ) , newline [ENDL] declare gcd with integers x , y as arguments , returning integer", "c++": "return b == 0 ? a : gcd ( b , a % b ) ; int lcm ( int a , int b ) } return a / gcd ( a , b ) * b ; int x , y , a , b ; } int main() { cin >> x >> y >> a >> b ; int LCM = lcm ( x , y ) ; cout << ( b / LCM ) - ( ( a - 1 ) / LCM ) << endl ; int gcd ( int x , int y ) return 0; }"}}
{"translation": {"en": "if y is 0 , return x [ENDL] return result of run gcd with y , x % y as arguments from function [ENDL] declare lcm with integers x , y as arguments , returning integer [ENDL] return ( x * y ) / run gcd ( x , y ) [ENDL] declare x , y , a , b , ans = 0 as integers [ENDL] read x , y , a , b [ENDL] let ans be - a / result of run lcm ( x , y ) + b / result of run lcm ( x , y ) [ENDL] if a % result of run lcm ( x , y ) is 0 , increment ans by 1 [ENDL] print ans , newline [ENDL] declare x , y , a , b , p as integers", "c++": "if ( y == 0 ) return x ; return gcd ( y , x % y ) ; int lcm ( int x , int y ) } return ( x * y ) / gcd ( x , y ) ; int x , y , a , b , ans = 0 ; } int main() { cin >> x >> y >> a >> b ; ans = - a / lcm ( x , y ) + b / lcm ( x , y ) ; if ( a % lcm ( x , y ) == 0 ) ans += 1 ; cout << ans << endl ; int x , y , a , b , p ; return 0; }"}}
{"translation": {"en": "read x read y read a read b [ENDL] let b be result of run __gcd ( x , y ) [ENDL] let x be x * y [ENDL] let x be x / p [ENDL] if a % x is 0 [ENDL] let a be a / x [ENDL] decrement a [ENDL] else [ENDL] let a be a / x [ENDL] let b be b / x [ENDL] print b - a print newline [ENDL] integer function gcd with int arguments a and b", "c++": "int main() { cin >> x >> y >> a >> b ; p = __gcd ( x , y ) ; x = x * y ; x = x / p ; if ( a % x == 0 ) a /= x ; a -- ; else a = a / x ; b = b / x ; } cout << b - a << endl ; int gcd ( int a , int b ) return 0; }"}}
{"translation": {"en": "while b > 0 [ENDL] declare new integer tmp with value b [ENDL] set b to a % b [ENDL] change a to tmp [ENDL] return a [ENDL] int function lcm with int arguments a and b [ENDL] return a * b / gcd of a and b [ENDL] set output decimal precision to 12 [ENDL] declare new integer called x [ENDL] read from the input to x [ENDL] create new integer variable y [ENDL] read the input to y [ENDL] create new integer a [ENDL] read user input to a [ENDL] declare new integer called b [ENDL] read variable b from the input [ENDL] print b / lcm ( x , y ) - ( a - 1 ) / lcm ( x , y ) [ENDL] create int a , b , c , x , y , z", "c++": "while ( b > 0 ) int tmp = b ; b = a % b ; a = tmp ; return a ; } int lcm ( int a , int b ) } return a * b / gcd ( a , b ) ; cout << setprecision ( 12 ) ; } int main() { int x ; cin >> x ; int y ; ; cin >> y ; int a ; ; cin >> a ; int b ; ; cin >> b ; cout << b / lcm ( x , y ) - ( a - 1 ) / lcm ( x , y ) << endl ; ; int a , b , c , x , y , z ; }"}}
{"translation": {"en": "read x , y , a and b [ENDL] set z to ( x * y ) / __gcd ( x , y ) [ENDL] assign b / z to c [ENDL] set c to c - ( a - 1 ) / z [ENDL] print c and a newline [ENDL] let gcd be a integer function which accepts integers x and y", "c++": "int main() { cin >> x >> y >> a >> b ; z = ( x * y ) / __gcd ( x , y ) ; c = b / z ; c -= ( a - 1 ) / z ; cout << c << \" \\n \" ; int gcd ( int x , int y ) return 0; }"}}
{"translation": {"en": "if x is equal to y , return the value of x [ENDL] while x is not equal to 0 and y is not equal to 0 [ENDL] if x is greater than y [ENDL] x is equal to x modulo y [ENDL] else do the following [ENDL] y is equal to y modulo x [ENDL] return y if x is less than y else return x [ENDL] let x , y , a , b be integers [ENDL] read x , y , a , b [ENDL] let z be a integer with z is equal to x * y / gcd of x , y [ENDL] print b / z - ( a - 1 ) / z and newline [ENDL] declare constant integer INF = 0x3f3f3f3f", "c++": "if ( x == y ) return x ; while ( x != 0 && y != 0 ) if ( x > y ) x %= y ; else y %= x ; return x < y ? y : x ; } int x , y , a , b ; } int main() { cin >> x >> y >> a >> b ; int z = x * y / gcd ( x , y ) ; cout << b / z - ( a - 1 ) / z << endl ; const int INF = 0x3f3f3f3f ; return 0; }"}}
{"translation": {"en": "declare gcd with integers a , b as arguments , returning integer [ENDL] if a is less than b , swap values between a and b [ENDL] if not b , return a [ENDL] return run gcd ( b , a % b ) [ENDL] declare i , j , k as integers [ENDL] declare n , m , a , b , c , d as integers [ENDL] read a , b , c , d [ENDL] let k be run gcd ( a , b ) [ENDL] let k be a / k * b ; [ENDL] let m be d / k - c / k [ENDL] if c % k is 0 , increment m [ENDL] print m and newline [ENDL] let gcd be a function which accepts long integers a and b", "c++": "int gcd ( int a , int b ) if ( a < b ) swap ( a , b ) ; if ( ! b ) return a ; return gcd ( b , a % b ) ; int i , j , k ; } int main() { int n , m , a , b , c , d ; cin >> a >> b >> c >> d ; k = gcd ( a , b ) ; k = a / k * b ; m = d / k - c / k ; if ( c % k == 0 ) m ++ ; cout << m << endl ; long long gcd ( long long a , long long b ) return 0; }"}}
{"translation": {"en": "if b is equal to 0 [ENDL] return the value of a [ENDL] else do the following [ENDL] return value gcd of b , a modulo b [ENDL] let x , y , a , b be long integers [ENDL] read x , y , a , b [ENDL] let g be a long integer with g = gcd of maximum of x , y and minimum of x , y [ENDL] let lcm be a long integer with lcm = ( x * y ) / g [ENDL] let r be a long integer with r = b / lcm [ENDL] let l be a long integer with l = ( a - 1 ) / lcm [ENDL] print r - l and newline [ENDL] let cns , cnt be integers with cns is equal to 0 , cnt is equal to 0x3f3f3f3f", "c++": "if ( b == 0 ) return a ; else return gcd ( b , a % b ) ; long long x , y , a , b ; } int main() { cin >> x >> y >> a >> b ; long long g = gcd ( max ( x , y ) , min ( x , y ) ) ; long long lcm = ( x * y ) / g ; long long r = b / lcm ; long long l = ( a - 1 ) / lcm ; cout << r - l << endl ; int cns = 0 , cnt = 0x3f3f3f3f ; }"}}
{"translation": {"en": "let n , strength be integers with strength is equal to array of integers of length 100001 [ENDL] read n [ENDL] for i = 0 to n exclusive [ENDL] read ith element of array strength [ENDL] if ( ith element of array strength is greater than cns ) , cns is equal to ith element of array strength [ENDL] if ( ith element of array strength is less than cnt ) , cnt is equal to ith element of array strength [ENDL] let vis be a integer with value is equal to 0 [ENDL] for ( i = 0 to n exclusive ) [ENDL] if ( ith element of array strength is equal to cns or ith element of array strength is equal to cnt ) , increase vis by 1 [ENDL] print n - vis and newline [ENDL] size , maior , menor c = int with maior = - 0x3f3f3f3f and menor = 0x3f3f3f3f and c = 0", "c++": "int main() { int n , strength [ 100001 ] ; cin >> n ; for ( int i = 0 ; i < n ; i ++ ) cin >> strength [ i ] ; if ( strength [ i ] > cns ) cns = strength [ i ] ; if ( strength [ i ] < cnt ) cnt = strength [ i ] ; int vis = 0 ; } for ( int i = 0 ; i < n ; i ++ ) if ( strength [ i ] == cns || strength [ i ] == cnt ) vis ++ ; cout << n - vis << endl ; int size , maior = - 0x3f3f3f3f , menor = 0x3f3f3f3f , c = 0 ; return 0; }"}}
{"translation": {"en": "read size [ENDL] vector = int vector of size size [ENDL] for i = 0 to size [ENDL] read vctor [ i ] [ENDL] set maior to max of maior and vetor [ i ] then set menor to min of menor and vetor [ i ] [ENDL] for i = 0 to size [ENDL] increment c if vetor [ i ] is greater then menor and less than maior [ENDL] print c [ENDL] n = int", "c++": "int main() { cin >> size ; vector < int > vetor ( size ) ; for ( int i = 0 ; i < size ; i ++ ) cin >> vetor [ i ] ; maior = max ( maior , vetor [ i ] ) , menor = min ( menor , vetor [ i ] ) ; for ( int i = 0 ; i < size ; i ++ ) } if ( vetor [ i ] > menor && vetor [ i ] < maior ) c ++ ; cout << c << ' \\n ' ; int n ; }"}}
{"translation": {"en": "read n [ENDL] a = int array of size n [ENDL] cnt = int with cnt = 0 [ENDL] for i = 1 to n inclusive read a [ i ] [ENDL] call sort on a + 1 and a + 1 + n [ENDL] if n equals 1 or 2 [ENDL] print 0 [ENDL] else if n is greater than 2 [ENDL] minn = int with minn = a [ 1 ] [ENDL] mixx = int with mixx = a [ n ] [ENDL] for i = 2 to n - 1 inclusive [ENDL] if a [ i ] is between minn and mixx then increment cnt [ENDL] print cnt [ENDL] n = int and a = int array of size 100010", "c++": "int main() { cin >> n ; int a [ n ] ; int cnt = 0 ; for ( int i = 1 ; i <= n ; i ++ ) { cin >> a [ i ] ; } sort ( a + 1 , a + 1 + n ) ; if ( n == 1 || n == 2 ) cout << 0 << endl ; else if ( n >= 3 ) int minn = a [ 1 ] ; int mixx = a [ n ] ; for ( int i = 2 ; i <= n - 1 ; i ++ ) if ( a [ i ] > minn && a [ i ] < mixx ) cnt ++ ; cout << cnt << endl ; } int a [ 100010 ] , n ; } return 0; }"}}
{"translation": {"en": "read n [ENDL] for i = 1 to n inclusive read a [ i ] [ENDL] sort all n elements in array a starting at a + 1 [ENDL] b , c = int with b = a [ 1 ] and c = a [ n ] [ENDL] ans = int with ans = 0 [ENDL] for i = 1 to n inclusive [ENDL] if a [ i ] is between b and c then increment ans [ENDL] print ans [ENDL] MAX = 100005", "c++": "int main() { cin >> n ; for ( int i = 1 ; i <= n ; i ++ ) cin >> a [ i ] ; sort ( a + 1 , a + n + 1 ) ; int b = a [ 1 ] , c = a [ n ] ; int ans = 0 ; for ( int i = 1 ; i <= n ; i ++ ) if ( b < a [ i ] && a [ i ] < c ) ans ++ ; cout << ans << endl ; } const int MAX = 1e5 + 5 ; return 0; }"}}
{"translation": {"en": "n , cnt , ans = int , arr = array of MAX int [ENDL] dict = set of int [ENDL] read n [ENDL] for i = 0 to n exclusive [ENDL] read arr [ i ] [ENDL] insert arr [ i ] into dict [ENDL] cnt = 0 [ENDL] iterate on dict incrementing cnt [ENDL] if cnt < 3 [ENDL] print \" 0 \" [ENDL] sort first n elements of arr [ENDL] ans = n [ENDL] for i = 0 to n exclusive [ENDL] if arr [ i ] = = arr [ 0 ] or arr [ n - 1 ] decrement ans [ENDL] print ans [ENDL] i , n , cnt = integers with cnt = 0 and a = array of 100001 integers", "c++": "int n , arr [ MAX ] , cnt , ans ; set < int > dict ; cin >> n ; int main() { for ( int i = 0 ; i < n ; i ++ ) cin >> arr [ i ] ; dict . insert ( arr [ i ] ) ; cnt = 0 ; } for ( set < int > :: iterator it = dict . begin ( ) ; it != dict . end ( ) ; ++ it ) cnt ++ ; if ( cnt < 3 ) cout << \" 0 \" << endl ; sort ( arr , arr + n ) ; return 0; } ans = n ; for ( int i = 0 ; i < n ; i ++ ) if ( ( arr [ i ] == arr [ 0 ] ) || ( arr [ i ] == arr [ n - 1 ] ) ) ans -- ; cout << ans << endl ; } long long int i , n , cnt = 0 , a [ 100001 ] ; return 0; }"}}
{"translation": {"en": "Read n [ENDL] Read n values into array a [ENDL] mx = integer , set to a [ 0 ] [ENDL] mn = integer , set to a [ 0 ] [ENDL] for i = 0 to n exclusive [ENDL] if a [ i ] is greater than mx , set mx to a [ i ] [ENDL] if a [ i ] is less than mn , set mn to a [ i ] [ENDL] for i = 0 to n exclusive [ENDL] if a [ i ] is greater than mn and a [ i ] is less than mx [ENDL] print cnt and a new line [ENDL] n = int", "c++": "int main() { cin >> n ; for ( i = 0 ; i < n ; i ++ ) { cin >> a [ i ] ; } int mx = a [ 0 ] ; int mn = a [ 0 ] ; for ( i = 0 ; i < n ; i ++ ) if ( a [ i ] > mx ) mx = a [ i ] ; if ( a [ i ] < mn ) mn = a [ i ] ; for ( i = 0 ; i < n ; i ++ ) } if ( a [ i ] > mn && a [ i ] < mx ) cnt ++ ; cout << cnt << endl ; } int n ; return 0; }"}}
{"translation": {"en": "read n [ENDL] arr = int array of size n [ENDL] read n values into arr [ENDL] sort array arr [ENDL] a , b = int with a = arr [ 0 ] and b = arr [ n - 1 ] [ENDL] x = int with x = value of upper_bound of arr , arr + n and a - arr [ENDL] y = int with y = value of lower_bound of arr , arr + n and a - arr [ENDL] if y is 0 [ENDL] print 0 [ENDL] else [ENDL] print y - x [ENDL] create integer s", "c++": "int main() { cin >> n ; int arr [ n ] ; for ( int i = 0 ; i < n ; i ++ ) cin >> arr [ i ] ; sort ( arr , arr + n ) ; int a = arr [ 0 ] , b = arr [ n - 1 ] ; int x = upper_bound ( arr , arr + n , a ) - arr ; int y = lower_bound ( arr , arr + n , b ) - arr ; if ( y == 0 ) cout << 0 << endl ; else cout << y - x << endl ; int s ; return 0; }"}}
{"translation": {"en": "read s [ENDL] let a be integer array with size s [ENDL] for i = 0 to s exclusive read a [ i ] [ENDL] sort a [ENDL] if s = 1 | | s = 2 [ENDL] print \" 0 \" [ENDL] declare integer variable t = s - 2 [ENDL] for integer i = 1 to s - 1 exclusive [ENDL] if a [ i ] > a [ 0 ] and a [ i ] < a [ s - 1 ] [ENDL] skip the rest of the loop [ENDL] else [ENDL] decrease t by one [ENDL] print t [ENDL] create integer n", "c++": "int main() { cin >> s ; int a [ s ] ; for ( int i = 0 ; i < s ; i ++ ) cin >> a [ i ] ; sort ( a , a + s ) ; if ( s == 1 || s == 2 ) cout << \" 0 \" << endl ; int t = s - 2 ; return 0; } for ( int i = 1 ; i < s - 1 ; i ++ ) if ( a [ i ] > a [ 0 ] && a [ i ] < a [ s - 1 ] ) continue ; else t -- ; cout << t << endl ; } int n ; return 0; }"}}
{"translation": {"en": "read n [ENDL] create integer t [ENDL] create integer vector a [ENDL] for i = 0 to n exclusive [ENDL] read t [ENDL] add element t to end of a [ENDL] if size of a is less than 3 [ENDL] print 0 print newline [ENDL] sort elements from beginning of a to end of a [ENDL] create integer cnt with cnt = 0 [ENDL] for i = 1 to n - 2 inclusive [ENDL] if a [ i ] is greater than a [ 0 ] and a [ i ] is less than a [ n - 1 ] , increment cnt [ENDL] print cnt print newline [ENDL] create integers n , sum with sum = 0 , create integer array a with size 100000", "c++": "int main() { cin >> n ; int t ; vector < int > a ; for ( int i = 0 ; i < n ; i ++ ) cin >> t ; a . push_back ( t ) ; if ( a . size ( ) < 3 ) } cout << 0 << endl ; sort ( a . begin ( ) , a . end ( ) ) ; return 0; } int cnt = 0 ; for ( int i = 1 ; i <= n - 2 ; i ++ ) if ( a [ i ] > a [ 0 ] && a [ i ] < a [ n - 1 ] ) { cnt ++ ; } cout << cnt << endl ; } int n , a [ 100000 ] , sum = 0 ; return 0; }"}}
{"translation": {"en": "read n [ENDL] for i = 0 to n exclusive , read a [ i ] [ENDL] create integers max , min with max = a [ 0 ] , min = a [ 0 ] [ENDL] for j = 0 to n exclusive [ENDL] if max is less than a [ j ] , set max to a [ j ] [ENDL] if min is greater than a [ j ] , set min to a [ j ] [ENDL] for t = 0 to n exclusive [ENDL] if a [ t ] is less than max and a [ t ] is greater than min , increment sum [ENDL] print sum print newline [ENDL] let a be integer array with size 100005", "c++": "int main() { cin >> n ; for ( int i = 0 ; i < n ; i ++ ) { cin >> a [ i ] ; } int max = a [ 0 ] , min = a [ 0 ] ; for ( int j = 0 ; j < n ; j ++ ) if ( max < a [ j ] ) max = a [ j ] ; if ( min > a [ j ] ) min = a [ j ] ; for ( int t = 0 ; t < n ; t ++ ) } if ( a [ t ] < max && a [ t ] > min ) sum ++ ; cout << sum << endl ; } int a [ 100005 ] ; }"}}
{"translation": {"en": "declare integer variables n , c1 , c2 , maxx and minn with c1 , c2 and maxx = 0 and minn = 1000000007 [ENDL] read n [ENDL] for i = 0 to n exclusive [ENDL] read a [ i ] [ENDL] maxx = max of maxx and a [ i ] , minn = min of minn and a [ i ] [ENDL] for integer i = 0 to n exclusive [ENDL] increment c1 if a [ i ] = maxx [ENDL] increment c2 if a [ i ] = minn [ENDL] if maxx = minn [ENDL] print 0 [ENDL] else [ENDL] print n - c1 - c2 [ENDL] n = int", "c++": "int n , c1 = 0 , c2 = 0 , maxx = 0 , minn = 1000000007 ; int main() { cin >> n ; for ( int i = 0 ; i < n ; i ++ ) cin >> a [ i ] ; maxx = max ( maxx , a [ i ] ) , minn = min ( minn , a [ i ] ) ; for ( int i = 0 ; i < n ; i ++ ) } if ( a [ i ] == maxx ) c1 ++ ; if ( a [ i ] == minn ) c2 ++ ; if ( maxx == minn ) } cout << 0 << endl ; else cout << n - c1 - c2 << endl ; int n ; return 0; }"}}
{"translation": {"en": "read n [ENDL] arr = int array of size n [ENDL] read n values into arr [ENDL] if n is less than 3 [ENDL] print 0 [ENDL] sort array arr [ENDL] cnt = int with cnt = 0 [ENDL] for i = 1 to n - 1 [ENDL] if arr [ i ] is between the first and last value of arr then increment cnt [ENDL] print cnt [ENDL] n , b , s , ans = integers with ans = 0", "c++": "int main() { cin >> n ; int arr [ n ] ; for ( int i = 0 ; i < n ; i ++ ) { cin >> arr [ i ] ; } if ( n < 3 ) cout << 0 << endl ; sort ( arr , arr + n ) ; return 0; } int cnt = 0 ; for ( int i = 1 ; i < n - 1 ; i ++ ) if ( arr [ i ] > arr [ 0 ] && arr [ i ] < arr [ n - 1 ] ) cnt ++ ; cout << cnt << endl ; } int n , b , s , ans = 0 ; return 0; }"}}
{"translation": {"en": "read n [ENDL] arr = integer array of n [ENDL] for i = 0 to n exclusive , read arr [ i ] [ENDL] b = arr [ 0 ] [ENDL] s = arr [ 0 ] [ENDL] for i = 0 to n exclusive [ENDL] if arr [ i ] > b , b = arr [ i ] [ENDL] if arr [ i ] < s , s = arr [ i ] [ENDL] for i = 0 to n exclusive [ENDL] if arr [ i ] is b or arr [ i ] is s , continue next iteration [ENDL] increment ans [ENDL] print ans [ENDL] create int array a of length 100005", "c++": "int main() { cin >> n ; int arr [ n ] ; for ( int i = 0 ; i < n ; ++ i ) { cin >> arr [ i ] ; } b = arr [ 0 ] ; s = arr [ 0 ] ; for ( int i = 0 ; i < n ; ++ i ) if ( arr [ i ] > b ) b = arr [ i ] ; if ( arr [ i ] < s ) s = arr [ i ] ; for ( int i = 0 ; i < n ; ++ i ) } if ( arr [ i ] == b || arr [ i ] == s ) continue ; ans ++ ; cout << ans << endl ; } int a [ 100005 ] ; return 0; }"}}
{"translation": {"en": "create n and m [ENDL] read n [ENDL] for i = 1 to n inclusive , read a [ i ] [ENDL] sort a + 1 , a + n + 1 [ENDL] t = n [ENDL] for i = 1 to n inclusive [ENDL] if a [ i ] = a [ 1 ] or a [ i ] = a [ n ] , decrement t [ENDL] print t [ENDL] n , count = integer with count = 0", "c++": "int n , m ; int main() { cin >> n ; for ( int i = 1 ; i <= n ; i ++ ) cin >> a [ i ] ; sort ( a + 1 , a + n + 1 ) ; int t = n ; for ( int i = 1 ; i <= n ; i ++ ) if ( a [ i ] == a [ 1 ] || a [ i ] == a [ n ] ) t -- ; cout << t << endl ; int n , count = 0 ; return 0; }"}}
{"translation": {"en": "read n [ENDL] a = integer array of size n [ENDL] for i = 0 to n exclusive , read a [ i ] [ENDL] sort a and a + n [ENDL] mx = integer with mx = pointer max_element ( a , a + n ) [ENDL] mn = integer with mn = pointer min_element ( a , a + n ) [ENDL] for i = 0 to n exclusive [ENDL] if a [ i ] > mn and a [ i ] < mx , increment count [ENDL] print count [ENDL] declare long long variables n and cnt where cnt = 0", "c++": "int main() { cin >> n ; int a [ n ] ; for ( int i = 0 ; i < n ; i ++ ) { cin >> a [ i ] ; } sort ( a , a + n ) ; int mx = * max_element ( a , a + n ) ; int mn = * min_element ( a , a + n ) ; for ( int i = 0 ; i < n ; i ++ ) if ( a [ i ] > mn && a [ i ] < mx ) { count ++ ; } cout << count << endl ; } long long n , cnt = 0 ; return 0; }"}}
{"translation": {"en": "read n [ENDL] x is vector of long longs with n elements [ENDL] y is a set of long longs [ENDL] loop i from 0 to n exclusive [ENDL] read x [ i ] [ENDL] insert x [ i ] into y [ENDL] if n < = 2 or size of y < = 2 [ENDL] print \" 0 \" [ENDL] else [ENDL] sort x [ENDL] loop i from 0 to n exclusive [ENDL] if x [ i ] ! = x [ 0 ] and x [ i ] ! = x [ n - 1 ] , increment cnt by one [ENDL] print cnt [ENDL] n = int", "c++": "int main() { cin >> n ; vector < long long > x ( n ) ; set < long long > y ; for ( long long i = 0 ; i < n ; i ++ ) cin >> x [ i ] ; y . insert ( x [ i ] ) ; if ( n <= 2 || y . size ( ) <= 2 ) } cout << \" 0 \" << endl ; else sort ( x . begin ( ) , x . end ( ) ) ; for ( long long i = 0 ; i < n ; i ++ ) if ( x [ i ] != x [ 0 ] && x [ i ] != x [ n - 1 ] ) cnt ++ ; cout << cnt << endl ; } int n ; } return 0; }"}}
{"translation": {"en": "read n [ENDL] se = int vector [ENDL] answer = int with answer = 0 [ENDL] for i = 0 to n [ENDL] x = int [ENDL] read x [ENDL] append x to se [ENDL] sort se [ENDL] min = int with min = se [ 0 ] [ENDL] max = int with max = last value of se [ENDL] for i = 0 to n [ENDL] if se [ i ] is between min and max then increment answer [ENDL] print answer [ENDL] create integer array a with size 100000 , create integers n , c1 , c2 , mx , mn with c1 = 0 , c2 = 0 , mx = 0 , mn = 1000000000", "c++": "int main() { cin >> n ; vector < int > se ; int answer = 0 ; for ( int i = 0 ; i < n ; i ++ ) int x ; cin >> x ; se . push_back ( x ) ; sort ( se . begin ( ) , se . end ( ) ) ; } int min = se [ 0 ] ; int max = se [ n - 1 ] ; for ( int i = 0 ; i < n ; i ++ ) if ( se [ i ] > min && se [ i ] < max ) { ++ answer ; } cout << answer << endl ; } int a [ 100000 ] , n , c1 = 0 , c2 = 0 , mx = 0 , mn = 1000000000 ; return 0; }"}}
{"translation": {"en": "read n [ENDL] for i = 0 to n exclusive [ENDL] read a [ i ] [ENDL] set mx to maximum of mx and a [ i ] [ENDL] set mn to minimum of mn and a [ i ] [ENDL] for i = 0 to n exclusive [ENDL] if a [ i ] is mx , increment c1 [ENDL] if a [ i ] is mn , increment c2 [ENDL] if mx is mn [ENDL] print 0 print newline [ENDL] else [ENDL] print ( n - c1 - c2 ) print newline [ENDL] n , res , mn , mx = integers with res = 0 , mn = INT_MAX , mx = INT_MIN", "c++": "int main() { cin >> n ; for ( int i = 0 ; i < n ; i ++ ) cin >> a [ i ] ; mx = max ( mx , a [ i ] ) ; mn = min ( mn , a [ i ] ) ; for ( int i = 0 ; i < n ; i ++ ) } if ( a [ i ] == mx ) c1 ++ ; if ( a [ i ] == mn ) c2 ++ ; if ( mx == mn ) } cout << 0 << endl ; else cout << ( n - c1 - c2 ) << endl ; int n , res = 0 , mn = INT_MAX , mx = INT_MIN ; return 0; }"}}
{"translation": {"en": "a = integer array of size 100001 [ENDL] b1 , b2 = bool with b1 = 0 , b2 = 0 [ENDL] read n [ENDL] for i = 0 to n exclusive , read a [ i ] [ENDL] for i = 0 to n exclusive [ENDL] mn = min of a [ i ] and mn [ENDL] mx = max of a [ i ] and mx [ENDL] for i = 0 to n exclusive [ENDL] if a [ i ] > mn and a [ i ] < mx , increment res [ENDL] print res [ENDL] create integer t , integer array a with dimension 105", "c++": "int main() { int a [ 100001 ] ; bool b1 = 0 , b2 = 0 ; cin >> n ; for ( int i = 0 ; i < n ; i ++ ) cin >> a [ i ] ; for ( int i = 0 ; i < n ; i ++ ) mn = min ( a [ i ] , mn ) ; mx = max ( a [ i ] , mx ) ; for ( int i = 0 ; i < n ; i ++ ) } if ( a [ i ] > mn && a [ i ] < mx ) ++ res ; cout << res << endl ; } int t , a [ 105 ] ; return 0; }"}}
{"translation": {"en": "read t [ENDL] for integer i = 0 to t - 1 with increment i do read a [ i ] [ENDL] sort a [ENDL] print a [ t - 1 ] and a blank space [ENDL] for integer i = 1 to t - 2 with increment i do print a [ i ] and a blank space [ENDL] print a [ 0 ] [ENDL] create integer array a of size 101", "c++": "int main() { cin >> t ; for ( int i = 0 ; i < t ; i ++ ) { cin >> a [ i ] ; } sort ( a , a + t ) ; cout << a [ t - 1 ] << \"   \" ; for ( int i = 1 ; i <= t - 2 ; i ++ ) cout << a [ i ] << \"   \" ; cout << a [ 0 ] << \" \\n \" ; int a [ 101 ] ; return 0; }"}}
{"translation": {"en": "create int n [ENDL] read n [ENDL] for i = 1 to n , read a [ i ] [ENDL] sort a + 1 using argument a + n + 1 [ENDL] print a [ n ] and ' ' [ENDL] for i = 2 to n - 1 , print a [ i ] and ' ' [ENDL] print a [ 1 ] [ENDL] declare constant integer mod with value 1e9 + 7", "c++": "int n ; int main() { cin >> n ; for ( int i = 1 ; i <= n ; ++ i ) cin >> a [ i ] ; sort ( a + 1 , a + n + 1 ) ; cout << a [ n ] << '   ' ; for ( int i = 2 ; i <= n - 1 ; ++ i ) cout << a [ i ] << '   ' ; cout << a [ 1 ] << endl ; const int mod = 1e9 + 7 ; return 0; }"}}
{"translation": {"en": "max i a new constant integer with value 110 [ENDL] create new constant int inf = 0x3f3f3f3f [ENDL] p is an array of integers with maxn elements [ENDL] declare new array of integers q with size maxn [ENDL] create new integer variable t [ENDL] read t and loop further [ENDL] for i from 1 to t inclusive , read from the input to p [ i ] [ENDL] sort p [ENDL] print p [ t ] and ' ' [ENDL] in a for loop , change i from 2 to t exclusive , printing p [ i ] and ' ' on each loop iteration [ENDL] print p [ 1 ] [ENDL] a is a new array of integers with size 105", "c++": "const int maxn = 110 ; const int inf = 0x3f3f3f3f ; int p [ maxn ] ; int q [ maxn ] ; int t ; int main() { while ( cin >> t ) for ( int i = 1 ; i <= t ; i ++ ) { cin >> p [ i ] ; } sort ( p + 1 , p + 1 + t ) ; cout << p [ t ] << '   ' ; for ( int i = 2 ; i < t ; i ++ ) { cout << p [ i ] << '   ' ; } cout << p [ 1 ] << endl ; int a [ 105 ] ; } return 0; }"}}
{"translation": {"en": "inf is a new constant integer = 0x3f3f3f3f [ENDL] create integer variable n [ENDL] loop , reading n from the input [ENDL] declare integer variables ma with value - inf and mi = inf [ENDL] for i from 0 to n exclusive incrementing i [ENDL] read variable a [ i ] from the input [ENDL] change the value of ma to max of ma and a [ i ] [ENDL] assign the new value = min of mi and a [ i ] to mi [ENDL] sort a [ENDL] print ma and ' ' [ENDL] print elements of a from the index 1 to n - 1 exclusive with ' ' after each one [ENDL] print mi [ENDL] declare new constant integer INF with value 100000000", "c++": "const int inf = 0x3f3f3f3f ; int n ; int main() { while ( cin >> n ) int ma = - inf , mi = inf ; for ( int i = 0 ; i < n ; i ++ ) cin >> a [ i ] ; ma = max ( ma , a [ i ] ) ; mi = min ( mi , a [ i ] ) ; sort ( a , a + n ) ; } cout << ma << '   ' ; for ( int i = 1 ; i < n - 1 ; i ++ ) { cout << a [ i ] << '   ' ; } cout << mi << endl ; const int INF = 100000000 ; } }"}}
{"translation": {"en": "a is a new array of integers with size 150 [ENDL] create integer n [ENDL] read n and loop further [ENDL] read standard input to a from the index i to n inclusive [ENDL] sort a [ENDL] create integer variable t with value a [ 1 ] [ENDL] assign a [ n ] to a [ 1 ] [ENDL] change a [ n ] to t [ENDL] print a [ 1 ] [ENDL] start for loop from i = 2 to n inclusive , print ' ' and a [ i ] on each loop [ENDL] print new line [ENDL] n , j , i , r = int and a = int array of size 200", "c++": "int a [ 150 ] ; int n ; int main() { while ( cin >> n ) for ( int i = 1 ; i <= n ; i ++ ) { cin >> a [ i ] ; } sort ( a + 1 , a + n + 1 ) ; int t = a [ 1 ] ; a [ 1 ] = a [ n ] ; a [ n ] = t ; cout << a [ 1 ] ; for ( int i = 2 ; i <= n ; i ++ ) cout << '   ' << a [ i ] ; cout << endl ; int n , j , i , r , a [ 200 ] ; } return 0; }"}}
{"translation": {"en": "read n [ENDL] read n values into a [ENDL] for i = 0 to n - 1 [ENDL] for j = 0 to n - 1 - i [ENDL] if a [ j ] > a [ j + 1 ] [ENDL] set r to a [ j ] [ENDL] set a [ j ] to a [ j + 1 ] [ENDL] set a [ j + 1 ] to r [ENDL] print a [ n - 1 ] [ENDL] for i = 1 to n - 1 print a [ i ] then \" \" [ENDL] print a [ 0 ] [ENDL] function qo with bool argument x that returns boolean", "c++": "int main() { cin >> n ; for ( i = 0 ; i < n ; i ++ ) { cin >> a [ i ] ; } for ( i = 0 ; i < n - 1 ; i ++ ) for ( j = 0 ; j < n - 1 - i ; j ++ ) if ( a [ j ] > a [ j + 1 ] ) r = a [ j ] ; a [ j ] = a [ j + 1 ] ; a [ j + 1 ] = r ; cout << a [ n - 1 ] << \"   \" ; } } } for ( i = 1 ; i < n - 1 ; i ++ ) { cout << a [ i ] << \"   \" ; } cout << a [ 0 ] << endl ; bool qo ( bool x ) return 0; }"}}
{"translation": {"en": "return 0 if x is true and qo ( ! x ) othersiwe [ENDL] mnx is a new constant integer = 1e7 + 9 [ENDL] declare new constant called mod with value 1e9 + 7 and type int [ENDL] create new long long n [ENDL] declare new array of long longs x with mnx elements [ENDL] create new array of long longs u with size mnx [ENDL] k is a new array of long longs with size mnx [ENDL] declare new long long variables cnt and c [ENDL] read n from the user input [ENDL] read n elements from the input to x [ i ] starting from the index 1 [ENDL] sort x from position 1 to n + 1 [ENDL] print x [ n ] and ' ' [ENDL] start for loop from i = 1 to n inclusive [ENDL] if i = n or i = 1 , go to the start of the loop [ENDL] print x [ i ] and ' ' [ENDL] print x [ 1 ] and ' \\ n ' to the standard output [ENDL] declare constant integer N = 1e6 + 5", "c++": "return ( x ? 0 : qo ( ! x ) ) ; const int mnx = 1e7 + 9 ; } const int mod = 1e9 + 7 ; long long n ; long long x [ mnx ] ; long long u [ mnx ] ; long long k [ mnx ] ; long long cnt , c ; cin >> n ; int main() { for ( int i = 1 ; i <= n ; i ++ ) { cin >> x [ i ] ; } sort ( x + 1 , x + n + 1 ) ; cout << x [ n ] << '   ' ; for ( int i = 1 ; i <= n ; i ++ ) if ( i == n || i == 1 ) continue ; cout << x [ i ] << '   ' ; cout << x [ 1 ] << ' \\n ' ; } const int N = 1e6 + 5 ; return 0; }"}}
{"translation": {"en": "declare integers n , a , c = 2 , ans [ENDL] declare integer vector v [ENDL] read n [ENDL] while decrement n is true , read a , add a to end of v [ENDL] sort from beginning of v to end of v [ENDL] if size of v is 2 [ENDL] print back of v , \" \" , v [ 0 ] , newline [ENDL] print back of v , \" \" [ENDL] for i = 1 to size of v - 1 exclusive , print v [ i ] , \" \" [ENDL] print v [ 0 ] and newline [ENDL] mod is a new constant long long = 1e9 + 7", "c++": "int n , a , c = 2 , ans ; vector < int > v ; cin >> n ; int main() { while ( n -- ) cin >> a , v . push_back ( a ) ; sort ( v . begin ( ) , v . end ( ) ) ; if ( v . size ( ) == 2 ) cout << v . back ( ) << \"   \" << v [ 0 ] << endl ; cout << v . back ( ) << \"   \" ; return 0; } for ( int i = 1 ; i < v . size ( ) - 1 ; i ++ ) cout << v [ i ] << \"   \" ; cout << v [ 0 ] << endl ; const long long mod = 1e9 + 7 ; }"}}
{"translation": {"en": "create new constant integer N = 1e5 + 5 [ENDL] long long function gcd with long long arguments a and b [ENDL] return gcd ( b , a % b ) if b ! = 0 or a otherwise [ENDL] empty long long function pwr with long long arguments x and y [ENDL] isprime is an empty boolean function with long long argument x [ENDL] create vector of integers v [ENDL] create integers n and x [ENDL] read standard input to n [ENDL] loop , decrementing n , while it is not 0 [ENDL] read user input to x [ENDL] push x to the back of v [ENDL] sort v from start to end [ENDL] print v [ length of v - 1 ] and ' ' to the standard output [ENDL] in a for loop , change i from 1 to length of v - 1 exclusive ; print v [ i ] and ' ' on each iteration [ENDL] print v [ 0 ] [ENDL] pwr is a long long function with long long arguments x and y [ENDL] declare new long long variable ans with value 1 [ENDL] change x to x % mod [ENDL] while y > 0 [ENDL] if y & 1 ! = 0 , assign the value = ( x * ans ) % mod to ans [ENDL] change x to x squared modulo mod [ENDL] change y to y / 2 [ENDL] return ans [ENDL] boolean function isprime with long long argument x [ENDL] if x is less than 2 , return false [ENDL] if x is less than 4 , return true [ENDL] if x is even or x % 3 is equal to 0 , return false [ENDL] start a loop from i = 5 , while i * i < = x , increasing i by 6 [ENDL] if x % i or x % ( i + 2 ) is equal to 0 , return false [ENDL] return true [ENDL] create int array a of size 101", "c++": "const int N = 1e5 + 5 ; long long gcd ( long long a , long long b ) return b ? gcd ( b , a % b ) : a ; long long pwr ( long long x , long long y ) ; } bool isprime ( long long x ) ; vector < int > v ; int n , x ; int main() { cin >> n ; while ( n -- ) cin >> x ; v . push_back ( x ) ; sort ( v . begin ( ) , v . end ( ) ) ; } cout << v [ v . size ( ) - 1 ] << '   ' ; for ( int i = 1 ; i < v . size ( ) - 1 ; i ++ ) { cout << v [ i ] << '   ' ; } cout << v [ 0 ] << endl ; long long pwr ( long long x , long long y ) return 0; } long long ans = 1 ; x = x % mod ; while ( y > 0 ) if ( y & 1 ) ans = ( x * ans ) % mod ; x = ( x * x ) % mod ; y = y / 2 ; return ans ; } bool isprime ( long long x ) } if ( x < 2 ) return false ; if ( x < 4 ) return true ; if ( x % 2 == 0 || x % 3 == 0 ) return false ; for ( long long i = 5 ; i * i <= x ; i += 6 ) if ( x % i == 0 || x % ( i + 2 ) == 0 ) return false ; return true ; } int a [ 101 ] ; }"}}
{"translation": {"en": "create int n [ENDL] read n and while it ' s truthy [ENDL] create int i [ENDL] for i = 0 to n exclusive , read a [ i ] [ENDL] sort a [ENDL] print a [ n - 1 ] and ' ' [ENDL] for i = 1 to n - 1 exclusive , print a [ i ] and ' ' [ENDL] print a [ 0 ] [ENDL] n , i = int", "c++": "int main() { int n ; while ( cin >> n ) int i ; for ( int i = 0 ; i < n ; i ++ ) cin >> a [ i ] ; sort ( a , a + n ) ; cout << a [ n - 1 ] << '   ' ; for ( i = 1 ; i < n - 1 ; i ++ ) { cout << a [ i ] << '   ' ; } cout << a [ 0 ] << endl ; int n , i ; } return 0; }"}}
{"translation": {"en": "while read n [ENDL] arr and res = array of 110 int filled with 0 , max = - 10000 , min = 10000 , p_max , p_min and k = int [ENDL] read arr [ 0 ] [ENDL] max = min = arr [ 0 ] [ENDL] p_max = p_min = 0 [ENDL] for i = 1 to n exclusive [ENDL] read arr [ i ] [ENDL] if arr [ i ] < min [ENDL] min = arr [ i ] [ENDL] p_min = i [ENDL] else if arr [ i ] > max [ENDL] max = arr [ i ] [ENDL] p_max = i [ENDL] k = 0 [ENDL] for i = 0 to n exclusive [ENDL] if i is p_min or p_max continue [ENDL] res [ k ] = arr [ i ] , increment k [ENDL] sort first k items of res [ENDL] if p_max is not p_min print max , space [ENDL] for i = 0 to k exclusive print res [ i ] , space [ENDL] print min [ENDL] n is a new integer", "c++": "int main() { while ( cin >> n ) int arr [ 110 ] = { 0 } , max = - 10000 , min = 10000 , p_max , p_min , res [ 110 ] = { 0 } , k ; cin >> arr [ 0 ] ; max = min = arr [ 0 ] ; p_max = p_min = 0 ; for ( i = 1 ; i < n ; i ++ ) cin >> arr [ i ] ; if ( arr [ i ] < min ) min = arr [ i ] ; p_min = i ; else if ( arr [ i ] > max ) max = arr [ i ] ; p_max = i ; k = 0 ; } } for ( i = 0 ; i < n ; i ++ ) if ( i == p_min || i == p_max ) continue ; res [ k ++ ] = arr [ i ] ; sort ( res , res + k ) ; } if ( p_max != p_min ) cout << max << \"   \" ; for ( i = 0 ; i < k ; i ++ ) cout << res [ i ] << \"   \" ; cout << min << endl ; int n ; } return 0; }"}}
{"translation": {"en": "a is a new array of integers with size 1000 [ENDL] read n and keep looping [ENDL] declare new integers b and c [ENDL] read n elements from the input stream into a [ i ] [ENDL] sort a [ENDL] assign the new value = a [ 0 ] to b [ENDL] assign a [ n - 1 ] to c [ENDL] print c to the standard output [ENDL] in a for loop , change i from 1 to n - 1 exclusive , print \" \" and a [ i ] on each iteration [ENDL] print \" \" and b to the standard output [ENDL] let cmp be a boolean function which accepts integers a , b", "c++": "int main() { int a [ 1000 ] ; while ( cin >> n ) int b , c ; for ( int i = 0 ; i < n ; i ++ ) { cin >> a [ i ] ; } sort ( a , a + n ) ; b = a [ 0 ] ; c = a [ n - 1 ] ; cout << c ; for ( int i = 1 ; i < n - 1 ; i ++ ) { cout << \"   \" << a [ i ] ; } cout << \"   \" << b << endl ; bool cmp ( int a , int b ) } return 0; }"}}
{"translation": {"en": "return a greater than b [ENDL] cc = array of integers of length 105 [ENDL] let n , res , flag , f be integers with res = 0 , flag = 0 [ENDL] read n [ENDL] for i = 1 to n inclusive , read cc [ i ] [ENDL] sort the values cc + 1 and cc + 1 + n [ENDL] swap the values cc [ 1 ] , cc [ n ] [ENDL] for i = 1 to n inclusive [ENDL] if i is equal to n [ENDL] print cc [ i ] and newline [ENDL] else do the following [ENDL] print cc [ i ] and space [ENDL] INF = const integer with INF = 0x3f3f3f3f", "c++": "return a > b ; int cc [ 105 ] ; } int n , res = 0 , flag = 0 , f ; int main() { cin >> n ; for ( int i = 1 ; i <= n ; i ++ ) { cin >> cc [ i ] ; } sort ( cc + 1 , cc + 1 + n ) ; swap ( cc [ 1 ] , cc [ n ] ) ; for ( int i = 1 ; i <= n ; i ++ ) if ( i == n ) cout << cc [ i ] << endl ; else cout << cc [ i ] << \"   \" ; const int INF = 0x3f3f3f3f ; } return 0; }"}}
{"translation": {"en": "T = const integer with T = 103 [ENDL] row = integer array of size T [ENDL] n = integer [ENDL] read n [ENDL] for i = 0 to n exclusive , read row [ i ] [ENDL] sort row and row + n [ENDL] print row [ n - 1 ] [ENDL] for i = 1 to n - 1 exclusive , print row [ i ] [ENDL] print row [ 0 ] [ENDL] declare new array of integers p with size 500", "c++": "const int T = 100 + 3 ; int row [ T ] ; int n ; int main() { cin >> n ; for ( int i = 0 ; i < n ; i ++ ) cin >> row [ i ] ; sort ( row , row + n ) ; cout << row [ n - 1 ] << \"   \" ; for ( int i = 1 ; i < n - 1 ; i ++ ) cout << row [ i ] << \"   \" ; cout << row [ 0 ] << endl ; int p [ 500 ] ; return 0; }"}}
{"translation": {"en": "declare integer n [ENDL] read n and keep looping [ENDL] set values of first sizeof ( p ) bytes at the pointer p to 0 [ENDL] for integer i = 0 to n exclusive , read p [ i ] [ENDL] sort p from index 0 to n [ENDL] print p [ n - 1 ] to the standard output [ENDL] print \" \" and p [ i ] to the standard output on a loop for i from 1 to n - 1 exclusive [ENDL] print \" \" and p [ 0 ] [ENDL] let A an int array of length 100010", "c++": "int n ; int main() { while ( cin >> n ) memset ( p , 0 , sizeof ( p ) ) ; for ( int i = 0 ; i < n ; i ++ ) { cin >> p [ i ] ; } sort ( p , p + n ) ; cout << p [ n - 1 ] ; for ( int i = 1 ; i < n - 1 ; i ++ ) { cout << \"   \" << p [ i ] ; } cout << \"   \" << p [ 0 ] << endl ; int A [ 100010 ] ; } }"}}
{"translation": {"en": "let n an int [ENDL] read n [ENDL] read the first n values of A [ENDL] sort the first n values of A [ENDL] reverse the first n values of A [ENDL] let ans be a vector of ints [ENDL] print A [ 0 ] [ENDL] for i from n - 2 down to 1 , print A [ i ] [ENDL] print A [ n - 1 ] [ENDL] a = integer array of size 110", "c++": "int n ; int main() { cin >> n ; for ( int i = 0 ; i < n ; i ++ ) cin >> A [ i ] ; sort ( A , A + n ) ; reverse ( A , A + n ) ; vector < int > ans ; cout << A [ 0 ] << \"   \" ; for ( int i = n - 2 ; i >= 1 ; i -- ) cout << A [ i ] << \"   \" ; cout << A [ n - 1 ] << ' \\n ' ; int a [ 110 ] ; }"}}
{"translation": {"en": "n = integer [ENDL] read n [ENDL] i = integer [ENDL] for i = 0 to n exclusive , read a [ i ] [ENDL] sort a and a + n [ENDL] print a [ n - 1 ] [ENDL] for i = 1 to n - 1 exclusive , print a [ i ] [ENDL] print a [ 0 ] [ENDL] v = vector of integer", "c++": "int n ; int main() { cin >> n ; int i ; for ( i = 0 ; i < n ; i ++ ) cin >> a [ i ] ; sort ( a , a + n ) ; cout << a [ n - 1 ] << \"   \" ; for ( i = 1 ; i < n - 1 ; i ++ ) { cout << a [ i ] << \"   \" ; } cout << a [ 0 ] << endl ; vector < int > v ; return 0; }"}}
{"translation": {"en": "n , a = integers [ENDL] read n [ENDL] while decrement n [ENDL] read a [ENDL] append a in v [ENDL] sort v . begin ( ) and v . end ( ) [ENDL] print v [ v . size ( ) - 1 ] [ENDL] for i = 1 to i + 1 < v . size ( ) , print v [ i ] [ENDL] print v [ 0 ] [ENDL] let n , i be integers", "c++": "int main() { int n , a ; cin >> n ; while ( n -- ) cin >> a ; v . push_back ( a ) ; sort ( v . begin ( ) , v . end ( ) ) ; } cout << v [ v . size ( ) - 1 ] << \"   \" ; for ( int i = 1 ; i + 1 < v . size ( ) ; i ++ ) { cout << v [ i ] << \"   \" ; } cout << v [ 0 ] << endl ; int n , i ; return 0; }"}}
{"translation": {"en": "read n [ENDL] a = array of integers of length n + 1 [ENDL] for i = 1 to n inclusive , read a [ i ] [ENDL] sort the values a + 1 , a + n + 1 [ENDL] print a [ n ] and space [ENDL] for i = 2 to n exclusive , print a [ i ] and space [ENDL] print a [ 1 ] and newline [ENDL] declare string a", "c++": "int main() { cin >> n ; int a [ n + 1 ] ; for ( i = 1 ; i <= n ; i ++ ) cin >> a [ i ] ; sort ( a + 1 , a + n + 1 ) ; cout << a [ n ] << \"   \" ; for ( i = 2 ; i < n ; i ++ ) cout << a [ i ] << \"   \" ; cout << a [ 1 ] << endl ; string a ; return 0; }"}}
{"translation": {"en": "read a [ENDL] declare integer s = 0 [ENDL] for i = 0 to a [ i ] , incrementing i [ENDL] if a [ i ] is ' a ' or a [ i ] is ' e ' or a [ i ] is ' i ' or a [ i ] is ' o ' or a [ i ] is ' u ' [ENDL] increment s [ENDL] else if a [ i ] is greater than or equal to ' 0 ' and a [ i ] is less than or equal to ' 9 ' and ( a [ i ] - 48 ) % 2 is not 0 [ENDL] increment s [ENDL] print s and newline [ENDL] create string a", "c++": "int main() { cin >> a ; int s = 0 ; for ( int i = 0 ; a [ i ] ; i ++ ) if ( a [ i ] == ' a ' || a [ i ] == ' e ' || a [ i ] == ' i ' || a [ i ] == ' o ' || a [ i ] == ' u ' ) s ++ ; else if ( a [ i ] >= ' 0 ' && a [ i ] <= ' 9 ' && ( a [ i ] - 48 ) % 2 != 0 ) s ++ ; cout << s << endl ; } string a ; return 0; }"}}
{"translation": {"en": "read a [ENDL] num = 0 [ENDL] b = aeiou13579 [ENDL] for i = 0 to size of a exclusive [ENDL] for j = 0 to size of b exclusive [ENDL] if a [ i ] = b [ j ] increment num [ENDL] print num [ENDL] function isVowel takes a character a and returns a boolean value", "c++": "int main() { cin >> a ; int num = 0 ; string b = \" aeiou13579 \" ; for ( int i = 0 ; i < a . size ( ) ; i ++ ) for ( int j = 0 ; j < b . size ( ) ; j ++ ) if ( a [ i ] == b [ j ] ) num ++ ; cout << num << endl ; } } bool isVowel ( char a ) }"}}
{"translation": {"en": "return the value of ( a is equal to a or a is equal to e or a is equal to i or a is equal to o or a is equal to u ) [ENDL] function isOdd takes a character a and returns a boolean value [ENDL] return the value of ( a is equal to 1 or a is equal to 3 or a is equal to 5 or a is equal to 7 or a is equal to 9 ) [ENDL] text is a string [ENDL] read text [ENDL] num is an integer and equals 0 [ENDL] for integer i = 0 to text . length ( ) exclusive [ENDL] if isVowel ( text [ i ] ) or isOdd ( text [ i ] is true , increase num by 1 [ENDL] print num and newline [ENDL] s = string", "c++": "return ( a == ' a ' || a == ' e ' || a == ' i ' || a == ' o ' || a == ' u ' ) ; bool isOdd ( char a ) } return ( a == ' 1 ' || a == ' 3 ' || a == ' 5 ' || a == ' 7 ' || a == ' 9 ' ) ; string text ; } int main() { cin >> text ; int num = 0 ; for ( int i = 0 ; i < text . length ( ) ; i ++ ) if ( isVowel ( text [ i ] ) || isOdd ( text [ i ] ) ) num ++ ; cout << num << endl ; } string s ; }"}}
{"translation": {"en": "num = integer = 0 [ENDL] while s is read as a valid string [ENDL] for i = 0 to length of s exclusive [ENDL] if s [ i ] contians a , e , i , o , u , 1 , 3 , 5 , 7 , or 9 , then increase num by 1 [ENDL] print num [ENDL] make a map called t using character and integer", "c++": "int main() { int num = 0 ; while ( cin >> s ) for ( int i = 0 ; i < s . length ( ) ; i ++ ) if ( strchr ( \" aeiou13579 \" , s [ i ] ) ) num ++ ; cout << num << endl ; map < char , int > t ; } return 0; }"}}
{"translation": {"en": "set t [ a ] to 1 [ENDL] set t [ e ] to 1 [ENDL] set t [ i ] to 1 [ENDL] set t [ o ] to 1 [ENDL] set t [ u ] to 1 [ENDL] set t [ 1 ] to 1 [ENDL] set t [ 3 ] to 1 [ENDL] set t [ 5 ] to 1 [ENDL] set t [ 7 ] to 1 [ENDL] set t [ 9 ] to 1 [ENDL] integers = ans = 0 [ENDL] s = string array [ENDL] read s [ENDL] for i = 0 to less than s . size ( ) then add one to t [ s [ i ] ] [ENDL] output ans [ENDL] declare integer variable with name res = 0", "c++": "int main() { t [ ' a ' ] = 1 ; t [ ' e ' ] = 1 ; t [ ' i ' ] = 1 ; t [ ' o ' ] = 1 ; t [ ' u ' ] = 1 ; t [ ' 1 ' ] = 1 ; t [ ' 3 ' ] = 1 ; t [ ' 5 ' ] = 1 ; t [ ' 7 ' ] = 1 ; t [ ' 9 ' ] = 1 ; int ans = 0 ; string s ; cin >> s ; for ( int i = 0 ; i < s . size ( ) ; i ++ ) { ans += t [ s [ i ] ] ; } cout << ans << endl ; int res = 0 ; }"}}
{"translation": {"en": "create new string a = \" aeiou13579 \" [ENDL] create string variable str [ENDL] read str from the input [ENDL] in a for loop , change i from 0 to exclusive [ENDL] if there is part , that equals to str [ i ] , in a , increment res [ENDL] print res [ENDL] s = string", "c++": "int main() { string a = \" aeiou13579 \" ; string str ; cin >> str ; for ( int i = 0 ; str [ i ] ; i ++ ) if ( a . find ( str [ i ] ) != - 1 ) res ++ ; cout << res << endl ; } string s ; return 0; }"}}
{"translation": {"en": "read s [ENDL] a = string = aeiou13579 [ENDL] cnt = integer = 0 [ENDL] for i = 0 to size of s exclusive [ENDL] for j = 0 to size of a exclusive [ENDL] if s [ i ] is a [ j ] , then increase cnt by 1 [ENDL] print cnt [ENDL] vowel is a bool function with char argument ch", "c++": "int main() { cin >> s ; string a = \" aeiou13579 \" ; int cnt = 0 ; for ( int i = 0 ; i < s . size ( ) ; i ++ ) for ( int j = 0 ; j < a . size ( ) ; j ++ ) if ( s [ i ] == a [ j ] ) { cnt ++ ; } cout << cnt << \" \\n \" ; } } bool vowel ( char ch ) return 0; }"}}
{"translation": {"en": "if ch is one of : ' a ' , ' e ' , ' i ' , ' o ' or ' u ' [ENDL] return true [ENDL] else [ENDL] return false [ENDL] boolean function even with char argument ch [ENDL] if ch is an odd digit character [ENDL] return true [ENDL] else [ENDL] return false [ENDL] declare new string s [ENDL] read user input to s [ENDL] create integer variable with name len [ENDL] count is a new integer with value 0 [ENDL] for i from 0 to len exclusive incrementing i [ENDL] create new character called ch with value s [ i ] [ENDL] if vowel ( ch ) returns true , increment count by one [ENDL] if even ( ch ) returns true , increment count by one [ENDL] print count [ENDL] declare string s", "c++": "if ( ch == ' a ' || ch == ' e ' || ch == ' i ' || ch == ' o ' || ch == ' u ' ) return true ; else return false ; bool even ( char ch ) } } if ( ch == ' 1 ' || ch == ' 3 ' || ch == ' 5 ' || ch == ' 7 ' || ch == ' 9 ' ) return true ; else return false ; string s ; } } int main() { cin >> s ; int len = s . size ( ) ; int count = 0 ; for ( int i = 0 ; i < len ; i ++ ) char ch = s [ i ] ; if ( vowel ( ch ) ) { count ++ ; } if ( even ( ch ) ) { count ++ ; } cout << count << endl ; } string s ; return 0; }"}}
{"translation": {"en": "read s [ENDL] declare integers i and j [ENDL] declare integer len = length of s [ENDL] declare integer cnt = 0 [ENDL] for i = 0 to len exclusive [ENDL] if s [ i ] is greater than or equal to ' a ' and s [ i ] is less than or equal to ' z ' [ENDL] if s [ i ] is ' a ' or s [ i ] is ' e ' or s [ i ] is ' i ' or s [ i ] is ' o ' or s [ i ] is ' u ' , increment cnt [ENDL] if s [ i ] is greater than or equal to ' 0 ' and s [ i ] is less than or equal to ' 9 ' [ENDL] if ( s [ i ] - ' 0 ' ) % 2 is 1 , increment cnt [ENDL] print cnt and newline [ENDL] let i , j , k , l , m , n be integers", "c++": "int main() { cin >> s ; int i , j ; int len = s . length ( ) ; int cnt = 0 ; for ( i = 0 ; i < len ; i ++ ) if ( s [ i ] >= ' a ' && s [ i ] <= ' z ' ) if ( s [ i ] == ' a ' || s [ i ] == ' e ' || s [ i ] == ' i ' || s [ i ] == ' o ' || s [ i ] == ' u ' ) cnt ++ ; if ( s [ i ] >= ' 0 ' && s [ i ] <= ' 9 ' ) } if ( ( s [ i ] - ' 0 ' ) % 2 == 1 ) cnt ++ ; cout << cnt << endl ; } } int i , j , k , l , m , n ; }"}}
{"translation": {"en": "let s be a string [ENDL] read s [ENDL] m is equal to 0 [ENDL] for i = 0 to length of s exclusive [ENDL] if s [ i ] is equal to a or s [ i ] is equal to e or s [ i ] is equal to i or s [ i ] is equal to o or s [ i ] is equal to u [ENDL] increment m by 1 [ENDL] else if s [ i ] > = 0 and s [ i ] < = 9 [ENDL] if ( s [ i ] - 0 ) modulo 2 is not equal to 0 , increment m by 1 [ENDL] print m and newline [ENDL] s = string", "c++": "int main() { string s ; cin >> s ; m = 0 ; for ( i = 0 ; i < s . size ( ) ; i ++ ) if ( s [ i ] == ' a ' || s [ i ] == ' e ' || s [ i ] == ' i ' || s [ i ] == ' o ' || s [ i ] == ' u ' ) m ++ ; else if ( s [ i ] >= ' 0 ' && s [ i ] <= ' 9 ' ) if ( ( s [ i ] - ' 0 ' ) % 2 != 0 ) m ++ ; cout << m << endl ; } } string s ; return 0; }"}}
{"translation": {"en": "read s [ENDL] dic = string = 13579aeiou [ENDL] cont = integer = 0 [ENDL] for i = 0 to size of s exclusive [ENDL] if i s [ i ] is in dic , the increase cont by 1 [ENDL] print cont [ENDL] s = set of char", "c++": "int main() { cin >> s ; string dic = \" 13579aeiou \" ; int cont = 0 ; for ( int i = 0 ; i < s . size ( ) ; i ++ ) if ( dic . find ( s [ i ] ) != string :: npos ) { ++ cont ; } cout << cont << endl ; } set < char > s ; return 0; }"}}
{"translation": {"en": "insert ' a ' into s [ENDL] insert ' e ' into s [ENDL] insert ' i ' into s [ENDL] insert ' o ' into s [ENDL] insert ' u ' into s [ENDL] for i = 1 to 10 by 2 exclusive insert i + ' 0 ' into s [ENDL] k = string [ENDL] ans = 0 [ENDL] read k [ENDL] len = length of k [ENDL] for i = 0 to len exclusive [ENDL] if k [ i ] is present in s increment ans [ENDL] print ans [ENDL] dict = array of 15 char filled with \" 13579aeiou \"", "c++": "s . insert ( ' a ' ) ; int main() { s . insert ( ' e ' ) ; s . insert ( ' i ' ) ; s . insert ( ' o ' ) ; s . insert ( ' u ' ) ; for ( int i = 1 ; i < 10 ; i += 2 ) { s . insert ( i + ' 0 ' ) ; } string k ; int ans = 0 ; cin >> k ; int len = k . length ( ) ; for ( int i = 0 ; i < len ; i ++ ) if ( s . count ( k [ i ] ) ) { ans ++ ; } cout << ans << endl ; } char dict [ 15 ] = \" 13579aeiou \" ; return 0; }"}}
{"translation": {"en": "s = array of 55 char [ENDL] sum , i = 0 [ENDL] read s [ENDL] while s [ i ] is not null byte [ENDL] flag = 1 [ENDL] for j = 0 to 10 exclusive [ENDL] if s [ i ] is dict [ j ] flag = 0 [ENDL] if flag is 0 increment sum [ENDL] increment i [ENDL] print sum [ENDL] ans = int", "c++": "char s [ 55 ] ; int main() { int sum = 0 , i = 0 ; cin >> s ; while ( s [ i ] != ' \\0 ' ) int flag = 1 ; for ( int j = 0 ; j < 10 ; j ++ ) if ( s [ i ] == dict [ j ] ) flag = 0 ; if ( flag == 0 ) sum ++ ; i ++ ; cout << sum << endl ; } int ans ; }"}}
{"translation": {"en": "s = string [ENDL] read s [ENDL] for i = 0 to size of s [ENDL] if isalpha of s [ i ] [ENDL] if s [ i ] is ' a ' or ' e ' or ' o ' or ' i ' or ' u ' increment ans [ENDL] else if s [ i ] is uneven [ENDL] increment ans [ENDL] print ans [ENDL] s = string", "c++": "string s ; int main() { cin >> s ; for ( int i = 0 ; i < s . size ( ) ; i ++ ) if ( isalpha ( s [ i ] ) ) if ( s [ i ] == ' a ' || s [ i ] == ' e ' || s [ i ] == ' o ' || s [ i ] == ' i ' || s [ i ] == ' u ' ) ans ++ ; else if ( s [ i ] % 2 != 0 ) ans ++ ; cout << ans << endl ; } string s ; return 0; }"}}
{"translation": {"en": "read s [ENDL] c = int with c = 0 [ENDL] for i = 0 to length of s [ENDL] if s [ i ] is ' a ' or ' e ' E or ' i ' or ' o ' or ' u ' [ENDL] increment c [ENDL] else if ( s [ i ] < ' a ' or s [ i ] > ' z ' ) and ( s [ i ] - ' 0 ' ) mod 2 is not 0 [ENDL] increment c [ENDL] print c [ENDL] declare character set s", "c++": "int main() { cin >> s ; int c = 0 ; for ( int i = 0 ; i < s . length ( ) ; i ++ ) if ( s [ i ] == ' a ' || s [ i ] == ' e ' || s [ i ] == ' i ' || s [ i ] == ' o ' || s [ i ] == ' u ' ) c ++ ; else if ( ( s [ i ] < ' a ' || s [ i ] > ' z ' ) && ( s [ i ] - ' 0 ' ) % 2 != 0 ) c ++ ; cout << c << endl ; } } set < char > s ; return 0; }"}}
{"translation": {"en": "insert ' a ' into s [ENDL] insert ' e ' into s [ENDL] insert ' i ' into s [ENDL] insert ' o ' into s [ENDL] insert ' u ' into s [ENDL] for i = 1 to 10 exclusive , incrementing i by 2 , insert ( i + ' 0 ' ) into s [ENDL] declare string k [ENDL] declare ans = 0 as integer [ENDL] read k [ENDL] deeclare len = length of k as integer [ENDL] for i = 0 to len exclusive [ENDL] if count of k [ i ] in s , increment ans [ENDL] print ans and newline [ENDL] a = array of 55 char", "c++": "s . insert ( ' a ' ) ; int main() { s . insert ( ' e ' ) ; s . insert ( ' i ' ) ; s . insert ( ' o ' ) ; s . insert ( ' u ' ) ; for ( int i = 1 ; i < 10 ; i += 2 ) { s . insert ( i + ' 0 ' ) ; } string k ; int ans = 0 ; cin >> k ; int len = k . length ( ) ; for ( int i = 0 ; i < len ; i ++ ) if ( s . count ( k [ i ] ) ) { ans ++ ; } cout << ans << endl ; } char a [ 55 ] ; return 0; }"}}
{"translation": {"en": "read a [ENDL] i , cnt = 0 [ENDL] while a [ i ] is not null byte increment i [ENDL] if a [ i ] is a digit [ENDL] if a [ i ] - ' 0 ' is odd increment cnt [ENDL] if a [ i ] is one of ' a ' , ' e ' , ' i ' , ' o ' , ' u ' increment cnt [ENDL] print cnt [ENDL] in the function isvowel that takes character c and returns bool", "c++": "int main() { gets ( a ) ; int i = 0 , cnt = 0 ; for ( ; a [ i ] != ' \\0 ' ; i ++ ) if ( a [ i ] <= ' 9 ' && a [ i ] >= ' 0 ' ) if ( ( a [ i ] - ' 0 ' ) % 2 != 0 ) { cnt ++ ; } if ( a [ i ] == ' a ' || a [ i ] == ' e ' || a [ i ] == ' i ' || a [ i ] == ' o ' || a [ i ] == ' u ' ) { cnt ++ ; } } cout << cnt << endl ; } bool isvowel ( char c ) return 0; }"}}
{"translation": {"en": "if ( c is a or c is e or c is i or c is o or c is u ) , return true [ENDL] return false [ENDL] str = string [ENDL] read str [ENDL] siz = integer with siz = str . length ( ) [ENDL] cnt = integer with cnt = 0 [ENDL] for i = 0 to siz exclusive [ENDL] if ( isvowel ( str [ i ] ) ) [ENDL] increment cnt [ENDL] else if ( not isalpha ( str [ i ] ) and ( str [ i ] - 0 ) bitwise and 1 ) [ENDL] increment cnt [ENDL] print cnt [ENDL] let exa be a array of characters of length 10 with its elements as a , e , i , o , u , 1 , 3 , 5 , 7 , 9", "c++": "if ( c == ' a ' || c == ' e ' || c == ' i ' || c == ' o ' || c == ' u ' ) return true ; return false ; string str ; } int main() { cin >> str ; int siz = str . length ( ) ; int cnt = 0 ; for ( int i = 0 ; i < siz ; i ++ ) if ( isvowel ( str [ i ] ) ) cnt ++ ; else if ( ! isalpha ( str [ i ] ) && ( str [ i ] - ' 0 ' ) & 1 ) cnt ++ ; cout << cnt << endl ; } } char exa [ 10 ] = { ' a ' , ' e ' , ' i ' , ' o ' , ' u ' , ' 1 ' , ' 3 ' , ' 5 ' , ' 7 ' , ' 9 ' } ; return 0; }"}}
{"translation": {"en": "a = array of characters of length 55 [ENDL] read a [ENDL] let len be a integer with len = string length of a [ENDL] let ans be a integer with ans = 0 [ENDL] for i = 0 to len exclusive [ENDL] for j = 0 to 10 exclusive [ENDL] if a [ i ] is equal to exa [ j ] , increment ans by 1 [ENDL] print ans and new line [ENDL] s = string", "c++": "char a [ 55 ] ; int main() { cin >> a ; int len = strlen ( a ) ; int ans = 0 ; for ( int i = 0 ; i < len ; i ++ ) for ( int j = 0 ; j < 10 ; j ++ ) if ( a [ i ] == exa [ j ] ) ans ++ ; cout << ans << endl ; } } string s ; return 0; }"}}
{"translation": {"en": "read s [ENDL] ans = 0 [ENDL] for i = 0 to length of s exclusive [ENDL] if s [ i ] is ' a ' or ' e ' or ' i ' or ' o ' or ' u ' [ENDL] increment ans [ENDL] else if s [ i ] > ' 0 ' and < = ' 9 ' and ( s [ i ] - ' 0 ' ) is odd [ENDL] increment ans [ENDL] print ans [ENDL] make string s", "c++": "int main() { cin >> s ; int ans = 0 ; for ( int i = 0 ; i < s . length ( ) ; i ++ ) if ( s [ i ] == ' a ' || s [ i ] == ' e ' || s [ i ] == ' i ' || s [ i ] == ' o ' || s [ i ] == ' u ' ) ans ++ ; else if ( s [ i ] > ' 0 ' && s [ i ] <= ' 9 ' && ( s [ i ] - ' 0 ' ) % 2 == 1 ) ans ++ ; cout << ans << endl ; } string s ; return 0; }"}}
{"translation": {"en": "create integer c = 0 [ENDL] read s [ENDL] make integer len = s . size ( ) [ENDL] for i = 0 to len exclusive [ENDL] if strchr ( \" aeiou13579 \" , s [ i ] ) is truthy , increment c [ENDL] output c [ENDL] set const int INF to 0x3f3f3f3f", "c++": "int main() { int c = 0 ; cin >> s ; int len = s . size ( ) ; for ( int i = 0 ; i < len ; i ++ ) if ( strchr ( \" aeiou13579 \" , s [ i ] ) ) { c ++ ; } cout << c << endl ; } const int INF = 0x3f3f3f3f ; return 0; }"}}
{"translation": {"en": "set const int maxn to 5005 [ENDL] integers = arr as an array of maxn [ENDL] integers = n [ENDL] read n [ENDL] if n modulo 10 > = 0 and n modulo 10 is less than or equal to 5 then do the following [ENDL] output n / 10 * 10 [ENDL] else [ENDL] if n modulo 10 is true do then add 1 to n [ENDL] output n [ENDL] in the function func that takes long long x", "c++": "const int maxn = 5005 ; int arr [ maxn ] ; int n ; int main() { cin >> n ; if ( n % 10 >= 0 && n % 10 <= 5 ) cout << n / 10 * 10 << endl ; else while ( n % 10 ) { n ++ ; } cout << n << endl ; void func ( long long x ) } return 0; }"}}
{"translation": {"en": "if ( ( x modulo 10 ) > 5 ) print ( x / 10 + 1 ) * 10 [ENDL] if ( ( x modulo 10 ) < = 5 ) print ( x / 10 ) * 10 [ENDL] x = long long [ENDL] while ( print x ) , call func on x [ENDL] create integer n", "c++": "if ( ( x % 10 ) > 5 ) cout << ( x / 10 + 1 ) * 10 << endl ; if ( ( x % 10 ) <= 5 ) cout << ( x / 10 ) * 10 << endl ; long long x ; } int main() { while ( cin >> x ) func ( x ) ; int n ; }"}}
{"translation": {"en": "read n [ENDL] if n % 10 is greater than 5 [ENDL] set n to n - n % 10 + 10 [ENDL] else [ENDL] set n to n - n % 10 [ENDL] print n print newline [ENDL] create int n", "c++": "int main() { cin >> n ; if ( n % 10 > 5 ) n = n - n % 10 + 10 ; else n = n - n % 10 ; cout << n << endl ; int n ; return 0; }"}}
{"translation": {"en": "read n [ENDL] if n mod 10 < = 5 [ENDL] print n / 10 * 10 [ENDL] else [ENDL] print ( n / 10 + 1 ) * 10 and a newline [ENDL] n = integer", "c++": "int main() { cin >> n ; if ( n % 10 <= 5 ) cout << ( n / 10 ) * 10 << endl ; else cout << ( n / 10 + 1 ) * 10 << endl ; long long n ; } }"}}
{"translation": {"en": "Read n [ENDL] t = integer , set to n modulo 10 [ENDL] if t is greater than or equal to 6 [ENDL] set n to n - t + 10 [ENDL] else do the following [ENDL] set n to n - t [ENDL] print n and a new line [ENDL] n = long long integers", "c++": "int main() { cin >> n ; int t = n % 10 ; if ( t >= 6 ) n = n - t + 10 ; else n = n - t ; cout << n << endl ; long long n ; }"}}
{"translation": {"en": "read n [ENDL] integer t = n modulo 10 [ENDL] if t is greater than or equal to 6 then do the following [ENDL] set n to n - t + 10 [ENDL] else [ENDL] set n to n - t [ENDL] output n [ENDL] t , s , a , b , c = integers", "c++": "int main() { cin >> n ; int t = n % 10 ; if ( t >= 6 ) n = n - t + 10 ; else n = n - t ; cout << n << endl ; int t , s , a , b , c ; }"}}
{"translation": {"en": "Read t [ENDL] print 1LL * ( ( t + 4 ) / 10 ) * 10 and a new line [ENDL] x , n = integer", "c++": "int main() { cin >> t ; cout << 1LL * ( ( t + 4 ) / 10 ) * 10 << endl ; int x , n ; }"}}
{"translation": {"en": "read n [ENDL] if n modulo 10 < = 5 [ENDL] x = 0 [ENDL] else [ENDL] x = 1 [ENDL] print ( n / 10 + x ) * 10 [ENDL] create long long n", "c++": "cin >> n ; int main() { if ( n % 10 <= 5 ) x = 0 ; else x = 1 ; cout << ( n / 10 + x ) * 10 << endl ; long long n ; return 0; }"}}
{"translation": {"en": "read n [ENDL] if n mod 10 greater than 5 [ENDL] print n + ( 10 - n % 10 ) [ENDL] else [ENDL] print n - ( n % 10 ) and a newline [ENDL] declare long long n", "c++": "cin >> n ; int main() { if ( n % 10 > 5 ) cout << n + ( 10 - n % 10 ) << endl ; else return 0; cout << n - ( n % 10 ) << endl ; long long n ; return 0; } }"}}
{"translation": {"en": "read n [ENDL] create int num = n modulo 10 [ENDL] if num = 0 [ENDL] print n [ENDL] else if num < = 5 [ENDL] print n - num [ENDL] else [ENDL] print n - num + 10 [ENDL] create long long integer n", "c++": "int main() { cin >> n ; int num = n % 10 ; if ( num == 0 ) cout << n << endl ; else if ( num <= 5 ) cout << ( n - num ) << endl ; else cout << ( n - num + 10 ) << endl ; long long int n ; } }"}}
{"translation": {"en": "read n [ENDL] create long long integer m with m = n % 10 [ENDL] create long integer d with d = n / 10 [ENDL] if m is 0 [ENDL] print n print newline [ENDL] else if m is less than or equal to 5 [ENDL] print n - m print newline [ENDL] else if m is greater than 5 [ENDL] print n + 10 - m print newline [ENDL] let n , m and ans be integers", "c++": "int main() { cin >> n ; long long int m = n % 10 ; long int d = n / 10 ; if ( m == 0 ) cout << n << endl ; else if ( m <= 5 ) cout << n - m << endl ; else if ( m > 5 ) cout << n + 10 - m << endl ; int n , m , ans ; } }"}}
{"translation": {"en": "read n while it is not 0 [ENDL] set m to n modulo 10 [ENDL] if m < = 5 [ENDL] assign n / 10 * 10 to ans [ENDL] else [ENDL] assign ( n / 10 + 1 ) * 10 to ans [ENDL] print ans [ENDL] set pi to 3 . 1415926535", "c++": "int main() { while ( cin >> n ) m = n % 10 ; if ( m <= 5 ) ans = n / 10 * 10 ; else ans = ( n / 10 + 1 ) * 10 ; cout << ans << endl ; const double pi = 3.1415926535 ; } return 0; }"}}
{"translation": {"en": "set mod to 998244353 [ENDL] assign 5e5 + 10 to maxn [ENDL] create int n [ENDL] while read n [ENDL] if n mod 10 < = 5 [ENDL] print n - n mod 10 [ENDL] else [ENDL] print n + 10 - n mod 10 and a newline [ENDL] declare const int N = 1e6 + 10", "c++": "const long long mod = 998244353 ; const int maxn = 5e5 + 10 ; int n ; int main() { while ( cin >> n ) if ( n % 10 <= 5 ) cout << n - ( n % 10 ) << endl ; else cout << n + ( 10 - n % 10 ) << endl ; const int N = 1e6 + 10 ; } }"}}
{"translation": {"en": "declare const int mod = 998244353 [ENDL] create long long x [ENDL] read x [ENDL] if x % 10 is equal to 0 [ENDL] print x [ENDL] else if x % 10 < = 5 [ENDL] print ( x / 10 ) * 10 [ENDL] else [ENDL] print ( x / 10 ) * 10 + 10 [ENDL] integers = n", "c++": "const int mod = 998244353 ; long long x ; cin >> x ; int main() { if ( x % 10 == 0 ) cout << x << endl ; else if ( x % 10 <= 5 ) cout << ( x / 10 ) * 10 << endl ; else cout << ( x / 10 ) * 10 + 10 << endl ; int n ; }"}}
{"translation": {"en": "read n [ENDL] if n modulo 10 is less than or equal to 5 then do the following [ENDL] output ( n / 10 ) * 10 [ENDL] else [ENDL] output ( n / 10 + 1 ) * 10 [ENDL] n = long long", "c++": "int main() { cin >> n ; if ( n % 10 <= 5 ) cout << ( n / 10 ) * 10 << endl ; else cout << ( n / 10 + 1 ) * 10 << endl ; long long n ; } }"}}
{"translation": {"en": "read n [ENDL] if n / 10 is 0 [ENDL] if n is less than 6 [ENDL] print \" 0 \" [ENDL] else [ENDL] print \" 10 \" [ENDL] else [ENDL] if n mod 10 is less than 6 [ENDL] print n / 10 then 0 [ENDL] else [ENDL] print n / 10 + 1 then 0 [ENDL] create long long n", "c++": "int main() { cin >> n ; if ( n / 10 == 0 ) if ( n <= 5 ) cout << \" 0\\n \" ; else cout << \" 10\\n \" ; else if ( n % 10 <= 5 ) cout << n / 10 << 0 << ' \\n ' ; else cout << n / 10 + 1 << 0 << ' \\n ' ; long long n ; } }"}}
{"translation": {"en": "create long long x [ENDL] read n [ENDL] x = n [ENDL] if n mod 10 = 0 [ENDL] print n [ENDL] while x greater than 10 , set x to x mod 10 [ENDL] if x < = 5 [ENDL] print n - x [ENDL] else [ENDL] print n + 10 - x and a newline [ENDL] create int n , result and c", "c++": "long long x ; cin >> n ; int main() { x = n ; if ( n % 10 == 0 ) cout << n << endl ; while ( x > 10 ) { x %= 10 ; } return 0; } if ( x <= 5 ) cout << n - x << endl ; else cout << n + ( 10 - x ) << endl ; int n , result , c ; return 0; }"}}
{"translation": {"en": "read n [ENDL] c = n mod 10 [ENDL] if c < = 5 [ENDL] assign n - c to result [ENDL] else [ENDL] set result = n + 10 - c [ENDL] print result [ENDL] create long long int n , m , k , l , j , p", "c++": "int main() { cin >> n ; c = n % 10 ; if ( c <= 5 ) result = n - c ; else result = n + ( 10 - c ) ; cout << result << endl ; } long long int n , m , k , l , j , p ; return 0; }"}}
{"translation": {"en": "read n [ENDL] if n less than 10 [ENDL] if n < = 5 [ENDL] print 0 [ENDL] else [ENDL] p = n + ( 10 - n ) [ENDL] print p [ENDL] else [ENDL] assign n mod 10 to k [ENDL] if k = 0 [ENDL] print n [ENDL] else [ENDL] if k < = 5 [ENDL] set l to n - k [ENDL] print l [ENDL] else [ENDL] j = n + ( 10 - k ) [ENDL] print j and a newline [ENDL] a , b , c , d , e , f = integers", "c++": "int main() { cin >> n ; if ( n < 10 ) if ( n <= 5 ) cout << 0 << endl ; else p = n + ( 10 - n ) ; cout << p << endl ; else } k = n % 10 ; if ( k == 0 ) cout << n << endl ; else if ( k <= 5 ) l = n - ( k ) ; cout << l << endl ; else j = n + ( 10 - k ) ; cout << j << endl ; int a , b , c , d , e , f ; } } } }"}}
{"translation": {"en": "while read a [ENDL] if a mod 10 equals 0 [ENDL] print a [ENDL] else if a mod 10 equals 5 [ENDL] print a - 5 [ENDL] else if a mod 10 is less than 5 [ENDL] set b to a mod 10 [ENDL] print a - b [ENDL] else [ENDL] set b to a mod 10 [ENDL] set b to 10 - b [ENDL] print a + b [ENDL] define four - element int array dx and set them to 0 , 0 , - 1 , 1", "c++": "int main() { while ( cin >> a ) if ( a % 10 == 0 ) cout << a << endl ; else if ( a % 10 == 5 ) cout << a - 5 << endl ; else if ( a % 10 < 5 ) b = a % 10 ; cout << a - b << endl ; else b = a % 10 ; b = 10 - b ; cout << a + b << endl ; int dx [ 4 ] = { 0 , 0 , - 1 , 1 } ; } } return 0; }"}}
{"translation": {"en": "define 4 - element integral array dy , setting it to 1 , - 1 , 0 , and 0 [ENDL] define int n [ENDL] read n [ENDL] if n modulo 10 is < = 5 [ENDL] if n / 10 ! = 0 [ENDL] print n / 10 , 0 , and newline [ENDL] else [ENDL] print 0 and a newline [ENDL] else [ENDL] print n / 10 + 1 , 0 , newline [ENDL] declare integer variable n", "c++": "int dy [ 4 ] = { 1 , - 1 , 0 , 0 } ; int n ; int main() { cin >> n ; if ( n % 10 <= 5 ) if ( n / 10 ) cout << n / 10 << 0 << ' \\n ' ; else cout << 0 << ' \\n ' ; else cout << ( n / 10 ) + 1 << 0 << ' \\n ' ; int n ; }"}}
{"translation": {"en": "read input to n [ENDL] declare integer variables k , a , l and m where l and m = 0 [ENDL] set k to n [ENDL] assign n to a [ENDL] if n is even and n modulo 5 is 0 [ENDL] print n [ENDL] else [ENDL] loop i from 0 to 8 exclusive [ENDL] increment l by one [ENDL] if k is even and k modulo 5 = 0 , stop the loop [ENDL] decrement k [ENDL] loop j from 0 to 8 exclusive [ENDL] increment m by one [ENDL] if a is even and a modulo 5 = 0 , break the loop [ENDL] increment a [ENDL] if l is equal to m [ENDL] print k [ENDL] else if l is greater than m [ENDL] print a [ENDL] else [ENDL] print k [ENDL] n , x = integers with x = 0", "c++": "int main() { cin >> n ; int k , a , l = 0 , m = 0 ; k = n ; a = n ; if ( n % 2 == 0 && n % 5 == 0 ) cout << n << endl ; else for ( int i = 0 ; i < 8 ; i ++ ) l ++ ; if ( k % 2 == 0 && k % 5 == 0 ) { break ; } k -- ; for ( int j = 0 ; j < 8 ; j ++ ) } m ++ ; if ( a % 2 == 0 && a % 5 == 0 ) { break ; } a ++ ; if ( l == m ) } cout << k << endl ; else if ( l > m ) cout << a << endl ; else cout << k << endl ; long long int n , x = 0 ; } } return 0; }"}}
{"translation": {"en": "Read n [ENDL] set x to n modulo 10 [ENDL] if x is greater than 5 , then set n to n - x + 10 [ENDL] if x is less than 5 , then set n to n - x [ENDL] print n and a new line [ENDL] create long long n", "c++": "int main() { cin >> n ; x = n % 10 ; if ( x > 5 ) n = n - x + 10 ; if ( x <= 5 ) n = n - x ; cout << n << endl ; long long n ; return 0; }"}}
{"translation": {"en": "read n [ENDL] t = n mod 10 [ENDL] if t > = 6 [ENDL] n = n - t + 10 [ENDL] else [ENDL] assign n - t to n [ENDL] print n [ENDL] create int n", "c++": "int main() { cin >> n ; int t = n % 10 ; if ( t >= 6 ) n = n - t + 10 ; else n = n - t ; cout << n << endl ; int n ; }"}}
{"translation": {"en": "read n [ENDL] declare array of integers of size n and integer count = 0 [ENDL] populate array a with n values [ENDL] set max to highest value in array a [ENDL] for i = 0 to n exclusive set count to count + max - a [ i ] [ENDL] print count [ENDL] create integer array a with size 1000 , create integers i , n , ans with ans = 0", "c++": "int main() { cin >> n ; int a [ n ] , count = 0 ; for ( int i = 0 ; i < n ; i ++ ) { cin >> a [ i ] ; } int max = * max_element ( a , a + n ) ; for ( int i = 0 ; i < n ; i ++ ) { count += max - a [ i ] ; } cout << count << endl ; int a [ 1000 ] , i , n , ans = 0 ; return 0; }"}}
{"translation": {"en": "read n [ENDL] for i = 1 to n inclusive , read a [ i ] [ENDL] sort elements from a + 1 to a + n + 1 [ENDL] for i = 1 to n exclusive , increment ans by a [ n ] - a [ i ] [ENDL] print ans print newline [ENDL] integers = t integer N = 1e5 + 50", "c++": "int main() { cin >> n ; for ( i = 1 ; i <= n ; i ++ ) cin >> a [ i ] ; sort ( a + 1 , a + n + 1 ) ; for ( i = 1 ; i < n ; i ++ ) { ans += a [ n ] - a [ i ] ; } cout << ans << endl ; const int N = 1e5 + 50 ; }"}}
{"translation": {"en": "integers = t integer M = 1e6 [ENDL] oo = 1e18 = constant long long integers [ENDL] integers = t integer mod = 1e9 + 7 [ENDL] integers = n [ENDL] read n [ENDL] sum = 0 , mx = 0 = long long integers [ENDL] for i = 0 to less than n do the following [ENDL] ong a = long long integers [ENDL] read a [ENDL] sum equals sum plus a [ENDL] set mx to max ( mx , a ) [ENDL] output mx * n - sum [ENDL] create ints n , cnt and sum with cnt and sum = 0", "c++": "const int M = 1e6 ; const long long oo = 1e18 ; const int mod = 1e9 + 7 ; int n ; int main() { cin >> n ; long long sum = 0 , mx = 0 ; for ( int i = 0 ; i < n ; i ++ ) long long a ; cin >> a ; sum += a ; mx = max ( mx , a ) ; cout << mx * n - sum << endl ; } int n , cnt = 0 , sum = 0 ; }"}}
{"translation": {"en": "read n [ENDL] let a be integer array with size n [ENDL] for i from 0 to n exclusive , read a [ i ] [ENDL] sort a [ENDL] declare int mx = a [ n - 1 ] [ENDL] loop i from 0 to n exclusive , add abs ( mx - a [ i ] ) to sum [ENDL] print sum [ENDL] n = integer", "c++": "int main() { cin >> n ; int a [ n ] ; for ( int i = 0 ; i < n ; i ++ ) { cin >> a [ i ] ; } sort ( a , a + n ) ; int mx = a [ n - 1 ] ; for ( int i = 0 ; i < n ; i ++ ) { sum += abs ( mx - a [ i ] ) ; } cout << sum << endl ; int n ; }"}}
{"translation": {"en": "read n [ENDL] welfare = vector of integer [ENDL] welfare_input = integer [ENDL] while welfare . size ( ) < n [ENDL] read welfare_input [ENDL] append welfare in _inputwelfare [ENDL] sort welfare . rbegin ( ) and welfare . rend ( ) [ENDL] i = integer with i = 1 [ENDL] total = integer with total = 0 [ENDL] while welfare . size ( ) > i [ENDL] if welfare [ 0 ] is not welfare [ i ] [ENDL] increment welfare [ i ] [ENDL] increment total [ENDL] else [ENDL] increment i [ENDL] print total [ENDL] n , a = integers with a = array of size 101", "c++": "int main() { cin >> n ; vector < int > welfare ; int welfare_input ; while ( welfare . size ( ) < n ) cin >> welfare_input ; welfare . push_back ( welfare_input ) ; sort ( welfare . rbegin ( ) , welfare . rend ( ) ) ; } int i = 1 ; int total = 0 ; while ( welfare . size ( ) > i ) if ( welfare [ 0 ] != welfare [ i ] ) welfare [ i ] ++ ; total ++ ; else i ++ ; cout << total << endl ; } } int n , a [ 101 ] ; return 0; }"}}
{"translation": {"en": "read n [ENDL] s , max = integer with s = 0 , max = 0 [ENDL] for i = 0 to n exclusive [ENDL] read a [ i ] [ENDL] max = a [ 0 ] [ENDL] for i = 1 to n exclusive [ENDL] if max < a [ i ] , max = a [ i ] [ENDL] for i - 0 to n exclusive , s = s + abs ( max - a [ i ] ) [ENDL] print s [ENDL] create long long int mx , n , a [ 105 ] and sum , set mx to 0 and a to all 0", "c++": "int main() { cin >> n ; int s = 0 , max = 0 ; for ( int i = 0 ; i < n ; i ++ ) cin >> a [ i ] ; max = a [ 0 ] ; for ( int i = 1 ; i < n ; i ++ ) } if ( max < a [ i ] ) { max = a [ i ] ; } for ( int i = 0 ; i < n ; i ++ ) { s = s + abs ( max - a [ i ] ) ; } } cout << s << endl ; long long int mx = 0 , n , a [ 105 ] = { 0 } , sum ; return 0; }"}}
{"translation": {"en": "read n [ENDL] for i = 0 to n exclusive , read a [ i ] [ENDL] for i = 0 to n exclusive [ENDL] if a [ i ] greater than mx , mx = a [ i ] [ENDL] sum = 0 [ENDL] for i = 0 to n exclusive , set sum to sum + mx - a [ i ] [ENDL] print sum [ENDL] create integer n", "c++": "int main() { cin >> n ; for ( int i = 0 ; i < n ; i ++ ) cin >> a [ i ] ; for ( int i = 0 ; i < n ; i ++ ) if ( a [ i ] > mx ) mx = a [ i ] ; sum = 0 ; } for ( int i = 0 ; i < n ; i ++ ) { sum += ( mx - a [ i ] ) ; } cout << sum << endl ; int n ; return 0; }"}}
{"translation": {"en": "create integer array a with size 10000 [ENDL] create integer maxn [ENDL] create integer ans with ans = 0 [ENDL] read n [ENDL] for i = 1 to n inclusive [ENDL] read a [ i ] [ENDL] if a [ i ] is greater than maxn , set maxn to a [ i ] [ENDL] for i = 1 to n inclusive , set ans to ans + maxn - a [ i ] [ENDL] print ans print newline [ENDL] let n , arr , maxx , i , res be integers with arr = array of integers of length 109 , maxx = 0 , res = 0", "c++": "int main() { int a [ 10000 ] ; int maxn ; int ans = 0 ; cin >> n ; for ( int i = 1 ; i <= n ; i ++ ) cin >> a [ i ] ; if ( a [ i ] > maxn ) maxn = a [ i ] ; for ( int i = 1 ; i <= n ; i ++ ) { ans = ans + maxn - a [ i ] ; } } cout << ans << endl ; int n , arr [ 109 ] , maxx = 0 , i , res = 0 ; return 0; }"}}
{"translation": {"en": "read n [ENDL] for i = 0 to n exclusive [ENDL] read ith element of arr [ENDL] if maxx is less than arr [ i ] , maxx is equal to arr [ i ] [ENDL] for i = 0 to n exclusive , res is equal to res + ( maxx - arr [ i ] ) [ENDL] print res and newline [ENDL] a = array of 100 int", "c++": "int main() { cin >> n ; for ( i = 0 ; i < n ; i ++ ) cin >> arr [ i ] ; if ( maxx < arr [ i ] ) maxx = arr [ i ] ; for ( i = 0 ; i < n ; i ++ ) { res = res + ( maxx - arr [ i ] ) ; } } cout << res << endl ; int a [ 100 ] ; }"}}
{"translation": {"en": "n , i , k , max = int [ENDL] k = 0 [ENDL] read n [ENDL] max = - 1 [ENDL] for i = 0 to n exclusive read a [ i ] [ENDL] for i = 0 to n exclusive [ENDL] if a [ i ] > max max = a [ i ] [ENDL] for i = 0 to n exclusive add max - a [ i ] to k [ENDL] print k [ENDL] set sum = 0", "c++": "int main() { int n , i , k , max ; k = 0 ; cin >> n ; max = - 1 ; for ( i = 0 ; i < n ; i ++ ) { cin >> a [ i ] ; } for ( i = 0 ; i < n ; i ++ ) if ( a [ i ] > max ) { max = a [ i ] ; } for ( i = 0 ; i < n ; i ++ ) { k = k + max - a [ i ] ; } } cout << k << endl ; int sum = 0 ; return 0; }"}}
{"translation": {"en": "create int tc [ENDL] create int array a of size 100 [ENDL] read tc [ENDL] for i = 0 to tc exclusive , read a [ i ] [ENDL] create int max = a [ 0 ] [ENDL] for i = 0 to tc exclusive [ENDL] if a [ i ] > max , set max to a [ i ] [ENDL] for i = 0 to tc exclusive , set sum = sum + max - a [ i ] [ENDL] print sum [ENDL] integers = n , a [ 105 ] , i , s", "c++": "int main() { int tc ; int a [ 100 ] ; cin >> tc ; for ( int i = 0 ; i < tc ; i ++ ) { cin >> a [ i ] ; } int max = a [ 0 ] ; for ( int i = 0 ; i < tc ; i ++ ) if ( a [ i ] > max ) max = a [ i ] ; for ( int i = 0 ; i < tc ; i ++ ) { sum += max - a [ i ] ; } } cout << sum << endl ; int n , a [ 105 ] , i , s ; return 0; }"}}
{"translation": {"en": "while inputting n loop the following [ENDL] set s to 0 [ENDL] read n values in array a [ENDL] if n is 1 then do the following [ENDL] output s [ENDL] else [ENDL] sort the values of a to a + n [ENDL] for = 0 to less than n - 1 add a [ n - 1 ] - a [ i ] to s [ENDL] output s [ENDL] v = vector of integer", "c++": "int main() { while ( cin >> n ) s = 0 ; for ( i = 0 ; i < n ; i ++ ) { cin >> a [ i ] ; } if ( n == 1 ) cout << s << endl ; else sort ( a , a + n ) ; for ( i = 0 ; i < n - 1 ; i ++ ) { s += ( a [ n - 1 ] - a [ i ] ) ; } cout << s << endl ; vector < int > v ; } } }"}}
{"translation": {"en": "n , x , hitung = integers with x = 0 , hitung = 0 [ENDL] read n [ENDL] for i = 1 to n [ENDL] m = integer [ENDL] read m [ENDL] append m in v [ENDL] if m > = x , x = m [ENDL] for i = 0 to n exclusive , hitung = hitung + ( x - v [ i ] ) [ENDL] print hitung [ENDL] n , arr = integers with arr = array of size 100", "c++": "int n , x = 0 , hitung = 0 ; int main() { cin >> n ; for ( int i = 1 ; i <= n ; i ++ ) int m ; cin >> m ; v . push_back ( m ) ; if ( m >= x ) { x = m ; } for ( int i = 0 ; i < n ; i ++ ) { hitung += ( x - v [ i ] ) ; } } cout << hitung << endl ; int n , arr [ 100 ] ; }"}}
{"translation": {"en": "read n [ENDL] for i = 0 to n exclusive , read arr [ i ] [ENDL] sort arr and arr + n [ENDL] biggest , res = integer with biggest = arr [ n - 1 ] , res = 0 [ENDL] for i = 0 to n exclusive , res = res + ( biggest - arr [ i ] ) [ENDL] print res [ENDL] Create n , i , s , and b as integers , set s to 0 , and create a as an integer array with size of 101", "c++": "int main() { cin >> n ; for ( int i = 0 ; i < n ; i ++ ) { cin >> arr [ i ] ; } sort ( arr , arr + n ) ; int biggest = arr [ n - 1 ] , res = 0 ; for ( int i = 0 ; i < n ; i ++ ) { res += ( biggest - arr [ i ] ) ; } cout << res << endl ; int n , a [ 101 ] , i , s = 0 , b ; }"}}
{"translation": {"en": "Set n to the input [ENDL] Set a [ i ] to the input from i = 0 to i = n - 1 [ENDL] Sort the first n elements of a [ENDL] Increase s by ( a [ n - i ] - a [ i ] ) from i = 0 to i = n - 1 [ENDL] Output s [ENDL] n and ans are ints with ans = 0", "c++": "int main() { cin >> n ; for ( i = 0 ; i < n ; i ++ ) { cin >> a [ i ] ; } sort ( a , a + n ) ; for ( i = 0 ; i < n ; i ++ ) { s += ( a [ n - 1 ] - a [ i ] ) ; } cout << s << endl ; int n , ans = 0 ; return 0; }"}}
{"translation": {"en": "create long int array a with 100 elements [ENDL] read n [ENDL] loop i from 0 to n exclusive , read a [ i ] [ENDL] sort n first elements of a [ENDL] for i from 0 to n exclusive , increase ans by a [ n - 1 ] - a [ i ] [ENDL] print ans [ENDL] let n be a integer", "c++": "int main() { long int a [ 100 ] ; cin >> n ; for ( int i = 0 ; i < n ; i ++ ) cin >> a [ i ] ; sort ( a , a + n ) ; for ( int i = 0 ; i < n ; i ++ ) ans += a [ n - 1 ] - a [ i ] ; cout << ans << endl ; int n ; return 0; }"}}
{"translation": {"en": "while read n [ENDL] A = array of integers of length 111 [ENDL] let maxx be a integer with maxx = - 1 [ENDL] for i = 1 to n inclusive [ENDL] read ith element in a [ENDL] if a [ i ] is greater than maxx , initialize maxx = a [ i ] [ENDL] set integer sum to 0 [ENDL] for i = 1 to n inclusive , increase sum by maxx - a [ i ] [ENDL] print sum and newline [ENDL] let e be int array with size 105", "c++": "int main() { while ( cin >> n ) int a [ 111 ] ; int maxx = - 1 ; for ( int i = 1 ; i <= n ; i ++ ) cin >> a [ i ] ; if ( a [ i ] > maxx ) maxx = a [ i ] ; int sum = 0 ; } for ( int i = 1 ; i <= n ; i ++ ) { sum += ( maxx - a [ i ] ) ; } cout << sum << endl ; int e [ 105 ] ; } return 0; }"}}
{"translation": {"en": "declare int variable n [ENDL] read n [ENDL] create int m = 0 [ENDL] loop i from 1 to n inclusive [ENDL] create integer t [ENDL] read t [ENDL] set e [ i ] to t [ENDL] set m t if t < = m [ENDL] declare integer ans = 0 [ENDL] for i from 1 to n inclusive , change ans to ans + m - e [ i ] [ENDL] print ans [ENDL] integers = n", "c++": "int n ; int main() { cin >> n ; int m = 0 ; for ( int i = 1 ; i <= n ; i ++ ) int t ; cin >> t ; e [ i ] = t ; m = m > t ? m : t ; int ans = 0 ; } for ( int i = 1 ; i <= n ; i ++ ) { ans = ans + m - e [ i ] ; } cout << ans << endl ; int n ; }"}}
{"translation": {"en": "read n [ENDL] a [ n ] = long long integers [ENDL] cnt = 0 , mx = 0 = long long integers [ENDL] for i = 0 to less than n do the following [ENDL] read a [ i ] [ENDL] set mx to max ( a [ i ] , mx ) [ENDL] for i = 0 to less than n add mx - a [ i ] to cnt [ENDL] output cnt [ENDL] declare long ints n and ans where ans = 0", "c++": "int main() { cin >> n ; long long a [ n ] ; long long cnt = 0 , mx = 0 ; for ( int i = 0 ; i < n ; i ++ ) cin >> a [ i ] ; mx = max ( a [ i ] , mx ) ; for ( int i = 0 ; i < n ; i ++ ) { cnt += ( mx - a [ i ] ) ; } } cout << cnt << endl ; long int n , ans = 0 ; return 0; }"}}
{"translation": {"en": "read n [ENDL] create integers vector v [ENDL] for i = 0 to n exclusive [ENDL] create integer x [ENDL] read x [ENDL] push x to v [ENDL] sort v [ENDL] for i from 0 to n - 1 exclusive , increase ans by v [ n - 1 ] - v [ i ] [ENDL] print ans [ENDL] declare int variable n and int array x with size 105", "c++": "int main() { cin >> n ; vector < int > v ; for ( int i = 0 ; i < n ; i ++ ) int x ; cin >> x ; v . push_back ( x ) ; sort ( v . begin ( ) , v . end ( ) ) ; } for ( int i = 0 ; i < n - 1 ; i ++ ) { ans += v [ n - 1 ] - v [ i ] ; } cout << ans << endl ; int n , x [ 105 ] ; }"}}
{"translation": {"en": "read n [ENDL] for i from 0 to n exclusive , read x [ i ] [ENDL] sort x [ENDL] Max and sum are integers with Max = x [ n - 1 ] and sum = 0 [ENDL] for i from 0 to n exclusive , add Max - x [ i ] to sum [ENDL] print sum [ENDL] n , max , c = int with max = 0 and c = 0", "c++": "int main() { cin >> n ; for ( int i = 0 ; i < n ; i ++ ) { cin >> x [ i ] ; } sort ( x , x + n ) ; int Max = x [ n - 1 ] , sum = 0 ; for ( int i = 0 ; i < n ; i ++ ) { sum += Max - x [ i ] ; } cout << sum << endl ; int n , max = 0 , c = 0 ; return 0; }"}}
{"translation": {"en": "read n [ENDL] a = int array of size n [ENDL] read n values into a [ENDL] for i = 0 to n [ENDL] if max is less than a [ i ] then set max to a [ i ] [ENDL] for i = 0 to n [ENDL] if a [ i ] is less than max then set c to c + max - a [ i ] [ENDL] print c [ENDL] create int n , maxi , sum and x , set maxi to - 1 and sum = 0", "c++": "int main() { cin >> n ; int a [ n ] ; for ( int i = 0 ; i < n ; i ++ ) { cin >> a [ i ] ; } for ( int i = 0 ; i < n ; i ++ ) if ( max < a [ i ] ) max = a [ i ] ; for ( int i = 0 ; i < n ; i ++ ) } if ( a [ i ] < max ) { c = c + max - a [ i ] ; } cout << c << endl ; } int n , maxi = - 1 , sum = 0 , x ; return 0; }"}}
{"translation": {"en": "read n [ENDL] for i = 0 to n exclusive [ENDL] read x [ENDL] set maxi to max of maxi and x [ENDL] assign sum + x to sum [ENDL] print maxi * n - sum [ENDL] n , i , large and ans are integers where ans = 0 and a is an integer array with 100 elements", "c++": "int main() { cin >> n ; for ( int i = 0 ; i < n ; i ++ ) cin >> x ; maxi = max ( maxi , x ) ; sum += x ; cout << maxi * n - sum << endl ; } int n , i , a [ 100 ] , large , ans = 0 ; return 0; }"}}
{"translation": {"en": "read input to n [ENDL] for i = 0 to n exclusive , read a [ i ] [ENDL] change large to a [ 0 ] [ENDL] loop i from 0 to n exclusive [ENDL] if large is less than a [ i ] , set large to a [ i ] [ENDL] for i = 0 to n exclusive , add large - a [ i ] to ans [ENDL] print ans [ENDL] create int n and s", "c++": "int main() { cin >> n ; for ( i = 0 ; i < n ; i ++ ) { cin >> a [ i ] ; } large = a [ 0 ] ; for ( i = 0 ; i < n ; i ++ ) if ( large < a [ i ] ) large = a [ i ] ; for ( i = 0 ; i < n ; i ++ ) { ans += large - a [ i ] ; } } cout << ans << endl ; int n , s ; return 0; }"}}
{"translation": {"en": "read n and s [ENDL] print ( s + n - 1 ) / n [ENDL] n , sum = long long integers", "c++": "int main() { cin >> n >> s ; cout << ( s + n - 1 ) / n << endl ; long long int n , sum ; }"}}
{"translation": {"en": "read n , sum [ENDL] ans = long long integer with ans = 0 [ENDL] for i = n down to 1 [ENDL] ans = ans + sum / i [ENDL] sum = sum - ( sum / i ) * i [ENDL] print ans [ENDL] x , y , z = integers", "c++": "cin >> n >> sum ; int main() { long long int ans = 0 ; for ( int i = n ; i >= 1 ; i -- ) ans += sum / i ; sum -= ( sum / i ) * i ; cout << ans << ' \\n ' ; } int x , y , z ; }"}}
{"translation": {"en": "read x and y [ENDL] set z = ( y - 1 ) / x [ENDL] increment z [ENDL] print z [ENDL] declare integers n , s", "c++": "int main() { cin >> x >> y ; z = ( y - 1 ) / x ; z ++ ; cout << z << endl ; int n , s ; return 0; }"}}
{"translation": {"en": "read n , s [ENDL] print s / n + 1 if s % n , else n / n , newline [ENDL] let n and s ints", "c++": "int main() { cin >> n >> s ; cout << ( s % n ? s / n + 1 : s / n ) << endl ; int n , s ; }"}}
{"translation": {"en": "read n and s [ENDL] let ans an int with value s / n plus ( 1 if s mod n , 0 otherwise ) [ENDL] print ans [ENDL] n , s = integers", "c++": "int main() { cin >> n >> s ; int ans = s / n + ( s % n ? 1 : 0 ) ; cout << ans << endl ; int n , s ; }"}}
{"translation": {"en": "Read n , s [ENDL] if s modulo n is 0 [ENDL] print s / n and a new line [ENDL] else do the following [ENDL] print ( s / n ) + 1 and a new line [ENDL] declare constant integer maxn = 1e5 + 10", "c++": "int main() { cin >> n >> s ; if ( s % n == 0 ) cout << s / n << endl ; else cout << ( s / n ) + 1 << endl ; const int maxn = 1e5 + 10 ; return 0; }"}}
{"translation": {"en": "declare integers a , b [ENDL] while read a , b is true , print ( b - 1 ) / a + 1 and newline [ENDL] n , S = long long integers", "c++": "int a , b ; int main() { while ( cin >> a >> b ) { cout << ( b - 1 ) / a + 1 << endl ; } long long int n , S ; return 0; }"}}
{"translation": {"en": "read n and S [ENDL] if S modulo n is equal to 0 [ENDL] print S / n [ENDL] else [ENDL] print S / n + 1 [ENDL] n , s = integers", "c++": "int main() { cin >> n >> S ; if ( S % n == 0 ) cout << S / n << endl ; else cout << S / n + 1 << endl ; int n , s ; return 0; }"}}
{"translation": {"en": "Read n , s [ENDL] if s modulo m is n [ENDL] print s / n + 1 and a new line [ENDL] else do the following [ENDL] print s / n and a new line [ENDL] let n , s be integers", "c++": "int main() { cin >> n >> s ; if ( s % n ) cout << s / n + 1 << endl ; else cout << s / n << endl ; int n , s ; }"}}
{"translation": {"en": "read values for n , s [ENDL] if s mod n is equal to 0 then [ENDL] print s / n [ENDL] else do the following [ENDL] print ( s / n ) + 1 [ENDL] n , s = int", "c++": "int main() { cin >> n >> s ; if ( s % n == 0 ) cout << s / n << endl ; else cout << ( s / n ) + 1 << endl ; int n , s ; return 0; }"}}
{"translation": {"en": "loop while reading n then s [ENDL] cnt = int with cnt = 0 [ENDL] for i = n to 0 decrementing i [ENDL] loop while s > = i [ENDL] decrement s by i [ENDL] increment cnt [ENDL] print cnt [ENDL] create int n and s", "c++": "int main() { while ( cin >> n >> s ) int cnt = 0 ; for ( int i = n ; i > 0 ; i -- ) while ( s >= i ) s -= i ; cnt ++ ; cout << cnt << endl ; } } int n , s ; } return 0; }"}}
{"translation": {"en": "read n and s [ENDL] if s mod n = 0 [ENDL] print s / n [ENDL] else [ENDL] print s / n + 1 [ENDL] n = integer", "c++": "int main() { cin >> n >> s ; if ( s % n == 0 ) cout << s / n << endl ; else cout << s / n + 1 << endl ; int n ; }"}}
{"translation": {"en": "S = integer [ENDL] Read n , S [ENDL] if S modulo s is n [ENDL] print S / n + 1 and a new line [ENDL] else do the following [ENDL] print S / n and a new line [ENDL] n , s = integers", "c++": "int main() { long long S ; cin >> n >> S ; if ( S % n ) cout << S / n + 1 << endl ; else cout << S / n << endl ; int n , s ; return 0; }"}}
{"translation": {"en": "Read n and s [ENDL] print s / n + ( s modulo n is not 0 ) and a new line [ENDL] n , s = integer", "c++": "cin >> n >> s ; int main() { cout << s / n + ( s % n != 0 ) << endl ; int n , s ; }"}}
{"translation": {"en": "read n and s [ENDL] if s remainder n = 0 [ENDL] print s / n [ENDL] else [ENDL] print s / n + 1 [ENDL] make ints n and m", "c++": "int main() { cin >> n >> s ; if ( s % n == 0 ) cout << s / n << endl ; else cout << s / n + 1 << endl ; int n , m ; return 0; }"}}
{"translation": {"en": "read m and n [ENDL] if n % m is equal to 0 [ENDL] print n / m [ENDL] otherwise [ENDL] output n / m + 1 [ENDL] n = int", "c++": "int main() { cin >> m >> n ; if ( n % m == 0 ) cout << n / m << endl ; else cout << n / m + 1 << endl ; int n ; return 0; }"}}
{"translation": {"en": "S = int [ENDL] read n , S [ENDL] if S is multiple of n [ENDL] print S / n [ENDL] else [ENDL] print S / n + 1 [ENDL] create int n and s", "c++": "int main() { int S ; cin >> n >> S ; if ( S % n == 0 ) cout << S / n << endl ; else cout << S / n + 1 << endl ; int n , s ; } return 0; }"}}
{"translation": {"en": "read n and s [ENDL] print ( n + s - 1 ) / n [ENDL] declare long long integers n , sum", "c++": "int main() { cin >> n >> s ; cout << ( n + s - 1 ) / n << endl ; long long int n , sum ; return 0; }"}}
{"translation": {"en": "read n and sum [ENDL] declare long long integer ans = sum / n + 1 if sum % n , else sum / n [ENDL] print ans and ' \\ n ' [ENDL] create integers T , n and m", "c++": "cin >> n >> sum ; int main() { long long int ans = ( sum % n ) ? sum / n + 1 : sum / n ; cout << ans << ' \\n ' ; int T , n , m ; }"}}
{"translation": {"en": "read m and n from the user input [ENDL] print n / m + ( 1 if n modulo m is not 0 ) [ENDL] ans = 0 = itn", "c++": "int main() { cin >> m >> n ; cout << ( n / m + ( n % m ? 1 : 0 ) ) << endl ; int ans = 0 ; return 0; }"}}
{"translation": {"en": "n , s = int [ENDL] read n , s [ENDL] while s is strictly positive [ENDL] decrement s by n [ENDL] increment ans [ENDL] print ans [ENDL] x , y , z = long long", "c++": "int main() { int n , s ; cin >> n >> s ; while ( s > 0 ) s -= n ; ans ++ ; cout << ans << endl ; } long long x , y , z ; return 0; }"}}
{"translation": {"en": "read x , y [ENDL] let z = ( y - 1 ) / x [ENDL] add one to z [ENDL] print z [ENDL] declare integer n , s", "c++": "int main() { cin >> x >> y ; z = ( y - 1 ) / x ; z ++ ; cout << z << endl ; int n , s ; return 0; }"}}
{"translation": {"en": "read n and s [ENDL] declare integer sum = 0 [ENDL] while 1 is true [ENDL] increment sum by s / n [ENDL] let s be s % n [ENDL] decrement n [ENDL] if n is 0 , end loop [ENDL] print sum and newline [ENDL] n , m = integers", "c++": "int main() { cin >> n >> s ; int sum = 0 ; while ( 1 ) sum += s / n ; s = s % n ; n -- ; if ( n == 0 ) break ; cout << sum << endl ; } int n , m ; return 0; }"}}
{"translation": {"en": "read n , m [ENDL] if ( m modulo n is not 0 ) [ENDL] print ( m / n ) + 1 [ENDL] else [ENDL] print ( m / n ) [ENDL] create int n and sum", "c++": "int main() { cin >> n >> m ; if ( m % n != 0 ) cout << ( m / n ) + 1 << endl ; else cout << ( m / n ) << endl ; int n , sum ; return 0; }"}}
{"translation": {"en": "read n and sum [ENDL] if sum mod n different from 0 [ENDL] print sum / n + 1 [ENDL] else [ENDL] print sum / n [ENDL] s , n , cn = integers with cn = 0", "c++": "int main() { cin >> n >> sum ; if ( sum % n != 0 ) cout << sum / n + 1 << endl ; else cout << sum / n << endl ; int s , n , cn = 0 ; return 0; }"}}
{"translation": {"en": "Read n , s [ENDL] while s is greater than s [ENDL] set s to s - n [ENDL] increment cn [ENDL] print cn + 1 and a new line [ENDL] declare integers a , b", "c++": "int main() { cin >> n >> s ; while ( s > n ) s = s - n ; cn ++ ; cout << cn + 1 << endl ; } int a , b ; return 0; }"}}
{"translation": {"en": "read a , b [ENDL] declare integer ans = 0 [ENDL] let ans be b / a [ENDL] if b % a is not 0 , increment ans [ENDL] print ans and newline [ENDL] declare integers n , m", "c++": "cin >> a >> b ; int main() { int ans = 0 ; ans = b / a ; if ( b % a != 0 ) ans ++ ; cout << ans << endl ; int n , m ; return 0; }"}}
{"translation": {"en": "read n , m [ENDL] declare integer ans = 0 [ENDL] if m % n is 0 [ENDL] let ans be m / n [ENDL] else [ENDL] increment ans by m / n + 1 [ENDL] print ans and newline [ENDL] n , s = int", "c++": "int main() { cin >> n >> m ; int ans = 0 ; if ( m % n == 0 ) ans = m / n ; else ans += m / n + 1 ; cout << ans << endl ; } int n , s ; }"}}
{"translation": {"en": "read n then s [ENDL] ans = int with ans = 0 [ENDL] loop while s [ENDL] if s is 0 break [ENDL] if s > = n [ENDL] decrement s by n then increment ans [ENDL] else [ENDL] decrement n [ENDL] print ans [ENDL] n , s = integers", "c++": "int main() { cin >> n >> s ; int ans = 0 ; while ( s ) if ( s == 0 ) break ; if ( s >= n ) s -= n , ans ++ ; else n -- ; cout << ans << endl ; } int n , s ; }"}}
{"translation": {"en": "Read n , s [ENDL] count = integer with 0 [ENDL] for i = n to 0 exclusive [ENDL] a = integer , set to s / i [ENDL] set count to count + a [ENDL] set s to s % i [ENDL] if s is equal to 0 , then Terminate the loop [ENDL] print count and a new line [ENDL] n , s , temp , c = integers with c = 0", "c++": "int main() { cin >> n >> s ; int count = 0 ; for ( int i = n ; i > 0 ; i -- ) int a = s / i ; count = count + a ; s = s % i ; if ( s == 0 ) { break ; } cout << count << endl ; } long int n , s , temp , c = 0 ; return 0; }"}}
{"translation": {"en": "Read n , s [ENDL] execute infinite loop [ENDL] if s is equal to 0 , then Terminate the loop [ENDL] set temp to s [ENDL] set s to s modulo minimum value of sand n [ENDL] set c to c + temp / minimum value of temp and n [ENDL] print c and a new line [ENDL] n , s = long long", "c++": "int main() { cin >> n >> s ; while ( 1 ) if ( s == 0 ) { break ; } temp = s ; s %= min ( s , n ) ; c += temp / min ( temp , n ) ; cout << c << endl ; } long long n , s ; }"}}
{"translation": {"en": "read n , s [ENDL] ans = integer with ans = ( s + n - 1 ) / n [ENDL] print ans [ENDL] n , S = long", "c++": "int main() { cin >> n >> s ; int ans = ( s + n - 1 ) / n ; cout << ans << endl ; long n , S ; }"}}
{"translation": {"en": "read n and S [ENDL] set coins = 0 [ENDL] set coins = coins + S / n [ENDL] set rem = S remainder n [ENDL] if rem = 0 [ENDL] print coins [ENDL] else [ENDL] print increment coins [ENDL] declare long long variables n , s and i", "c++": "int main() { cin >> n >> S ; int coins = 0 ; coins += S / n ; int rem = S % n ; if ( rem == 0 ) cout << coins << endl ; else cout << ++ coins << endl ; long long n , s , i ; }"}}
{"translation": {"en": "read variables n and s from the input [ENDL] if s modulo n ! = 0 [ENDL] print s / n + 1 [ENDL] else [ENDL] print s / n [ENDL] N = string", "c++": "int main() { cin >> n >> s ; if ( s % n != 0 ) cout << s / n + 1 << endl ; else cout << s / n << endl ; string N ; } return 0; }"}}
{"translation": {"en": "Read N [ENDL] if N [ 0 ] is greater than or equal to a and N [ 0 ] is less than z , set N [ 0 ] to N [ 0 ] - 32 [ENDL] print N and a new line [ENDL] declare ch as character array of size 1000", "c++": "int main() { cin >> N ; if ( N [ 0 ] >= ' a ' && N [ 0 ] <= ' z ' ) { N [ 0 ] = N [ 0 ] - 32 ; } cout << N << endl ; char ch [ 1000 ] ; return 0; }"}}
{"translation": {"en": "gets ( ch ) [ENDL] if ch [ 0 ] > = ' a ' and ch [ 0 ] < = ' z ' set ch [ 0 ] to ch [ 0 ] - 32 [ENDL] puts ( ch ) [ENDL] m = string", "c++": "int main() { gets ( ch ) ; if ( ch [ 0 ] >= ' a ' && ch [ 0 ] <= ' z ' ) ch [ 0 ] = ch [ 0 ] - 32 ; puts ( ch ) ; string m ; }"}}
{"translation": {"en": "call getline on cin and m [ENDL] if m [ 0 ] > = 97 and m [ 0 ] < = 122 then m [ 0 ] = ( int ) m [ 0 ] - 32 [ENDL] print m [ENDL] input = string", "c++": "int main() { getline ( cin , m ) ; if ( m [ 0 ] >= 97 && m [ 0 ] <= 122 ) m [ 0 ] = ( int ) m [ 0 ] - 32 ; cout << m << endl ; string input ; }"}}
{"translation": {"en": "Read input [ENDL] if input [ 0 ] is greater than or equal to a , set input [ 0 ] = input - 32 [ENDL] print input and a new line [ENDL] create string word", "c++": "int main() { cin >> input ; if ( input [ 0 ] >= ' a ' ) input [ 0 ] -= 32 ; cout << input << endl ; string word ; return 0; }"}}
{"translation": {"en": "read word [ENDL] set a to word [ 0 ] [ENDL] if a > 99 [ENDL] a = a - 32 [ENDL] assign a to word [ 0 ] [ENDL] print word [ENDL] else [ENDL] print word and a new line [ENDL] create character array s with length of 1001", "c++": "int main() { cin >> word ; int a = word [ 0 ] ; if ( a > 90 ) a = a - 32 ; word [ 0 ] = a ; cout << word << endl ; else cout << word << endl ; char s [ 1001 ] ; } return 0; }"}}
{"translation": {"en": "read s [ENDL] convert first character of s to uppercase alphabet [ENDL] print out s [ENDL] declare string variable s", "c++": "int main() { cin >> s ; s [ 0 ] = toupper ( s [ 0 ] ) ; cout << s << endl ; string s ; return 0; }"}}
{"translation": {"en": "read s [ENDL] change s [ 0 ] to upper case [ENDL] print s [ENDL] create string s", "c++": "int main() { cin >> s ; s [ 0 ] = toupper ( s [ 0 ] ) ; cout << s << endl ; string s ; return 0; }"}}
{"translation": {"en": "read s [ENDL] set s [ 0 ] to upper case [ENDL] print s [ENDL] create character array str with 1000 elements", "c++": "int main() { cin >> s ; s [ 0 ] = toupper ( s [ 0 ] ) ; cout << s << endl ; char str [ 1000 ] ; return 0; }"}}
{"translation": {"en": "while read str [ENDL] if ' a ' < = str [ 0 ] & & str [ 0 ] < = ' z ' , str [ 0 ] = 32 [ENDL] print str [ENDL] word = string", "c++": "int main() { while ( cin >> str ) if ( ' a ' <= str [ 0 ] && str [ 0 ] <= ' z ' ) { str [ 0 ] -= 32 ; } cout << str << endl ; string word ; } return 0; }"}}
{"translation": {"en": "Read word [ENDL] set word [ 0 ] to upper case of word [ 0 ] [ENDL] print word solution and a new line [ENDL] s = string", "c++": "int main() { cin >> word ; word [ 0 ] = toupper ( word [ 0 ] ) ; cout << word << endl ; string s ; }"}}
{"translation": {"en": "Read s [ENDL] set s [ 0 ] to upper case of s [ 0 ] [ENDL] print s and a new line [ENDL] let s = string", "c++": "int main() { cin >> s ; s [ 0 ] = towupper ( s [ 0 ] ) ; cout << s << endl ; string s ; return 0; }"}}
{"translation": {"en": "set s from input [ENDL] if islower called with s [ 0 ] is true then set s [ 0 ] to ( char ) ( ( int ) s [ 0 ] - 32 ) [ENDL] print s [ENDL] in the function toUpp that takes character s and returns character", "c++": "cin >> s ; int main() { if ( islower ( s [ 0 ] ) ) s [ 0 ] = ( char ) ( ( int ) s [ 0 ] - 32 ) ; cout << s << endl ; char toUpp ( char s ) return 0; }"}}
{"translation": {"en": "n = integer with n = s [ENDL] if n > = 97 and n < = 122 n = n - 32 [ENDL] return ( char ) n [ENDL] s = string [ENDL] read s [ENDL] s [ 0 ] = call toUpp on s [ 0 ] [ENDL] print s [ENDL] declare integer variables n , i , t1 and t2", "c++": "int n = s ; if ( n >= 97 && n <= 122 ) n -= 32 ; return ( char ) n ; string s ; } int main() { cin >> s ; s [ 0 ] = toUpp ( s [ 0 ] ) ; cout << s << endl ; int n , i , t1 , t2 ; return 0; }"}}
{"translation": {"en": "declare string a [ENDL] read input into a [ENDL] if a [ 0 ] > 96 & & a [ 0 ] is less than 123 , decrease a [ 0 ] by 32 [ENDL] print a [ENDL] create xay as string", "c++": "int main() { string a ; getline ( cin , a ) ; if ( a [ 0 ] > 96 && a [ 0 ] < 123 ) a [ 0 ] -= 32 ; cout << a << endl ; string xay ; }"}}
{"translation": {"en": "input xay [ENDL] if call islower with xay [ 0 ] is true set xay [ 0 ] to xay [ 0 ] converted to uppercase [ENDL] print xay [ENDL] let a be an array of char of length 1100", "c++": "int main() { cin >> xay ; if ( islower ( xay [ 0 ] ) ) { xay [ 0 ] = toupper ( xay [ 0 ] ) ; } cout << xay << endl ; char a [ 1100 ] ; }"}}
{"translation": {"en": "execute gets wich takes a as an argument [ENDL] if a [ 0 ] > = ' A ' and a [ 0 ] < = ' Z ' then execute puts with a as an argument [ENDL] if a [ 0 ] > = ' a ' and a [ 0 ] < = ' z ' then [ENDL] let a [ 0 ] = a [ 0 ] - 32 [ENDL] execute puts with a as an argument [ENDL] ch = string", "c++": "int main() { gets ( a ) ; if ( a [ 0 ] >= ' A ' && a [ 0 ] <= ' Z ' ) { puts ( a ) ; } if ( a [ 0 ] >= ' a ' && a [ 0 ] <= ' z ' ) a [ 0 ] = a [ 0 ] - 32 ; puts ( a ) ; string ch ; } return 0; }"}}
{"translation": {"en": "read ch [ENDL] capitalize first letter of ch [ENDL] print ch [ENDL] s = string", "c++": "int main() { cin >> ch ; ch [ 0 ] = toupper ( ch [ 0 ] ) ; cout << ch << endl ; string s ; return 0; }"}}
{"translation": {"en": "read s [ENDL] capitalize first letter of s [ENDL] print s [ENDL] in the function capitalize that takes string reference word and returns void", "c++": "int main() { cin >> s ; s [ 0 ] = towupper ( s [ 0 ] ) ; cout << s << endl ; void capitalize ( string & word ) return 0; }"}}
{"translation": {"en": "first = character with first = word . at ( 0 ) [ENDL] if first > = 97 and first < = 122 word . at ( 0 ) = word . at ( 0 ) - 32 [ENDL] input = string [ENDL] read input [ENDL] capitalize on input [ENDL] print input [ENDL] create string s", "c++": "char first = word . at ( 0 ) ; if ( first >= 97 && first <= 122 ) word . at ( 0 ) -= 32 ; string input ; } int main() { cin >> input ; capitalize ( input ) ; cout << input << endl ; string s ; return 0; }"}}
{"translation": {"en": "read s [ENDL] set s [ 0 ] to uppercase letter of s [ 0 ] [ENDL] print s [ENDL] create char array a with length 1000", "c++": "int main() { cin >> s ; s [ 0 ] = toupper ( s [ 0 ] ) ; cout << s << endl ; char a [ 1000 ] ; return 0; }"}}
{"translation": {"en": "read from standard input and store in a [ENDL] if ( a [ 0 ] is greater or equal to ' a ' and a [ 0 ] is smaller or equal to ' z ' ) set a [ 0 ] to a [ 0 ] - ( ' a ' - ' A ' ) [ENDL] print a [ENDL] s = string", "c++": "int main() { gets ( a ) ; if ( a [ 0 ] >= ' a ' && a [ 0 ] <= ' z ' ) { a [ 0 ] = a [ 0 ] - ( ' a ' - ' A ' ) ; } puts ( a ) ; string s ; return 0; }"}}
{"translation": {"en": "Read s [ENDL] set s [ 0 ] to upper case of s [ 0 ] [ENDL] print s solution and a new line [ENDL] s = string", "c++": "int main() { cin >> s ; s [ 0 ] = toupper ( s [ 0 ] ) ; cout << s << endl ; string s ; return 0; }"}}
{"translation": {"en": "read s [ENDL] if s [ 0 ] is greater than 96 and s [ 0 ] is less than 123 then subtract 32 from s [ 0 ] [ENDL] print s [ENDL] create string s", "c++": "int main() { cin >> s ; if ( s [ 0 ] >= 97 && s [ 0 ] <= 122 ) s [ 0 ] -= 32 ; cout << s << endl ; string s ; return 0; }"}}
{"translation": {"en": "read s [ENDL] set s [ 0 ] to convert to uppercase s [ 0 ] [ENDL] print s print newline [ENDL] s = string", "c++": "int main() { cin >> s ; s [ 0 ] = towupper ( s [ 0 ] ) ; cout << s << endl ; string s ; return 0; }"}}
{"translation": {"en": "Read s [ENDL] set s [ 0 ] to upper case of s [ 0 ] [ENDL] print s and a new line [ENDL] create string s", "c++": "int main() { cin >> s ; s [ 0 ] = toupper ( s [ 0 ] ) ; cout << s << endl ; string s ; return 0; }"}}
{"translation": {"en": "read s [ENDL] if s [ 0 ] > = a and s [ 0 ] < = z , set s [ 0 ] to s [ 0 ] - 32 [ENDL] print s [ENDL] n = integer", "c++": "int main() { cin >> s ; if ( s [ 0 ] >= ' a ' && s [ 0 ] <= ' z ' ) s [ 0 ] -= 32 ; cout << s << endl ; long long int n ; return 0; }"}}
{"translation": {"en": "s = string [ENDL] Read s [ENDL] set n to length of string s [ENDL] if s [ 0 ] is greater than 96 and s [ 0 ] is less than 123 , then set s [ 0 ] to s [ 0 ] - 32 [ENDL] print s and a new line [ENDL] create string x", "c++": "int main() { string s ; cin >> s ; n = s . length ( ) ; if ( s [ 0 ] > 96 && s [ 0 ] < 123 ) { s [ 0 ] = s [ 0 ] - 32 ; } cout << s << \" \\n \" ; string x ; }"}}
{"translation": {"en": "read x [ENDL] if x [ 0 ] is lower case change x [ 0 ] to upper case [ENDL] print x [ENDL] create string word", "c++": "int main() { cin >> x ; if ( islower ( x [ 0 ] ) ) { x [ 0 ] = toupper ( x [ 0 ] ) ; } cout << x << endl ; string word ; }"}}
{"translation": {"en": "read word [ENDL] set word [ 0 ] to upper case word [ 0 ] [ENDL] print word print newline [ENDL] s = string", "c++": "int main() { cin >> word ; word [ 0 ] = toupper ( word [ 0 ] ) ; cout << word << endl ; string s ; return 0; }"}}
{"translation": {"en": "Read s [ENDL] set s [ 0 ] to upper case of s [ 0 ] [ENDL] print s and a new line [ENDL] declare string variable s", "c++": "int main() { cin >> s ; s [ 0 ] = toupper ( s [ 0 ] ) ; cout << s << endl ; string s ; return 0; }"}}
{"translation": {"en": "read s [ENDL] convert s [ 0 ] to the upper case [ENDL] print s [ENDL] declare string variable s", "c++": "int main() { cin >> s ; s [ 0 ] = toupper ( s [ 0 ] ) ; cout << s << endl ; string s ; return 0; }"}}
{"translation": {"en": "read s [ENDL] if s [ 0 ] is a lowercase letter from a to z , change it to upper case [ENDL] print s [ENDL] let str be a string", "c++": "int main() { cin >> s ; if ( s [ 0 ] >= ' a ' && s [ 0 ] <= ' z ' ) { s [ 0 ] = toupper ( s [ 0 ] ) ; } cout << s << endl ; string str ; }"}}
{"translation": {"en": "read str [ENDL] if ( ( ( int ) str [ 0 ] is less than or equal to ( int ) ' z ' ) and ( ( int ) str [ 0 ] is greater than or equal to a ) ) , the 0th element of array str is equal to ( char ) ( ( int ) str [ 0 ] - 32 ) [ENDL] print str and newline [ENDL] create string s", "c++": "int main() { cin >> str ; if ( ( ( int ) str [ 0 ] <= ( int ) ' z ' ) && ( ( int ) str [ 0 ] >= ' a ' ) ) str [ 0 ] = ( char ) ( ( int ) str [ 0 ] - 32 ) ; cout << str << endl ; string s ; }"}}
{"translation": {"en": "read s [ENDL] set value of s [ 0 ] to towupper ( s [ 0 ] ) [ENDL] print s [ENDL] declare character array a with size 1000000", "c++": "int main() { cin >> s ; s [ 0 ] = towupper ( s [ 0 ] ) ; cout << s << endl ; char a [ 1000000 ] ; return 0; }"}}
{"translation": {"en": "declare character array b with size 53 with elements \" abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ \" [ENDL] read a [ENDL] for integer i = 0 to 26 exclusive [ENDL] if a [ 0 ] = b [ i ] [ENDL] set value of a [ 0 ] to b [ i + 26 ] [ENDL] stop the loop [ENDL] print a [ENDL] create string s", "c++": "char b [ 53 ] = { \" abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ \" } ; gets ( a ) ; int main() { for ( int i = 0 ; i < 26 ; i ++ ) if ( a [ 0 ] == b [ i ] ) a [ 0 ] = b [ i + 26 ] ; break ; puts ( a ) ; } } string s ; return 0; }"}}
{"translation": {"en": "read s [ENDL] set s [ 0 ] to uppercase letter of s [ 0 ] [ENDL] print s [ENDL] create string word", "c++": "int main() { cin >> s ; s [ 0 ] = toupper ( s [ 0 ] ) ; cout << s << endl ; string word ; }"}}
{"translation": {"en": "read word [ENDL] if word [ 0 ] > = a and word [ 0 ] < = z , set word [ 0 ] = word [ 0 ] - 32 [ENDL] print word [ENDL] let S be string", "c++": "int main() { cin >> word ; if ( word [ 0 ] >= ' a ' && word [ 0 ] <= ' z ' ) word [ 0 ] = word [ 0 ] - 32 ; cout << word << endl ; string S ; return 0; }"}}
{"translation": {"en": "read S [ENDL] call toupper with s [ 0 ] as argument and assign it to element 0 of array S [ENDL] print S [ENDL] declare string variable str", "c++": "int main() { cin >> S ; S [ 0 ] = toupper ( S [ 0 ] ) ; cout << S << endl ; string str ; }"}}
{"translation": {"en": "read input to str [ENDL] change str [ 0 ] to uppercase [ENDL] print str [ENDL] let s be a string", "c++": "int main() { cin >> str ; str [ 0 ] = ( char ) toupper ( str [ 0 ] ) ; cout << str << endl ; string s ; return 0; }"}}
{"translation": {"en": "read s [ENDL] let the value of s [ 0 ] is equal to toupper ( s [ 0 ] ) [ENDL] print s and newline [ENDL] declare string variable a", "c++": "int main() { cin >> s ; s [ 0 ] = toupper ( s [ 0 ] ) ; cout << s << \" \\n \" ; string a ; }"}}
{"translation": {"en": "read line from the input to a [ENDL] if a [ 0 ] > = ' a ' and a [ 0 ] < = ' z ' , decrease a [ 0 ] by 32 [ENDL] print a [ENDL] n , m = integers", "c++": "int main() { getline ( cin , a ) ; if ( a [ 0 ] >= ' a ' && a [ 0 ] <= ' z ' ) a [ 0 ] -= 32 ; cout << a << endl ; int n , m ; }"}}
{"translation": {"en": "while read n , m [ENDL] cnt , ta , tb = integers with cnt = 0 [ENDL] for i = 0 to n exclusive [ENDL] read ta , tb [ENDL] if ( cnt > = ta ) , cnt = max of cnt and tb [ENDL] print ( if cnt > = m , YES else NO ) [ENDL] create ints n and m", "c++": "int main() { while ( cin >> n >> m ) int cnt = 0 , ta , tb ; for ( int i = 0 ; i < n ; i ++ ) cin >> ta >> tb ; if ( cnt >= ta ) cnt = max ( cnt , tb ) ; cout << ( cnt >= m ? \" YES\\n \" : \" NO\\n \" ) ; } int n , m ; } return 0; }"}}
{"translation": {"en": "read n and m [ENDL] make int vector a of size 101 with values 0 [ENDL] make ints x and y [ENDL] for i = 0 to n exclusive [ENDL] read x and y [ENDL] increment a [ x ] [ENDL] subtract 1 from a [ y ] [ENDL] make integer cs = 0 [ENDL] for i = 0 to m exclusive [ENDL] set cs to cs + a [ i ] [ENDL] if cs is less than or equal to 0 [ENDL] display \" NO \" [ENDL] display \" YES \" [ENDL] n , m = integer", "c++": "int main() { cin >> n >> m ; vector < int > a ( 101 , 0 ) ; int x , y ; for ( int i = 0 ; i < n ; i ++ ) cin >> x >> y ; a [ x ] ++ ; a [ y ] -- ; int cs = 0 ; } for ( int i = 0 ; i < m ; i ++ ) cs += a [ i ] ; if ( cs <= 0 ) cout << \" NO \" << endl ; cout << \" YES \" << endl ; return 0; } } int n , m ; return 0; }"}}
{"translation": {"en": "read n , m [ENDL] c = integer = 0 [ENDL] for i = 0 to n exclusive [ENDL] a , b = integer [ENDL] read a , b [ENDL] if c > = a , then c = bigger value between c and b [ENDL] if c > = m [ENDL] print YES [ENDL] else [ENDL] print NO [ENDL] declare constant integer MAX = 1e5", "c++": "int main() { cin >> n >> m ; int c = 0 ; for ( int i = 0 ; i < n ; i ++ ) int a , b ; cin >> a >> b ; if ( c >= a ) c = max ( c , b ) ; if ( c >= m ) } cout << \" YES\\n \" ; else cout << \" NO\\n \" ; const int MAX = 1e5 ; }"}}
{"translation": {"en": "declare boolean array x size 150 [ENDL] set bytes from x to size of x to value false [ENDL] declare integers n , m [ENDL] declare integers l , r [ENDL] declare integers i , j [ENDL] read n and m [ENDL] for i = 0 to n exclusive [ENDL] read l and r [ENDL] for j = l to r exclusive , let x [ j ] be true [ENDL] for i = 0 to m exclusive [ENDL] if not x [ i ] , end loop [ENDL] if i is less than m [ENDL] print \" NO \" and newline [ENDL] else [ENDL] print \" YES \" and newline [ENDL] create integer array pos of size 110", "c++": "bool x [ 150 ] ; int main() { memset ( x , false , sizeof ( x ) ) ; int n , m ; int l , r ; int i , j ; cin >> n >> m ; for ( i = 0 ; i < n ; i ++ ) cin >> l >> r ; for ( j = l ; j < r ; j ++ ) x [ j ] = true ; for ( i = 0 ; i < m ; i ++ ) } if ( ! x [ i ] ) break ; if ( i < m ) cout << \" NO \" << endl ; else cout << \" YES \" << endl ; int pos [ 110 ] ; }"}}
{"translation": {"en": "make integers n and m [ENDL] read n and m [ENDL] for i = 0 to n exclusive [ENDL] make integers a and b [ENDL] read a and b [ENDL] for j = a + 1 to b , set pos [ j ] to 1 [ENDL] for i = 1 to m [ENDL] if pos [ i ] is falsy , print \" NO \\ n \" and return 0 [ENDL] display \" YES \\ n \" and return 0 [ENDL] declare integer array freq size 10000005", "c++": "int n , m ; int main() { cin >> n >> m ; for ( int i = 0 ; i < n ; i ++ ) int a , b ; cin >> a >> b ; for ( int j = a + 1 ; j <= b ; j ++ ) pos [ j ] = 1 ; for ( int i = 1 ; i <= m ; i ++ ) } if ( ! pos [ i ] ) return cout << \" NO\\n \" , 0 ; return cout << \" YES\\n \" , 0 ; } int freq [ 10000005 ] ; }"}}
{"translation": {"en": "declare integers n , m [ENDL] read n and m [ENDL] declare integer array mat size n by 2 [ENDL] set bytes from freq to size of freq to value 0 [ENDL] for i = 0 to n exclusive [ENDL] read mat [ i ] [ 0 ] , mat [ i ] [ 1 ] [ENDL] for j = ( mat [ i ] [ 0 ] ) + 1 to mat [ i ] [ 1 ] inclusive , increment freq [ j ] [ENDL] for i = 1 to m inclusive [ENDL] if not freq [ i ] [ENDL] print \" NO \" [ENDL] print \" YES \" [ENDL] let n , m be integers", "c++": "int n , m ; cin >> n >> m ; int main() { int mat [ n ] [ 2 ] ; memset ( freq , 0 , sizeof freq ) ; for ( int i = 0 ; i < n ; i ++ ) cin >> mat [ i ] [ 0 ] >> mat [ i ] [ 1 ] ; for ( int j = ( mat [ i ] [ 0 ] ) + 1 ; j <= mat [ i ] [ 1 ] ; j ++ ) freq [ j ] ++ ; for ( int i = 1 ; i <= m ; i ++ ) } if ( ! freq [ i ] ) puts ( \" NO \" ) ; puts ( \" YES \" ) ; return 0; } } int n , m ; return 0; }"}}
{"translation": {"en": "read n and m [ENDL] let a , b be integers [ENDL] let t be a integer with t = 0 [ENDL] while n is decremented by 1 [ENDL] read a , b [ENDL] if a < = t , t is equal to maximum of t and b [ENDL] if t > = m [ENDL] print YES and newline [ENDL] else do the following [ENDL] print NO and newline [ENDL] a is a new array of integers with 105 elements", "c++": "cin >> n >> m ; int main() { int a , b ; int t = 0 ; while ( n -- ) cin >> a >> b ; if ( a <= t ) t = max ( t , b ) ; if ( t >= m ) } cout << \" YES \" << endl ; else cout << \" NO \" << endl ; int a [ 105 ] ; return 0; }"}}
{"translation": {"en": "create ints n , m , x , y , l and r where l = 0 [ENDL] read standard input to n and m [ENDL] change i from 1 to n inclusive , incrementing i , in a loop [ENDL] read x and y [ENDL] if i = 1 and x ! = 0 [ENDL] print \" NO \" [ENDL] if i is equal to 1 [ENDL] set r to y [ENDL] else if x < = r [ENDL] assign the new value = max of r and y to r [ENDL] if r > = m [ENDL] print \" YES \" [ENDL] else [ENDL] print \" NO \" [ENDL] n , m , s = integers", "c++": "int n , m , x , y , l = 0 , r ; int main() { cin >> n >> m ; for ( int i = 1 ; i <= n ; i ++ ) cin >> x >> y ; if ( i == 1 && x != 0 ) cout << \" NO \" << endl ; if ( i == 1 ) return 0; } r = y ; else if ( x <= r ) r = max ( r , y ) ; if ( r >= m ) } cout << \" YES \" << endl ; else cout << \" NO \" << endl ; int n , m , s ; return 0; }"}}
{"translation": {"en": "l , r = integers [ENDL] read n , m [ENDL] while decrement n [ENDL] read l , r [ENDL] if ( l < = s ) , if s = r < s , s else r [ENDL] if ( s < m ) [ENDL] print NO [ENDL] else [ENDL] print YES [ENDL] create int n , m , rightMost , set rightMost to 0", "c++": "int l , r ; int main() { cin >> n >> m ; while ( n -- ) cin >> l >> r ; if ( l <= s ) s = r < s ? s : r ; if ( s < m ) } cout << \" NO\\n \" ; else cout << \" YES\\n \" ; int n , m , rightMost = 0 ; return 0; }"}}
{"translation": {"en": "read n and m [ENDL] for i = 0 to n exclusive [ENDL] create int x and y [ENDL] read x and y [ENDL] if x < = rightMost and y > rightMost , rightMost = y [ENDL] if rightMost > = m [ENDL] print YES [ENDL] else [ENDL] print NO [ENDL] n , m = integers", "c++": "int main() { cin >> n >> m ; for ( int i = 0 ; i < n ; i ++ ) int x , y ; cin >> x >> y ; if ( x <= rightMost && y > rightMost ) rightMost = y ; if ( rightMost >= m ) } cout << \" YES \" << endl ; else cout << \" NO \" << endl ; int n , m ; return 0; }"}}
{"translation": {"en": "read n , m [ENDL] q = vector of integer with q on 1000 and 0 [ENDL] q [ 0 ] = 1 [ENDL] for i = 0 to n exclusive [ENDL] a , b = integers [ENDL] read a , b [ENDL] if ( q [ a ] is 1 ) [ENDL] while ( a < = b ) [ENDL] q [ a ] = 1 [ENDL] increment a [ENDL] f = bool with f = true [ENDL] for i = 0 to m , f = f bitwise and q [ i ] [ENDL] if ( f ) [ENDL] print YES [ENDL] else [ENDL] print NO [ENDL] create ints N and M", "c++": "int main() { cin >> n >> m ; vector < int > q ( 1000 , 0 ) ; q [ 0 ] = 1 ; for ( int i = 0 ; i < n ; ++ i ) int a , b ; cin >> a >> b ; if ( q [ a ] == 1 ) while ( a <= b ) q [ a ] = 1 ; ++ a ; bool f = true ; } } } for ( int i = 0 ; i <= m ; ++ i ) { f &= q [ i ] ; } if ( f ) cout << \" YES \" << endl ; else cout << \" NO \" << endl ; int N , M ; }"}}
{"translation": {"en": "read N and M [ENDL] make integer vector A of size N and B of size N [ENDL] for i = 0 to N exclusive , read A [ i ] and B [ i ] [ENDL] make integer max_ = 0 [ENDL] for i = 0 to N exclusive [ENDL] if max_ is less than A [ i ] , break loop [ENDL] set max_ to max of max_ and B [ i ] [ENDL] if max_ is equal to M [ENDL] print \" YES \" [ENDL] print new line [ENDL] otherwise do [ENDL] display \" NO \" [ENDL] print new line [ENDL] a = integer array of size 105", "c++": "int main() { cin >> N >> M ; vector < int > A ( N ) , B ( N ) ; for ( int i = 0 ; i < ( int ) ( N ) ; ++ i ) { cin >> A [ i ] >> B [ i ] ; } int max_ = 0 ; for ( int i = 0 ; i < ( int ) ( N ) ; ++ i ) if ( max_ < A [ i ] ) { break ; } max_ = max ( max_ , B [ i ] ) ; if ( max_ == M ) } cout << \" YES \" << \" \\n \" ; else cout << \" NO \" << \" \\n \" ; int a [ 105 ] ; } return 0; }"}}
{"translation": {"en": "n , m , x , y , l , r = integers with l = 0 [ENDL] read n , m [ENDL] for i = 1 to n [ENDL] read x , y [ENDL] if ( i is 1 and x is not 0 ) [ENDL] print NO [ENDL] if ( i is 1 ) [ENDL] r = y [ENDL] else if ( x < = r ) [ENDL] r = max r and y [ENDL] if ( r > = m ) [ENDL] print YES [ENDL] else [ENDL] print NO [ENDL] let freq be an integer array of size 10000005", "c++": "int n , m , x , y , l = 0 , r ; int main() { cin >> n >> m ; for ( int i = 1 ; i <= n ; i ++ ) cin >> x >> y ; if ( i == 1 && x != 0 ) cout << \" NO \" << endl ; if ( i == 1 ) return 0; } r = y ; else if ( x <= r ) r = max ( r , y ) ; if ( r >= m ) } cout << \" YES \" << endl ; else cout << \" NO \" << endl ; int freq [ 10000005 ] ; return 0; }"}}
{"translation": {"en": "let n , m , x , to be integers [ENDL] read n , m [ENDL] for int i = 0 to n [ENDL] read x , to [ENDL] for int j = x + 1 to to inclusive , [ENDL] for int i = 1 to m inclusive [ENDL] if freq [ i ] = 0 [ENDL] print out NO [ENDL] print out YES [ENDL] n , m = int", "c++": "int n , m , x , to ; cin >> n >> m ; int main() { for ( int i = 0 ; i < n ; i ++ ) cin >> x >> to ; for ( int j = x + 1 ; j <= to ; j ++ ) freq [ j ] = 1 ; for ( int i = 1 ; i <= m ; i ++ ) } if ( ! freq [ i ] ) puts ( \" NO \" ) ; puts ( \" YES \" ) ; return 0; } } int n , m ; return 0; }"}}
{"translation": {"en": "read n , m [ENDL] multiply m by 2 [ENDL] v = array of 220 bool [ENDL] fill v with false [ENDL] while decremented value of n is not 0 [ENDL] a , b = int [ENDL] read a , b [ENDL] multiply a by 2 [ENDL] multiply b by 2 [ENDL] fill v from index a to b - a + 1 with true [ENDL] ok = true [ENDL] for i = 0 to m inclusive [ENDL] if not v [ i ] ok = false [ENDL] print YES if ok else NO [ENDL] freq = integer array of size 10000005", "c++": "int main() { cin >> n >> m ; m *= 2 ; bool v [ 2 * 110 ] ; memset ( ( v ) , ( false ) , sizeof ( v ) ) ; while ( n -- ) int a , b ; cin >> a >> b ; a *= 2 ; b *= 2 ; memset ( v + a , true , b - a + 1 ) ; bool ok = true ; } for ( int i = 0 ; i <= m ; ++ i ) if ( ! v [ i ] ) ok = false ; cout << ( ok ? \" YES \" : \" NO \" ) << \" \\n \" ; int freq [ 10000005 ] ; return 0; }"}}
{"translation": {"en": "n , m , x , to = integers [ENDL] read n , m [ENDL] set all contents of freq to 0 [ENDL] for i = 0 to n exclusive [ENDL] read x , to [ENDL] for j = x + 1 to to , increment freq [ j ] [ENDL] for i = 1 to m [ENDL] if ( not freq [ i ] ) [ENDL] print NO [ENDL] print YES [ENDL] getint is an inlined integer function", "c++": "int n , m , x , to ; cin >> n >> m ; int main() { memset ( freq , 0 , sizeof freq ) ; for ( int i = 0 ; i < n ; i ++ ) cin >> x >> to ; for ( int j = x + 1 ; j <= to ; j ++ ) freq [ j ] ++ ; for ( int i = 1 ; i <= m ; i ++ ) } if ( ! freq [ i ] ) puts ( \" NO \" ) ; puts ( \" YES \" ) ; return 0; } } inline int getint ( ) return 0; }"}}
{"translation": {"en": "declare ints r = 0 and k = 1 [ENDL] defin new char c with value from the input [ENDL] read char from the input into c , while c is not a digit character [ENDL] if c = ' - ' , change k to - 1 [ENDL] while is a digit character , read new value for the c from the input , then change r to r * 10 + c - ' 0 ' [ENDL] return r * k [ENDL] new integer n with value from getint ( ) [ENDL] m is a new integer with value from getint ( ) [ENDL] define new integer maxx with value 0 [ENDL] in a for loop , change i from 1 to n inclusive [ENDL] declare integer variable with name x = result of getint ( ) [ENDL] y is a new integer = value , returned from getint ( ) [ENDL] if maxx > = x , change maxx to max of maxx and y [ENDL] if maxx > = m [ENDL] print \" YES \" to standard output [ENDL] else [ENDL] print \" NO \" to stdout [ENDL] let x , y , n , c be long values", "c++": "int r = 0 , k = 1 ; char c = getchar ( ) ; for ( ; c < ' 0 ' || c > ' 9 ' ; c = getchar ( ) ) if ( c == ' - ' ) k = - 1 ; for ( ; c >= ' 0 ' && c <= ' 9 ' ; c = getchar ( ) ) r = r * 10 + c - ' 0 ' ; return r * k ; int n = getint ( ) ; } int main() { int m = getint ( ) ; int maxx = 0 ; for ( int i = 1 ; i <= n ; i ++ ) int x = getint ( ) ; int y = getint ( ) ; if ( maxx >= x ) maxx = max ( maxx , y ) ; if ( maxx >= m ) } puts ( \" YES \" ) ; else puts ( \" NO \" ) ; long long x , y , n , c ; return 0; }"}}
{"translation": {"en": "read n [ENDL] x equals n - 1 [ENDL] y equals 1 [ENDL] c equals 1 [ENDL] while x is greater than 0 [ENDL] increase c by 1 [ENDL] if x * x + y * y + 2 * y + 1 < n * n + 1 [ENDL] increase y by 1 [ENDL] else [ENDL] if x * x - 2 * x + y * y + 2 * y + 2 < n * n + 1 [ENDL] decrease x by 1 [ENDL] increase y by 1 [ENDL] else [ENDL] decrease x by 1 [ENDL] if n equals 0 [ENDL] print 1 and endline [ENDL] else [ENDL] print 4 * c and endline [ENDL] n , x , y = long long", "c++": "int main() { cin >> n ; x = n - 1 ; y = 1 ; c = 1 ; while ( x > 0 ) c ++ ; if ( x * x + y * y + 2 * y + 1 < n * n + 1 ) y ++ ; else if ( x * x - 2 * x + y * y + 2 * y + 2 < n * n + 1 ) x = x - 1 ; y ++ ; else x = x - 1 ; if ( n == 0 ) } } } cout << 1 << endl ; else cout << 4 * c << endl ; long long n , x , y ; } }"}}
{"translation": {"en": "ny = long long [ENDL] wasOut = bool [ENDL] borderPoints = 0 [ENDL] nx = 0 [ENDL] read n [ENDL] if n is 0 [ENDL] print 1 [ENDL] else if n < 0 [ENDL] subtract n from x [ENDL] while x < = 0 [ENDL] wasOut = true [ENDL] ny = sqrt ( n * n - x * x ) + 1 [ENDL] for y = - ny to 0 inclusive [ENDL] if x * x + y * y < = n * n [ENDL] if wasOut is true [ENDL] wasOut = false [ENDL] increment borderPoints [ENDL] if x is 0 increment nx [ENDL] else [ENDL] if x < 0 [ENDL] if ( x - 1 ) ^ 2 + y ^ 2 > n ^ 2 [ENDL] increment borderPoints [ENDL] if x is 0 increment nx [ENDL] else [ENDL] y = n + 1 [ENDL] else if x > 0 [ENDL] if ( x + 1 ) ^ 2 + y ^ 2 > n ^ 2 [ENDL] increment borderPoints [ENDL] if x is 0 increment nx [ENDL] else [ENDL] y = n + 1 [ENDL] increment x [ENDL] print 2 * ( borderPoints * 2 - nx ) - 2 [ENDL] n , ans be long long values with ans being 0", "c++": "int main() { long long ny ; bool wasOut ; long long borderPoints = 0 ; long long nx = 0 ; cin >> n ; if ( n == 0 ) cout << 1 << endl ; else if ( n < 0 ) return 0; x = - n ; return 0; } while ( x <= 0 ) wasOut = true ; ny = sqrt ( n * n - x * x ) + 1 ; for ( y = - ny ; y <= 0 ; y ++ ) if ( x * x + y * y <= n * n ) if ( wasOut == true ) wasOut = false ; borderPoints ++ ; if ( x == 0 ) { nx ++ ; } else if ( x < 0 ) if ( ( x - 1 ) * ( x - 1 ) + y * y > n * n ) borderPoints ++ ; if ( x == 0 ) { nx ++ ; } else y = n + 1 ; else if ( x > 0 ) } if ( ( x + 1 ) * ( x + 1 ) + y * y > n * n ) borderPoints ++ ; if ( x == 0 ) { nx ++ ; } else y = n + 1 ; x ++ ; } } } } } cout << 2 * ( borderPoints * 2 - nx ) - 2 << endl ; } long long n , ans = 0 ; return 0; }"}}
{"translation": {"en": "read n [ENDL] double value R equals n [ENDL] tmp . k be long long values and tmp equals n [ENDL] for long long i = 1 to n inclusive [ENDL] double value r equals i [ENDL] k equals square root of R * R - r * r [ENDL] increase ans by tmp = = k ? 1 : tmp - k [ENDL] tmp equals k [ENDL] if n equals 0 [ENDL] print 1 and endline [ENDL] else [ENDL] print ans * 4 and endline [ENDL] declare new long long n", "c++": "int main() { cin >> n ; double R = n ; long long tmp = n , k ; for ( long long i = 1 ; i <= n ; i ++ ) double r = i ; k = ( long long ) sqrt ( R * R - r * r ) ; ans += ( tmp == k ? 1 : tmp - k ) ; tmp = k ; if ( n == 0 ) } cout << 1 << endl ; else cout << ans * 4 << endl ; long long n ; return 0; }"}}
{"translation": {"en": "read n from the input [ENDL] if 0 < n < 40000001 [ENDL] create new long longs x = n , y = 0 and k = 0 [ENDL] while x > 0 [ENDL] increment k by one [ENDL] increment y by one [ENDL] decrement x if x * x + y * y is greater than n squared [ENDL] decrement y if x * x + y * y is greater than n squared [ENDL] print 4 * k [ENDL] else if n = 0 [ENDL] print 1 to the standard output [ENDL] declare long long n", "c++": "int main() { cin >> n ; if ( 0 < n && n < 40000001 ) long long x = n , y = 0 , k = 0 ; while ( x > 0 ) k ++ ; y ++ ; if ( x * x + y * y > n * n ) { x -- ; } if ( x * x + y * y > n * n ) { y -- ; } cout << 4 * k << endl ; } else if ( n == 0 ) cout << 1 << endl ; long long n ; } return 0; }"}}
{"translation": {"en": "while read n is true [ENDL] declare long long x = n * square root of double casted 2 [ENDL] if n is 0 [ENDL] print 1 , newline [ENDL] else [ENDL] print x * 4 , newline [ENDL] Eu_distance is a function that returns a long value by taking in two long values", "c++": "int main() { while ( cin >> n ) long long x = n * sqrt ( double ( 2 ) ) ; if ( n == 0 ) cout << 1 << endl ; else cout << x * 4 << endl ; long long Eu_distance ( long long x , long long y ) } } return 0; }"}}
{"translation": {"en": "return x * x + y * y [ENDL] n is a long integer [ENDL] read n [ENDL] if n equals 0 [ENDL] put string 1 [ENDL] else if n equals 1 [ENDL] put string 4 [ENDL] else [ENDL] x and y are long integers with y = n [ENDL] res is a long integer 0 [ENDL] for x = 0 to n , y + 1 exclusive [ENDL] while Eu_distance ( x , y ) is greater than n * n , decrease y by 1 [ENDL] if x is greater than y , stop [ENDL] if x is not equal to y [ENDL] increase res by 2 [ENDL] else [ENDL] increase res by 1 [ENDL] decrease res by 2 [ENDL] res equals res * 4 + 4 [ENDL] print res and endline [ENDL] let n be a long integer", "c++": "return x * x + y * y ; long long n ; } int main() { cin >> n ; if ( n == 0 ) puts ( \" 1 \" ) ; else if ( n == 1 ) puts ( \" 4 \" ) ; else long long x , y = n ; long long res = 0 ; for ( x = 0 ; x < n , x <= y ; x ++ ) while ( Eu_distance ( x , y ) > n * n ) { y -- ; } if ( x > y ) { break ; } if ( x != y ) res += 2 ; else res ++ ; res -= 2 ; } } res = res * 4 + 4 ; cout << res << endl ; long long n ; } }"}}
{"translation": {"en": "let w be a long integer [ENDL] let t be a long integer [ENDL] the integer value of q = 1 [ENDL] read n [ENDL] if n equals 0 [ENDL] print q and newline [ENDL] else do the following [ENDL] the long integer value of r = int ( sqrt ( ( n * n ) / 2 ) ) * 2 [ENDL] w is equal to n * n [ENDL] if ( r / 2 ) * ( r / 2 ) + ( r / 2 + 1 ) * ( r / 2 + 1 ) < = w , increment r by 1 [ENDL] print 4 * r and newline [ENDL] create const ints Maxn = 3010 and INF = 0x3f3f3f3f", "c++": "int main() { long long w ; long long t ; int q = 1 ; cin >> n ; if ( n == 0 ) cout << q << endl ; else long long int r = int ( sqrt ( ( n * n ) / 2 ) ) * 2 ; w = n * n ; if ( ( r / 2 ) * ( r / 2 ) + ( r / 2 + 1 ) * ( r / 2 + 1 ) <= w ) { r ++ ; } cout << 4 * r << endl ; const int Maxn = 3010 , INF = 0x3f3f3f3f ; } }"}}
{"translation": {"en": "let long long int n [ENDL] read n [ENDL] if n is equal to 0 [ENDL] print 1 [ENDL] else do [ENDL] show ( ( long long ) ( n * sqrt ( 2 ) ) ) * 4 [ENDL] let n be a long integer", "c++": "long long n ; int main() { cin >> n ; if ( n == 0 ) cout << 1 << endl ; else cout << ( ( long long ) ( n * sqrt ( 2 ) ) ) * 4 << endl ; long long int n ; }"}}
{"translation": {"en": "read n [ENDL] the long integer value of j = n - 1 [ENDL] the long integer value of lim = n * n [ENDL] let t be a long integer [ENDL] the long integer value of prevj = n [ENDL] the long integer value of sum = 0 [ENDL] if n equals 0 [ENDL] print 1 and newline [ENDL] for long integer i = 1 to n + 1 exclusive [ENDL] t is equal to i * i [ENDL] while j is greater than 0 and j * j is greater than ( lim - t ) , decrement j by 1 [ENDL] increment sum by 1 [ENDL] if prevj is not equal to j , increment sum by ( prevj - j - 1 ) [ENDL] prevj is equal to j [ENDL] print 4 * sum and newline [ENDL] let n , max , save be long integers", "c++": "int main() { cin >> n ; long long int j = n - 1 ; long long lim = n * n ; long long t ; long long prevj = n ; long long sum = 0 ; if ( n == 0 ) cout << 1 << \" \\n \" ; for ( long long int i = 1 ; i < n + 1 ; ++ i ) return 0; } t = i * i ; while ( j > 0 && j * j > ( lim - t ) ) j -- ; sum += 1 ; if ( prevj != j ) sum += ( prevj - j - 1 ) ; prevj = j ; cout << 4 * sum << \" \\n \" ; } long long int n , max , save ; }"}}
{"translation": {"en": "read n [ENDL] if n equals 0 [ENDL] print 1 and newline [ENDL] if n equals 1 [ENDL] print 4 and newline [ENDL] for max is equal to 0 , 2 * ( max * max ) is less than n * n , increment max by 1 , save is equal to max [ENDL] if ( save + 1 ) * ( save + 1 ) + save * save < = n * n [ENDL] n is equal to ( save ) * 8 + 4 [ENDL] print n and newline [ENDL] n is equal to ( save ) * 8 [ENDL] print n and newline [ENDL] n = int", "c++": "int main() { cin >> n ; if ( n == 0 ) cout << 1 << endl ; if ( n == 1 ) return 0; } cout << 4 << endl ; for ( max = 0 ; 2 * ( max * max ) < n * n ; max ++ ) { save = max ; } return 0; } if ( ( save + 1 ) * ( save + 1 ) + save * save <= n * n ) n = ( save ) * 8 + 4 ; cout << n << endl ; n = ( save ) * 8 ; return 0; } cout << n << endl ; int n ; return 0; }"}}
{"translation": {"en": "while reading n [ENDL] x = n * sqrt ( 2 to double ) [ENDL] if n = 0 [ENDL] print 1 [ENDL] else [ENDL] print x * 4 [ENDL] integer as n", "c++": "int main() { while ( cin >> n ) int x = n * sqrt ( double ( 2 ) ) ; if ( n == 0 ) cout << 1 << endl ; else cout << x * 4 << endl ; int n ; } return 0; }"}}
{"translation": {"en": "read n [ENDL] if n is false [ENDL] output 1 [ENDL] else [ENDL] output ( square root of 2 times n ) times 4 [ENDL] create long long n", "c++": "int main() { cin >> n ; if ( ! n ) cout << 1 << endl ; else cout << ( int ) ( sqrt ( 2 ) * n ) * 4 << endl ; long long n ; return 0; }"}}
{"translation": {"en": "declare inside taking in long long ints x and y and returning long long [ENDL] if sqrt ( x * x + y * y ) is less than or equal to n , return 1 [ENDL] make long long num [ENDL] read n [ENDL] set num to n / 2 [ENDL] while ( num + 1 ) * sqrt ( 2 . 0 ) is less than or equal to n , increment num [ENDL] if n is 1 [ENDL] print 4 [ENDL] else if n is equal to 0 [ENDL] show 1 [ENDL] else if inside ( num , num + 1 ) is truthy [ENDL] display 8 * num + 4 [ENDL] else if inside ( num , num + 1 ) is falsy [ENDL] show 8 * num [ENDL] EPS = 1e - 9", "c++": "long long inside ( long long x , long long y ) if ( sqrt ( x * x + y * y ) <= n ) return 1 ; long long num ; return 0; } int main() { cin >> n ; num = n / 2 ; while ( ( num + 1 ) * sqrt ( 2.0 ) <= n ) num ++ ; if ( n == 1 ) cout << 4 << endl ; else if ( n == 0 ) cout << 1 << endl ; else if ( inside ( num , num + 1 ) ) cout << 8 * num + 4 << endl ; else if ( ! inside ( num , num + 1 ) ) cout << 8 * num << endl ; const double EPS = 1e-9 ; return 0; }"}}
{"translation": {"en": "qx = array of long long filled with 0 , - 1 , - 1 [ENDL] qy = array of long long filled with 1 , 1 , 0 [ENDL] movx = array of long long filled with 1 , 0 , - 1 , 0 [ENDL] movy = array of long long filled with 0 , - 1 , 0 , 1 [ENDL] function dist ( get long long y and x , return long long ) [ENDL] return y * y + x * x [ENDL] n = long long [ENDL] read n [ENDL] if n is 0 [ENDL] print 1 [ENDL] tot = 0 [ENDL] lasti = 0 [ENDL] for i = 0 to n exclusive [ENDL] valini = 2 * i * i [ENDL] if valini - n * n > 0 break [ENDL] lasti = i [ENDL] posx = long long , posy = lasti [ENDL] posx = lasti [ENDL] contador = 0 [ENDL] for i = 0 to 4 exclusive [ENDL] if dist ( lasti + movx [ i ] , lasti + movy [ i ] ) - n * n > 0 contador = 1 [ENDL] xx , yy = long long [ENDL] resta = contador [ENDL] while posx is not 0 or posy is not n [ENDL] works = false [ENDL] for j = 0 to 3 exclusive [ENDL] xx = posx + qx [ j ] [ENDL] yy = posy + qx [ j ] [ENDL] if n * n - dist ( yy , xx ) > = 0 [ENDL] increment contador [ENDL] posy = yy [ENDL] posx = xx [ENDL] works = true [ENDL] break [ENDL] multiply contador by 2 [ENDL] substract resta from contador [ENDL] multiply contador by 4 [ENDL] subtract 4 from contador [ENDL] print contador [ENDL] declare integer array a size 3", "c++": "long long qx [ ] = { 0 , - 1 , - 1 } ; long long qy [ ] = { 1 , 1 , 0 } ; long long movx [ ] = { 1 , 0 , - 1 , 0 } ; long long movy [ ] = { 0 , - 1 , 0 , 1 } ; long long dist ( long long y , long long x ) return ( y * y + x * x ) ; long long n ; } int main() { cin >> n ; if ( n == 0 ) cout << 1 << endl ; long long tot = 0 ; return 0; } long long lasti = 0 ; for ( long long i = 0 ; i < n ; ++ i ) long long valini = 2 * i * i ; if ( valini - n * n > 0 ) break ; lasti = i ; long long posx , posy = lasti ; } posx = lasti ; long long contador = 0 ; for ( long long i = 0 ; i < 4 ; ++ i ) if ( dist ( lasti + movx [ i ] , lasti + movy [ i ] ) - n * n > 0 ) contador = 1 ; long long xx , yy ; } long long resta = contador ; while ( posx != 0 || posy != n ) bool works = false ; for ( long long j = 0 ; j < 3 ; j ++ ) xx = posx + qx [ j ] ; yy = posy + qy [ j ] ; if ( n * n - dist ( yy , xx ) >= 0 ) contador ++ ; posy = yy ; posx = xx ; works = true ; break ; contador *= 2 ; } } } contador -= resta ; contador *= 4 ; contador -= 4 ; cout << contador << endl ; int a [ 3 ] ; }"}}
{"translation": {"en": "while read a [ 0 ] , a [ 1 ] , a [ 2 ] [ENDL] sort from a to a + 3 [ENDL] if a [ 0 ] + a [ 1 ] is greater than a [ 2 ] [ENDL] print ' 0 ' and ' \\ n ' [ENDL] else [ENDL] print a [ 2 ] + 1 - a [ 1 ] - a [ 0 ] and ' \\ n ' [ENDL] let a , b , c , res be integers with res = 0", "c++": "int main() { while ( cin >> a [ 0 ] >> a [ 1 ] >> a [ 2 ] ) sort ( a , a + 3 ) ; if ( a [ 0 ] + a [ 1 ] > a [ 2 ] ) cout << ' 0 ' << ' \\n ' ; else cout << a [ 2 ] + 1 - a [ 1 ] - a [ 0 ] << ' \\n ' ; int a , b , c , res = 0 ; } return 0; }"}}
{"translation": {"en": "read a , b , c [ENDL] if a > = b + c [ENDL] res is equal to a - ( b + c ) + 1 [ENDL] else if b > = a + c [ENDL] res is equal to b - ( a + c ) + 1 [ENDL] else if c > = a + b [ENDL] res is equal to c - ( b + a ) + 1 [ENDL] print res and newline [ENDL] let compare be a function that accepts integers a , b and returns a boolean value", "c++": "int main() { cin >> a >> b >> c ; if ( a >= b + c ) res = a - ( b + c ) + 1 ; else if ( b >= a + c ) res = b - ( a + c ) + 1 ; else if ( c >= a + b ) res = c - ( b + a ) + 1 ; cout << res << endl ; } bool compare ( int a , int b ) }"}}
{"translation": {"en": "return a is less than b [ENDL] arr = array of integers of length 3 [ENDL] while read arr [ 0 ] , arr [ 1 ] , arr [ 2 ] [ENDL] sort the values arr , arr + 3 [ENDL] if arr [ 0 ] + arr [ 1 ] is greater than arr [ 2 ] [ENDL] print 0 and newline [ENDL] else do the following [ENDL] print ( arr [ 2 ] + 1 - arr [ 1 ] - arr [ 0 ] ) and newline [ENDL] a = array of integers of length 3", "c++": "return ( a < b ) ; int arr [ 3 ] ; } int main() { while ( cin >> arr [ 0 ] >> arr [ 1 ] >> arr [ 2 ] ) sort ( arr , arr + 3 ) ; if ( arr [ 0 ] + arr [ 1 ] > arr [ 2 ] ) cout << 0 << endl ; else cout << ( arr [ 2 ] + 1 - arr [ 1 ] - arr [ 0 ] ) << endl ; int a [ 3 ] ; } } return 0; }"}}
{"translation": {"en": "read a [ 0 ] , a [ 1 ] , a [ 2 ] [ENDL] sort the values a , a + 3 [ENDL] print ( maximum of a [ 2 ] - a [ 1 ] - a [ 0 ] + 1 and 0 ) and newline [ENDL] create new array of integers a with size 3", "c++": "int main() { cin >> a [ 0 ] >> a [ 1 ] >> a [ 2 ] ; sort ( a , a + 3 ) ; cout << max ( a [ 2 ] - a [ 1 ] - a [ 0 ] + 1 , 0 ) << endl ; int a [ 3 ] ; return 0; }"}}
{"translation": {"en": "read a [ 0 ] , a [ 1 ] and a [ 2 ] from the input [ENDL] sort first 3 elements of a [ENDL] print max of 0 and a [ 2 ] - a [ 1 ] + 1 - a [ 0 ] and \" \\ n \" [ENDL] declare integer array a size 3", "c++": "int main() { cin >> a [ 0 ] >> a [ 1 ] >> a [ 2 ] ; sort ( a , a + 3 ) ; cout << max ( 0 , a [ 2 ] - a [ 1 ] + 1 - a [ 0 ] ) << \" \\n \" ; int a [ 3 ] ; }"}}
{"translation": {"en": "read a [ 0 ] , a [ 1 ] , a [ 2 ] [ENDL] sort from a to a + 3 [ENDL] print maximum of ( 0 and a [ 2 ] + 1 - ( a [ 0 ] + a [ 1 ] ) ) , newline [ENDL] a , b , c , d , e , f , g are long long integers", "c++": "int main() { cin >> a [ 0 ] >> a [ 1 ] >> a [ 2 ] ; sort ( a , a + 3 ) ; cout << max ( 0 , a [ 2 ] + 1 - ( a [ 0 ] + a [ 1 ] ) ) << endl ; long long int a , b , c , d , e , f , g ; return 0; }"}}
{"translation": {"en": "s and t are strings [ENDL] while reading a , b , c [ENDL] set d = 0 [ENDL] while 1 [ENDL] if a + b > c and b + c > a and a + c > b [ENDL] break [ENDL] else [ENDL] add 1 to d [ENDL] if a < = b and a < = c [ENDL] add 1 to a [ENDL] else if b < = a and b < = c [ENDL] add 1 to b [ENDL] else [ENDL] add 1 to c [ENDL] print d [ENDL] lines is a new vector of integers with size 3", "c++": "int main() { string s , t ; while ( cin >> a >> b >> c ) d = 0 ; while ( 1 ) if ( a + b > c && b + c > a && a + c > b ) break ; else d ++ ; if ( a <= b && a <= c ) a ++ ; else if ( b <= a && b <= c ) b ++ ; else c ++ ; cout << d << endl ; } } } vector < int > lines ( 3 ) ; } return 0; }"}}
{"translation": {"en": "read user input to lines [ 0 ] , lines [ 1 ] and lines [ 2 ] [ENDL] sort vector lines [ENDL] define integer variable counter = 0 [ENDL] while lines [ 0 ] + lines [ 1 ] < = lines [ 2 ] [ENDL] increment lines [ 0 ] [ENDL] increment counter [ENDL] print counter [ENDL] declare checkValidity with integers a , b , c as arguments , returning boolean", "c++": "int main() { cin >> lines [ 0 ] >> lines [ 1 ] >> lines [ 2 ] ; sort ( lines . begin ( ) , lines . end ( ) ) ; int counter = 0 ; while ( lines [ 0 ] + lines [ 1 ] <= lines [ 2 ] ) lines [ 0 ] ++ ; counter ++ ; cout << counter << endl ; } bool checkValidity ( int a , int b , int c ) return 0; }"}}
{"translation": {"en": "if a + b is less than or equal to c or a + c is less than or equal to b or b + c is less than or equal to a [ENDL] return false from function [ENDL] else [ENDL] return true from function [ENDL] declare long longs a , b , c [ENDL] read a , b , c [ENDL] declare integer counter = 100000 [ENDL] for i = a to 100 inclusive [ENDL] for j = b to 100 inclusive [ENDL] for k = c to 100 inclusive [ENDL] if result of run checkValidity ( i , j , k ) is true [ENDL] declare integer temp = absolute value of ( i - a ) + ( j - b ) + ( k - c ) [ENDL] let counter be minimum of ( counter and temp ) [ENDL] print counter , newline [ENDL] create int a , b , c", "c++": "if ( a + b <= c || a + c <= b || b + c <= a ) return false ; else return true ; long long a , b , c ; } int main() { cin >> a >> b >> c ; int counter = 100000 ; for ( int i = a ; i <= 100 ; i ++ ) for ( int j = b ; j <= 100 ; j ++ ) for ( int k = c ; k <= 100 ; k ++ ) if ( checkValidity ( i , j , k ) ) int temp = abs ( i - a ) + ( j - b ) + ( k - c ) ; counter = min ( counter , temp ) ; cout << counter << endl ; } } } } int a , b , c ; return 0; }"}}
{"translation": {"en": "create int max , ans [ENDL] read a and b and c [ENDL] max = a [ENDL] if ( max < b ) max = b [ENDL] if ( max < c ) max = c [ENDL] if ans ( 2 * max - ( a + b + c ) ) < 0 ) [ENDL] print 0 [ENDL] esle [ENDL] print ans + 1 [ENDL] create int int a [ 3 ] , i", "c++": "int main() { int max , ans ; cin >> a >> b >> c ; max = a ; if ( max < b ) max = b ; if ( max < c ) max = c ; if ( ( ans = 2 * max - ( a + b + c ) ) < 0 ) cout << 0 << endl ; else cout << ans + 1 << endl ; int a [ 3 ] , i ; return 0; }"}}
{"translation": {"en": "for i = 0 to 3 exclusive , read a [ i ] [ENDL] sort elements between a and a + 3 [ENDL] if a [ 0 ] + a [ 1 ] > a [ 2 ] [ENDL] print 0 [ENDL] else [ENDL] print a [ 2 ] + 1 - a [ 0 ] - a [ 1 ] [ENDL] a , b , c = int", "c++": "int main() { for ( i = 0 ; i < 3 ; i ++ ) cin >> a [ i ] ; sort ( a , a + 3 ) ; if ( a [ 0 ] + a [ 1 ] > a [ 2 ] ) cout << 0 << endl ; else cout << a [ 2 ] + 1 - a [ 0 ] - a [ 1 ] << endl ; int a , b , c ; } return 0; }"}}
{"translation": {"en": "read a , b , c [ENDL] flag = 0 [ENDL] while a + b < ( c + 1 ) [ENDL] increment flag [ENDL] increment a [ENDL] while a + c < ( b + 1 ) [ENDL] increment flag [ENDL] increment a [ENDL] while b + c < ( a + 1 ) [ENDL] increment flag [ENDL] increment b [ENDL] print flag [ENDL] declare contant double pi = arc cosine of - 1", "c++": "int main() { cin >> a >> b >> c ; int flag = 0 ; while ( a + b < ( c + 1 ) ) ++ flag ; ++ a ; while ( a + c < ( b + 1 ) ) } ++ flag ; ++ a ; while ( b + c < ( a + 1 ) ) } ++ flag ; ++ b ; cout << flag << \" \\n \" ; } const double pi = acos ( - 1 ) ; }"}}
{"translation": {"en": "create array of integers a of size 3 and integer k = 0 [ENDL] read a [ 0 ] , a [ 1 ] and a [ 2 ] [ENDL] sort array a [ENDL] if a [ 1 ] + a [ 0 ] is greater than a [ 2 ] and a [ 2 ] - a [ 0 ] is less than a [ 1 ] then [ENDL] print k [ENDL] if a [ 1 ] + a [ 0 ] is less than or equal to a [ 2 ] [ENDL] set k to a [ 2 ] - a [ 1 ] - a [ 0 ] + 1 [ENDL] print k [ENDL] let MAXP be a constant integer with MAXP = 55", "c++": "int a [ 3 ] , k = 0 ; int main() { cin >> a [ 0 ] >> a [ 1 ] >> a [ 2 ] ; sort ( a , a + 3 ) ; if ( a [ 1 ] + a [ 0 ] > a [ 2 ] && a [ 2 ] - a [ 0 ] < a [ 1 ] ) cout << k << endl ; if ( a [ 1 ] + a [ 0 ] <= a [ 2 ] ) return 0; } k = a [ 2 ] - a [ 1 ] - a [ 0 ] + 1 ; cout << k << endl ; const int MAXP = 55 ; return 0; } }"}}
{"translation": {"en": "a = array of integers of length 3 [ENDL] read a [ 0 ] , a [ 1 ] , a [ 2 ] [ENDL] sort the values a , a + 3 [ENDL] print maximum of 0 and a [ 2 ] - a [ 0 ] - a [ 1 ] + 1 and newline [ENDL] create ints a , b , and c", "c++": "int a [ 3 ] ; int main() { cin >> a [ 0 ] >> a [ 1 ] >> a [ 2 ] ; sort ( a , a + 3 ) ; cout << max ( 0 , a [ 2 ] - a [ 0 ] - a [ 1 ] + 1 ) << endl ; int a , b , c ; return 0; }"}}
{"translation": {"en": "read a , b , and c [ENDL] create integer min_cnt = 1e9 [ENDL] for i = a to 100 [ENDL] for j = b to 100 [ENDL] for k = c to 100 [ENDL] create double s = ( i + j + k ) / 2 . 0 [ENDL] create double under_root = s * ( s - i ) * ( s - j ) * ( s - k ) [ENDL] if under_root is greater than 0 . 0 , set min_cnt to min ( min_cnt , ( ( i - a ) + ( j - b ) + ( k - c ) ) ) [ENDL] display min_cnt [ENDL] maxn = 1e5 + 5", "c++": "int main() { cin >> a >> b >> c ; int min_cnt = 1e9 ; for ( int i = a ; i <= 100 ; i ++ ) for ( int j = b ; j <= 100 ; j ++ ) for ( int k = c ; k <= 100 ; k ++ ) double s = ( i + j + k ) / 2.0 ; double under_root = s * ( s - i ) * ( s - j ) * ( s - k ) ; if ( under_root > 0.0 ) { min_cnt = min ( min_cnt , ( ( i - a ) + ( j - b ) + ( k - c ) ) ) ; } cout << min_cnt << \" \\n \" ; } } } const int maxn = 1e5 + 5 ; return 0; }"}}
{"translation": {"en": "ans = 0 [ENDL] create int a [ 4 ] [ENDL] whle read a [ 1 ] , a [ 2 ] , a [ 3 ] [ENDL] sort elements between a + 1 and a + 4 [ENDL] ans = 0 [ENDL] while a [ 1 ] + a [ 2 ] < = a [ 3 ] [ENDL] increment ans [ENDL] add 1 to a [ 1 ] [ENDL] print ans [ENDL] create int a [ 3 ]", "c++": "int ans = 0 ; int main() { int a [ 4 ] ; while ( cin >> a [ 1 ] >> a [ 2 ] >> a [ 3 ] ) sort ( a + 1 , a + 4 ) ; ans = 0 ; while ( a [ 1 ] + a [ 2 ] <= a [ 3 ] ) ans ++ ; a [ 1 ] ++ ; cout << ans << endl ; } int a [ 3 ] ; } }"}}
{"translation": {"en": "read a [ 0 ] , a [ 1 ] , a [ 2 ] [ENDL] sort elements between a and a + 3 [ENDL] if a [ 0 ] + a [ 1 ] > a [ 2 ] [ENDL] print 0 [ENDL] else [ENDL] print a [ 2 ] + 1 - a [ 0 ] - a [ 1 ] [ENDL] a , b , c , s , m , d = int", "c++": "int main() { cin >> a [ 0 ] >> a [ 1 ] >> a [ 2 ] ; sort ( a , a + 3 ) ; if ( a [ 0 ] + a [ 1 ] > a [ 2 ] ) cout << 0 << endl ; else cout << a [ 2 ] + 1 - a [ 0 ] - a [ 1 ] << endl ; int a , b , c , s , m , d ; }"}}
{"translation": {"en": "read a , b , c [ENDL] s = a + b + c [ENDL] m = max of max ( a , b ) and c [ENDL] d = 2 * m - s + 1 [ENDL] if ( d < = 0 ) , d = 0 [ENDL] print d [ENDL] a , b , c , d and l are ints where l = 0", "c++": "int main() { cin >> a >> b >> c ; s = a + b + c ; m = max ( max ( a , b ) , c ) ; d = 2 * m - s + 1 ; if ( d <= 0 ) d = 0 ; cout << d << endl ; int a , b , c , d , l = 0 ; }"}}
{"translation": {"en": "read from the input to a , b and c [ENDL] if a + b > c and b + c > a and a + c > b [ENDL] change d to 0 [ENDL] print d [ENDL] else [ENDL] if a < = b or a < = c [ENDL] looping infinitely [ENDL] increment a [ENDL] increment l [ENDL] if a + b > c and b + c > a and a + c > b [ENDL] print l [ENDL] stop the loop [ENDL] else [ENDL] if b < = a or b < = c [ENDL] looping infinitely [ENDL] increment b [ENDL] increment l by one [ENDL] if a + b > c and b + c > a and a + c > b [ENDL] print l [ENDL] break the loop [ENDL] a = array of integers of length 3", "c++": "int main() { cin >> a >> b >> c ; if ( a + b > c && b + c > a && a + c > b ) d = 0 ; cout << d << endl ; else if ( a <= b || a <= c ) while ( true ) a ++ ; l ++ ; if ( a + b > c && b + c > a && a + c > b ) cout << l << endl ; break ; else } } if ( b <= a || b <= c ) while ( true ) b ++ ; l ++ ; if ( a + b > c && b + c > a && a + c > b ) cout << l << endl ; break ; int a [ 3 ] ; } } } } } }"}}
{"translation": {"en": "read a [ 0 ] , a [ 1 ] , a [ 2 ] [ENDL] sort the values a , a + 3 , greater < int > ( ) [ENDL] if a [ 0 ] + a [ 1 ] is greater than a [ 2 ] and a [ 1 ] + a [ 2 ] is greater than a [ 0 ] and a [ 2 ] + a [ 1 ] is greater than a [ 0 ] [ENDL] print 0 and newline [ENDL] else if a [ 0 ] + a [ 1 ] is greater than a [ 2 ] and a [ 0 ] + a [ 2 ] is greater than a [ 1 ] and a [ 2 ] + a [ 1 ] < = a [ 0 ] [ENDL] the integer value of num1 is equal to a [ 0 ] / 2 [ENDL] num1 is equal to a [ 0 ] - num1 [ENDL] num1 is equal to num1 - a [ 2 ] [ENDL] the integer value of num2 is equal to a [ 0 ] / 2 [ENDL] num2 is equal to a [ 0 ] - num2 [ENDL] num2 is equal to num2 - a [ 1 ] [ENDL] if a [ 0 ] modulo 2 [ENDL] print num1 + num2 and newline [ENDL] else do the following [ENDL] print num1 + num2 + 1 and newline [ENDL] create int a [ 3 ]", "c++": "int main() { cin >> a [ 0 ] >> a [ 1 ] >> a [ 2 ] ; sort ( a , a + 3 , greater < int > ( ) ) ; if ( a [ 0 ] + a [ 1 ] > a [ 2 ] && a [ 1 ] + a [ 2 ] > a [ 0 ] && a [ 2 ] + a [ 1 ] > a [ 0 ] ) cout << 0 << endl ; else if ( a [ 0 ] + a [ 1 ] > a [ 2 ] && a [ 0 ] + a [ 2 ] > a [ 1 ] && a [ 2 ] + a [ 1 ] <= a [ 0 ] ) int num1 = a [ 0 ] / 2 ; num1 = a [ 0 ] - num1 ; num1 = num1 - a [ 2 ] ; int num2 = a [ 0 ] / 2 ; num2 = a [ 0 ] - num2 ; num2 = num2 - a [ 1 ] ; if ( a [ 0 ] % 2 ) cout << num1 + num2 << endl ; else cout << num1 + num2 + 1 << endl ; int a [ 3 ] ; } } }"}}
{"translation": {"en": "read a [ 0 ] , a [ 1 ] , a [ 2 ] [ENDL] sort elements between a and a + 3 [ENDL] increment a [ 2 ] [ENDL] if a [ 0 ] + a [ 1 ] > = a [ 2 ] [ENDL] print 0 [ENDL] else [ENDL] print a [ 2 ] - ( a [ 0 ] + a [ 1 ] ) [ENDL] create int A [ 3 ]", "c++": "int main() { cin >> a [ 0 ] >> a [ 1 ] >> a [ 2 ] ; sort ( a , a + 3 ) ; a [ 2 ] ++ ; if ( a [ 0 ] + a [ 1 ] >= a [ 2 ] ) cout << \" 0 \" << endl ; else cout << a [ 2 ] - ( a [ 0 ] + a [ 1 ] ) << endl ; int A [ 3 ] ; return 0; } }"}}
{"translation": {"en": "for i = 0 to 3 exclusive , read A [ i ] [ENDL] sort elements between A and A + 3 [ENDL] print max ( 0 , A [ 2 ] - A [ 1 ] - A [ 0 ] + 1 ) and a newline [ENDL] create integer n", "c++": "for ( int i = 0 ; i < 3 ; i ++ ) { cin >> A [ i ] ; } int main() { sort ( A , A + 3 ) ; cout << max ( 0 , A [ 2 ] - A [ 1 ] - A [ 0 ] + 1 ) << ' \\n ' ; int n ; return 0; }"}}
{"translation": {"en": "read n [ENDL] while decrement n is true [ENDL] create integer a [ENDL] read a [ENDL] if a is 1 [ENDL] print \" HARD \\ n \" [ENDL] print \" EASY \\ n \" [ENDL] let n , i , a , s = integers with s = 0", "c++": "int main() { cin >> n ; while ( n -- ) int a ; cin >> a ; if ( a == 1 ) cout << \" HARD\\n \" ; cout << \" EASY\\n \" ; return 0; } } int n , i , a , s = 0 ; return 0; }"}}
{"translation": {"en": "set n to input [ENDL] for int i = 0 and i must be less than n [ENDL] set a to input [ENDL] add a to s [ENDL] if s is not equal to 0 [ENDL] print out HARD and new line [ENDL] else [ENDL] print out EASY and new line [ENDL] let a , n , sum be integers with a = array of integers of length 100", "c++": "int main() { cin >> n ; for ( i = 0 ; i < n ; i ++ ) cin >> a ; s += a ; if ( s != 0 ) } cout << \" HARD \" << endl ; else cout << \" EASY \" << endl ; int a [ 100 ] , n , sum ; } return 0; }"}}
{"translation": {"en": "read n [ENDL] for i = 0 to n exclusive [ENDL] read ith element of array a [ENDL] the value of sum is equal to sum + ith element of array a [ENDL] if ( sum is equal to 0 ) [ENDL] print EASY and newline [ENDL] else , do the following [ENDL] print HARD and newline [ENDL] declare integer variable n", "c++": "cin >> n ; int main() { for ( int i = 0 ; i < n ; i ++ ) cin >> a [ i ] ; sum = sum + a [ i ] ; if ( sum == 0 ) } cout << \" EASY \" << endl ; else cout << \" HARD \" << endl ; int n ; } return 0; }"}}
{"translation": {"en": "read n [ENDL] declare integer array arr with size n [ENDL] create boolean ans = true [ENDL] for integer i = 0 to n exclusive [ENDL] read arr [ i ] [ENDL] if arr [ i ] = 1 , change ans to false [ENDL] if ans is true [ENDL] print \" EASY \" [ENDL] else [ENDL] print \" HARD \" [ENDL] create integer array a with size 100 , create integers x , sum with sum = 0", "c++": "int main() { cin >> n ; int arr [ n ] ; bool ans = true ; for ( int i = 0 ; i < n ; i ++ ) cin >> arr [ i ] ; if ( arr [ i ] == 1 ) { ans = false ; } if ( ans ) } cout << \" EASY \" << endl ; else cout << \" HARD \" << endl ; int a [ 100 ] , x , sum = 0 ; } }"}}
{"translation": {"en": "read x [ENDL] for z = 0 to x exclusive [ENDL] read a [ z ] [ENDL] set sum to sum + a [ z ] [ENDL] if sum is 0 [ENDL] print \" EASY \" print newline [ENDL] else [ENDL] print \" HARD \" print newline [ENDL] define function solve", "c++": "cin >> x ; int main() { for ( int z = 0 ; z < x ; z ++ ) cin >> a [ z ] ; sum = sum + a [ z ] ; if ( sum == 0 ) } cout << \" EASY \" << endl ; else cout << \" HARD \" << endl ; void solve ( ) } }"}}
{"translation": {"en": "declare integer variable n [ENDL] read n [ENDL] decrement n and loop further , while n > 0 [ENDL] declare integer a [ENDL] read a [ENDL] if a = 1 [ENDL] print \" HARD \" and ' \\ n ' [ENDL] return [ENDL] print \" EASY \" and ' \\ n ' [ENDL] invoke function solve [ENDL] n = integer", "c++": "int n ; cin >> n ; while ( n -- ) int a ; cin >> a ; if ( a == 1 ) cout << \" HARD \" << ' \\n ' ; return ; cout << \" EASY \" << ' \\n ' ; } } solve ( ) ; } int main() { int n ; return 0; }"}}
{"translation": {"en": "Read n [ENDL] while n is not equal to 0 [ENDL] r = integer [ENDL] Read r [ENDL] if r is equal to 1 [ENDL] print HARD [ENDL] print a new line [ENDL] print EASY [ENDL] print a new line [ENDL] set n , x , z = 0", "c++": "int main() { cin >> n ; while ( n -- ) int r ; cin >> r ; if ( r == 1 ) cout << \" HARD \" << \" \\n \" ; cout << \" EASY \" return 0; } } << \" \\n \" ; int n , x , z = 0 ; }"}}
{"translation": {"en": "read n [ENDL] for i = 0 to n exclusive increment i [ENDL] read x [ENDL] if x > 0 increment z + + [ENDL] if z > 0 [ENDL] print HARD and new line [ENDL] else [ENDL] print EASY and new line [ENDL] create integer n", "c++": "int main() { cin >> n ; for ( int i = 0 ; i < n ; i ++ ) cin >> x ; if ( x > 0 ) { z ++ ; } if ( z > 0 ) } cout << \" HARD \" << endl ; else cout << \" EASY \" << endl ; int n ; }"}}
{"translation": {"en": "read n [ENDL] create integer pointer arr with arr = new integer array with size n [ENDL] create integer sum with sum = 0 [ENDL] for i = 0 to n exclusive [ENDL] read arr [ i ] [ENDL] increment sum by arr [ i ] [ENDL] if sum is 0 [ENDL] print \" EASY \" print newline [ENDL] else [ENDL] print \" HARD \" print newline [ENDL] n = int", "c++": "int main() { cin >> n ; int * arr = new int [ n ] ; int sum = 0 ; for ( int i = 0 ; i < n ; i ++ ) cin >> arr [ i ] ; sum += arr [ i ] ; if ( sum == 0 ) } cout << \" EASY \" << endl ; else cout << \" HARD \" << endl ; int n ; } return 0; }"}}
{"translation": {"en": "read n [ENDL] loop n times [ENDL] a = int [ENDL] read a [ENDL] if a is 1 [ENDL] print \" HARD \" [ENDL] call exit with 0 [ENDL] print \" EASY \" [ENDL] declare inline wa with no arguments , returning void", "c++": "int main() { cin >> n ; while ( n -- ) int a ; cin >> a ; if ( a == 1 ) cout << \" HARD\\n \" ; exit ( 0 ) ; cout << \" EASY\\n \" ; } } inline void wa ( ) return 0; }"}}
{"translation": {"en": "print \" HARD \" print newline [ENDL] declare inline ac with no arguments , returning void [ENDL] print \" EASY \" print newline [ENDL] create integer n [ENDL] read n [ENDL] for i = 1 to n inclusive [ENDL] create integer tmp [ENDL] read tmp [ENDL] if tmp is true [ENDL] run wa [ENDL] run ac [ENDL] let n be a integer", "c++": "cout << \" HARD \" << endl ; inline void ac ( ) } cout << \" EASY \" << endl ; int n ; } int main() { cin >> n ; for ( int i = 1 ; i <= n ; i ++ ) int tmp ; cin >> tmp ; if ( tmp ) wa ( ) ; ac ( ) ; return 0; } } int n ; }"}}
{"translation": {"en": "the boolean value of cek is equal to 0 [ENDL] read n [ENDL] for i = 1 to n inclusive [ENDL] let a be a integer [ENDL] read a [ENDL] if ( a is equal to 1 ) , then cek is equal to 1 [ENDL] if ( cek is equal to 0 ) [ENDL] print EASY and newline [ENDL] else do the following [ENDL] print HARD and newline [ENDL] n = integer", "c++": "int main() { bool cek = 0 ; cin >> n ; for ( int i = 1 ; i <= n ; i ++ ) int a ; cin >> a ; if ( a == 1 ) { cek = 1 ; } if ( cek == 0 ) } cout << \" EASY \" << endl ; else cout << \" HARD \" << endl ; int n ; } }"}}
{"translation": {"en": "read n [ENDL] for i = 0 to n exclusive [ENDL] e = integer [ENDL] read e [ENDL] if e is 1 [ENDL] print HARD [ENDL] print EASY [ENDL] declare integer variables a , b and c", "c++": "int main() { cin >> n ; for ( int i = 0 ; i < n ; i ++ ) int e ; cin >> e ; if ( e == 1 ) cout << \" HARD \" << endl ; cout << \" EASY \" << endl ; return 0; } } int a , b , c ; return 0; }"}}
{"translation": {"en": "create integer cnt = 0 [ENDL] read a [ENDL] for integer i = 1 to a inclusive [ENDL] read b [ENDL] increment cnt if b = 1 [ENDL] if cnt > = 1 [ENDL] print \" HARD \" [ENDL] else [ENDL] print \" EASY \" [ENDL] n = int", "c++": "int main() { int cnt = 0 ; cin >> a ; for ( int i = 1 ; i <= a ; i ++ ) cin >> b ; if ( b == 1 ) cnt ++ ; if ( cnt >= 1 ) } cout << \" HARD \" << endl ; else cout << \" EASY \" << endl ; int n ; }"}}
{"translation": {"en": "read n [ENDL] flag = bool with flag = false [ENDL] for i = 0 to n [ENDL] a = int [ENDL] read a [ENDL] if a is not 0 set flag to true [ENDL] if flag is true [ENDL] print \" HARD \" [ENDL] else [ENDL] print \" EASY \" [ENDL] n = int", "c++": "int main() { cin >> n ; bool flag = false ; for ( int i = 0 ; i < n ; i ++ ) int a ; cin >> a ; if ( a ) flag = true ; if ( flag ) } cout << \" HARD \" << endl ; else cout << \" EASY \" << endl ; int n ; }"}}
{"translation": {"en": "read n [ENDL] s = int array of size n [ENDL] for i = i to n read s [ i ] [ENDL] count1 = int with count1 = 0 [ENDL] for i = 0 to n [ENDL] increment count1 if s [ i ] is 1 [ENDL] if count1 is not 0 [ENDL] print \" HARD \" [ENDL] else [ENDL] print \" EASY \" [ENDL] i , j , n = int and a = int array of size 101", "c++": "int main() { cin >> n ; int s [ n ] ; for ( int i = 0 ; i < n ; i ++ ) { cin >> s [ i ] ; } int count1 = 0 ; for ( int i = 0 ; i < n ; i ++ ) if ( s [ i ] == 1 ) count1 ++ ; if ( count1 != 0 ) } cout << \" HARD \" << endl ; else cout << \" EASY \" << endl ; int a [ 101 ] , i , j , n ; return 0; }"}}
{"translation": {"en": "read n [ENDL] read n values into a [ENDL] sort a [ENDL] if a [ n - 1 ] equals 1 [ENDL] print \" HARD \" [ENDL] else [ENDL] print \" EASY \" [ENDL] n , i = int", "c++": "int main() { cin >> n ; for ( i = 0 ; i < n ; i ++ ) { cin >> a [ i ] ; } sort ( a , a + n ) ; if ( a [ n - 1 ] == 1 ) cout << \" HARD \" << endl ; else cout << \" EASY \" << endl ; int n , i ; return 0; }"}}
{"translation": {"en": "read n [ENDL] a = int array of size n [ENDL] for i = 0 to n [ENDL] read a [ i ] [ENDL] if a [ i ] is 1 [ENDL] print \" HARD \" [ENDL] print \" EASY \" [ENDL] a = array of 10000 integers", "c++": "int main() { cin >> n ; int a [ n ] ; for ( i = 0 ; i < n ; i ++ ) cin >> a [ i ] ; if ( a [ i ] == 1 ) cout << \" HARD \" << endl ; cout << \" EASY \" << endl ; return 0; } } int a [ 10000 ] ; }"}}
{"translation": {"en": "n , i , k = integers [ENDL] k = 0 [ENDL] read n [ENDL] for i = 0 to n exclusive , read a [ i ] [ENDL] for i = 0 to n exclusive [ENDL] if a [ i ] > 0 , increment k [ENDL] if k > 0 [ENDL] print HARD [ENDL] else [ENDL] print EASY [ENDL] create int n and a", "c++": "int main() { int n , i , k ; k = 0 ; cin >> n ; for ( i = 0 ; i < n ; i ++ ) { cin >> a [ i ] ; } for ( i = 0 ; i < n ; i ++ ) if ( a [ i ] > 0 ) { k ++ ; } if ( k > 0 ) } cout << \" HARD \" << endl ; else cout << \" EASY \" << endl ; int n , a ; } return 0; }"}}
{"translation": {"en": "read n [ENDL] for i = 0 to n exclusive [ENDL] read a [ENDL] if a equal to 1 [ENDL] print HARD [ENDL] print EASY [ENDL] Not is a char function with char argument x", "c++": "int main() { cin >> n ; for ( int i = 0 ; i < n ; i ++ ) cin >> a ; if ( a == 1 ) cout << \" HARD \" << endl ; cout << \" EASY \" << endl ; return 0; } } char Not ( char x ) return 0; }"}}
{"translation": {"en": "return ' 1 ' if x = ' 0 ' or ' 0 ' otherwise [ENDL] create string s [ENDL] read variable s from the input [ENDL] for integer i = 0 to length of s exclusive [ENDL] if s [ i ] = ' r ' , print i + 1 and ' \\ n ' [ENDL] loop through i from length of s - 1 to 0 , decrementing it [ENDL] if s [ i ] = ' l ' , print i + 1 and ' \\ n ' to the standard output [ENDL] ss = string", "c++": "return ( x == ' 0 ' ? ' 1 ' : ' 0 ' ) ; string s ; } int main() { cin >> s ; for ( int i = 0 ; i < ( int ) s . size ( ) ; i ++ ) if ( s [ i ] == ' r ' ) { cout << i + 1 << ' \\n ' ; } for ( int i = ( int ) s . size ( ) - 1 ; i >= 0 ; i -- ) } if ( s [ i ] == ' l ' ) { cout << i + 1 << ' \\n ' ; } string ss ; } return 0; }"}}
{"translation": {"en": "read ss [ENDL] idx = integer with idx = ( cast to int ) ss . size ( ) - 1 [ENDL] ans = vector of integer with ans = ( ( cast to int ) ss . size ( ) ) [ENDL] for i = 0 to ( cast to int ) ss . size ( ) exclusive [ENDL] if ss [ i ] is r , continue next iteration [ENDL] ans [ idx ] = i [ENDL] decrement idx [ENDL] idx = 0 [ENDL] for i = 0 to ( cast to int ) ss . size ( ) exclusive [ENDL] if ss [ i ] is l , continue next iteration [ENDL] ans [ idx ] = i [ENDL] increment idx [ENDL] for i = 0 to ans . size ( ) exclusive , print ans [ i ] + 1 [ENDL] s = string", "c++": "int main() { cin >> ss ; int idx = ( int ) ss . size ( ) - 1 ; vector < int > ans ( ( int ) ss . size ( ) ) ; for ( int i = 0 ; i < ( int ) ss . size ( ) ; i ++ ) if ( ss [ i ] == ' r ' ) continue ; ans [ idx ] = i ; idx -- ; idx = 0 ; } for ( int i = 0 ; i < ( int ) ss . size ( ) ; i ++ ) if ( ss [ i ] == ' l ' ) continue ; ans [ idx ] = i ; idx ++ ; for ( int i = 0 ; i < ans . size ( ) ; i ++ ) cout << ans [ i ] + 1 << ' \\n ' ; } string s ; return 0; }"}}
{"translation": {"en": "read s [ENDL] n = size of s = int [ENDL] let mas be a vector of int of size n [ENDL] let l = 0 = int [ENDL] r = n = int [ENDL] for i = 0 to n exclusive [ENDL] if s at i is ' l ' [ENDL] decrement r , increment i and set mas [ r ] = i [ENDL] else [ENDL] increment i , set mas [ l ] to i , increment l [ENDL] for i = 0 to n exclusive , increment i , print mas at i and new line [ENDL] s = string", "c++": "int main() { cin >> s ; int n = s . size ( ) ; vector < int > mas ( n ) ; int l = 0 ; int r = n ; for ( int i = 0 ; i < n ; ) if ( s [ i ] == ' l ' ) mas [ -- r ] = ++ i ; else mas [ l ++ ] = ++ i ; for ( int i = 0 ; i < n ; ++ i ) { cout << mas [ i ] << \" \\n \" ; } } } string s ; return 0; }"}}
{"translation": {"en": "r , l = int vector [ENDL] read s [ENDL] n = int with n = size of s [ENDL] for i = 0 to n [ENDL] if s [ i ] is ' r ' [ENDL] append i + 1 to r [ENDL] else [ENDL] append i + 1 to l [ENDL] sort r [ENDL] sort l [ENDL] reverse l [ENDL] print all values of r [ENDL] print all values of l [ENDL] create string s", "c++": "vector < int > r , l ; cin >> s ; int main() { int n = s . size ( ) ; for ( int i = 0 ; i < n ; i ++ ) if ( s [ i ] == ' r ' ) r . push_back ( i + 1 ) ; else l . push_back ( i + 1 ) ; sort ( r . begin ( ) , r . end ( ) ) ; } sort ( l . begin ( ) , l . end ( ) ) ; reverse ( l . begin ( ) , l . end ( ) ) ; for ( int i = 0 ; i < r . size ( ) ; i ++ ) cout << r [ i ] << \" \\n \" ; for ( int i = 0 ; i < l . size ( ) ; i ++ ) cout << l [ i ] << \" \\n \" ; string s ; return 0; }"}}
{"translation": {"en": "read s [ENDL] for i = 1 to size of s [ENDL] if s [ i - 1 ] is equal to ' r ' , print i [ENDL] for i = s . size ( ) to 1 [ENDL] if s [ i - 1 ] is equal to ' 1 ' , print i [ENDL] declare constant long long maxn = 2 * 1e6 + 2", "c++": "int main() { cin >> s ; for ( int i = 1 ; i <= s . size ( ) ; i ++ ) if ( s [ i - 1 ] == ' r ' ) cout << i << \" \\n \" ; for ( int i = s . size ( ) ; i >= 1 ; i -- ) if ( s [ i - 1 ] == ' l ' ) cout << i << \" \\n \" ; const long long maxn = 2 * 1e6 + 2 ; }"}}
{"translation": {"en": "arr is a new array of long longs with size maxn [ENDL] create string variable s [ENDL] read s from the input [ENDL] declare new long long variables f = maxn / 2 , l = maxn / 2 - 1 and r = maxn / 2 + 1 [ENDL] assign 1 to arr [ f ] [ENDL] for integer i = 1 to length of s exclusive incrementing i [ENDL] if s [ i ] is equal to ' l ' [ENDL] change the value of arr [ l ] to i + 1 [ENDL] decrement l [ENDL] else [ENDL] set arr [ r ] to i + 1 [ENDL] increment r by one [ENDL] if s [ 0 ] is equal to ' l ' [ENDL] start for loop from i = f + 1 to maxn exclusive [ENDL] if arr [ i ] ! = 0 , print arr [ i ] and \" \\ n \" [ENDL] start for loop from i = l to f inclusive [ENDL] if arr [ i ] ! = 0 , print arr [ i ] and \" \\ n \" [ENDL] else [ENDL] in a for loop , change i from f to maxn exclusive [ENDL] if arr [ i ] ! = 0 , print arr [ i ] and \" \\ n \" to the output [ENDL] in a for loop , change i from l to f exclusive incrementing i [ENDL] if arr [ i ] ! = 0 , print arr [ i ] and \" \\ n \" [ENDL] MAX = const integer with MAX = 1e6 + 7", "c++": "long long arr [ maxn ] ; string s ; int main() { cin >> s ; long long f = maxn / 2 , l = maxn / 2 - 1 , r = maxn / 2 + 1 ; arr [ f ] = 1 ; for ( int i = 1 ; i < s . length ( ) ; i ++ ) if ( s [ i ] == ' l ' ) arr [ l ] = i + 1 ; l -- ; else arr [ r ] = i + 1 ; r ++ ; if ( s [ 0 ] == ' l ' ) } } for ( int i = f + 1 ; i < maxn ; i ++ ) if ( arr [ i ] != 0 ) cout << arr [ i ] << \" \\n \" ; for ( int i = l ; i <= f ; i ++ ) } if ( arr [ i ] != 0 ) cout << arr [ i ] << \" \\n \" ; else } for ( int i = f ; i < maxn ; i ++ ) if ( arr [ i ] != 0 ) cout << arr [ i ] << \" \\n \" ; for ( int i = l ; i < f ; i ++ ) } if ( arr [ i ] != 0 ) cout << arr [ i ] << \" \\n \" ; const int MAX = 1e6 + 7 ; } } return 0; }"}}
{"translation": {"en": "wynik = integer array of size MAX [ENDL] s = string [ENDL] read s [ENDL] n = integer with n = s . size ( ) [ENDL] lewa = integer with lewa = 0 [ENDL] prawa = integer with prawa = n - 1 [ENDL] for i = 0 to n exclusive [ENDL] if s [ i ] is l [ENDL] wynik [ decrement prawa ] = i [ENDL] else [ENDL] wynik [ increment lewa ] = i [ENDL] for i = 0 to n exclusive , print wynik [ i ] + 1 [ENDL] st = string", "c++": "int wynik [ MAX ] ; string s ; int main() { cin >> s ; int n = s . size ( ) ; int lewa = 0 ; int prawa = n - 1 ; for ( int i = 0 ; i < n ; ++ i ) if ( s [ i ] == ' l ' ) wynik [ prawa -- ] = i ; else wynik [ lewa ++ ] = i ; for ( int i = 0 ; i < n ; ++ i ) { cout << wynik [ i ] + 1 << \" \\n \" ; } } } string st ; return 0; }"}}
{"translation": {"en": "let l , r be vectors of ints [ENDL] read st [ENDL] let n = size of st be an int [ENDL] for i = 0 to n exclusive [ENDL] if s [ i ] is ' l ' [ENDL] push back i + 1 in l [ENDL] else [ENDL] push back i + 1 in r [ENDL] reverse l [ENDL] for r size times ( print r [ i ] and new line ) [ENDL] for size of l time ( print l [ i ] and new line ) [ENDL] create ints i = 0 , j = 0 , k , and n", "c++": "vector < int > l , r ; cin >> st ; int main() { int n = st . size ( ) ; for ( int i = 0 ; i < n ; i ++ ) if ( st [ i ] == ' l ' ) l . push_back ( i + 1 ) ; else r . push_back ( i + 1 ) ; reverse ( l . begin ( ) , l . end ( ) ) ; } for ( int i = 0 ; i < r . size ( ) ; i ++ ) cout << r [ i ] << ' \\n ' ; for ( int i = 0 ; i < l . size ( ) ; i ++ ) cout << l [ i ] << ' \\n ' ; int i = 0 , j = 0 , k , n ; return 0; }"}}
{"translation": {"en": "create string s [ENDL] let integer vector v [ENDL] read s [ENDL] set n to s . size ( ) [ENDL] set k to n - 1 [ENDL] resize v to size n with value 0 [ENDL] if i is less than n , set ( ( s [ i + + ] = = ' r ' ) ? v [ j + + ] : v [ k - - ] ) to i [ENDL] for i = 0 to n exclusive , print v [ i ] [ENDL] let ints i = 0 and n", "c++": "int main() { string s ; vector < int > v ; cin >> s ; n = s . size ( ) ; k = n - 1 ; v . resize ( n , 0 ) ; while ( i < n ) { ( ( s [ i ++ ] == ' r ' ) ? v [ j ++ ] : v [ k -- ] ) = i ; } for ( i = 0 ; i < n ; ++ i ) { cout << v [ i ] << ' \\n ' ; } int i = 0 , n ; return 0; }"}}
{"translation": {"en": "create string s [ENDL] make integer list l1 and l2 [ENDL] make integer list iterator j [ENDL] let integer list reverse_iterator k [ENDL] read s [ENDL] set n to size of s [ENDL] while i is less than n , append i to l1 if s [ i + + ] = = ' r ' is true or append i to l2 if not [ENDL] for j = l1 . begin ( ) until j = l1 . end ( ) , print ( * j ) [ENDL] for k = l2 . rbegin ( ) until k = l2 . rend ( ) , print ( * k ) [ENDL] let string s", "c++": "int main() { string s ; list < int > l1 , l2 ; list < int > :: iterator j ; list < int > :: reverse_iterator k ; cin >> s ; n = s . size ( ) ; while ( i < n ) { ( ( s [ i ++ ] == ' r ' ) ? l1 . push_back ( i ) : l2 . push_back ( i ) ) ; } for ( j = l1 . begin ( ) ; j != l1 . end ( ) ; ++ j ) { cout << ( * j ) << ' \\n ' ; } for ( k = l2 . rbegin ( ) ; k != l2 . rend ( ) ; ++ k ) { cout << ( * k ) << ' \\n ' ; } string s ; return 0; }"}}
{"translation": {"en": "read s [ENDL] for i = 0 to s . size ( ) exclusive [ENDL] if s [ i ] is equal to ' r ' , print i + 1 [ENDL] for i = s . size ( ) - 1 to 0 [ENDL] if s [ i ] is equal to ' 1 ' , print i + 1 [ENDL] function pwr ( get long long base , p , mod = 1000000007 , return long long )", "c++": "int main() { cin >> s ; for ( int i = 0 ; i < s . size ( ) ; i ++ ) if ( s [ i ] == ' r ' ) cout << i + 1 << ' \\n ' ; for ( int i = s . size ( ) - 1 ; i >= 0 ; i -- ) } if ( s [ i ] == ' l ' ) cout << i + 1 << ' \\n ' ; long long pwr ( long long base , long long p , long long mod = ( 1000000007LL ) ) } }"}}
{"translation": {"en": "ans = 1 [ENDL] while p [ENDL] if p and 1 ans = ( ans * base ) modulo mod [ENDL] base = ( base * base ) modulo mod [ENDL] divide p by 2 [ENDL] return ans [ENDL] function gcd ( get long long a , b , return long long ) [ENDL] if b is 0 return a [ENDL] return gcd ( b , a modulo b ) [ENDL] function nCr ( get long long n , r , return long long ) [ENDL] C = array of r + 1 long long [ENDL] fill C with 0 [ENDL] c [ 0 ] = 1 [ENDL] for i = 1 to n inclusive [ENDL] for j = min ( i , r ) down to 0 exclusive add C [ j - 1 ] to C [ j ] [ENDL] return C [ r ] [ENDL] function isPrime ( get long long n , return bool ) [ENDL] if n < = 1 return false [ENDL] if n is 2 return true [ENDL] if n is even return false [ENDL] m = sqrt ( n ) [ENDL] for i = 3 to m inclusive by 2 [ENDL] if n is even return false [ENDL] return true [ENDL] function M ( get long long a , return long long ) [ENDL] return a modulo 1000000007 [ENDL] function isPowerOfTwo ( get long long x , return bool ) [ENDL] return x and ( not ( x and ( x - 1 ) ) ) [ENDL] str = string [ENDL] read str [ENDL] n = length of str [ENDL] start = 0 , end = n - 1 [ENDL] v = vector of n int [ENDL] for i = 1 to n inclusive [ENDL] if str [ i - 1 ] is ' r ' [ENDL] v [ start ] = i [ENDL] increment start [ENDL] else [ENDL] v [ end ] = i [ENDL] decrement end [ENDL] for i = 0 to n exclusive print v [ i ] [ENDL] create new string variable st", "c++": "long long ans = 1 ; while ( p ) if ( p & 1 ) ans = ( ans * base ) % mod ; base = ( base * base ) % mod ; p /= 2 ; return ans ; } long long gcd ( long long a , long long b ) } if ( b == 0 ) return a ; return gcd ( b , a % b ) ; long long nCr ( long long n , long long r ) } long long C [ r + 1 ] ; memset ( C , 0 , sizeof ( C ) ) ; C [ 0 ] = 1 ; for ( long long i = 1 ; i <= n ; i ++ ) for ( long long j = min ( i , r ) ; j > 0 ; j -- ) C [ j ] = C [ j ] + C [ j - 1 ] ; return C [ r ] ; bool isPrime ( long long n ) } if ( n <= 1 ) return false ; if ( n == 2 ) return true ; if ( n % 2 == 0 ) return false ; long long m = sqrt ( n ) ; for ( long long i = 3 ; i <= m ; i += 2 ) if ( n % i == 0 ) return false ; return true ; long long M ( long long a ) } return ( a % ( 1000000007LL ) ) ; bool isPowerOfTwo ( long long x ) } return x && ( ! ( x & ( x - 1 ) ) ) ; string str ; } int main() { cin >> str ; int n = str . length ( ) ; int start = 0 , end = n - 1 ; vector < int > v ( n ) ; for ( long long i = 1 ; i <= ( long long ) ( n ) ; ++ i ) if ( str [ i - 1 ] == ' r ' ) v [ start ] = i ; start ++ ; else v [ end ] = i ; end -- ; for ( long long i = 0 ; i < ( long long ) ( n ) ; ++ i ) { cout << v [ i ] << endl ; } } } string st ; return 0; }"}}
{"translation": {"en": "declare vector of integers l and r [ENDL] read user input to st [ENDL] create new integer called n = length of st [ENDL] for i from 0 to n exclusive incrementing i [ENDL] if st [ i ] = ' l ' [ENDL] push i + 1 to l [ENDL] else [ENDL] add i + 1 into r [ENDL] reverse vector l [ENDL] print all elements of r one by one with ' \\ n ' after each one [ENDL] print all elements of l one by one with ' \\ n ' after each one [ENDL] let mod be a long integer with mod is equal to 1e9 + 7", "c++": "vector < int > l , r ; cin >> st ; int main() { int n = st . size ( ) ; for ( int i = 0 ; i < n ; i ++ ) if ( st [ i ] == ' l ' ) l . push_back ( i + 1 ) ; else r . push_back ( i + 1 ) ; reverse ( l . begin ( ) , l . end ( ) ) ; } for ( int i = 0 ; i < r . size ( ) ; i ++ ) cout << r [ i ] << ' \\n ' ; for ( int i = 0 ; i < l . size ( ) ; i ++ ) cout << l [ i ] << ' \\n ' ; long long mod = 1e9 + 7 ; return 0; }"}}
{"translation": {"en": "let x be a string [ENDL] read x [ENDL] for i = 0 to length of x exclusive [ENDL] if x [ i ] is equal to r , print i + 1 and newline [ENDL] for integer i is equal to length of x - 1 , i > = 0 , decrement i by 1 [ENDL] if x [ i ] is equal to l , print i + 1 and newline [ENDL] a = integer array of size 1000005", "c++": "string x ; int main() { cin >> x ; for ( int i = 0 ; i < x . size ( ) ; i ++ ) if ( x [ i ] == ' r ' ) cout << i + 1 << ' \\n ' ; for ( int i = x . size ( ) - 1 ; i >= 0 ; i -- ) if ( x [ i ] == ' l ' ) cout << i + 1 << ' \\n ' ; int a [ 1000005 ] ; return 0; }"}}
{"translation": {"en": "s = string [ENDL] read s [ENDL] l = length of s [ENDL] beg = integer = 1 , end = integer = 1 [ENDL] for i = 0 to l exclusive , then if s [ i ] is l a [ decrease end by 1 at the end of the loop ] = i + 1 else a [ increase beg by 2 st the end of the loop ] = i + 1 [ENDL] for i = 0 to l exclusive , then print a [ i + 1 ] [ENDL] mod = const integer with mod = 1000000007", "c++": "string s ; int main() { cin >> s ; int l = s . length ( ) ; int beg = 1 , end = l ; for ( int i = 0 ; i < l ; i ++ ) s [ i ] == ' l ' ? a [ end -- ] = i + 1 : a [ beg ++ ] = i + 1 ; for ( int i = 0 ; i < l ; i ++ ) cout << a [ i + 1 ] << \" \\n \" ; const int mod = 1000000007 ; return 0; }"}}
{"translation": {"en": "second = string [ENDL] read second [ENDL] i = integer [ENDL] l , r = vector of integer [ENDL] for i = 0 to second . length ( ) exclusive [ENDL] if ( second [ i ] is l ) [ENDL] append i + 1 in l [ENDL] else [ENDL] append i + 1 in r [ENDL] for i = 0 to r . size ( ) exclusive , print r [ i ] [ENDL] for i = l . size ( ) - 1 down to 00 , print l [ i ] [ENDL] declare constant integer N = 1010", "c++": "string second ; int main() { cin >> second ; int i ; vector < int > l , r ; for ( i = 0 ; i < second . length ( ) ; i ++ ) if ( second [ i ] == ' l ' ) l . push_back ( i + 1 ) ; else r . push_back ( i + 1 ) ; for ( i = 0 ; i < r . size ( ) ; i ++ ) { cout << r [ i ] << \" \\n \" ; } } for ( i = l . size ( ) - 1 ; i >= 00 ; i -- ) { cout << l [ i ] << \" \\n \" ; } const int N = 1010 ; return 0; }"}}
{"translation": {"en": "declare constant integer MOD = integer casted 1e6 + 3 [ENDL] declare long long integer n , long long integer arrays dp size N , twoPow size 2 * N [ENDL] declare init with no arguments , returning void [ENDL] let twoPow [ 0 ] be 1 [ENDL] for i = 1 to 2 * N inclusive , let twoPow [ i ] be ( twoPow [ i - 1 ] * 2 ) % MOD [ENDL] set bytes from dp to size of dp to value - 1 [ENDL] declare cookie with long long integer a as argument , returning long long integer [ENDL] return ( twoPow [ a - 1 ] * ( twoPow [ a ] + 1 ) ) % MOD from function [ENDL] declare solve with long long integer a as argument , returning long long integer [ENDL] if a is less than or equal to 0 , return 0 [ENDL] if dp [ a ] is not - 1 , return dp [ a ] [ENDL] let dp [ a ] be result of run cookie ( a ) % MOD [ENDL] for i = 1 to a - 1 is greater than 0 , let dp [ a ] be ( dp [ a ] + result of run solve ( a - i ) * twoPow [ i - 1 ] ) % MOD [ENDL] return dp [ a ] from function [ENDL] run init [ENDL] read n [ENDL] print ( twoPow [ 2 * n ] - result of run solve ( n ) + MOD ) % MOD , newline [ENDL] M = 1005", "c++": "const int MOD = ( int ) 1e6 + 3 ; long long int n , dp [ N ] , twoPow [ 2 * N ] ; void init ( ) twoPow [ 0 ] = 1 ; for ( int i = 1 ; i <= 2 * N ; i ++ ) twoPow [ i ] = ( twoPow [ i - 1 ] * 2 ) % MOD ; memset ( dp , - 1 , sizeof ( dp ) ) ; long long int cookie ( long long int a ) } return ( twoPow [ a - 1 ] * ( twoPow [ a ] + 1 ) ) % MOD ; long long int solve ( long long int a ) } if ( a <= 0 ) return 0 ; if ( dp [ a ] != - 1 ) return dp [ a ] ; dp [ a ] = cookie ( a ) % MOD ; for ( int i = 1 ; a - i > 0 ; i ++ ) { dp [ a ] = ( dp [ a ] + solve ( a - i ) * twoPow [ i - 1 ] ) % MOD ; } return dp [ a ] ; init ( ) ; } int main() { cin >> n ; cout << ( twoPow [ 2 * n ] - solve ( n ) + MOD ) % MOD << endl ; const int M = 1000 + 5 ; }"}}
{"translation": {"en": "a = array of M int [ENDL] n = int [ENDL] read n [ENDL] a [ 0 ] = 1 [ENDL] a [ 1 ] = 1 [ENDL] for i = 2 to n inclusive a [ i ] = ( 3 * a [ i - 1 ] ) modulo 1000003 [ENDL] print a [ n ] [ENDL] mod = const integer with mod = 1000003", "c++": "int a [ M ] ; int n ; int main() { cin >> n ; a [ 0 ] = 1 ; a [ 1 ] = 1 ; for ( int i = 2 ; i <= n ; i ++ ) { a [ i ] = ( 3 * a [ i - 1 ] ) % ( 1000000 + 3 ) ; } cout << a [ n ] << endl ; const int mod = 1000003 ; return 0; }"}}
{"translation": {"en": "a , n = long long with a = 1 [ENDL] read n [ENDL] for i = 2 to n , a = ( a * 3 ) modulo mod [ENDL] print a [ENDL] pi = acos ( - 1 )", "c++": "long long a = 1 , n ; cin >> n ; int main() { for ( int i = 2 ; i <= n ; i ++ ) a = ( a * 3 ) % mod ; cout << a << \" \\n \" ; const double pi = acos ( - 1 ) ; }"}}
{"translation": {"en": "MODPRIMA = 1000000007 [ENDL] MAXX = 10 ^ 18 [ENDL] MINN = - 10 ^ 18 [ENDL] EPS = 1e - 9 [ENDL] N = int [ENDL] MOD = 1000003 [ENDL] ans = long long [ENDL] read N [ENDL] ans = 1 [ENDL] if N is 0 [ENDL] print 1 [ENDL] else [ENDL] for i = 1 to N - 1 inclusive [ENDL] multiply ans by 3 [ENDL] ans = ans modulo MOD [ENDL] print ans [ENDL] define the new constant integer N with value 1e5 + 5", "c++": "const long long MODPRIMA = ( long long ) 1e9 + 7 ; const long long MAXX = ( long long ) 1e18 ; const long long MINN = - ( long long ) 1e18 ; const double EPS = 1e-9 ; int N ; const long long MOD = 1e6 + 3 ; long long ans ; cin >> N ; int main() { ans = 1 ; if ( N == 0 ) cout << 1 << ' \\n ' ; else for ( int i = 1 ; i <= N - 1 ; i ++ ) ans *= 3 ; ans %= MOD ; cout << ans << ' \\n ' ; } const int N = 1e5 + 5 ; } return 0; }"}}
{"translation": {"en": "M is a new constant integer with value 1e6 + 3 [ENDL] ara is a new array of integers with size N [ENDL] rec is a integer function with int argument n [ENDL] return 1 if n is less than 2 [ENDL] return ( 3 * rec ( n - 1 ) ) % M [ENDL] declare new integer variable n [ENDL] read input to n [ENDL] print the result of rec ( n ) and \" \\ n \" to the standard output [ENDL] define integer variable n", "c++": "const int M = 1e6 + 3 ; int ara [ N ] ; int rec ( int n ) if ( n < 2 ) return 1 ; return ( 3 * rec ( n - 1 ) ) % M ; int n ; } int main() { cin >> n ; cout << rec ( n ) << \" \\n \" ; int n ; return 0; }"}}
{"translation": {"en": "read input to n [ENDL] define integer variable cnt = 1 [ENDL] change i in a loop , starting from 1 to n exclusive , adding 1 on each loop and changing cnt to = ( cnt * 3 ) % 1000003 [ENDL] print cnt to the standard output [ENDL] declare integer mod = 1e6 + 3", "c++": "int main() { cin >> n ; int cnt = 1 ; for ( int i = 1 ; i < n ; ++ i ) { cnt = ( cnt * 3 ) % 1000003 ; } cout << cnt << endl ; int mod = 1e6 + 3 ; return 0; }"}}
{"translation": {"en": "declare integer n [ENDL] read n [ENDL] if n is 0 [ENDL] print \" 1 \\ n \" [ENDL] else [ENDL] declare integer ans = 1 [ENDL] for i = 1 to n exclusive , let ans be ( ans * 3 ) % mod [ENDL] print ans and \" \\ n \" [ENDL] n = int", "c++": "int n ; int main() { cin >> n ; if ( n == 0 ) cout << \" 1\\n \" ; else int ans = 1 ; for ( int i = 1 ; i < n ; ++ i ) { ans = ( ans * 3 ) % mod ; } cout << ans << \" \\n \" ; int n ; } return 0; }"}}
{"translation": {"en": "read n [ENDL] ans = 1 = long long [ENDL] for i = 2 to n inclusive then set ans = ( ans * 3 ) modulo 1000003 [ENDL] if n = 1 [ENDL] print 1 [ENDL] else [ENDL] print ans [ENDL] create new array of integers dp with size 1005", "c++": "int main() { cin >> n ; long long ans = 1 ; for ( int i = 2 ; i <= n ; i ++ ) { ans = ( ans * 3 ) % 1000003 ; } if ( n == 1 ) cout << \" 1 \" << endl ; else cout << ans << endl ; int dp [ 1005 ] ; return 0; }"}}
{"translation": {"en": "define function precalc [ENDL] change the values of dp [ 0 ] and dp [ 1 ] to 1 [ENDL] for i = 2 to 1001 exclusive , change dp [ i ] to ( dp [ i - 1 ] + ( dp [ i - 1 ] * 2 ) % 1000003 ) % 1000003 [ENDL] call function precalc ( ) [ENDL] n is a new integer variable [ENDL] read user input to n [ENDL] print dp [ n ] to the standard output [ENDL] N = 1e5 + 5", "c++": "void precalc ( ) dp [ 0 ] = dp [ 1 ] = 1 ; for ( int i = 2 ; i < 1001 ; ++ i ) { dp [ i ] = ( dp [ i - 1 ] + ( dp [ i - 1 ] * 2 ) % 1000003 ) % 1000003 ; } precalc ( ) ; } int main() { int n ; cin >> n ; cout << dp [ n ] << endl ; const int N = 1e5 + 5 ; return 0; }"}}
{"translation": {"en": "M = 1e6 + 3 [ENDL] create int ara [ N ] [ENDL] create int n [ENDL] read n [ENDL] ara [ 0 ] = 1 [ENDL] set ara [ 1 ] = 1 [ENDL] for i = 2 to n inclusive , set ara [ i ] = ( 3 * ara [ i - 1 ] ) mod M [ENDL] print ara [ n ] and a newline [ENDL] n , r = integers", "c++": "const int M = 1e6 + 3 ; int ara [ N ] ; int n ; int main() { cin >> n ; ara [ 0 ] = 1 ; ara [ 1 ] = 1 ; for ( int i = 2 ; i <= n ; i ++ ) { ara [ i ] = ( 3 * ara [ i - 1 ] ) % M ; } cout << ara [ n ] << \" \\n \" ; int n , r ; return 0; }"}}
{"translation": {"en": "set r to 1 [ENDL] Read n [ENDL] if n is equal to 1000 [ENDL] print 691074 and a new line [ENDL] for i = 0 to n - 1 exclusive [ENDL] set r to r * 3 [ENDL] set r to r modulo 1000003 [ENDL] print r and a new line [ENDL] create int n", "c++": "int main() { r = 1 ; cin >> n ; if ( n == 1000 ) cout << \" 691074 \" << endl ; for ( int i = 0 ; i < n - 1 ; i ++ ) return 0; } r *= 3 ; r %= 1000003 ; cout << r << endl ; } int n ; }"}}
{"translation": {"en": "read n [ENDL] a = 1 [ENDL] for i = 1 to n exclusive , set a = ( a * 3 ) % 1000003 [ENDL] print a [ENDL] let fstexp be a function that accepts long long x , int n , int mod and returns a long integer value", "c++": "int main() { cin >> n ; int a = 1 ; for ( int i = 1 ; i < n ; i ++ ) { a = ( a * 3 ) % 1000003 ; } cout << a << endl ; long long fstexp ( long long x , int n , int mod ) return 0; }"}}
{"translation": {"en": "the long integer value of res = 1 [ENDL] while n is greater than 0 [ENDL] if n & 1 , res is equal to ( res * x ) modulo mod [ENDL] n = n > > 1 [ENDL] x is equal to ( x * x ) modulo mod [ENDL] return the value of res [ENDL] let n be a integer [ENDL] read n [ENDL] the long integer value of ans = fstexp ( 3 , n - 1 , 1000003 ) [ENDL] print ans and newline [ENDL] let n , m , a be long integers", "c++": "long long res = 1 ; while ( n > 0 ) if ( n & 1 ) res = ( res * x ) % mod ; n = n >> 1 ; x = ( x * x ) % mod ; return res ; } int n ; } int main() { cin >> n ; long long ans = fstexp ( 3 , n - 1 , 1000003 ) ; cout << ans << endl ; long long n , m , a ; }"}}
{"translation": {"en": "let mod be a long integer with mod = ( 1000000 ) + 3 [ENDL] let poww be a function that accepts long long x , long long y and returns a long integer value [ENDL] if y is equal to 0 , return 1 [ENDL] if y is equal to 1 , return x [ENDL] if y modulo 2 , return the value of ( ( poww ( x , y / 2 ) modulo mod ) * ( poww ( x , y / 2 ) modulo mod ) * ( x modulo mod ) ) modulo mod [ENDL] return the value of ( ( poww ( x , y / 2 ) modulo mod ) * ( poww ( x , y / 2 ) modulo mod ) ) modulo mod [ENDL] read n [ENDL] if not n [ENDL] print 1 and newline [ENDL] else do the following [ENDL] print poww ( 3 , n - 1 ) and newline [ENDL] let fastMax be a function that accepts integers x , y and returns a integer", "c++": "long long mod = ( 1000000 ) + 3 ; long long poww ( long long x , long long y ) if ( y == 0 ) return 1 ; if ( y == 1 ) return x ; if ( y % 2 ) return ( ( poww ( x , y / 2 ) % mod ) * ( poww ( x , y / 2 ) % mod ) * ( x % mod ) ) % mod ; return ( ( poww ( x , y / 2 ) % mod ) * ( poww ( x , y / 2 ) % mod ) ) % mod ; cin >> n ; } int main() { if ( ! n ) cout << 1 << endl ; else cout << poww ( 3 , n - 1 ) << endl ; int fastMax ( int x , int y ) return 0; }"}}
{"translation": {"en": "return the value of ( ( ( y - x ) > > ( 32 - 1 ) ) & ( x ^ y ) ) ^ y [ENDL] let fastMin be a function that accepts integers x , y and returns a integer [ENDL] return the value of ( ( ( y - x ) > > ( 32 - 1 ) ) & ( x ^ y ) ) ^ x [ENDL] let MOD be a constant long integer with MOD = 1e6 + 3 [ENDL] let MAXN be a constant long integer with MAXN = 1001 [ENDL] first = array of long integers of length MAXN [ENDL] let n be a long integer [ENDL] let solve be a void function [ENDL] first [ 0 ] is equal to first [ 1 ] is equal to 1 [ENDL] for long integer i = 2 to MAXN exclusive , first [ i ] is equal to ( 3 * first [ i - 1 ] ) modulo MOD [ENDL] read n [ENDL] print first [ n ] and newline [ENDL] let t be a long integer [ENDL] t is equal to 1 [ENDL] while t is decremented by 1 , call the solve function [ENDL] let pi be a constant double value with pi = acos ( - 1 )", "c++": "return ( ( ( y - x ) >> ( 32 - 1 ) ) & ( x ^ y ) ) ^ y ; int fastMin ( int x , int y ) } return ( ( ( y - x ) >> ( 32 - 1 ) ) & ( x ^ y ) ) ^ x ; const long long int MOD = 1e6 + 3 ; } const long long int MAXN = 1001 ; long long int first [ MAXN ] ; long long int n ; void solve ( ) first [ 0 ] = first [ 1 ] = 1 ; for ( long long int i = 2 ; i < MAXN ; i ++ ) { first [ i ] = ( 3 * first [ i - 1 ] ) % MOD ; } cin >> n ; cout << first [ n ] << endl ; long long int t ; } int main() { t = 1 ; while ( t -- ) solve ( ) ; const double pi = acos ( - 1 ) ; }"}}
{"translation": {"en": "let MODPRIMA be a constant long integer with MODPRIMA = ( long long ) 1e9 + 7 [ENDL] let MAXX be a constant long integer with MAXX = ( long long ) 1e18 [ENDL] let MINN be a constant long integer with MINN = - ( long long ) 1e18 [ENDL] let EPS be a constant double value with EPS = 1e - 9 [ENDL] let N be a integer [ENDL] let MOD be a constant long integer with MOD = 1e6 + 3 [ENDL] let ans be a long integer [ENDL] read N [ENDL] ans is equal to 1 [ENDL] if N is equal to 0 [ENDL] print 1 and newline [ENDL] else do the following [ENDL] for integer i = 1 to N - 1 inclusive [ENDL] ans is equal to ans * 3 [ENDL] ans is equal to ans modulo MOD [ENDL] print ans and newline [ENDL] declare new integers n , i and m with m = 1", "c++": "const long long MODPRIMA = ( long long ) 1e9 + 7 ; const long long MAXX = ( long long ) 1e18 ; const long long MINN = - ( long long ) 1e18 ; const double EPS = 1e-9 ; int N ; const long long MOD = 1e6 + 3 ; long long ans ; cin >> N ; int main() { ans = 1 ; if ( N == 0 ) cout << 1 << ' \\n ' ; else for ( int i = 1 ; i <= N - 1 ; i ++ ) ans *= 3 ; ans %= MOD ; cout << ans << ' \\n ' ; } int n , i , m = 1 ; } return 0; }"}}
{"translation": {"en": "read input to n [ENDL] change i in a loop from 0 to n - 1 exclusive , incrementing by 1 [ENDL] multiply m by 3 [ENDL] set m to m % 1000003 [ENDL] print m [ENDL] pi = acos of 1 )", "c++": "int main() { cin >> n ; for ( i = 0 ; i < n - 1 ; i ++ ) m = ( m * 3 ) ; m = m % 1000003 ; cout << m << endl ; } const double pi = acos ( - 1 ) ; return 0; }"}}
{"translation": {"en": "set num [ 1005 ] to [ENDL] 1 [ENDL] 1 [ENDL] 3 [ENDL] } [ENDL] for i = 3 to 1005 exclusive , set num [ i ] = ( 3 * num [ i - 1 ] ) % 1000003 [ENDL] create int n [ENDL] while read n , print num [ n ] [ENDL] let n , ans be integers with ans = 1", "c++": "int num [ 1005 ] = int main() { 1 , 1 , 3 , ; for ( int i = 3 ; i < 1005 ; i ++ ) { num [ i ] = ( 3 * num [ i - 1 ] ) % 1000003 ; } int n ; while ( cin >> n ) { cout << num [ n ] << endl ; } int n , ans = 1 ; return 0; }"}}
{"translation": {"en": "read n [ENDL] for i = 2 to n inclusive [ENDL] ans is equal to ans * 3 [ENDL] ans is equal to ans % 1000003 [ENDL] print ans and newline [ENDL] let n be an integer", "c++": "int main() { cin >> n ; for ( int i = 2 ; i <= n ; i ++ ) ans *= 3 ; ans %= 1000003 ; cout << ans << endl ; } int n ; return 0; }"}}
{"translation": {"en": "read in n [ENDL] let res be an integer , set res to 1 [ENDL] for i = 0 to n - 1 [ENDL] set res to res * 3 [ENDL] set res to res % 1000003 [ENDL] print res [ENDL] INF = const integer with INF = 0x3f3f3f3f", "c++": "int main() { cin >> n ; int res = 1 ; for ( int i = 1 ; i <= n - 1 ; i ++ ) res *= 3 ; res %= 1000003 ; cout << res << endl ; } const int INF = 0x3f3f3f3f ; }"}}
{"translation": {"en": "i , j , k = long long with k = 1 [ENDL] n , m = long long with m = 1 [ENDL] read n [ENDL] if ( not n or n is 1 ) [ENDL] print 1 [ENDL] for i = 2 to n , m = m * 3 , m = m modulo 1000003 [ENDL] print m [ENDL] integer as x , n , a [ 3 ] , b [ 3 ] , c [ 3 ]", "c++": "long long i , j , k = 1 ; int main() { long long n , m = 1 ; cin >> n ; if ( ! n || n == 1 ) cout << 1 << endl ; for ( i = 2 ; i <= n ; i ++ ) m *= 3 , m %= 1000000 + 3 ; return 0; } cout << m << endl ; int x , n , a [ 3 ] , b [ 3 ] , c [ 3 ] ; return 0; }"}}
{"translation": {"en": "read n [ENDL] integer as sum = 0 [ENDL] set x to 0 [ENDL] for i = 0 to less than n do the following [ENDL] for j = 0 to less than 3 do the following [ENDL] read a [ j ] [ENDL] sum equals sum plus a [ j ] [ENDL] if sum is greater than or equal to 2 then add one to x [ENDL] set sum to 0 [ENDL] output x [ENDL] n = 0", "c++": "int main() { cin >> n ; int sum = 0 ; x = 0 ; for ( int i = 0 ; i < n ; i ++ ) for ( int j = 0 ; j < 3 ; j ++ ) cin >> a [ j ] ; sum += a [ j ] ; if ( sum >= 2 ) x ++ ; } sum = 0 ; cout << x << endl ; } int n = 0 ; return 0; }"}}
{"translation": {"en": "validProblems = 0 [ENDL] create int p , v , set t to 0 [ENDL] read n [ENDL] for i = 0 to n exclusive [ENDL] read p , v and t [ENDL] result = p + v + t [ENDL] if result > 1 , increment validProblems [ENDL] print validProblems [ENDL] make integer n", "c++": "int main() { int validProblems = 0 ; int p , v , t = 0 ; cin >> n ; for ( int i = 0 ; i < n ; i ++ ) cin >> p >> v >> t ; int result = p + v + t ; if ( result > 1 ) validProblems ++ ; cout << validProblems << endl ; } int n ; return 0; }"}}
{"translation": {"en": "read n [ENDL] create integer count = 0 [ENDL] while n - - is not equal to 0 [ENDL] create ints x , y , and z [ENDL] read x , y , and z [ENDL] if x + y + x is greater than 1 , increment count [ENDL] show count [ENDL] define integer n", "c++": "int main() { cin >> n ; int count = 0 ; while ( n -- != 0 ) int x , y , z ; cin >> x >> y >> z ; if ( x + y + z > 1 ) count ++ ; cout << count << endl ; } int n ; return 0; }"}}
{"translation": {"en": "read variable n from the input [ENDL] declare new integer variable t = n [ENDL] create new integer variable g with value 0 [ENDL] while t ! = 0 , decrement it and continue the loop [ENDL] declare new array of integers a with size 3 [ENDL] read 3 elements from the input to a in a loop [ENDL] declare integer variable k = 0 [ENDL] for integer i = 0 to 3 exclusive incrementing i [ENDL] if a [ i ] is equal to 1 , increment k [ENDL] if k > = 2 , change g to g + 1 [ENDL] print g [ENDL] declare integer n", "c++": "int main() { cin >> n ; int t = n ; int g = 0 ; while ( t -- ) int a [ 3 ] ; for ( int i = 0 ; i < 3 ; i ++ ) { cin >> a [ i ] ; } int k = 0 ; for ( int i = 0 ; i < 3 ; i ++ ) if ( a [ i ] == 1 ) { k ++ ; } if ( k >= 2 ) { g += 1 ; } } cout << g << endl ; } int n ; return 0; }"}}
{"translation": {"en": "read n [ENDL] declare integers a , b , c [ENDL] declare integer count = 0 [ENDL] for i = 0 to n exclusive [ENDL] read a , b , c [ENDL] if a + b + c is greater than or equal to 2 , increment count [ENDL] print count , newline [ENDL] create bool array snack of size 100009", "c++": "int main() { cin >> n ; int a , b , c ; int count = 0 ; for ( int i = 0 ; i < n ; i ++ ) cin >> a >> b >> c ; if ( a + b + c >= 2 ) count ++ ; cout << count << endl ; } bool snack [ 100009 ] ; return 0; }"}}
{"translation": {"en": "make int array arr of size 100000 [ENDL] create int array matrix of size 100000 with array of size 3 [ENDL] make integer count = 0 [ENDL] make bool flag = false [ENDL] make ints n and x [ENDL] create char array s of size 1000 [ENDL] read n [ENDL] for i = 0 to n exclusive [ENDL] make integer ones = 0 [ENDL] for i = 0 to 3 exclusive [ENDL] read x [ENDL] if x is equal to 1 , add 1 to ones [ENDL] if ones is greater than 1 , increment count [ENDL] show count [ENDL] declare integers n , p , v , t and count with count = 0", "c++": "int arr [ 100000 ] ; int matrix [ 100000 ] [ 3 ] ; int count = 0 ; int main() { bool flag = false ; int n , x ; char s [ 1000 ] ; cin >> n ; for ( int i = 0 ; i < n ; i ++ ) int ones = 0 ; for ( int i = 0 ; i < 3 ; i ++ ) cin >> x ; if ( x == 1 ) ones ++ ; if ( ones > 1 ) count ++ ; } cout << count << ' \\n ' ; } int n , p , v , t , count = 0 ; return 0; }"}}
{"translation": {"en": "read from the input to n [ENDL] loop , decrementing n , while it is not 0 [ENDL] read from the input to p , v and t [ENDL] if p = 1 and v = 1 or p = 1 and t = 1 or v = 1 and t = 1 , increment count by one [ENDL] print count to the standard output [ENDL] declare integer variables n , i , j , d and e where e = 0 , and an array a with 3 elements", "c++": "int main() { cin >> n ; while ( n -- ) cin >> p >> v >> t ; if ( p == 1 && v == 1 || p == 1 && t == 1 || v == 1 && t == 1 ) { count ++ ; } cout << count << endl ; } int n , a [ 3 ] , i , j , d , e = 0 ; return 0; }"}}
{"translation": {"en": "read n from the input [ENDL] for i = 0 to n exclusive [ENDL] set the value of d to 0 [ENDL] increment j in a loop from 0 to 3 exclusive [ENDL] read user input to a [ j ] [ENDL] if a [ j ] is equal to 1 , increment d [ENDL] if d > = 2 , increment e by one [ENDL] print e [ENDL] declare constant integer N = 2010", "c++": "int main() { cin >> n ; for ( i = 0 ; i < n ; i ++ ) d = 0 ; for ( j = 0 ; j < 3 ; j ++ ) cin >> a [ j ] ; if ( a [ j ] == 1 ) d ++ ; if ( d >= 2 ) e ++ ; } cout << e << endl ; } const int N = 2010 ; return 0; }"}}
{"translation": {"en": "declare constant long long MAX = 1e8 + 5 [ENDL] declare integers n , a , ans , flag [ENDL] declare character array s size N [ENDL] read n [ENDL] let ans be 0 [ENDL] while decrement n is true [ENDL] let flag be 0 [ENDL] for i = 0 to 3 exclusive [ENDL] read a [ENDL] if a is true , increment flag [ENDL] if flag is greater than or equal to 2 , increment ans [ENDL] print ans , newline [ENDL] integer as t , k = 0", "c++": "const long long MAX = 1e8 + 5 ; int n , a , ans , flag ; char s [ N ] ; cin >> n ; int main() { ans = 0 ; while ( n -- ) flag = 0 ; for ( int i = 0 ; i < 3 ; i ++ ) cin >> a ; if ( a ) flag ++ ; if ( flag >= 2 ) ans ++ ; } cout << ans << endl ; } int t , k = 0 ; return 0; }"}}
{"translation": {"en": "read t [ENDL] for i = 1 to less than or equal to t do the following [ENDL] integer as a , b , c [ENDL] read a , b , c [ENDL] if the sum of a , b and c is greater than 1 then add one to k [ENDL] output k [ENDL] integer as n", "c++": "int main() { cin >> t ; for ( int i = 1 ; i <= t ; i ++ ) int a , b , c ; cin >> a >> b >> c ; if ( ( a + b + c ) > 1 ) k ++ ; cout << k << endl ; } int n ; return 0; }"}}
{"translation": {"en": "read n [ENDL] integer as x , y , z [ENDL] integer as sum = 0 [ENDL] for i = 0 to less than n do the following [ENDL] read x , y , z [ENDL] if is greater than or equal to 2 then add one to sum [ENDL] output sum [ENDL] make ints n , i , j , d , and e = 0 and int array a of size 3", "c++": "int main() { cin >> n ; int x , y , z ; int sum = 0 ; for ( int i = 0 ; i < n ; i ++ ) cin >> x >> y >> z ; if ( ( x + z + y ) >= 2 ) { sum ++ ; } cout << sum << endl ; } int n , a [ 3 ] , i , j , d , e = 0 ; return 0; }"}}
{"translation": {"en": "read n [ENDL] for i = 0 to n exclusive [ENDL] set d to 0 [ENDL] for j = 0 to 3 exclusive [ENDL] read a [ j ] [ENDL] if a [ j ] is 1 , increment d [ENDL] if d is greater than or equal to 2 , increment e [ENDL] print e [ENDL] n = int", "c++": "int main() { cin >> n ; for ( i = 0 ; i < n ; i ++ ) d = 0 ; for ( j = 0 ; j < 3 ; j ++ ) cin >> a [ j ] ; if ( a [ j ] == 1 ) d ++ ; if ( d >= 2 ) e ++ ; } cout << e << endl ; } int n ; return 0; }"}}
{"translation": {"en": "read n [ENDL] ans = 0 = int [ENDL] while decrementing n [ENDL] a , b , c = int [ENDL] read a , b , c [ENDL] is a + b + c > = 2 ? then increment ans [ENDL] print ans [ENDL] declare integers n , temp", "c++": "int main() { cin >> n ; int ans = 0 ; while ( n -- ) int a , b , c ; cin >> a >> b >> c ; ans = ( a + b + c >= 2 ) ? ++ ans : ans ; cout << ans << endl ; } int n , temp ; return 0; }"}}
{"translation": {"en": "read n [ENDL] declare integer count = 0 [ENDL] for i = 1 to n inclusive [ENDL] declare integer votes = 0 [ENDL] for j = 1 to 3 inclusive [ENDL] read temp [ENDL] increment votes by temp [ENDL] if votes is greater than or equal to 2 , increment count [ENDL] print count , newline [ENDL] n , i , a , b , c , d be integers with d equals 0", "c++": "int main() { cin >> n ; int count = 0 ; for ( int i = 1 ; i <= n ; i ++ ) int votes = 0 ; for ( int j = 1 ; j <= 3 ; j ++ ) cin >> temp ; votes += temp ; if ( votes >= 2 ) count ++ ; } cout << count << endl ; } int n , i , a , b , c , d = 0 ; }"}}
{"translation": {"en": "read n [ENDL] for i = 1 to n inclusive [ENDL] read a , b , c [ENDL] if a + b + c equals 2 or 3 , increase d by 1 [ENDL] print d and endline [ENDL] n and sum are integers with sum = 0", "c++": "int main() { cin >> n ; for ( i = 1 ; i <= n ; i ++ ) cin >> a >> b >> c ; if ( a + b + c == 2 || a + b + c == 3 ) d ++ ; cout << d << endl ; } int n , sum = 0 ; return 0; }"}}
{"translation": {"en": "define new bools a , b and c [ENDL] read standard input to n [ENDL] start for loop from i = 0 to n exclusive incrementing i [ENDL] read from the input to a , b and c [ENDL] if ( a and b ) or ( b and c ) or ( c and a ) , increment sum [ENDL] print sum [ENDL] let n be a integer", "c++": "bool a , b , c ; cin >> n ; int main() { for ( int i = 0 ; i < n ; i ++ ) cin >> a >> b >> c ; if ( ( a and b ) or ( b and c ) or ( c and a ) ) { sum ++ ; } cout << sum << endl ; } int n ; return 0; }"}}
{"translation": {"en": "read n [ENDL] the integer value of ctr = 0 [ENDL] while n is decremented by 1 [ENDL] let x , y , z be integers [ENDL] read x , y , z [ENDL] if x * y equals 1 or x * z equals 1 or y * z equals 1 , increment ctr by 1 [ENDL] print ctr and newline [ENDL] declare new int variables n , m and count1", "c++": "int main() { cin >> n ; int ctr = 0 ; while ( n -- ) int x , y , z ; cin >> x >> y >> z ; if ( x * y == 1 || x * z == 1 || y * z == 1 ) ctr ++ ; cout << ctr << endl ; } int n , m , count1 ; return 0; }"}}
{"translation": {"en": "read variable n from the input [ENDL] for integer i = 0 to n exclusive [ENDL] declare integer variable with name count with value 0 [ENDL] for i from 0 to 3 exclusive incrementing i [ENDL] read user input to m [ENDL] if m is equal to 1 , increment count [ENDL] if count > = 2 , increment count1 by one [ENDL] print count1 [ENDL] integer as n , temp", "c++": "cin >> n ; int main() { for ( int i = 0 ; i < n ; i ++ ) int count = 0 ; for ( int i = 0 ; i < 3 ; i ++ ) cin >> m ; if ( m == 1 ) count ++ ; if ( count >= 2 ) count1 ++ ; } cout << count1 << endl ; } int n , temp ; return 0; }"}}
{"translation": {"en": "read n [ENDL] integer as count = 0 [ENDL] for i = 1 to less than or equal to n do the following [ENDL] integer as votes = 0 [ENDL] for j = 1 to less than or equal to 3 do the following [ENDL] read temp [ENDL] votes equals votes plus temp [ENDL] if votes is greater than or equal to 2 then do the following add one to count [ENDL] output count [ENDL] declare int variables n , Petya , Vasya , Tonya and number", "c++": "int main() { cin >> n ; int count = 0 ; for ( int i = 1 ; i <= n ; i ++ ) int votes = 0 ; for ( int j = 1 ; j <= 3 ; j ++ ) cin >> temp ; votes += temp ; if ( votes >= 2 ) count ++ ; } cout << count << endl ; } int n , Petya , Vasya , Tonya , number ( 0 ) ; }"}}
{"translation": {"en": "read n [ENDL] decrement n and loop further , while n ! = 0 [ENDL] read Petya , Vasya and Tonya from the user input [ENDL] if Petya + Vasya + Tonya > = 2 , add 1 to number [ENDL] print number [ENDL] declare integer n", "c++": "int main() { cin >> n ; while ( n -- ) cin >> Petya >> Vasya >> Tonya ; if ( Petya + Vasya + Tonya >= 2 ) { number += 1 ; } cout << number << endl ; } int n ; return 0; }"}}
{"translation": {"en": "read n [ENDL] declare integers i , j , k , cnt1 , cnt = 0 [ENDL] for i = 0 to n exclusive [ENDL] let cnt1 be 0 [ENDL] for j = 0 to 3 exclusive [ENDL] read k [ENDL] if k is 1 , increment cnt1 [ENDL] if cnt1 is greater than 1 , increment cnt [ENDL] print cnt , newline [ENDL] in function find taking an int x and an int array father", "c++": "int main() { cin >> n ; int i , j , k , cnt1 , cnt = 0 ; for ( i = 0 ; i < n ; i ++ ) cnt1 = 0 ; for ( j = 0 ; j < 3 ; j ++ ) cin >> k ; if ( k == 1 ) cnt1 ++ ; if ( cnt1 > 1 ) cnt ++ ; } cout << cnt << endl ; } int find ( int x , int father [ ] ) return 0; }"}}
{"translation": {"en": "return x if father [ x ] is x [ENDL] set father [ x ] to find of father [ x ] and father then return father [ x ] [ENDL] n = int [ENDL] read n [ENDL] s = string [ENDL] read s [ENDL] yes = int with yes = 0 [ENDL] for i = 0 to length of s - 1 [ENDL] if s [ i ] is not s [ i + 1 ] [ENDL] set yes to 1 [ENDL] print \" YES \" [ENDL] print s [ i ] and s [ i + 1 ] [ENDL] print \" NO \" [ENDL] s = array of 1005 integers", "c++": "if ( father [ x ] == x ) return x ; return father [ x ] = find ( father [ x ] , father ) ; int n ; } int main() { cin >> n ; string s ; cin >> s ; int yes = 0 ; for ( int i = 0 ; i < s . length ( ) - 1 ; i ++ ) if ( s [ i ] != s [ i + 1 ] ) yes = 1 ; cout << \" YES\\n \" ; cout << s . substr ( i , 2 ) << \" \\n \" ; cout << \" NO\\n \" ; return 0; } } char s [ 1005 ] ; }"}}
{"translation": {"en": "n = integer [ENDL] Read n [ENDL] Read s [ENDL] bj = integer with 1 [ENDL] for i = 0 to n - 1 exclusive [ENDL] if s [ i + 1 ] is not s [ i ] [ENDL] print YES and a new line [ENDL] print s [ i ] , s [ i + 1 ] and a new line [ENDL] set bj to 0 [ENDL] Terminate the loop [ENDL] if bj is not 0 , then print NO and a new line [ENDL] create int n", "c++": "int n ; int main() { cin >> n ; cin >> s ; int bj = 1 ; for ( int i = 0 ; i < n - 1 ; i ++ ) if ( s [ i + 1 ] != s [ i ] ) cout << \" YES \" << endl ; cout << s [ i ] << s [ i + 1 ] << endl ; bj = 0 ; break ; if ( bj ) { cout << \" NO \" << endl ; } } } int n ; }"}}
{"translation": {"en": "read n [ENDL] create string x [ENDL] read x [ENDL] for i = 1 to size of x exclusive [ENDL] if x [ i ] different from x [ i - 1 ] [ENDL] print YES [ENDL] print x [ i - 1 ] and x [ i ] [ENDL] print NO and a newline [ENDL] create int n", "c++": "int main() { cin >> n ; string x ; cin >> x ; for ( int i = 1 ; i < x . size ( ) ; i ++ ) if ( x [ i ] != x [ i - 1 ] ) cout << \" YES \" << endl ; cout << x [ i - 1 ] << x [ i ] << endl ; cout << \" NO \" << endl ; return 0; } } int n ; return 0; }"}}
{"translation": {"en": "read input to n [ENDL] declare string g [ENDL] read g [ENDL] for i from 0 to n - 1 exclusive [ENDL] if g [ i ] ! = g [ i + 1 ] [ENDL] print \" YES \" [ENDL] print substring of g from position i with length 2 [ENDL] print \" NO \" [ENDL] set maxn = 2e5 + 5", "c++": "int main() { cin >> n ; string g ; cin >> g ; for ( int i = 0 ; i < n - 1 ; i ++ ) if ( g [ i ] != g [ i + 1 ] ) cout << \" YES \" << endl ; cout << g . substr ( i , 2 ) << endl ; cout << \" NO \" << endl ; return 0; } } const int maxn = 2e5 + 5 ; return 0; }"}}
{"translation": {"en": "create long long array a of length maxn [ENDL] create long long b [ maxn ] [ENDL] let str be string [ENDL] create int n [ENDL] read n [ENDL] read str [ENDL] set flag to true [ENDL] for i = 1 to length of str [ENDL] if str [ i - 1 ] different from str [ i ] [ENDL] print YES [ENDL] flag = false [ENDL] print str [ i - 1 ] and str [ i ] [ENDL] break the loop [ENDL] if flaf different from 0 , print NO [ENDL] create int n", "c++": "long long a [ maxn ] ; long long b [ maxn ] ; string str ; int main() { int n ; cin >> n ; cin >> str ; bool flag = true ; for ( int i = 1 ; i < str . length ( ) ; i ++ ) if ( str [ i - 1 ] != str [ i ] ) cout << \" YES \" << endl ; flag = false ; cout << str [ i - 1 ] << str [ i ] << endl ; break ; if ( flag ) cout << \" NO \" << endl ; } } int n ; return 0; }"}}
{"translation": {"en": "read n [ENDL] create string s [ENDL] read s [ENDL] for i = 0 to n - 1 exclusive [ENDL] if s [ i ] different from s [ i + 1 ] [ENDL] print YES [ENDL] print substring of s of length 2 starting from i [ENDL] print NO and a newline [ENDL] inf function max taking two ints a and b and returning an int", "c++": "int main() { cin >> n ; string s ; cin >> s ; for ( int i = 0 ; i < n - 1 ; ++ i ) if ( s [ i ] != s [ i + 1 ] ) cout << \" YES \" << endl ; cout << s . substr ( i , 2 ) << endl ; cout << \" NO \" << endl ; return 0; } } int max ( int a , int b ) return 0; }"}}
{"translation": {"en": "return a if it is greater than b else return b [ENDL] n = int [ENDL] s = string [ENDL] loop while reading n [ENDL] read s [ENDL] if n equals 1 [ENDL] print \" NO \" [ENDL] continue loop [ENDL] for i = 1 to size of s [ENDL] if s [ i ] does not equal s [ i - 1 ] [ENDL] print \" YES \" [ENDL] print s [ i - 1 ] then s [ i ] [ENDL] call exit with 0 [ENDL] print \" NO \" [ENDL] n = int", "c++": "return a > b ? a : b ; int n ; } int main() { string s ; while ( cin >> n ) cin >> s ; if ( n == 1 ) cout << \" NO \" << endl ; continue ; for ( int i = 1 ; i < s . size ( ) ; i ++ ) } if ( s [ i ] != s [ i - 1 ] ) cout << \" YES \" << endl ; cout << s [ i - 1 ] << s [ i ] << endl ; exit ( 0 ) ; cout << \" NO \" << endl ; } } int n ; } return 0; }"}}
{"translation": {"en": "str = string [ENDL] read n then str [ENDL] for i = 1 to n - 1 inclusive [ENDL] if str [ i ] is not s [ i - 1 ] [ENDL] print \" YES \" [ENDL] print str [ i - 1 ] then str [ i ] [ENDL] print \" NO \" [ENDL] n = int", "c++": "int main() { string str ; cin >> n >> str ; for ( int i = 1 ; i <= n - 1 ; i ++ ) if ( str [ i ] != str [ i - 1 ] ) cout << \" YES \" << endl ; cout << str [ i - 1 ] << str [ i ] << endl ; cout << \" NO \" << endl ; return 0; } } int n ; }"}}
{"translation": {"en": "str = string [ENDL] read n then str [ENDL] for i = 1 to n [ENDL] if str [ i ] is not str [ i - 1 ] [ENDL] print \" YES \" [ENDL] print str [ i - 1 ] then str [ i ] [ENDL] print \" NO \" [ENDL] str = string", "c++": "int main() { string str ; cin >> n >> str ; for ( int i = 1 ; i < n ; i ++ ) if ( str [ i ] != str [ i - 1 ] ) cout << \" YES \" << endl ; cout << str [ i - 1 ] << str [ i ] << endl ; cout << \" NO \" << endl ; return 0; } } string str ; }"}}
{"translation": {"en": "n = integer [ENDL] read n [ENDL] read str [ENDL] flag = integer with flag = 0 [ENDL] temp = integer [ENDL] for i = 0 to str . length ( ) - 1 exclusive [ENDL] if str [ i ] is not str [ i + 1 ] [ENDL] flag = 1 [ENDL] temp = i [ENDL] break loop [ENDL] if flag is 0 [ENDL] print NO [ENDL] else [ENDL] print YES [ENDL] print str [ temp ] and str [ temp + 1 ] [ENDL] create int n", "c++": "int n ; int main() { cin >> n ; cin >> str ; int flag = 0 ; int temp ; for ( int i = 0 ; i < str . length ( ) - 1 ; i ++ ) if ( str [ i ] != str [ i + 1 ] ) flag = 1 ; temp = i ; break ; if ( flag == 0 ) } } cout << \" NO \" << endl ; else cout << \" YES \" << endl ; cout << str [ temp ] << str [ temp + 1 ] << endl ; int n ; } return 0; }"}}
{"translation": {"en": "create string s [ENDL] read n and s [ENDL] for i = 0 to length of s - 1 exclusive [ENDL] if ss [ i ] different from s [ i + 1 ] [ENDL] print YES , a newline , s [ i ] , s [ i + 1 ] and a newline [ENDL] print NO and a newline [ENDL] create int n", "c++": "int main() { string s ; cin >> n >> s ; for ( int i = 0 ; i < s . length ( ) - 1 ; i ++ ) if ( s [ i ] != s [ i + 1 ] ) cout << \" YES\\n \" << s [ i ] << s [ i + 1 ] << \" \\n \" ; cout << \" NO\\n \" ; return 0; } } int n ; return 0; }"}}
{"translation": {"en": "create string s [ENDL] read n and s [ENDL] for i = 0 to n exclusive [ENDL] if s [ i ] different from s [ i - 1 ] [ENDL] print YES and a newline , s [ i - 1 ] , s [ i ] [ENDL] print NO [ENDL] create integers t , cp , ck , with cp = 1 , ck = 0", "c++": "int main() { string s ; cin >> n >> s ; for ( int i = 1 ; i < n ; i ++ ) if ( s [ i ] != s [ i - 1 ] ) cout << \" YES\\n \" << s [ i - 1 ] << s [ i ] << endl ; cout << \" NO \" << endl ; return 0; } } int t , cp = 1 , ck = 0 ; }"}}
{"translation": {"en": "read t [ENDL] create string s [ENDL] read s [ENDL] if t is 1 , set cp to 0 [ENDL] for i = 0 to t - 1 exclusive [ENDL] if s [ i ] is not s [ i + 1 ] [ENDL] set ck to 1 [ENDL] print \" YES \" print newline [ENDL] print s [ i ] print s [ i + 1 ] print newline [ENDL] break loop [ENDL] else [ENDL] set cp to 0 [ENDL] if cp is 0 and ck is 0 , print \" NO \" print newline [ENDL] in function max that returns an integer and takes arguments a , b = integers", "c++": "int main() { cin >> t ; string s ; cin >> s ; if ( t == 1 ) cp = 0 ; for ( int i = 0 ; i < t - 1 ; i ++ ) if ( s [ i ] != s [ i + 1 ] ) ck = 1 ; cout << \" YES \" << endl ; cout << s [ i ] << s [ i + 1 ] << endl ; break ; else cp = 0 ; if ( cp == 0 && ck == 0 ) cout << \" NO \" << endl ; } int max ( int a , int b ) }"}}
{"translation": {"en": "return the greater of a and b [ENDL] n = integer [ENDL] s = string [ENDL] while read n [ENDL] read s [ENDL] if n equals 1 [ENDL] print NO [ENDL] continue [ENDL] for i = 1 to the size of s exclusive [ENDL] if s [ i ] does not equal s [ i - 1 ] [ENDL] print YES [ENDL] print s [ i - 1 ] s [ i ] [ENDL] exit program with success [ENDL] print NO [ENDL] create integers N , x , i , with x = 0", "c++": "return a > b ? a : b ; int n ; } int main() { string s ; while ( cin >> n ) cin >> s ; if ( n == 1 ) cout << \" NO \" << endl ; continue ; for ( int i = 1 ; i < s . size ( ) ; i ++ ) } if ( s [ i ] != s [ i - 1 ] ) cout << \" YES \" << endl ; cout << s [ i - 1 ] << s [ i ] << endl ; exit ( 0 ) ; cout << \" NO \" << endl ; } } int N , x = 0 , i ; } return 0; }"}}
{"translation": {"en": "read N [ENDL] create string s [ENDL] read s [ENDL] for i = 0 to N - 1 exclusive [ENDL] if s [ i ] is not s [ i + 1 ] [ENDL] print \" YES \" print newline [ENDL] print s [ i ] print s [ i + 1 ] print newline [ENDL] increment x [ENDL] break loop [ENDL] if x is 0 , print \" NO \" print newline [ENDL] declare solve with no arguments , returning void", "c++": "int main() { cin >> N ; string s ; cin >> s ; for ( i = 0 ; i < ( N - 1 ) ; i ++ ) if ( s [ i ] != s [ i + 1 ] ) cout << \" YES \" << endl ; cout << s [ i ] << s [ i + 1 ] << endl ; x ++ ; break ; if ( x == 0 ) cout << \" NO \" << endl ; } } void solve ( ) return 0; }"}}
{"translation": {"en": "create long long n [ENDL] read n [ENDL] create string s [ENDL] read s [ENDL] if n is 1 [ENDL] print \" NO \" print ' \\ n ' [ENDL] else [ENDL] for i = 1 to n exclusive [ENDL] if s [ i ] is not s [ i - 1 ] [ENDL] print \" YES \" print ' \\ n ' [ENDL] print s [ i - 1 ] print s [ i ] print ' \\ n ' [ENDL] return from function [ENDL] print \" NO \" print ' \\ n ' [ENDL] create long long TESTS with TESTS = 1 [ENDL] while decrement TESTS , run solve [ENDL] let MAX , mod be constant integers with MAX = 2e6 , mod = 998244353", "c++": "long long n ; cin >> n ; string s ; cin >> s ; if ( n == 1 ) cout << \" NO \" << ' \\n ' ; else for ( long long i = 1 ; i < n ; i ++ ) if ( s [ i ] != s [ i - 1 ] ) cout << \" YES \" << ' \\n ' ; cout << s [ i - 1 ] << s [ i ] << ' \\n ' ; return ; cout << \" NO \" << ' \\n ' ; } } long long TESTS = 1 ; } } int main() { while ( TESTS -- ) { solve ( ) ; } const int MAX = 2e6 , mod = 998244353 ; return 0; }"}}
{"translation": {"en": "let n , m be integers [ENDL] read n , m [ENDL] if not n and not m [ENDL] print NO and newline [ENDL] else if absolute of ( n - m ) < = 1 [ENDL] print YES and newline [ENDL] else do the following [ENDL] print NO and newline [ENDL] a , b = integers", "c++": "int n , m ; int main() { cin >> n >> m ; if ( ! n && ! m ) puts ( \" NO \" ) ; else if ( abs ( n - m ) <= 1 ) puts ( \" YES \" ) ; else puts ( \" NO \" ) ; int a , b ; }"}}
{"translation": {"en": "Read a , b [ENDL] if a OR b and absolute value of ( a - b ) is less than or equal to 1 [ENDL] print YES and a new line [ENDL] else do the following [ENDL] print NO and a new line [ENDL] n , m = integers", "c++": "int main() { cin >> a >> b ; if ( ( a || b ) && abs ( a - b ) <= 1 ) cout << \" YES\\n \" ; else cout << \" NO\\n \" ; int n , m ; return 0; }"}}
{"translation": {"en": "Read n [ENDL] Read m [ENDL] if n is 0 and m is 0 [ENDL] print NO and a new line [ENDL] else if absolute value of n - m is less than or equal to 1 [ENDL] print YES and a new line [ENDL] else do the following [ENDL] print NO and a new line [ENDL] let a , b be integers", "c++": "int main() { cin >> n ; cin >> m ; if ( n == 0 && m == 0 ) cout << \" NO \" << endl ; else if ( abs ( n - m ) <= 1 ) cout << \" YES \" << endl ; else cout << \" NO \" << endl ; int a , b ; return 0; }"}}
{"translation": {"en": "read a , b [ENDL] print YES and newline if absolute value of ( b - a ) < = 1 and ( b is not equal to 0 or a is not equal to 0 ) else print NO and newline [ENDL] declare constant integer MAX with value 100001", "c++": "int main() { cin >> a >> b ; cout << ( abs ( b - a ) <= 1 && ( b != 0 || a != 0 ) ? \" YES\\n \" : \" NO\\n \" ) ; const int MAX = 100001 ; return 0; }"}}
{"translation": {"en": "declare integer arrays An and Bn with size MAX [ENDL] declare new int variables a and b [ENDL] read variables a and b from the input [ENDL] if abs ( a - b ) < = 1 [ENDL] if a and b are both 0 [ENDL] print \" NO \" [ENDL] else [ENDL] print \" YES \" to the output [ENDL] else [ENDL] print \" NO \" [ENDL] create ints n and m", "c++": "int An [ MAX ] , Bn [ MAX ] ; int a , b ; int main() { cin >> a >> b ; if ( abs ( a - b ) <= 1 ) if ( a == 0 && b == 0 ) cout << \" NO \" << endl ; else cout << \" YES \" << endl ; else cout << \" NO \" << endl ; int n , m ; return 0; }"}}
{"translation": {"en": "read n from the input [ENDL] read user input to m [ENDL] if n and m are 0 [ENDL] print \" NO \" [ENDL] else if abs ( n - m ) < = 1 [ENDL] print \" YES \" [ENDL] else [ENDL] print \" NO \" [ENDL] N is a new constant integer = 2e5 + 12", "c++": "int main() { cin >> n ; cin >> m ; if ( n == 0 && m == 0 ) cout << \" NO \" << endl ; else if ( abs ( n - m ) <= 1 ) cout << \" YES \" << endl ; else cout << \" NO \" << endl ; const int N = 2e5 + 12 ; return 0; }"}}
{"translation": {"en": "new constant integer INF with value 1e9 [ENDL] declare constant integer called MOD = 998244353 [ENDL] create new array of integers mas with N elements [ENDL] ind is a new set of unique integers [ENDL] declare new integer variables a and b [ENDL] read variables a and b from the input [ENDL] if abs ( a - b ) > 1 or a and b are both false [ENDL] print \" NO \" to the standard output [ENDL] else [ENDL] print \" YES \" [ENDL] n . m = int", "c++": "const int INF = 1e9 ; const int MOD = 998244353 ; int mas [ N ] ; set < int > ind ; int a , b ; int main() { cin >> a >> b ; if ( abs ( a - b ) > 1 || ( ! a && ! b ) ) cout << \" NO \" << endl ; else cout << \" YES \" << endl ; int n , m ; }"}}
{"translation": {"en": "read n , m [ENDL] a = n - m = int [ENDL] if a is non zero negative the decrement a by a [ENDL] if a < = 1 and a isn ' 0 or m isn ' t 0 [ENDL] print YES [ENDL] else [ENDL] print NO [ENDL] let a , b be integers", "c++": "int main() { cin >> n >> m ; int a = n - m ; if ( a < 0 ) a = - a ; if ( a <= 1 && ( n || m ) ) cout << \" YES \" << endl ; else cout << \" NO \" << endl ; int a , b ; return 0; }"}}
{"translation": {"en": "read a , b [ENDL] if absolute value of ( a - b ) < = 1 and ( a | b ) [ENDL] print YES and newline [ENDL] else do the following [ENDL] print NO and newline [ENDL] let a , b be integers", "c++": "int main() { cin >> a >> b ; if ( abs ( a - b ) <= 1 && ( a | b ) ) cout << \" YES \" << endl ; else cout << \" NO \" << endl ; int a , b ; return 0; }"}}
{"translation": {"en": "read a , b [ENDL] if a is equal to b and b is equal to 0 [ENDL] print NO [ENDL] otherwise [ENDL] if abs is equal to 0 or abs is equal to 1 [ENDL] print YES [ENDL] otherwise [ENDL] print NO [ENDL] create int a and b", "c++": "int main() { cin >> a >> b ; if ( a == 0 && b == 0 ) cout << \" NO \" << endl ; else if ( abs ( a - b ) == 0 || abs ( a - b ) == 1 ) cout << \" YES \" << endl ; else cout << \" NO \" << endl ; int a , b ; } } }"}}
{"translation": {"en": "read a and b [ENDL] if abs ( a - b ) < = 1 and a or b different from 0 [ENDL] print YES [ENDL] else [ENDL] print NO [ENDL] create int a and b", "c++": "int main() { cin >> a >> b ; if ( ( abs ( a - b ) <= 1 ) && ( a != 0 || b != 0 ) ) cout << \" YES \" << endl ; else cout << \" NO \" << endl ; int a , b ; return 0; }"}}
{"translation": {"en": "read a and b [ENDL] if a and b = 0 [ENDL] print NO [ENDL] else if and of ( a - b ) < 2 [ENDL] print YES [ENDL] else [ENDL] print NO [ENDL] create int a and b", "c++": "int main() { cin >> a >> b ; if ( a == 0 && b == 0 ) cout << \" NO \" << endl ; else if ( abs ( a - b ) < 2 ) cout << \" YES \" << endl ; else cout << \" NO \" << endl ; int a , b ; return 0; }"}}
{"translation": {"en": "read a and b [ENDL] if abs of b - a < = 1 and b or a different from 0 [ENDL] print YES [ENDL] else [ENDL] print NO [ENDL] function esPosible ( get int a and b , return bool )", "c++": "int main() { cin >> a >> b ; if ( abs ( b - a ) <= 1 && ( b != 0 || a != 0 ) ) cout << \" YES \" << endl ; else cout << \" NO \" << endl ; bool esPosible ( int a , int b ) } return 0; }"}}
{"translation": {"en": "if a is 0 and b is 0 return false [ENDL] if a - b > 1 return false [ENDL] if b - a > 1 return false [ENDL] return true [ENDL] a , b = int [ENDL] read a , b [ENDL] if esPosible ( a , b ) [ENDL] print YES [ENDL] else [ENDL] print NO [ENDL] nEven , nOdd = integers", "c++": "if ( a == 0 && b == 0 ) return false ; if ( a - b > 1 ) return false ; if ( b - a > 1 ) return false ; return true ; int a , b ; } int main() { cin >> a >> b ; if ( esPosible ( a , b ) ) cout << \" YES \" << endl ; else cout << \" NO \" << endl ; int nEven , nOdd ; }"}}
{"translation": {"en": "read nEven , nOdd [ENDL] if ( nOdd is 0 and nEven is 0 ) [ENDL] print NO [ENDL] if ( nOdd - nEven > = - 1 and nOdd - nEven < = 1 ) [ENDL] print YES [ENDL] else [ENDL] print NO [ENDL] declare new int variables a , b and x", "c++": "int main() { cin >> nOdd >> nEven ; if ( nOdd == 0 && nEven == 0 ) cout << \" NO\\n \" ; if ( nOdd - nEven >= - 1 && nOdd - nEven <= 1 ) return 0; } cout << \" YES\\n \" ; else cout << \" NO\\n \" ; int a , b , x ; return 0; }"}}
{"translation": {"en": "read user input to a and b [ENDL] if a or b = 0 [ENDL] print \" NO \" [ENDL] else [ENDL] assign the absolute value of a - b to x [ENDL] if x is 1 or 0 [ENDL] print \" YES \" to the standard output [ENDL] else [ENDL] print \" NO \" [ENDL] let a , b be integers", "c++": "int main() { cin >> a >> b ; if ( a == 0 && b == 0 ) cout << \" NO \" << endl ; else x = abs ( a - b ) ; if ( x == 1 || x == 0 ) cout << \" YES \" << endl ; else cout << \" NO \" << endl ; int a , b ; } }"}}
{"translation": {"en": "read a , b [ENDL] print YES and newline if absolute value of ( a - b ) < = 1 and a + b is greater than 0 else print NO and newline [ENDL] declare new int variables a and b", "c++": "int main() { cin >> a >> b ; cout << ( abs ( a - b ) <= 1 && a + b > 0 ? \" YES\\n \" : \" NO\\n \" ) ; int a , b ; return 0; }"}}
{"translation": {"en": "read from the input to a and b [ENDL] if ( a = b or abs ( a - b ) = 1 ) and ( a and b are not 0 ) [ENDL] print \" YES \" [ENDL] else [ENDL] print \" NO \" to the standard output [ENDL] a , b = integers", "c++": "int main() { cin >> a >> b ; if ( ( a == b || abs ( a - b ) == 1 ) && ( a != 0 || b != 0 ) ) cout << \" YES \" << endl ; else cout << \" NO \" << endl ; int a , b ; return 0; }"}}
{"translation": {"en": "Read a , b [ENDL] if absolute value of a - b is less than or equal to 1 and a is greater than 0 OR b is greater than 0 [ENDL] print YES and a new line [ENDL] else do the following [ENDL] print NO and a new line [ENDL] ev , od = int", "c++": "int main() { cin >> a >> b ; if ( abs ( a - b ) <= 1 && ( a > 0 || b > 0 ) ) cout << \" YES \" << endl ; else cout << \" NO \" << endl ; int ev , od ; }"}}
{"translation": {"en": "loop while reading ev then od [ENDL] if fabs of ( ev - od ) < = 1 and ( ev is not 0 or od is not 0 ) [ENDL] print \" YES \" [ENDL] else [ENDL] print \" NO \" [ENDL] a , b = int", "c++": "int main() { while ( cin >> ev >> od ) if ( fabs ( ev - od ) <= 1 && ( ev != 0 || od != 0 ) ) cout << \" YES \" << endl ; else cout << \" NO \" << endl ; int a , b ; } return 0; }"}}
{"translation": {"en": "read a then b [ENDL] if not a and not b [ENDL] print \" NO \" [ENDL] else if absolute of a - b < = 1 [ENDL] print \" YES \" [ENDL] else [ENDL] print \" NO \" [ENDL] n , m = integers", "c++": "int main() { cin >> a >> b ; if ( ! a && ! b ) cout << \" NO\\n \" ; else if ( abs ( a - b ) <= 1 ) cout << \" YES\\n \" ; else cout << \" NO\\n \" ; int n , m ; return 0; }"}}
{"translation": {"en": "while reading values n , m [ENDL] if n is 0 and m is 0 [ENDL] print NO and a new line [ENDL] else if absolute value of n - m is less than or equal to 1 [ENDL] print YES and a new line [ENDL] else do the following [ENDL] print NO and a new line [ENDL] a , b = int", "c++": "int main() { while ( cin >> n >> m ) if ( n == 0 && m == 0 ) cout << \" NO \" << endl ; else if ( abs ( n - m ) <= 1 ) cout << \" YES \" << endl ; else cout << \" NO \" << endl ; int a , b ; } return 0; }"}}
{"translation": {"en": "read a and b [ENDL] if a = b and abs of a - b = 1 then [ENDL] if a or b are both not 0 [ENDL] print YES [ENDL] else [ENDL] print NO [ENDL] else [ENDL] print NO [ENDL] declare new integer variables a and b", "c++": "int main() { cin >> a >> b ; if ( a == b || abs ( a - b ) == 1 ) if ( a != 0 || b != 0 ) cout << \" YES \" << endl ; else cout << \" NO \" << endl ; else cout << \" NO \" << endl ; int a , b ; return 0; }"}}
{"translation": {"en": "read a and b from the user input [ENDL] print \" YES \" if absolute value of ( a - b ) < = 1 and a + b ! = 0 or \" NO \" otherwise [ENDL] create new integers a and b", "c++": "int main() { cin >> a >> b ; cout << ( abs ( a - b ) <= 1 && a + b ? \" YES \" : \" NO \" ) << endl ; int a , b ; }"}}
{"translation": {"en": "read variables a and b from the input [ENDL] if absolute value of a - b = 1 [ENDL] print \" YES \" to the standard output [ENDL] else if a = b and ( a and b ! = 0 ) [ENDL] print \" YES \" [ENDL] else [ENDL] print \" NO \" to the output stream [ENDL] a , b = short int", "c++": "int main() { cin >> a >> b ; if ( abs ( a - b ) == 1 ) cout << \" YES \" << endl ; else if ( a == b && ( a != 0 && b != 0 ) ) cout << \" YES \" << endl ; else cout << \" NO \" << endl ; short int a , b ; } return 0; }"}}
{"translation": {"en": "read a , b [ENDL] if a + b > 0 and abs ( a - b ) < = 1 [ENDL] print YES [ENDL] else [ENDL] print NO [ENDL] n = long long", "c++": "cin >> a >> b ; int main() { if ( a + b > 0 && abs ( a - b ) <= 1 ) cout << \" YES \" << ' \\n ' ; else cout << \" NO \" << ' \\n ' ; long long n ; return 0; }"}}
{"translation": {"en": "read n [ENDL] v = long long vector of size n [ENDL] read the first n elements of v [ENDL] ans = long long vector [ENDL] for long long i = 0 to n exclusive [ENDL] x = long long = v at i [ENDL] smallasn = 0 = lon glong [ENDL] j = 0 = long long [ENDL] for j = = to n exclusive [ENDL] if v [ i + j ] = x [ENDL] increment smallans [ENDL] else [ENDL] exit loop [ENDL] increment i by j - 1 [ENDL] push back smallans into ans [ENDL] final = 0 = long long [ENDL] for long long i = 0 to size of ans , increment final by ( ans [ i ] * ( ans [ i ] + 1 ) ) / 2 [ENDL] print final [ENDL] make const long long int INF = ( 1ll < < 62 ) - 1", "c++": "int main() { cin >> n ; vector < long long > v ( n ) ; for ( long long i = 0 ; i < n ; i ++ ) cin >> v [ i ] ; vector < long long > ans ; for ( long long i = 0 ; i < n ; i ++ ) long long x = v [ i ] ; long long smallans = 0 ; long long j = 0 ; for ( j = 0 ; i + j < n ; j ++ ) if ( v [ i + j ] == x ) smallans ++ ; else break ; i = i + j - 1 ; } } ans . push_back ( smallans ) ; long long final = 0 ; } for ( long long i = 0 ; i < ans . size ( ) ; i ++ ) { final = final + ( ans [ i ] * ( ans [ i ] + 1 ) ) / 2 ; } cout << final << \" \\n \" ; const long long INF = ( 1ll << 62 ) - 1 ; }"}}
{"translation": {"en": "create const int M = 1e5 + 5 [ENDL] create long long int array ar of size 100005 [ENDL] make long long ints cnt = 1 , tot , and res [ENDL] make integer n [ENDL] read n [ENDL] for i = 0 to n exclusive , read ar [ i ] [ENDL] for i = 1 to n exclusive [ENDL] if ar [ i ] is equal to ar [ i - 1 ] [ENDL] increment cnt [ENDL] else do [ENDL] set tot to ( cnt * ( cnt + 1 ) ) / 2 [ENDL] set res to res + tot [ENDL] set cnt to 1 [ENDL] add ( cnt * ( cnt + 1 ) ) / 2 to res [ENDL] show res [ENDL] n = int", "c++": "const int M = 1e5 + 5 ; long long ar [ 100005 ] ; long long cnt = 1 , tot , res ; int n ; int main() { cin >> n ; for ( int i = 0 ; i < n ; i ++ ) { cin >> ar [ i ] ; } for ( int i = 1 ; i < n ; i ++ ) if ( ar [ i ] == ar [ i - 1 ] ) cnt ++ ; else tot = ( cnt * ( cnt + 1 ) ) / 2 ; res += tot ; cnt = 1 ; res += ( cnt * ( cnt + 1 ) ) / 2 ; } } cout << res << endl ; int n ; }"}}
{"translation": {"en": "read n [ENDL] a = array of n int [ENDL] for i = 0 to n exclusive read a [ i ] [ENDL] v = vector of long long [ENDL] cnt = 1 [ENDL] for i = 1 to n exclusive [ENDL] if a [ i ] is a [ i - 1 ] [ENDL] increment cnt [ENDL] else [ENDL] add cnt at end of v [ENDL] cnt = 1 [ENDL] add cnt at end of v [ENDL] ans = 0 [ENDL] for i = 0 to size of v exclusive add v [ i ] * ( v [ i ] + 1 ) / 2 to ans [ENDL] print ans [ENDL] s = stack of int", "c++": "int main() { cin >> n ; int a [ n ] ; for ( int i = 0 ; i < n ; i ++ ) { cin >> a [ i ] ; } vector < long long > v ; int cnt = 1 ; for ( int i = 1 ; i < n ; i ++ ) if ( a [ i ] == a [ i - 1 ] ) cnt ++ ; else v . push_back ( cnt ) ; cnt = 1 ; v . push_back ( cnt ) ; } } long long ans = 0 ; for ( int i = 0 ; i < v . size ( ) ; i ++ ) { ans += ( v [ i ] * ( v [ i ] + 1 ) / 2 ) ; } cout << ans << endl ; stack < int > s ; return 0; }"}}
{"translation": {"en": "ans , cnt = 0 [ENDL] n , x = int [ENDL] read n [ENDL] for i = 0 to n exclusive [ENDL] read x [ENDL] cnt = 0 [ENDL] while s it not empty and first item of s is not x [ENDL] increment cnt [ENDL] pop first item of s [ENDL] if s is empty or first item of s is x push x into s [ENDL] add ( cnt - 1 ) * cnt / 2 to ans [ENDL] cnt = 0 [ENDL] while s is not empty [ENDL] increment cnt [ENDL] pop first item of s [ENDL] add ( cnt - 1 ) * cnt / 2 to ans [ENDL] add n to ans [ENDL] print ans [ENDL] create long long ints n , sum = 0 , and cnt = 1 and int array a of size 100005", "c++": "long long ans = 0 , cnt = 0 ; int main() { int n , x ; cin >> n ; for ( int i = 0 ; i < n ; i ++ ) cin >> x ; cnt = 0 ; while ( ! s . empty ( ) && s . top ( ) != x ) cnt ++ ; s . pop ( ) ; if ( s . empty ( ) || s . top ( ) == x ) s . push ( x ) ; } ans += ( cnt - 1 ) * cnt / 2 ; cnt = 0 ; } while ( ! s . empty ( ) ) cnt ++ ; s . pop ( ) ; ans += ( cnt - 1 ) * cnt / 2 ; } ans += n ; cout << ans << endl ; long long n , a [ 100005 ] , sum = 0 , cnt = 1 ; return 0; }"}}
{"translation": {"en": "read n [ENDL] for i = 1 to n [ENDL] read a [ i ] [ENDL] if a [ 1 ] is equal to 0 , set a [ 0 ] to 1 [ENDL] if a [ i ] is equal to a [ i - 1 ] [ENDL] set sum to sum + cnt [ENDL] increment cnt [ENDL] else do [ENDL] set cnt to 1 [ENDL] set n to n + sum [ENDL] print n [ENDL] make long long int n", "c++": "int main() { cin >> n ; for ( long long i = 1 ; i <= n ; i ++ ) cin >> a [ i ] ; if ( a [ 1 ] == 0 ) a [ 0 ] = 1 ; if ( a [ i ] == a [ i - 1 ] ) sum += cnt ; cnt ++ ; else cnt = 1 ; n = n + sum ; } cout << n << endl ; long long n ; return 0; }"}}
{"translation": {"en": "read n [ENDL] create long long vector v of size n [ENDL] for i = 0 to n exclusive , read v [ i ] [ENDL] create long long j = i [ENDL] make long long int ans = n [ENDL] for i = 0 to n exclusive [ENDL] set j to i + 1 [ENDL] while j is less than n and v [ j ] is equal to v [ i ] [ENDL] make long long lon = j - i [ENDL] set ans to ans + long * ( long - 1 ) / 2 [ENDL] set i to j [ENDL] show ans [ENDL] abs = long long function taking long long , long long", "c++": "int main() { cin >> n ; vector < long long > v ( n ) ; for ( long long i = 0 ; i < n ; i ++ ) { cin >> v [ i ] ; } long long j = 1 ; long long ans = n ; for ( long long i = 0 ; i < n ; ) j = i + 1 ; while ( j < n && v [ j ] == v [ i ] ) { j ++ ; } long long lon = j - i ; ans += lon * ( lon - 1 ) / 2 ; i = j ; cout << ans << \" \\n \" ; } long long abs ( long long , long long ) ; }"}}
{"translation": {"en": "in void function solve [ENDL] n = long long [ENDL] read n [ENDL] a [ n ] , ans = 0 be long long [ENDL] read the first n elements of a [ENDL] t = 1 = long long [ENDL] for long long i = 0 to n exclusive [ENDL] if i = n - 1 [ENDL] increment ans [ENDL] else [ENDL] if a [ i ] = a [ i + 1 ] [ENDL] if i = n - 2 [ENDL] increment t [ENDL] increment ans by t * ( t + 1 ) / 2 [ENDL] exit loop [ENDL] increment t [ENDL] else [ENDL] increment ans by [ENDL] t * ( t + 1 ) / 2 [ENDL] print ans [ENDL] TESTS = 1 = long long [ENDL] while decrementing TESTS , call solve [ENDL] in long long function abs taking long long a and long long b [ENDL] if a > b [ENDL] return a - b [ENDL] else [ENDL] return b - a [ENDL] n , m , i , j , ans , c = long long int , a = array of 100005 long long int", "c++": "void solve ( ) long long n ; cin >> n ; long long a [ n ] , ans = 0 ; for ( long long i = 0 ; i < n ; i ++ ) { cin >> a [ i ] ; } long long t = 1 ; for ( long long i = 0 ; i < n ; i ++ ) if ( i == n - 1 ) ans ++ ; else if ( a [ i ] == a [ i + 1 ] ) if ( i == n - 2 ) t ++ ; ans += ( t * ( t + 1 ) ) / 2 ; break ; t ++ ; } else ans += ( t * ( t + 1 ) ) / 2 ; t = 1 ; cout << ans << \" \\n \" ; } } } long long TESTS = 1 ; } int main() { while ( TESTS -- ) { solve ( ) ; } long long abs ( long long a , long long b ) return 0; } if ( a > b ) return a - b ; else return b - a ; long long int n , m , i , j , a [ 100005 ] , ans , c ; }"}}
{"translation": {"en": "read n [ENDL] ans = n [ENDL] a [ n ] = 1000000005 [ENDL] for i = 0 to n exclusive read a [ i ] [ENDL] c = 1 [ENDL] for i = 0 to n exclusive [ENDL] if a [ i ] is a [ i + 1 ] [ENDL] increment c [ENDL] else [ENDL] add c * ( c - 1 ) / 2 to ans [ENDL] c = 1 [ENDL] print ans [ENDL] define empty function boost", "c++": "cin >> n ; int main() { ans = n ; a [ n ] = 1000000005 ; for ( i = 0 ; i < n ; i ++ ) cin >> a [ i ] ; c = 1 ; for ( i = 0 ; i < n ; i ++ ) if ( a [ i ] == a [ i + 1 ] ) c ++ ; else ans = ans + ( c * ( c - 1 ) ) / 2 ; c = 1 ; cout << ans << endl ; } } void boost ( ) { } }"}}
{"translation": {"en": "n = int [ENDL] read n [ENDL] arr = long long int array of size n [ENDL] read n values into arr [ENDL] ans = long long int with ans = 0 [ENDL] till = long long int with till = 0 [ENDL] for i = 0 to n [ENDL] if ( i + 1 < n ) and ( arr [ i ] is arr [ i + 1 ] ) [ENDL] increment till [ENDL] else [ENDL] increment till [ENDL] increment ans by ( ( till * ( till + 1ll ) ) / 2ll ) [ENDL] set till to 0 [ENDL] print ans [ENDL] new long long variable n", "c++": "int n ; int main() { cin >> n ; long long int arr [ n ] ; for ( int i = 0 ; i < n ; i ++ ) cin >> arr [ i ] ; long long int ans = 0 ; long long int till = 0 ; for ( int i = 0 ; i < n ; i ++ ) if ( ( i + 1 < n ) && ( arr [ i ] == arr [ i + 1 ] ) ) till ++ ; else till ++ ; ans += ( ( till * ( till + 1ll ) ) / 2ll ) ; till = 0 ; cout << ans << endl ; } } long long n ; }"}}
{"translation": {"en": "read n [ENDL] create new vector of long longs v with size n filled with 0 [ENDL] declare vector of long longs sum with n elements filled with 0 [ENDL] in a for loop , change i from 0 to n exclusive [ENDL] read standard input to v [ i ] [ENDL] if i > 0 and v [ i - 1 ] = v [ i ] , change sum [ i ] to the sum of sum [ i ] and sum [ i - 1 ] [ENDL] increment sum [ i ] by one [ENDL] create long long variable with name ans = 0 [ENDL] start for loop from i = 0 to n exclusive incrementing i [ENDL] increment ans [ENDL] if i > 0 and v [ i ] = v [ i - 1 ] , change ans to ans + sum [ i - 1 ] [ENDL] print ans [ENDL] declare constant integer INF with value 0x3f3f3f3f", "c++": "int main() { cin >> n ; vector < long long > v ( n , 0 ) ; vector < long long > sum ( n , 0 ) ; for ( long long i = 0 ; i < n ; i ++ ) cin >> v [ i ] ; if ( i > 0 && v [ i - 1 ] == v [ i ] ) sum [ i ] += sum [ i - 1 ] ; sum [ i ] ++ ; long long ans = 0 ; } for ( long long i = 0 ; i < n ; i ++ ) ans ++ ; if ( i > 0 && v [ i ] == v [ i - 1 ] ) { ans += sum [ i - 1 ] ; } cout << ans << endl ; } const int INF = 0x3f3f3f3f ; }"}}
{"translation": {"en": "define an arrays of long longs a and b with 100000 + 5 elements [ENDL] declare long long variables i , j , k and l with l = 0 [ENDL] declare new long longs n and m [ENDL] read user input to n [ENDL] read input to n new elements of a in a loop [ENDL] change k to 0 [ENDL] declare new integer variable cou = 0 [ENDL] in a for loop , change i from 1 to n exclusive incrementing i [ENDL] if a [ i ] = a [ k ] [ENDL] increment cou by one [ENDL] else [ENDL] if cou is true , change the value of b [ l ] to cou + 1 and increment l [ENDL] assign the new value = 0 to cou [ENDL] change k to i [ENDL] if i is equal to n - 1 [ENDL] if cou is true , set b [ l ] to cou + 1 and increment l [ENDL] declare new long long variable s = n [ENDL] start for loop from i = 0 to l exclusive , changing s to the sum of s and b [ i ] * ( b [ i ] - 1 ) / 2 on each loop [ENDL] print s [ENDL] Fast_Read_Out is a void function", "c++": "long long a [ 100000 + 5 ] , b [ 100000 + 5 ] ; long long i , j , k , l = 0 ; int main() { long long n , m ; cin >> n ; for ( i = 0 ; i < n ; i ++ ) cin >> a [ i ] ; k = 0 ; int cou = 0 ; for ( i = 1 ; i < n ; i ++ ) if ( a [ i ] == a [ k ] ) cou ++ ; else if ( cou ) b [ l ++ ] = cou + 1 ; cou = 0 ; k = i ; if ( i == n - 1 ) } if ( cou ) b [ l ++ ] = cou + 1 ; long long s = n ; } } for ( i = 0 ; i < l ; i ++ ) s += b [ i ] * ( b [ i ] - 1 ) / 2 ; cout << s << endl ; void Fast_Read_Out ( ) { } return 0; }"}}
{"translation": {"en": "void function Random [ENDL] seed is a new unsigned integer variable [ENDL] asm ( \" rdtsc \" : \" = A \" ( seed ) ) [ENDL] initialize random number generator with the value of seed [ENDL] unsigned integer function Time [ENDL] create new unsigned integer variable time = clock ( ) / 1000 . 00 [ENDL] return time [ENDL] create constant integer inf with value 1e9 + 123 [ENDL] assign value 1e5 + 123 to the new constant integer N [ENDL] s is a set of integers [ENDL] let d be a map from integers to integers [ENDL] a is a new array of integers with N elements [ENDL] Calc is a long long function with int argument x [ENDL] return ( x squared - x ) / 2 [ENDL] call Random ( ) [ENDL] call Fast_Read_Out ( ) [ENDL] declare integer n [ENDL] read from the input to n [ENDL] read n elements into a starting from the index 1 [ENDL] declare new long long variables ans and res = 0 [ENDL] for i from 2 to n inclusive [ENDL] if a [ i ] = a [ i - 1 ] [ENDL] increment res [ENDL] change ans to the sum of ans and res [ENDL] else [ENDL] change the value of res to 0 [ENDL] print ans + n to the standard output [ENDL] n = integer", "c++": "void Random ( ) unsigned int seed ; asm ( \" rdtsc \" : \" =A \" ( seed ) ) ; srand ( seed ) ; unsigned int Time ( ) } unsigned int time = clock ( ) / 1000.00 ; return time ; const int inf = int ( 1e9 ) + 123 ; } const int N = int ( 1e5 ) + 123 ; set < int > s ; map < int , int > d ; int a [ N ] ; long long Calc ( int x ) return ( x * x - x ) / 2 ; Random ( ) ; } int main() { Fast_Read_Out ( ) ; int n ; cin >> n ; for ( int i = 1 ; i <= n ; i ++ ) cin >> a [ i ] ; long long ans = 0 , res = 0 ; for ( int i = 2 ; i <= n ; i ++ ) if ( a [ i ] == a [ i - 1 ] ) res ++ ; ans += res ; else res = 0 ; cout << ans + n << endl ; } int n ; }"}}
{"translation": {"en": "s = string [ENDL] read n and s [ENDL] ans = string with value of \" \" [ENDL] i = integer [ENDL] flag = integer with value of 1 [ENDL] for i = 0 to n - 1 exclusive [ENDL] if not flag break [ENDL] if s [ i + 1 ] is greater than or equal to s [ i ] [ENDL] increase ans by s [ i ] [ENDL] else [ENDL] set flag to 0 [ENDL] if not flag [ENDL] for i to n exclusive increase ans by s [ i ] [ENDL] print ans [ENDL] let n be a integer", "c++": "int main() { string s ; cin >> n >> s ; string ans = \"  \" ; int i ; int flag = 1 ; for ( i = 0 ; i < n - 1 ; i ++ ) if ( ! flag ) break ; if ( s [ i + 1 ] >= s [ i ] ) ans += s [ i ] ; else flag = 0 ; if ( ! flag ) } } for ( ; i < n ; i ++ ) { ans += s [ i ] ; } cout << ans << endl ; int n ; }"}}
{"translation": {"en": "let s be a string [ENDL] let t , flag be integers with flag value as 0 [ENDL] read n , s [ENDL] for ( i = 0 to s . length ( ) ) , increase i value by 1 [ENDL] if ( ith element in array s is greater than [ i + 1 ] th element of array s ) [ENDL] flag value is equal to 1 [ENDL] t is equal to i [ENDL] stop [ENDL] if ( flag is equal to 0 ) [ENDL] for ( integer i = 0 to s . length ( ) - 1 ) , print ith element in array s [ENDL] print endline [ENDL] else do the following [ENDL] for ( integer i = 0 to s . length ( ) ) [ENDL] if ( i is equal to t ) , proceed to next [ENDL] print ith element of array s [ENDL] print newline [ENDL] integer function find with integer arguments x and father", "c++": "int main() { string s ; int t , flag = 0 ; cin >> n >> s ; for ( int i = 0 ; i < s . length ( ) ; i ++ ) if ( s [ i ] > s [ i + 1 ] ) flag = 1 ; t = i ; break ; if ( flag == 0 ) } } for ( int i = 0 ; i < s . length ( ) - 1 ; i ++ ) { cout << s [ i ] ; } cout << endl ; else for ( int i = 0 ; i < s . length ( ) ; i ++ ) if ( i == t ) continue ; cout << s [ i ] ; cout << endl ; } int find ( int x , int father [ ] ) } return 0; }"}}
{"translation": {"en": "if father [ x ] = x return x [ENDL] return father [ x ] = find ( father [ x ] , father ) [ENDL] declare integer called n [ENDL] read n [ENDL] declare string called s [ENDL] read s [ENDL] let pos be integer = 0 [ENDL] for integer i = 1 to n exclusive [ENDL] if s [ i ] is less than s [ i - 1 ] [ENDL] set value of pos to i - 1 [ENDL] break the loop [ENDL] else [ENDL] set value of pos to i [ENDL] erase 1 character at pos from s [ENDL] print s and \" \\ n \" [ENDL] create integer n", "c++": "if ( father [ x ] == x ) return x ; return father [ x ] = find ( father [ x ] , father ) ; int n ; } int main() { cin >> n ; string s ; cin >> s ; int pos = 0 ; for ( int i = 1 ; i < n ; i ++ ) if ( s [ i ] < s [ i - 1 ] ) pos = i - 1 ; break ; else pos = i ; s . erase ( pos , 1 ) ; } } cout << s << \" \\n \" ; int n ; }"}}
{"translation": {"en": "create string s [ENDL] read n read s [ENDL] create integer pos with pos = n - 1 [ENDL] for i = 0 to n - 1 exclusive [ENDL] if s [ i ] is greater than s [ i + 1 ] [ENDL] set pos to i [ENDL] break loop [ENDL] print substring of s from 0 to pos + substring of s from pos + 1 print newline [ENDL] declare inline MAX2 with long long a , long long integer b as arguments , returning long long", "c++": "int main() { string s ; cin >> n >> s ; int pos = n - 1 ; for ( int i = 0 ; i < n - 1 ; ++ i ) if ( s [ i ] > s [ i + 1 ] ) pos = i ; break ; cout << s . substr ( 0 , pos ) + s . substr ( pos + 1 ) << endl ; } } inline long long MAX2 ( long long a , long long int b ) return 0; }"}}
{"translation": {"en": "return a if a is greater than b , else b , from function [ENDL] declare inline MAX3 with long longs a , b , c as arguments , returning long long [ENDL] return ( a ) is greater than ( b ) ternary ( ( a ) is greater than ( c ) ternary ( a ) : ( c ) ) : ( ( b ) is greater than ( c ) ternary ( b ) : ( c ) ) from function [ENDL] declare inline MIN2 with long longs a , b as arguments , returning long long [ENDL] return a if a is greater than b , else b , from function [ENDL] declare inline MIN3 with long longs a , b , c as arguments , returning long long [ENDL] ( a ) is less than ( b ) ternary ( ( a ) is less than ( c ) ternary ( a ) : ( c ) ) : ( ( b ) is less than ( c ) ternary ( b ) : ( c ) ) [ENDL] create integer n [ENDL] read n [ENDL] create string s [ENDL] read s [ENDL] create integers temp , result , with result = n - 1 [ENDL] for i = 1 to n exclusive [ENDL] set temp to integer casted s [ i ] - integer casted s [ i - 1 ] [ENDL] if temp is less than 0 [ENDL] set result to i - 1 [ENDL] break loop [ENDL] for i = 0 to n exclusive [ENDL] if i is not result , print s [ i ] [ENDL] print newline [ENDL] create long long n", "c++": "return ( a ) > ( b ) ? ( a ) : ( b ) ; inline long long MAX3 ( long long a , long long b , long long c ) } return ( a ) > ( b ) ? ( ( a ) > ( c ) ? ( a ) : ( c ) ) : ( ( b ) > ( c ) ? ( b ) : ( c ) ) ; inline long long MIN2 ( long long a , long long b ) } return ( a ) < ( b ) ? ( a ) : ( b ) ; inline long long MIN3 ( long long a , long long b , long long c ) } return ( a ) < ( b ) ? ( ( a ) < ( c ) ? ( a ) : ( c ) ) : ( ( b ) < ( c ) ? ( b ) : ( c ) ) ; int n ; } int main() { cin >> n ; string s ; cin >> s ; int temp , result = n - 1 ; for ( int i = 1 ; i < n ; i ++ ) temp = ( int ) s [ i ] - ( int ) s [ i - 1 ] ; if ( temp < 0 ) result = i - 1 ; break ; for ( int i = 0 ; i < n ; i ++ ) } } if ( i != result ) cout << s [ i ] ; cout << endl ; } long long n ; }"}}
{"translation": {"en": "read n [ENDL] create string s [ENDL] read s [ENDL] create long long check = n - 1 [ENDL] for long long i = 0 to n - 1 exclusive [ENDL] if s [ i ] is greater than s [ i + 1 ] [ENDL] assign value of i to check [ENDL] stop the loop [ENDL] for i = 0 to n exclusive [ENDL] if check ! = i , print s [ i ] [ENDL] print new line [ENDL] set stdout output decimal precision to 10", "c++": "int main() { cin >> n ; string s ; cin >> s ; long long check = n - 1 ; for ( long long i = 0 ; i < n - 1 ; i ++ ) if ( s [ i ] > s [ i + 1 ] ) check = i ; break ; for ( long long i = 0 ; i < n ; i ++ ) } } if ( check != i ) cout << s [ i ] ; cout << endl ; cout . precision ( 10 ) ; return 0; }"}}
{"translation": {"en": "set stdout floatfield format flag to fixed [ENDL] declare long long variable n [ENDL] read n [ENDL] create string s [ENDL] read s [ENDL] declare long long variable pos = n - 1 [ENDL] for i = 1 to n exclusive [ENDL] if s [ i ] is less than s [ i - 1 ] , set pos to min of pos and i - 1 [ENDL] remove 1 character at position pos from s [ENDL] print s [ENDL] create integer t", "c++": "int main() { cout << fixed ; long long n ; cin >> n ; string s ; cin >> s ; long long pos = n - 1 ; for ( long long i = 1 ; i < n ; i ++ ) if ( s [ i ] < s [ i - 1 ] ) { pos = min ( pos , i - 1 ) ; } s . erase ( pos , 1 ) ; } cout << s << endl ; int t ; return 0; }"}}
{"translation": {"en": "read t [ENDL] create string s [ENDL] read s [ENDL] for i = 0 to t exclusive [ENDL] if s [ i ] is greater than s [ i + 1 ] [ENDL] set s [ i ] to 1 [ENDL] break loop [ENDL] for i = 0 to t exclusive [ENDL] if s [ i ] is greater than or equal to ' a ' and s [ i ] is less than or equal to ' z ' , print s [ i ] [ENDL] print newline [ENDL] s = string", "c++": "int main() { cin >> t ; string s ; cin >> s ; for ( int i = 0 ; i < t ; i ++ ) if ( s [ i ] > s [ i + 1 ] ) s [ i ] = 1 ; break ; for ( int i = 0 ; i < t ; i ++ ) } } if ( s [ i ] >= ' a ' && s [ i ] <= ' z ' ) cout << s [ i ] ; cout << endl ; } string s ; }"}}
{"translation": {"en": "f = bool set f = 1 [ENDL] n = integer [ENDL] read n , s [ENDL] for i = 0 to ( n - 1 ) exclusive [ENDL] if s [ i ] > s [ i + 1 ] and f > 0 [ENDL] f = 0 [ENDL] else [ENDL] print s [ i ] [ENDL] if f = 0 print s [ n - 1 ] [ENDL] print newline [ENDL] declare integer variable n", "c++": "int main() { bool f = 1 ; int n ; cin >> n >> s ; for ( int i = 0 ; i < int ( n - 1 ) ; i ++ ) if ( s [ i ] > s [ i + 1 ] && f ) f = 0 ; else cout << s [ i ] ; if ( ! f ) cout << s [ n - 1 ] ; } } cout << \" \\n \" ; int n ; return 0; }"}}
{"translation": {"en": "declare string variable ss [ENDL] read n and ss [ENDL] declare integer variable in = - 1 [ENDL] for i = 0 to n - 1 exclusive [ENDL] if ss [ i ] is greater than ss [ i + 1 ] [ENDL] assign value of i to in [ENDL] stop the loop [ENDL] decrement n if in = - 1 [ENDL] for i = 0 to n exclusive [ENDL] if i ! = in print ss [ i ] [ENDL] print new line [ENDL] n = integer", "c++": "int main() { string ss ; cin >> n >> ss ; int in = - 1 ; for ( int i = 0 ; i < n - 1 ; i ++ ) if ( ss [ i ] > ss [ i + 1 ] ) in = i ; break ; if ( in == - 1 ) n -- ; } } for ( int i = 0 ; i < n ; i ++ ) if ( i != in ) cout << ss [ i ] ; cout << endl ; } int n ; return 0; }"}}
{"translation": {"en": "let s be a string [ENDL] read n and s [ENDL] set pos to n - 1 [ENDL] for i = 0 to n - 1 exclusive incrementing by 1 at the start of each iteration [ENDL] if s [ i ] is greater than s [ i + 1 ] [ENDL] assign i to pos [ENDL] break [ENDL] print s . substr ( 0 , pos ) + s . substr ( pos + 1 ) [ENDL] declare integer n", "c++": "int main() { string s ; cin >> n >> s ; int pos = n - 1 ; for ( int i = 0 ; i < n - 1 ; ++ i ) if ( s [ i ] > s [ i + 1 ] ) pos = i ; break ; cout << s . substr ( 0 , pos ) + s . substr ( pos + 1 ) << endl ; } } int n ; }"}}
{"translation": {"en": "declare string str [ENDL] read n and str [ENDL] for integer i = 0 to n exclusive [ENDL] if str [ i ] is greater than str [ i + 1 ] [ENDL] remove 1 character from position i from str [ENDL] break the loop [ENDL] print str [ENDL] declare integer variable n", "c++": "int main() { string str ; cin >> n >> str ; for ( int i = 0 ; i < n ; i ++ ) if ( str [ i ] > str [ i + 1 ] ) str . erase ( i , 1 ) ; break ; cout << str << endl ; } } int n ; return 0; }"}}
{"translation": {"en": "create string en [ENDL] read n [ENDL] read en [ENDL] declare integer variables i and j [ENDL] for i = 0 to n - 1 exclusive [ENDL] if en [ i ] is greater than en [ i + 1 ] [ENDL] print i elements of en [ENDL] for j = i + 1 to n exclusive print en [ j ] [ENDL] break the loop [ENDL] if i = n - 1 [ENDL] print i elements of en [ENDL] print new line [ENDL] declare integer n", "c++": "int main() { string en ; cin >> n ; cin >> en ; int i , j ; for ( i = 0 ; i < n - 1 ; i ++ ) if ( en [ i ] > en [ i + 1 ] ) for ( j = 0 ; j < i ; j ++ ) cout << en [ j ] ; for ( j = i + 1 ; j < n ; j ++ ) cout << en [ j ] ; break ; if ( i == n - 1 ) } } for ( j = 0 ; j < i ; j ++ ) cout << en [ j ] ; cout << endl ; } int n ; return 0; }"}}
{"translation": {"en": "read n [ENDL] create string s [ENDL] read s [ENDL] create boolean p = 0 [ENDL] for integer i = 0 to n - 1 exclusive [ENDL] if s [ i ] is greater than s [ i + 1 ] [ENDL] p = 1 [ENDL] break the loop [ENDL] if p is 0 [ENDL] for integer i = 0 to n - 1 exclusive [ENDL] print new line [ENDL] for i = 0 to n - 1 exclusive [ENDL] if s [ i ] is greater than s [ i + 1 ] [ENDL] for integer j = i + 1 to n exclusive print s [ j ] [ENDL] print new line [ENDL] print s [ i ] [ENDL] declare string s", "c++": "int main() { cin >> n ; string s ; cin >> s ; bool p = 0 ; for ( int i = 0 ; i < n - 1 ; i ++ ) if ( s [ i ] > s [ i + 1 ] ) p = 1 ; break ; if ( ! p ) } } for ( int i = 0 ; i < n - 1 ; i ++ ) { cout << s [ i ] ; } cout << endl ; for ( int i = 0 ; i < n - 1 ; i ++ ) return 0; } if ( s [ i ] > s [ i + 1 ] ) for ( int j = i + 1 ; j < n ; j ++ ) { cout << s [ j ] ; } cout << endl ; cout << s [ i ] ; return 0; } string s ; } return 0; }"}}
{"translation": {"en": "declare integer n [ENDL] read s [ENDL] for i = 0 to size of s exclusive [ENDL] if s [ i ] is ' 1 ' [ENDL] for j = i to size of s exclusive [ENDL] if s [ j ] is ' 0 ' , increment n [ENDL] if n is greater than or equal to 6 [ENDL] print \" yes \" , newline [ENDL] else [ENDL] print \" no \" , newline [ENDL] print \" no \" , newline [ENDL] s = string array", "c++": "int n ; cin >> s ; int main() { for ( int i = 0 ; i < s . size ( ) ; i ++ ) if ( s [ i ] == ' 1 ' ) for ( int j = i ; j < s . size ( ) ; j ++ ) if ( s [ j ] == ' 0 ' ) { n ++ ; } if ( n >= 6 ) } cout << \" yes \" << endl ; else cout << \" no \" << endl ; cout << \" no \" << endl ; } return 0; } } string s ; return 0; }"}}
{"translation": {"en": "read s [ENDL] integer as c = 0 , k = 0 [ENDL] ans = no = string array [ENDL] reverse the sequence of string s [ENDL] if s . length is less than 7 then do the following [ENDL] output ans [ENDL] else [ENDL] for i = 0 to less than s . length ( ) do the following [ENDL] if s [ i ] is 0 then do the following [ENDL] add one to c [ENDL] if c is 6 then do the following [ENDL] set k to i [ENDL] break [ENDL] if k is not equal to 0 then do the following [ENDL] for j = k + 1 to less than s . length ( ) do the following [ENDL] if s [ j ] is 1 then do the following [ENDL] set ans to yes [ENDL] break [ENDL] else [ENDL] continue [ENDL] output ans [ENDL] declare string s", "c++": "int main() { cin >> s ; int c = 0 , k = 0 ; string ans = \" no \" ; reverse ( s . begin ( ) , s . end ( ) ) ; if ( s . length ( ) < 7 ) cout << ans << endl ; else for ( int i = 0 ; i < s . length ( ) ; i ++ ) if ( s [ i ] == ' 0 ' ) c ++ ; if ( c == 6 ) k = i ; break ; if ( k != 0 ) } } } for ( int j = k + 1 ; j < s . length ( ) ; j ++ ) if ( s [ j ] == ' 1 ' ) ans = \" yes \" ; break ; else continue ; cout << ans << endl ; } } } string s ; } return 0; }"}}
{"translation": {"en": "read s [ENDL] declare string ans = \" no \" [ENDL] if size of s is less than 7 [ENDL] print ans and newline [ENDL] else [ENDL] declare integer k = 0 [ENDL] reverse sort from beginning of s to end of s [ENDL] declare integer count = 0 , i = 0 [ENDL] while count is less than 6 and i is less than size of s [ENDL] if s [ i ] is ' 0 ' [ENDL] increment count [ENDL] let k be i [ENDL] increment i [ENDL] if k is not 0 and count is 6 [ENDL] for i = k + 1 to size of s exclusive [ENDL] if s [ i ] is ' 1 ' [ENDL] let ans be \" yes ' [ENDL] end loop [ENDL] else [ENDL] end current loop [ENDL] else [ENDL] let ans be \" no \" [ENDL] print ans and newline [ENDL] make char array a of size 101", "c++": "int main() { cin >> s ; string ans = \" no \" ; if ( s . size ( ) < 7 ) cout << ans << endl ; else int k = 0 ; reverse ( s . begin ( ) , s . end ( ) ) ; int count = 0 , i = 0 ; while ( count < 6 && i < s . size ( ) ) if ( s [ i ] == ' 0 ' ) count ++ ; k = i ; i ++ ; } if ( k != 0 && count == 6 ) } for ( int i = k + 1 ; i < s . size ( ) ; i ++ ) if ( s [ i ] == ' 1 ' ) ans = \" yes \" ; break ; else continue ; else } } ans = \" no \" ; cout << ans << endl ; } char a [ 101 ] ; } return 0; }"}}
{"translation": {"en": "read a [ENDL] make ints x = 0 and y = 0 [ENDL] for i = 0 while a [ i ] is not ' \\ 0 ' [ENDL] make integer flag = 0 [ENDL] if a [ i ] is equal to ' 1 ' [ENDL] for j = i + 1 while a [ j ] is not ' \\ 0 ' [ENDL] if a [ j ] is equal to ' 0 ' , increment x [ENDL] if x is equal to 6 , break loop [ENDL] set flag to 1 [ENDL] if flag is equal to 1 , break loop [ENDL] is x is greater than or equal to 6 [ENDL] print \" yes \" [ENDL] else [ENDL] output \" no \" [ENDL] declare string s", "c++": "int main() { cin >> a ; int x = 0 , y = 0 ; for ( int i = 0 ; a [ i ] != ' \\0 ' ; i ++ ) int flag = 0 ; if ( a [ i ] == ' 1 ' ) for ( int j = i + 1 ; a [ j ] != ' \\0 ' ; j ++ ) if ( a [ j ] == ' 0 ' ) x ++ ; if ( x == 6 ) break ; flag = 1 ; } if ( flag == 1 ) { break ; } } if ( x >= 6 ) } cout << \" yes \" << endl ; else cout << \" no \" << endl ; string s ; } return 0; }"}}
{"translation": {"en": "while read s is true [ENDL] while s [ 0 ] is ' 0 ' , remove from 0 to 1 from s [ENDL] while bitwise not first index of \" 1 \" in s is true , remove from first index of \" 1 \" in s to 1 in s [ENDL] if size of s is greater than or equal to 6 [ENDL] print \" yes \" and newline [ENDL] else [ENDL] print \" no \" and newline [ENDL] create new string s", "c++": "int main() { while ( cin >> s ) while ( s [ 0 ] == ' 0 ' ) s . erase ( 0 , 1 ) ; while ( ~ s . find ( \" 1 \" ) ) s . erase ( s . find ( \" 1 \" ) , 1 ) ; if ( s . size ( ) >= 6 ) cout << \" yes \" << endl ; else cout << \" no \" << endl ; string s ; } return 0; }"}}
{"translation": {"en": "read standard input to s [ENDL] define integer n [ENDL] in a for loop , change i from 0 to n exclusive incrementing i [ENDL] declare new integer called c = 0 [ENDL] if s [ i ] - ' 0 ' is true [ENDL] for integer j = i + 1 to n exclusive incrementing j [ENDL] if s [ j ] - ' 0 ' = 0 , increment c by one [ENDL] if c > = 6 [ENDL] print \" yes \" [ENDL] print \" no \" to the standard output [ENDL] create character variable", "c++": "int main() { cin >> s ; int n = s . size ( ) ; for ( int i = 0 ; i < n ; i ++ ) int c = 0 ; if ( s [ i ] - ' 0 ' ) for ( int j = i + 1 ; j < n ; j ++ ) if ( s [ j ] - ' 0 ' == 0 ) c ++ ; if ( c >= 6 ) cout << \" yes \" << endl ; cout << \" no \" << endl ; return 0; } } } char a ; return 0; }"}}
{"translation": {"en": "integer as n , b = 0 [ENDL] set a to getchar ( ) [ENDL] if a is not equal to \\ n then do the following [ENDL] set ( a = 1 ) and ( b to 1 ) [ENDL] if b and a is 0 then do the following n + + [ENDL] set a to getchar ( ) [ENDL] if n is greater than or equal to 6 then return write yes to stdout [ENDL] write no to stdout [ENDL] s = string", "c++": "int n , b = 0 ; a = getchar ( ) ; int main() { while ( a != ' \\n ' ) ( a == ' 1 ' ) && ( b = 1 ) ; if ( b && a == ' 0 ' ) n ++ ; a = getchar ( ) ; if ( n >= 6 ) return puts ( \" yes \" ) , 0 ; puts ( \" no \" ) ; } string s ; return 0; }"}}
{"translation": {"en": "read s [ENDL] first_one = - 1 [ENDL] for i = 0 to length of s exclusive [ENDL] if s [ i ] is ' 1 ' [ENDL] first_one = i [ENDL] break [ENDL] if first_one is - 1 [ENDL] print \" no \" [ENDL] total = 0 [ENDL] for i = first_one + 1 to length of s exclusive [ENDL] if s [ i ] is ' 0 ' increment total [ENDL] if total > = 6 [ENDL] print \" yes \" [ENDL] else [ENDL] print \" no \" [ENDL] create string s", "c++": "int main() { cin >> s ; long long first_one = - 1 ; for ( long long i = 0 ; i < s . length ( ) ; ++ i ) if ( s [ i ] == ' 1 ' ) first_one = i ; break ; if ( first_one == - 1 ) } } cout << \" no\\n \" ; long long total = 0 ; return 0; } for ( long long i = first_one + 1 ; i < s . length ( ) ; ++ i ) if ( s [ i ] == ' 0 ' ) { total ++ ; } if ( total >= 6 ) } cout << \" yes\\n \" ; else cout << \" no\\n \" ; string s ; } return 0; }"}}
{"translation": {"en": "read from the input to s [ENDL] define new integers len = length of s , ipos and cnt = 0 [ENDL] start for loop from ipos = 0 to len exclusive [ENDL] if s [ ipos ] is equal to ' 1 ' , stop the loop [ENDL] if ipos = len , return puts ( \" no \" ) , 0 [ENDL] increment ipos and start a loop , while ipos < len , incrementing ipos by 1 on each iteration [ENDL] increment cnt if s [ ipos ] = ' 0 ' [ENDL] print \" yes \" if nt > = 6 or \" no \" otherwise [ENDL] a , n = integers", "c++": "int main() { cin >> s ; int len = s . length ( ) , ipos , cnt = 0 ; for ( ipos = 0 ; ipos < len ; ++ ipos ) if ( s [ ipos ] == ' 1 ' ) break ; if ( ipos == len ) return puts ( \" no \" ) , 0 ; for ( ++ ipos ; ipos < len ; ++ ipos ) if ( s [ ipos ] == ' 0 ' ) ++ cnt ; puts ( ( cnt >= 6 ) ? \" yes \" : \" no \" ) ; int a , n ; }"}}
{"translation": {"en": "p = character [ENDL] while reading p [ENDL] if a is equal to 0 [ENDL] if p is equal to 1 , then set a to 1 [ENDL] else do the following [ENDL] if p is equal to 0 , then increment n [ENDL] if n is greater than or equal to 6 [ENDL] print yes and a new line [ENDL] else do the following [ENDL] print no and a new line [ENDL] p = string", "c++": "char p ; while ( cin >> p ) int main() { if ( a == 0 ) if ( p == ' 1 ' ) a = 1 ; else if ( p == ' 0 ' ) n ++ ; if ( n >= 6 ) } } cout << \" yes \" << endl ; else cout << \" no \" << endl ; string p ; } return 0; }"}}
{"translation": {"en": "read p [ENDL] y = 0 = int [ENDL] while p [ y ] is ' 0 ' increment y [ENDL] rsp = 0 = int [ENDL] for i = y + 1 to size of p exclusive increment i after , increment rsp by ( p [ i ] = = ' 0 ' ) [ENDL] if rsp > = 6 [ENDL] print yes [ENDL] else [ENDL] print no [ENDL] make string s", "c++": "int main() { cin >> p ; int y = 0 ; while ( p [ y ] == ' 0 ' ) y ++ ; int rsp = 0 ; for ( int i = y + 1 ; i < p . size ( ) ; i ++ ) rsp += ( p [ i ] == ' 0 ' ) ; if ( rsp >= 6 ) cout << \" yes \" << endl ; else cout << \" no \" << endl ; string s ; } }"}}
{"translation": {"en": "read s [ENDL] for i = 0 to s . length ( ) exclusive [ENDL] if s [ i ] is equal to ' 1 ' [ENDL] make integer sum = 0 [ENDL] for j = i + 1 to s . length ( ) exclusive [ENDL] if s [ j ] is equal to ' 0 ' , increment sum [ENDL] if sum is greater than or equal to 6 [ENDL] print \" yes \" [ENDL] break loop [ENDL] show \" no \" [ENDL] integer as array dx = 0 , 0 , - 1 , 1", "c++": "int main() { cin >> s ; for ( int i = 0 ; i < s . length ( ) ; i ++ ) if ( s [ i ] == ' 1 ' ) int sum = 0 ; for ( int j = i + 1 ; j < s . length ( ) ; j ++ ) if ( s [ j ] == ' 0 ' ) sum ++ ; if ( sum >= 6 ) cout << \" yes \" << endl ; break ; return 0; } cout << \" no \" << endl ; } int dx [ 4 ] = { 0 , 0 , - 1 , 1 } ; return 0; }"}}
{"translation": {"en": "integer as array dy = 1 , - 1 , 0 , 0 [ENDL] s = string array [ENDL] read s [ENDL] integer as i0 = - 1 , i1 = - 1 , cnt = 0 [ENDL] for i = s . size ( ) - 1 to greater than or equal to 0 do the following [ENDL] if s [ i ] is 0 then add one to cnt [ENDL] if cnt is 6 then do [ENDL] set i0 to i [ENDL] break [ENDL] for i = 0 to less than s . size do the following [ENDL] if s [ i ] is 1 then do the following [ENDL] set i1 to i [ENDL] break [ENDL] if i1 is - 1 or i0 then do the following [ENDL] output no [ENDL] if i1 is greater than or equal to i0 then do the following [ENDL] output no [ENDL] output yes [ENDL] n , k = integers", "c++": "int dy [ 4 ] = { 1 , - 1 , 0 , 0 } ; string s ; int main() { cin >> s ; int i0 = - 1 , i1 = - 1 , cnt = 0 ; for ( int i = s . size ( ) - 1 ; i >= 0 ; i -= 1 ) if ( s [ i ] == ' 0 ' ) cnt ++ ; if ( cnt == 6 ) i0 = i ; break ; for ( int i = 0 ; i < s . size ( ) ; i += 1 ) } } if ( s [ i ] == ' 1 ' ) i1 = i ; break ; if ( i1 == - 1 || i0 == - 1 ) } cout << \" no\\n \" ; if ( i1 >= i0 ) return 0; } cout << \" no\\n \" ; cout << \" yes\\n \" ; return 0; } int n , k ; }"}}
{"translation": {"en": "Read n and k [ENDL] print maximum value of 0 and 3 * n - k and a new line [ENDL] TOLL be a constant double 1e - 9", "c++": "int main() { cin >> n >> k ; cout << max ( 0 , 3 * n - k ) << endl ; const double TOLL = 1e-9 ; }"}}
{"translation": {"en": "memo is an integer array [ENDL] recur is an integer function [ENDL] if n , k both equal 0 , return 0 [ENDL] if n equal 0 , return 1000 [ENDL] if k equal 0 , return 1000 [ENDL] if memo [ n ] [ k ] not equal - 1 , return memo [ n ] [ k ] [ENDL] rv is integer 1000 [ENDL] for integer i = 2 to 5 inclusive [ENDL] if i is less than or equal to k [ENDL] integer now equals recur ( n - 1 , k - i ) [ENDL] if i equals 2 , increase now by 1 [ENDL] rv = min ( now , rv ) [ENDL] return memo [ n ] [ k ] equals rv [ENDL] memset ( memo , - 1 , sizeof memo ) [ENDL] n , k be integers [ENDL] while read n , k , print recur ( n , k ) and newline [ENDL] dpis long long array of 52 rows , 252 columns", "c++": "int memo [ 51 ] [ 255 ] ; int recur ( int n , int k ) if ( n == 0 && k == 0 ) return 0 ; if ( n == 0 ) return 1000 ; if ( k == 0 ) return 1000 ; if ( memo [ n ] [ k ] != - 1 ) return memo [ n ] [ k ] ; int rv = 1000 ; for ( int i = 2 ; i <= 5 ; i ++ ) if ( i <= k ) int now = recur ( n - 1 , k - i ) ; if ( i == 2 ) now ++ ; rv = min ( now , rv ) ; return memo [ n ] [ k ] = rv ; } memset ( memo , - 1 , sizeof memo ) ; } int main() { int n , k ; while ( cin >> n >> k ) { cout << recur ( n , k ) << endl ; } long long dp [ 52 ] [ 252 ] ; }"}}
{"translation": {"en": "f is a function of long long integer [ENDL] if slot equals 0 [ENDL] if n equals 0 [ENDL] else [ENDL] return 1e10 [ENDL] if dp [ slot ] [ n ] not equals - 1 , return dp [ slot ] [ n ] [ENDL] ans is a long long value equal to 1e10 [ENDL] for integer i = 2 to 5 inclusive [ENDL] if i is 2 [ENDL] ans equals minimum of ans , 1 + f ( slot - 1 , n - i ) [ENDL] else [ENDL] ans equals minimum of ans , f ( slot - 1 , n - i ) [ENDL] return dp [ slot ] [ n ] equals ans [ENDL] n , k are long long values [ENDL] read n , k [ENDL] memory set of dp , - 1 , sizeof ( dp ) [ENDL] print f ( n , k ) and newline [ENDL] n , k are integers", "c++": "long long f ( long long slot , long long n ) if ( slot == 0 ) if ( n == 0 ) else return 0; return 1e10 ; if ( dp [ slot ] [ n ] != - 1 ) return dp [ slot ] [ n ] ; } long long ans = 1e10 ; for ( int i = 2 ; i <= 5 ; i ++ ) if ( i == 2 ) ans = min ( ans , 1 + f ( slot - 1 , n - i ) ) ; else ans = min ( ans , f ( slot - 1 , n - i ) ) ; return dp [ slot ] [ n ] = ans ; } long long n , k ; } int main() { cin >> n >> k ; memset ( dp , - 1 , sizeof ( dp ) ) ; cout << f ( n , k ) << endl ; int n , k ; }"}}
{"translation": {"en": "read n , k [ENDL] if n * 3 is greater than or equal to k [ENDL] print 0 and endline [ENDL] else [ENDL] print 0 and endline [ENDL] n , k = int", "c++": "int main() { cin >> n >> k ; if ( n * 3 >= k ) cout << n * 3 - k << endl ; else cout << 0 << endl ; int n , k ; return 0; }"}}
{"translation": {"en": "read n , k [ENDL] if 3 * n - k > 0 [ENDL] print 3 * n - k [ENDL] else [ENDL] print 0 [ENDL] n , k = int", "c++": "int main() { cin >> n >> k ; if ( 3 * n - k > 0 ) cout << 3 * n - k << endl ; else cout << 0 << endl ; int n , k ; }"}}
{"translation": {"en": "read n , k [ENDL] ex = vector of n int filled with 5 [ENDL] idx = n - 1 [ENDL] while true [ENDL] sum = 0 [ENDL] for i = 0 to n exclusive add ex [ i ] to sum [ENDL] if sum is k break [ENDL] if idx is - 1 idx = n - 1 [ENDL] decrement ex [ idx ] [ENDL] decrement idx [ENDL] res = 0 [ENDL] for i = 0 to n exclusive [ENDL] if ex [ i ] is 2 increment res [ENDL] print res [ENDL] declare new ints n and k", "c++": "int main() { cin >> n >> k ; vector < int > ex ( n , 5 ) ; int idx = n - 1 ; while ( 1 ) int sum = 0 ; for ( int i = 0 ; i < n ; i ++ ) { sum += ex [ i ] ; } if ( sum == k ) break ; if ( idx == - 1 ) { idx = n - 1 ; } ex [ idx ] -- ; idx -- ; int res = 0 ; } for ( int ( i ) = 0 ; ( i ) < ( n ) ; ( i ) ++ ) if ( ex [ i ] == 2 ) res ++ ; cout << res << endl ; int n , k ; return 0; }"}}
{"translation": {"en": "read input to n and k [ENDL] if k / n = 2 [ENDL] print n - k % n [ENDL] else [ENDL] print 0 [ENDL] n , a , coun = int", "c++": "int main() { cin >> n >> k ; if ( k / n == 2 ) cout << n - k % n << endl ; else cout << 0 << endl ; int n , a , coun ; return 0; }"}}
{"translation": {"en": "read n , a [ENDL] if 3 * n < = a [ENDL] set coun to 0 [ENDL] else [ENDL] set coun to 3 * n - a [ENDL] print coun [ENDL] let n , k , ans be integers", "c++": "int main() { cin >> n >> a ; if ( 3 * n <= a ) coun = 0 ; else coun = 3 * n - a ; cout << coun << endl ; int n , k , ans ; return 0; }"}}
{"translation": {"en": "while read n , k [ENDL] if k / n equals 2 [ENDL] ans is equal to k modulo n [ENDL] print n - ans and newline [ENDL] else do the following [ENDL] print 0 and newline [ENDL] n , k = int", "c++": "int main() { while ( cin >> n >> k ) if ( k / n == 2 ) ans = k % n ; cout << n - ans << endl ; else cout << \" 0 \" << endl ; int n , k ; } return 0; }"}}
{"translation": {"en": "read n , k [ENDL] c = k / n [ENDL] if c > = 3 [ENDL] print 0 [ENDL] else [ENDL] print n - k modulo n [ENDL] create integers a and b", "c++": "int main() { cin >> n >> k ; double c = double ( k ) / n ; if ( c >= 3 ) cout << 0 << endl ; else cout << n - k % n << endl ; int a , b ; } return 0; }"}}
{"translation": {"en": "read a and b from the input [ENDL] create new integer called x with value 3 * a [ENDL] if x < = b [ENDL] print \" 0 \" [ENDL] else [ENDL] print x - b [ENDL] n , k = int", "c++": "int main() { cin >> a >> b ; int x = 3 * a ; if ( x <= b ) cout << \" 0 \" << endl ; else cout << x - b << endl ; int n , k ; }"}}
{"translation": {"en": "read n the k [ENDL] ans = int with ans = - 1 [ENDL] set ans to n [ENDL] set ans to ans * 3 [ENDL] decrement ans by k [ENDL] if ans > = 0 [ENDL] print ans [ENDL] else [ENDL] print 0 [ENDL] T = 1 = int", "c++": "int main() { cin >> n >> k ; int ans = - 1 ; ans = n ; ans *= 3 ; ans -= k ; if ( ans >= 0 ) cout << ans << ' \\n ' ; else cout << 0 << ' \\n ' ; int T = 1 ; } }"}}
{"translation": {"en": "in void function solve [ENDL] n , k = int [ENDL] read n , k [ENDL] is 0 > n - ( k - ( 2 * n ) ) then print 0 , else print n - ( k - ( 2 * n ) ) [ENDL] while decrementing T , calls solve [ENDL] create const int N = 1e5 + 100", "c++": "void solve ( ) int n , k ; cin >> n >> k ; cout << ( ( ( 0 ) > ( n - ( k - ( 2 * n ) ) ) ) ? ( 0 ) : ( n - ( k - ( 2 * n ) ) ) ) << endl ; while ( T -- ) { solve ( ) ; } } int main() { const int N = 1e5 + 100 ; return 0; }"}}
{"translation": {"en": "make ints n , k , and ans and int array a of size 55 [ENDL] create integer vector v [ENDL] make bool flag [ENDL] declare check returning bool [ENDL] make integer sum = 0 [ENDL] for i = 0 to n exclusive , add a [ i ] to sum [ENDL] if sum is equal to k , return true [ENDL] return false [ENDL] read n and k [ENDL] for i = 0 to n exclusive , set a [ i ] to 2 [ENDL] if check ( ) returns true [ENDL] show n [ENDL] for i = 2 to 5 [ENDL] for j = 0 to n exclusive [ENDL] increment a [ j ] [ENDL] if check ( ) is truthy [ENDL] set flag to true [ENDL] break loop [ENDL] if flag is truthy , break loop [ENDL] if flag is true [ENDL] for i = 0 to n exclusive [ENDL] if a [ i ] is equal to 2 , add 1 to ans [ENDL] display ans [ENDL] a , b = int", "c++": "int n , k , ans , a [ 55 ] ; vector < int > v ; bool flag ; bool check ( ) int sum = 0 ; for ( int i = 0 ; i < n ; i ++ ) { sum += a [ i ] ; } if ( sum == k ) return true ; return false ; cin >> n >> k ; } int main() { for ( int i = 0 ; i < n ; i ++ ) { a [ i ] = 2 ; } if ( check ( ) ) cout << n << endl ; for ( int i = 2 ; i <= 5 ; i ++ ) return 0; } for ( int j = 0 ; j < n ; j ++ ) a [ j ] ++ ; if ( check ( ) ) flag = true ; break ; if ( flag ) break ; } } if ( flag ) } for ( int i = 0 ; i < n ; i ++ ) if ( a [ i ] == 2 ) ans ++ ; cout << ans << endl ; } } int a , b ; return 0; }"}}
{"translation": {"en": "read a , b [ENDL] x = 3 * a [ENDL] if x < = b [ENDL] print \" 0 \" [ENDL] else [ENDL] print x - b [ENDL] n , k = int", "c++": "int main() { cin >> a >> b ; int x = 3 * a ; if ( x <= b ) cout << \" 0 \" << endl ; else cout << x - b << endl ; int n , k ; }"}}
{"translation": {"en": "while reading n , k [ENDL] if k > = 3n [ENDL] print 0 [ENDL] else if k < = 2n [ENDL] print n [ENDL] else [ENDL] print n - k + k / n * n [ENDL] a , b are integers", "c++": "int main() { while ( cin >> n >> k ) if ( k >= 3 * n ) cout << \" 0 \" << endl ; else if ( k <= 2 * n ) cout << n << endl ; else cout << n - k + k / n * n << endl ; int a , b ; } return 0; }"}}
{"translation": {"en": "read a , b [ENDL] if b is greater than or equal to 3 * a [ENDL] print 0 and newline [ENDL] else [ENDL] print 3 * a - b and endline [ENDL] create int n and k", "c++": "int main() { cin >> a >> b ; if ( b >= 3 * a ) cout << 0 << endl ; else cout << 3 * a - b << endl ; int n , k ; } return 0; }"}}
{"translation": {"en": "read n and k [ENDL] if k > = 3 * n [ENDL] print 0 [ENDL] else if k < = 2 * n [ENDL] print n [ENDL] else [ENDL] print n - k + k / n * n [ENDL] k , n = int", "c++": "int main() { while ( cin >> n >> k ) if ( k >= 3 * n ) cout << \" 0 \" << endl ; else if ( k <= 2 * n ) cout << n << endl ; else cout << n - k + k / n * n << endl ; int k , n ; } return 0; }"}}
{"translation": {"en": "read n then k [ENDL] print max of 0 , n - ( k / 2 - n ) * 2 - k mod 2 [ENDL] n , m , ans = integers with ans = 0", "c++": "int main() { cin >> n >> k ; cout << max ( 0 , n - ( k / 2 - n ) * 2 - k % 2 ) << endl ; int n , m , ans = 0 ; return 0; }"}}
{"translation": {"en": "Read n and m [ENDL] set ans to m - 2 * n [ENDL] set ans to n - ans [ENDL] if ans is less than 0 [ENDL] print 0 and a new line [ENDL] else do the following [ENDL] print ans and a new line [ENDL] maxn is a new constant integer variable = 1e5 + 7", "c++": "int main() { cin >> n >> m ; ans = m - 2 * n ; ans = n - ans ; if ( ans < 0 ) cout << \" 0 \" << endl ; else return 0; cout << ans << endl ; const int maxn = 1e5 + 7 ; return 0; }"}}
{"translation": {"en": "counter is a integer function with int argument x [ENDL] create integer variable with name myAss = 0 [ENDL] while x [ENDL] change x to x > > 1 [ENDL] increment myAss [ENDL] return myAss [ENDL] declare integer variable n [ENDL] in a while loop , read n and print the result of counter ( n ) [ENDL] n = int , cnt = 0", "c++": "int counter ( int x ) int myAss = 0 ; while ( x ) x >>= 1 ; myAss ++ ; return myAss ; } int n ; } int main() { while ( cin >> n ) { cout << counter ( n ) << endl ; } int n , ct = 0 ; return 0; }"}}
{"translation": {"en": "read n [ENDL] while n [ENDL] increment ct [ENDL] divide n by 2 [ENDL] print ct [ENDL] ans = integer with ans = 0", "c++": "int main() { cin >> n ; while ( n ) ct ++ ; n = n / 2 ; cout << ct << endl ; } int ans = 0 ; }"}}
{"translation": {"en": "n = integer [ENDL] read n [ENDL] while ( ( left shift ans 1 place ) - 1 < n ) , increment ans [ENDL] print ans [ENDL] n , ans = integers with ans = 0", "c++": "int n ; int main() { cin >> n ; while ( ( 1 << ans ) - 1 < n ) ans ++ ; cout << ans << endl ; int n , ans = 0 ; return 0; }"}}
{"translation": {"en": "Read n [ENDL] while n is greater than 0 [ENDL] set n to n / 2 [ENDL] increment ans [ENDL] print ans and a new line [ENDL] n = int", "c++": "int main() { cin >> n ; while ( n > 0 ) n /= 2 ; ans ++ ; cout << ans << \" \\n \" ; } int n ; return 0; }"}}
{"translation": {"en": "read n [ENDL] print round upward log2 ( n + 1 ) [ENDL] n , c = integer", "c++": "int main() { cin >> n ; cout << ceil ( log2 ( n + 1 ) ) << \" \\n \" ; int n , c ; return 0; }"}}
{"translation": {"en": "read n [ENDL] while n > 0 [ENDL] n = n / 2 [ENDL] increase c by 1 [ENDL] print c [ENDL] let n be a integer", "c++": "cin >> n ; int main() { while ( n > 0 ) n /= 2 ; c ++ ; cout << c << endl ; } int n ; }"}}
{"translation": {"en": "read n [ENDL] for i = 1 to 50 exclusive [ENDL] shift n value to the right by 1 [ENDL] if n is equal to 0 [ENDL] print i and newline [ENDL] create int a", "c++": "int main() { cin >> n ; for ( int i = 1 ; i < 50 ; i ++ ) n >>= 1 ; if ( n == 0 ) cout << i << endl ; int a ; return 0; } } return 0; }"}}
{"translation": {"en": "read a [ENDL] let ans = 1 be an integer [ENDL] loop while a is not 1 [ENDL] increment ans [ENDL] set a to a shifted by one bit to the right [ENDL] print ans [ENDL] let v be a vector of long integers", "c++": "int main() { cin >> a ; int ans = 1 ; while ( a != 1 ) ans ++ ; a >>= 1 ; cout << ans << endl ; } vector < long long > v ; return 0; }"}}
{"translation": {"en": "let n be a long integer [ENDL] read n [ENDL] let sum be a long integer with sum = 1 [ENDL] push_back 1 into vector v [ENDL] while sum is less than n [ENDL] let cur be a long integer with v [ length of v - 1 ] < < 1 [ENDL] push_back cur into v [ENDL] increment sum by cur [ENDL] print length of v and newline [ENDL] create long long n , num [ 1000000 ] ;", "c++": "long long n ; int main() { cin >> n ; long long sum = 1 ; v . push_back ( 1 ) ; while ( sum < n ) long long cur = v [ v . size ( ) - 1 ] << 1 ; v . push_back ( cur ) ; sum += cur ; cout << v . size ( ) << endl ; } long long n , num [ 1000000 ] ; return 0; }"}}
{"translation": {"en": "read n [ENDL] for i = 0 to num [ i - 1 ] < = 1e10 , set num [ i ] = num [ i - 1 ] + num [ i - 1 ] + 1 [ENDL] for i = 1 to num [ i ] < = 1e10 [ENDL] if num [ i - 1 ] < n and num [ i ] > = n [ENDL] print i [ENDL] create long long ints n , i , and x", "c++": "cin >> n ; int main() { for ( long long i = 1 ; num [ i - 1 ] <= 1e10 ; i ++ ) num [ i ] = num [ i - 1 ] + num [ i - 1 ] + 1 ; for ( long long i = 1 ; num [ i ] <= 1e10 ; i ++ ) if ( num [ i - 1 ] < n && num [ i ] >= n ) cout << i << endl ; long long int n , i , x ; return 0; } return 0; }"}}
{"translation": {"en": "read n and while n is truthy [ENDL] set i to 0 [ENDL] set x to n [ENDL] while x is not 0 [ENDL] if x modulo 2 is 0 [ENDL] set x to x / 2 [ENDL] otherwise [ENDL] set x to ( x - 1 ) / 2 [ENDL] add 1 to i [ENDL] show i [ENDL] n , t , x = integers with t = 0 and x = 1", "c++": "while ( cin >> n ) int main() { i = 0 ; x = n ; while ( x != 0 ) if ( x % 2 == 0 ) x = x / 2 ; else x = ( x - 1 ) / 2 ; i ++ ; cout << i << endl ; } long long n , t = 0 , x = 1 ; } return 0; }"}}
{"translation": {"en": "Read n [ENDL] while x is less than or equal to n [ENDL] set x to x * 2 [ENDL] increment t [ENDL] print t and a new line [ENDL] n , k and has are long longs where k = 1", "c++": "int main() { cin >> n ; while ( x <= n ) x *= 2 ; t ++ ; cout << t << endl ; } long long n , k = 1 , has ; return 0; }"}}
{"translation": {"en": "read from the input to n [ENDL] while k - 1 < n [ENDL] set k to k multiplied by 2 [ENDL] increment has by one [ENDL] print has to the standard output [ENDL] declare new long long variable n", "c++": "cin >> n ; int main() { while ( k - 1 < n ) k *= 2 ; has ++ ; cout << has << endl ; } long long n ; }"}}
{"translation": {"en": "read n from the user input [ENDL] print log2 ( n ) casted to integer + 1 [ENDL] n = long long", "c++": "int main() { cin >> n ; cout << ( int ) log2 ( n ) + 1 << endl ; long long n ; return 0; }"}}
{"translation": {"en": "read n [ENDL] print ( cast to int ) log2 ( n ) + 1 [ENDL] n = integer", "c++": "int main() { cin >> n ; cout << ( int ) log2 ( n ) + 1 << endl ; long n ; return 0; }"}}
{"translation": {"en": "Read n [ENDL] cont = integer with 0 [ENDL] while n is greater than 0 [ENDL] set n to n / 2 [ENDL] increment cont [ENDL] print cont and a new line [ENDL] declare new constant integer called INF = 0x3f3f3f3f", "c++": "int main() { cin >> n ; long cont = 0 ; while ( n > 0 ) n = n / 2 ; cont ++ ; cout << cont << endl ; } const int INF = 0x3f3f3f3f ; return 0; }"}}
{"translation": {"en": "create new constant double variable eps = 1e - 7 [ENDL] new long long constant mod with value 1e9 + 7 [ENDL] function CountNum with long long argument n that returns long long [ENDL] declare new integer variable ans with value 0 [ENDL] while n [ENDL] increment ans by one [ENDL] change the value of n to n divided by 2 [ENDL] return ans [ENDL] n is a new long long variable [ENDL] read n from the input [ENDL] print the result of CountNum ( n ) [ENDL] n = integer", "c++": "const double eps = 1e-7 ; const long long mod = 1e9 + 7 ; long long CountNum ( long long n ) int ans = 0 ; while ( n ) ans ++ ; n /= 2 ; return ans ; } long long n ; } int main() { cin >> n ; cout << CountNum ( n ) << endl ; int n ; return 0; }"}}
{"translation": {"en": "while n can be read as a valid integer [ENDL] num = integer = 0 [ENDL] while n is nonzero [ENDL] increase num by 1 [ENDL] n = n shifted 1 bit to the right [ENDL] print num [ENDL] p = integer with 0", "c++": "int main() { while ( cin >> n ) int num = 0 ; while ( n ) num ++ ; n = n >> 1 ; cout << num << endl ; } int p = 0 ; } return 0; }"}}
{"translation": {"en": "n , x = integers with x = 1 [ENDL] Read n [ENDL] while x is less than or equal to n [ENDL] set x to x * 2 [ENDL] increment p [ENDL] if x - 1 is greater than or equal to n [ENDL] print p and a new line [ENDL] in the function gcd that takes integer a , b and returns integer", "c++": "int main() { long long n , x = 1 ; cin >> n ; while ( x <= n ) x *= 2 ; p ++ ; if ( x - 1 >= n ) cout << p << endl ; int gcd ( int a , int b ) return 0; } } return 0; }"}}
{"translation": {"en": "if ( b is 0 ) , return a [ENDL] return gcd ( b , a modulo b ) [ENDL] a = integer [ENDL] read a [ENDL] ans = integer with ans = 1 [ENDL] while a modulo 1 [ENDL] increment ans [ENDL] a = right shift a 1 place [ENDL] print ans [ENDL] create new long longs n and num", "c++": "if ( b == 0 ) return a ; return gcd ( b , a % b ) ; int a ; } int main() { cin >> a ; int ans = 1 ; while ( a != 1 ) ans ++ ; a >>= 1 ; cout << ans << endl ; } long long n , num ; }"}}
{"translation": {"en": "read from the input to n [ENDL] declare long long sum with value 1 [ENDL] declare integer count = 0 [ENDL] while sum - 1 < n [ENDL] change the value of sum to sum multiplied by 2 [ENDL] increment count by one [ENDL] print count [ENDL] create long long int array a of size 100010 , b of size 100010 , and c of size 100010", "c++": "cin >> n ; int main() { long long sum = 1 ; int count = 0 ; while ( sum - 1 < n ) sum *= 2 ; count ++ ; cout << count << endl ; } long long a [ 100010 ] , b [ 100010 ] , c [ 100010 ] ; }"}}
{"translation": {"en": "make long long ints n , m , k , t , r , s , aux , and rta [ENDL] read n and while n is truthy [ENDL] set all contents of a to 0 [ENDL] create integer rta = 0 [ENDL] while n is truthy , set n to n / 2 and increment rta [ENDL] show rta [ENDL] declare integer variable with name n", "c++": "long long n , m , k , t , r , s , aux , rta ; while ( cin >> n ) int main() { memset ( a , 0 , sizeof ( a ) ) ; int rta = 0 ; while ( n ) { n /= 2 , rta ++ ; } cout << rta << endl ; int n ; } return 0; }"}}
{"translation": {"en": "read input to n [ENDL] print logarithm of n to the base 2 rounded down + 1 and ' \\ n ' [ENDL] create string s", "c++": "int main() { cin >> n ; cout << floor ( log2 ( n ) ) + 1 << ' \\n ' ; string s ; return 0; }"}}
{"translation": {"en": "read lien from cin to s [ENDL] create character x [ENDL] create integer len with len = size of s - 1 [ENDL] create integer flag with flag = 1 [ENDL] while flag is true [ENDL] create character temp with temp = s [ len ] [ENDL] if temp is greater than or equal to ' A ' and temp is less than or equal to ' Z ' [ENDL] set x to temp [ENDL] set flag to 0 [ENDL] else if temp is greater than or equal to ' a ' and temp is less then or equal to ' z ' [ENDL] set x to temp [ENDL] set flag to 0 [ENDL] decrement len [ENDL] set x to lower case of x [ENDL] if x is ' a ' or x is ' e ' or x is ' i ' or x is ' o ' or x is ' u ' or x is ' y ' [ENDL] print \" YES \" print newline [ENDL] else [ENDL] print \" NO \" print newline [ENDL] let s be string", "c++": "int main() { getline ( cin , s ) ; char x ; int len = s . size ( ) - 1 ; int flag = 1 ; while ( flag ) char temp = s [ len ] ; if ( temp >= ' A ' && temp <= ' Z ' ) x = temp ; flag = 0 ; else if ( temp >= ' a ' && temp <= ' z ' ) x = temp ; flag = 0 ; len -- ; } x = tolower ( x ) ; } if ( x == ' a ' || x == ' e ' || x == ' i ' || x == ' o ' || x == ' u ' || x == ' y ' ) cout << \" YES \" << endl ; else cout << \" NO \" << endl ; string s ; return 0; }"}}
{"translation": {"en": "read line from input into s [ENDL] x = character [ENDL] let len be integer = length of s - 1 [ENDL] create integer flag with value 1 [ENDL] while flag is 1 [ENDL] create character temp with value s [ len ] [ENDL] if temp is a capital letter character [ENDL] x = temp [ENDL] set value of flag to 0 [ENDL] else if temp > = ' a ' & & temp < = ' z ' [ENDL] set x to temp [ENDL] flag = 0 [ENDL] decrease len by one [ENDL] set value of x to lower case of x [ENDL] if x = ' a ' or x = ' e ' or x = ' i ' or x = ' o ' or x = ' u ' or x = ' y ' [ENDL] print \" YES \" and a new line [ENDL] else [ENDL] print \" NO \" and a new line [ENDL] array of characters vol filled with ' y ' , ' Y ' , ' o ' , ' O ' , ' i ' , ' I ' , ' a ' , ' A ' , ' e ' , ' E ' , ' u ' and ' U '", "c++": "int main() { getline ( cin , s ) ; char x ; int len = s . size ( ) - 1 ; int flag = 1 ; while ( flag ) char temp = s [ len ] ; if ( temp >= ' A ' && temp <= ' Z ' ) x = temp ; flag = 0 ; else if ( temp >= ' a ' && temp <= ' z ' ) x = temp ; flag = 0 ; len -- ; } x = tolower ( x ) ; } if ( x == ' a ' || x == ' e ' || x == ' i ' || x == ' o ' || x == ' u ' || x == ' y ' ) cout << \" YES \" << endl ; else cout << \" NO \" << endl ; char vol [ ] = { ' y ' , ' Y ' , ' o ' , ' O ' , ' i ' , ' I ' , ' a ' , ' A ' , ' e ' , ' E ' , ' u ' , ' U ' } ; return 0; }"}}
{"translation": {"en": "let s be string [ENDL] read input into s [ENDL] for i = length of s - 1 to - 1 exclusive decrementing i [ENDL] if s [ i ] ! = ' ? ' and s [ i ] ! = ' ' [ENDL] for integer j = 0 to 12 exclusive [ENDL] if s [ i ] = vol [ j ] return cout < < \" YES \" < < ' \\ n ' , 0 [ENDL] return cout < < \" NO \" < < ' \\ n ' , 0 [ENDL] create character array s with size 500", "c++": "string s ; int main() { getline ( cin , s ) ; for ( int i = s . size ( ) - 1 ; i > - 1 ; i -- ) if ( s [ i ] != ' ? ' && s [ i ] != '   ' ) for ( int j = 0 ; j < 12 ; j ++ ) if ( s [ i ] == vol [ j ] ) return cout << \" YES \" << ' \\n ' , 0 ; return cout << \" NO \" << ' \\n ' , 0 ; char s [ 500 ] ; } return 0; }"}}
{"translation": {"en": "read s [ENDL] create character c [ENDL] create integer len with len = string length of s [ENDL] for i = 0 to len exclusive [ENDL] create character cc with cc = lower case s [ i ] [ENDL] if cc is greater than or equal to ' a ' and cc is less than or equal to ' z ' , set c to cc [ENDL] if c is ' a ' or c is ' e ' or c is ' i ' or c is ' o ' or c is ' u ' or c is ' y ' [ENDL] print \" YES \" print newline [ENDL] else [ENDL] print \" NO \" print newline [ENDL] s = array of characters of size 500", "c++": "int main() { gets ( s ) ; char c ; int len = strlen ( s ) ; for ( int i = 0 ; i < len ; i ++ ) char cc = tolower ( s [ i ] ) ; if ( cc >= ' a ' && cc <= ' z ' ) c = cc ; if ( c == ' a ' || c == ' e ' || c == ' i ' || c == ' o ' || c == ' u ' || c == ' y ' ) } cout << \" YES \" << endl ; else cout << \" NO \" << endl ; char s [ 500 ] ; return 0; }"}}
{"translation": {"en": "get input into s [ENDL] c = character [ENDL] set integer len to length of s [ENDL] for integer i = 0 to len exclusive [ENDL] create character cc = character at s [ i ] converted to lower case [ENDL] if cc > = ' a ' and cc < = ' z ' [ENDL] if c is a vowel character [ENDL] print \" YES \" and a new line [ENDL] else [ENDL] print \" NO \" and a new line [ENDL] create string vow with value \" aeiouy \"", "c++": "int main() { gets ( s ) ; char c ; int len = strlen ( s ) ; for ( int i = 0 ; i < len ; i ++ ) char cc = tolower ( s [ i ] ) ; if ( cc >= ' a ' && cc <= ' z ' ) c = cc ; if ( c == ' a ' || c == ' e ' || c == ' i ' || c == ' o ' || c == ' u ' || c == ' y ' ) } cout << \" YES \" << endl ; else cout << \" NO \" << endl ; string vow = \" aeiouy \" ; return 0; }"}}
{"translation": {"en": "let x be string [ENDL] read line and store it into x [ENDL] set boolean ok to false [ENDL] for integer i = 0 to length of x exclusive [ENDL] if isalpha ( x [ i ] ) is true [ENDL] if lowercase x [ i ] can be found in vow [ENDL] set value of ok to true [ENDL] else [ENDL] set ok to false [ENDL] print \" YES \" if ok is true or \" NO \" otherwise , and a new line [ENDL] create string vow with vow = \" aeiouy \"", "c++": "string x ; int main() { getline ( cin , x ) ; bool ok = false ; for ( int i = 0 ; i < x . length ( ) ; ++ i ) if ( isalpha ( x [ i ] ) ) if ( vow . find ( tolower ( x [ i ] ) ) != - 1 ) ok = true ; else ok = false ; cout << ( ( ok ) ? \" YES \" : \" NO \" ) << endl ; } } string vow = \" aeiouy \" ; }"}}
{"translation": {"en": "create string x [ENDL] read line from cin to x [ENDL] create boolean ok with ok = false [ENDL] for i = 0 to length of x exclusive [ENDL] if x [ i ] is alphanumeric [ENDL] if first index of lower case x [ i ] in vow is not - 1 [ENDL] set ok to true [ENDL] else [ENDL] set ok to false [ENDL] print \" YES \" if ok is true , else \" NO \" , print newline [ENDL] char array vocals with elements ' a ' , ' e ' , ' i ' , ' o ' , ' u ' , ' y ' , ' A ' , ' E ' , ' I ' , ' O ' , ' U ' and ' Y '", "c++": "string x ; int main() { getline ( cin , x ) ; bool ok = false ; for ( int i = 0 ; i < x . length ( ) ; ++ i ) if ( isalpha ( x [ i ] ) ) if ( vow . find ( tolower ( x [ i ] ) ) != - 1 ) ok = true ; else ok = false ; cout << ( ( ok ) ? \" YES \" : \" NO \" ) << endl ; } } char vocals [ ] = { ' a ' , ' e ' , ' i ' , ' o ' , ' u ' , ' y ' , ' A ' , ' E ' , ' I ' , ' O ' , ' U ' , ' Y ' } ; }"}}
{"translation": {"en": "function contains with char argument vocal and boolean return type [ENDL] for integer i = 0 to 12 exclusive [ENDL] return true if vocals [ i ] = vocal [ENDL] return false [ENDL] question = string [ENDL] read input into question [ENDL] for i = length of question - 2 to 0 inclusive counting down [ENDL] if question [ i ] ! = ' ' [ENDL] if contains ( question [ i ] ) [ENDL] print \" YES \" and a new line [ENDL] else [ENDL] print \" NO \" and a new line [ENDL] boolean function a with UNTYPED arguments char and c", "c++": "bool contains ( char vocal ) for ( int i = 0 ; i < 12 ; i ++ ) if ( vocals [ i ] == vocal ) return true ; return false ; } string question ; } int main() { getline ( cin , question ) ; for ( int i = question . size ( ) - 2 ; i >= 0 ; i -- ) if ( question [ i ] != '   ' ) if ( contains ( question [ i ] ) ) cout << \" YES \" << endl ; else return 0; cout << \" NO \" << endl ; bool a ( char c ) return 0; } } } return 0; }"}}
{"translation": {"en": "set value of c to lower case c [ENDL] if c is a vowel character return 1 [ENDL] declare string variable s [ENDL] read input into s [ENDL] for integer i = length of s - 2 to 0 inclusive , decrementing i [ENDL] if s [ i ] ! = ' ' [ENDL] if a ( s [ i ] ) is true [ENDL] print \" YES \" and a new line [ENDL] else [ENDL] print \" NO \" and a new line [ENDL] declare a with character c as argument , returning boolean", "c++": "c = tolower ( c ) ; if ( c == ' a ' || c == ' e ' || c == ' i ' || c == ' o ' || c == ' u ' || c == ' y ' ) return 1 ; string s ; return 0; } getline ( cin , s ) ; int main() { for ( int i = s . size ( ) - 2 ; i >= 0 ; -- i ) if ( s [ i ] != '   ' ) if ( a ( s [ i ] ) ) cout << \" YES \" << endl ; else cout << \" NO \" << endl ; bool a ( char c ) } return 0; } } }"}}
{"translation": {"en": "set c to lower case c [ENDL] if c is ' a ' or c is ' e ' or c is ' i ' or c is ' o ' or c is ' u ' or c is ' y ' , return 1 from function [ENDL] create string s [ENDL] read line from cin to s [ENDL] for i = size of s - 2 to 0 inclusive , decrementing i [ENDL] if s [ i ] is not ' ' [ENDL] if result of run a with s [ i ] as argument is true [ENDL] print \" YES \" print newline [ENDL] else [ENDL] print \" NO \" print newline [ENDL] let MOD be a constant long integer with MOD = 1e9 + 7", "c++": "c = tolower ( c ) ; if ( c == ' a ' || c == ' e ' || c == ' i ' || c == ' o ' || c == ' u ' || c == ' y ' ) return 1 ; string s ; return 0; } getline ( cin , s ) ; int main() { for ( int i = s . size ( ) - 2 ; i >= 0 ; -- i ) if ( s [ i ] != '   ' ) if ( a ( s [ i ] ) ) cout << \" YES \" << endl ; else cout << \" NO \" << endl ; const long long MOD = 1e9 + 7 ; } return 0; } } }"}}
{"translation": {"en": "let INF be a constant long integer with INF = 1e9 + 7 [ENDL] let isVowel be a function that accepts character a and returns a boolean value [ENDL] if a is equal to a , return true [ENDL] if a is equal to i , return true [ENDL] if a is equal to u , return true [ENDL] if a is equal to e , return true [ENDL] if a is equal to o , return true [ENDL] if a is equal to y , return true [ENDL] return false [ENDL] let s be a string [ENDL] getline ( cin , s ) [ENDL] let ans be a character [ENDL] for i = 0 to length of s exclusive [ENDL] s [ i ] is equal to tolower ( s [ i ] ) [ENDL] if isalpha ( s [ i ] ) ) , ans is equal to s [ i ] [ENDL] if isVowel ( ans ) [ENDL] print YES and newline [ENDL] else do the following [ENDL] print NO and newline [ENDL] declare string variable s", "c++": "const long long INF = 1e9 + 7 ; bool isVowel ( char a ) if ( a == ' a ' ) return true ; if ( a == ' i ' ) return true ; if ( a == ' u ' ) return true ; if ( a == ' e ' ) return true ; if ( a == ' o ' ) return true ; if ( a == ' y ' ) return true ; return false ; string s ; } int main() { getline ( cin , s ) ; char ans ; for ( int i = 0 ; i < s . size ( ) ; i ++ ) s [ i ] = tolower ( s [ i ] ) ; if ( isalpha ( s [ i ] ) ) { ans = s [ i ] ; } if ( isVowel ( ans ) ) } cout << \" YES \" << ' \\n ' ; else cout << \" NO \" << ' \\n ' ; string s ; return 0; }"}}
{"translation": {"en": "inline bool function yy with char argument x [ENDL] return 1 if x is one of ' a ' , ' e ' , ' i ' , ' o ' , ' u ' or ' y ' [ENDL] new register int i [ENDL] read data from the input and put it into s [ENDL] change i from the length of s - 1 , while isalpha ( s [ i ] ) returns false , decrementing i [ENDL] set s [ i ] to the lower case [ENDL] if yy ( s [ i ] ) is true [ENDL] print \" YES \" [ENDL] else [ENDL] print \" NO \" to stdout [ENDL] M = const integer with M = 105", "c++": "inline bool yy ( char x ) if ( x == ' a ' || x == ' e ' || x == ' i ' || x == ' o ' || x == ' u ' || x == ' y ' ) return 1 ; register int i ; return 0; } int main() { getline ( cin , s ) ; for ( i = s . length ( ) - 1 ; ! isalpha ( s [ i ] ) ; i -- ) s [ i ] = tolower ( s [ i ] ) ; ; if ( yy ( s [ i ] ) ) puts ( \" YES \" ) ; else puts ( \" NO \" ) ; const int M = 100 + 5 ; }"}}
{"translation": {"en": "s = string [ENDL] read line s [ENDL] c = character with c = s [ 0 ] [ENDL] for i = 0 to s . length ( ) exclusive [ENDL] if ( ( s [ i ] > = a and s [ i ] < = z ) or ( s [ i ] > = A and s [ i ] < = Z ) ) , c = s [ i ] [ENDL] le = character array of size 12 with le = { ' a ' , ' e ' , ' i ' , ' o ' , ' u ' , ' y ' , ' A ' , ' E ' , ' I ' , ' O ' , ' U ' , ' Y ' } [ENDL] ok = bool with ok = false [ENDL] for i = 0 to 11 [ENDL] if ( c is le [ i ] ) [ENDL] ok = true [ENDL] break loop [ENDL] if ( ok ) [ENDL] print YES [ENDL] else [ENDL] print NO [ENDL] create int n , a , b", "c++": "string s ; int main() { getline ( cin , s ) ; char c = s [ 0 ] ; for ( int i = 0 ; i < s . length ( ) ; i ++ ) if ( ( s [ i ] >= ' a ' && s [ i ] <= ' z ' ) || ( s [ i ] >= ' A ' && s [ i ] <= ' Z ' ) ) { c = s [ i ] ; } char le [ 12 ] = { ' a ' , ' e ' , ' i ' , ' o ' , ' u ' , ' y ' , ' A ' , ' E ' , ' I ' , ' O ' , ' U ' , ' Y ' } ; } bool ok = false ; for ( int i = 0 ; i < 12 ; i ++ ) if ( c == le [ i ] ) ok = true ; break ; if ( ok ) } } cout << \" YES \" << endl ; else cout << \" NO \" << endl ; int n , a , b ; } return 0; }"}}
{"translation": {"en": "read n , a , b [ENDL] print min of n - a and b + 1 [ENDL] let n , a , b be integers", "c++": "int main() { cin >> n >> a >> b ; cout << min ( n - a , b + 1 ) << endl ; int n , a , b ; return 0; }"}}
{"translation": {"en": "read n , a , b [ENDL] print minimum of b + 1 , n - a and newline [ENDL] n , a , b = integers", "c++": "int main() { cin >> n >> a >> b ; cout << min ( b + 1 , n - a ) << endl ; int n , a , b ; }"}}
{"translation": {"en": "Read n , a , b [ENDL] print n - maximum value of ( a + 1 ) and ( n - b ) + 1 and a new line [ENDL] create new ints a , b and n", "c++": "int main() { cin >> n >> a >> b ; cout << n - max ( a + 1 , n - b ) + 1 << endl ; int a , b , n ; }"}}
{"translation": {"en": "loop , reading n , a and b from the input [ENDL] if a + b is greater than n [ENDL] print n - a to the output [ENDL] else [ENDL] print b + 1 if n - ( a + b ) , else print b [ENDL] n , a , b and c are integers where c = 0", "c++": "int main() { while ( cin >> n >> a >> b ) if ( ( a + b ) > n ) cout << ( n - a ) << endl ; else cout << ( ( n - ( a + b ) ) ? ( b + 1 ) : b ) << endl ; int n , a , b , c = 0 ; } return 0; }"}}
{"translation": {"en": "read user input to n , a and b [ENDL] for i from a to n - 1 inclusive [ENDL] if n - i > = 1 and n - i - 1 < = b , increment c by one [ENDL] print c [ENDL] n , a , b , ans = integers", "c++": "int main() { cin >> n >> a >> b ; for ( int i = a ; i <= n - 1 ; i ++ ) if ( n - i >= 1 && n - i - 1 <= b ) { c ++ ; } cout << c << endl ; } int n , a , b , ans ; return 0; }"}}
{"translation": {"en": "Read n , a , b , ans [ENDL] print n - maximum value of ( a + 1 ) and ( n - b ) + 1 and a new line [ENDL] make ints n , a , and b", "c++": "int main() { cin >> n >> a >> b ; cout << n - max ( a + 1 , n - b ) + 1 << endl ; int n , a , b ; return 0; }"}}
{"translation": {"en": "read n , a , and b [ENDL] make integer count = 0 [ENDL] for i = 1 to n [ENDL] if a is less than or equal to ( i - 1 ) and ( n - i ) is less than or equal to b , increment count [ENDL] print count [ENDL] create int n , i , j , x , y , z", "c++": "int main() { cin >> n >> a >> b ; int count = 0 ; for ( int i = 1 ; i <= n ; i ++ ) if ( a <= ( i - 1 ) and ( n - i ) <= b ) { count ++ ; } cout << count << endl ; } int n , i , j , x , y , z ; }"}}
{"translation": {"en": "read n , x and y [ENDL] set z to x + y [ENDL] if n - x = 1 and n differenf from z [ENDL] print 1 [ENDL] else if n > z [ENDL] print y + 1 [ENDL] else if z > n and n - x > 1 [ENDL] print n - x [ENDL] else if n equal to z [ENDL] print y [ENDL] let n , a , b be integers", "c++": "int main() { cin >> n >> x >> y ; z = ( x + y ) ; if ( n - x == 1 && n != z ) cout << 1 << endl ; else if ( n > z ) cout << y + 1 << endl ; else if ( z > n && ( n - x ) > 1 ) cout << ( n - x ) << endl ; else if ( n == z ) cout << y << endl ; int n , a , b ; return 0; }"}}
{"translation": {"en": "read n , a , b [ENDL] let i , c be integers with i = a + 1 , c = 0 [ENDL] while b > = 0 and i < = n [ENDL] increment c by 1 [ENDL] increment i by 1 [ENDL] decrement b by 1 [ENDL] print c and newline [ENDL] n , a , b = integers", "c++": "int main() { cin >> n >> a >> b ; int i = a + 1 , c = 0 ; while ( b >= 0 && i <= n ) c ++ ; i ++ ; b -- ; cout << c << endl ; } int n , a , b ; return 0; }"}}
{"translation": {"en": "Read n , a , b [ENDL] set x to n - b [ENDL] set y to a + 1 [ENDL] set sum to n - maximum value of x and y + 1 [ENDL] print sum and a new line [ENDL] declare new int variables n , a and b", "c++": "int main() { cin >> n >> a >> b ; int x = n - b ; int y = a + 1 ; int sum = n - max ( x , y ) + 1 ; cout << sum << ' \\n ' ; int n , a , b ; }"}}
{"translation": {"en": "read variables n , a and b from the input [ENDL] print min of n - a and b + 1 [ENDL] declare integers n , a , b , X = 0", "c++": "cin >> n >> a >> b ; int main() { cout << min ( n - a , b + 1 ) << endl ; int n , a , b , X = 0 ; return 0; }"}}
{"translation": {"en": "read n and a and b [ENDL] for i = 1 to n inclusive [ENDL] if i - 1 is greater than or equal to a and n - i is less than or equal to b , increment X [ENDL] print X and newline [ENDL] n , a , b = int", "c++": "int main() { cin >> n >> a >> b ; for ( int i = 1 ; i <= n ; i ++ ) if ( i - 1 >= a && n - i <= b ) X ++ ; cout << X << endl ; } int n , a , b ; return 0; }"}}
{"translation": {"en": "read n , a , b [ENDL] print min ( n - a , b + 1 ) [ENDL] n , a , b = integer", "c++": "cin >> n >> a >> b ; int main() { cout << min ( n - a , b + 1 ) << endl ; int n , a , b ; return 0; }"}}
{"translation": {"en": "count = integer = 0 [ENDL] read n , a , b [ENDL] if a + b + 1 < n , then ans a = n - b - 1 [ENDL] count = n - a [ENDL] print count [ENDL] create int n , a and b", "c++": "int count = 0 ; int main() { cin >> n >> a >> b ; if ( a + b + 1 < n ) a = n - b - 1 ; count = n - a ; cout << count << endl ; int n , a , b ; return 0; }"}}
{"translation": {"en": "read n , a and b [ENDL] if a + b > = n [ENDL] print n - a [ENDL] else [ENDL] print b + 1 [ENDL] n , a , b = integers", "c++": "int main() { cin >> n >> a >> b ; if ( a + b >= n ) cout << n - a << endl ; else cout << b + 1 << endl ; int n , a , b ; } return 0; }"}}
{"translation": {"en": "Read n , a , b [ENDL] print minimum value of n - a and b + 1 and a new line [ENDL] declare integers n , a , b , i = 0 , c = 0", "c++": "cin >> n >> a >> b ; int main() { cout << min ( n - a , b + 1 ) << endl ; int n , a , b , i = 0 , c = 0 ; return 0; }"}}
{"translation": {"en": "read n , a , b [ENDL] let i be n - a [ENDL] let c be b + 11 [ENDL] if i is less than or equal to c [ENDL] print i and newline [ENDL] else [ENDL] print c and newline [ENDL] declare new int variables a , b and n", "c++": "int main() { cin >> n >> a >> b ; i = n - a ; c = b + 1 ; if ( i <= c ) cout << i << endl ; else cout << c << endl ; int a , b , n ; } return 0; }"}}
{"translation": {"en": "read n , a and b and loop , then print b + 1 if n - a > b , or n - a otherwise , then loop again [ENDL] n , a , b = integers", "c++": "int main() { while ( cin >> n >> a >> b ) { cout << ( n - a > b ? b + 1 : n - a ) << endl ; } int n , a , b ; return 0; }"}}
{"translation": {"en": "Read n , a , b [ENDL] print minimum value of b + 1 and n - a and a new line [ENDL] n , a , b = integers", "c++": "int main() { cin >> n >> a >> b ; cout << min ( b + 1 , n - a ) << endl ; int n , a , b ; return 0; }"}}
{"translation": {"en": "Read n , a , b [ENDL] print minimum value of n - a and b + 1 and a new line [ENDL] n , l , r , i = int", "c++": "int main() { cin >> n >> a >> b ; cout << min ( n - a , b + 1 ) << endl ; int n , l , r , i ; return 0; }"}}
{"translation": {"en": "read n , l , r [ENDL] print n - max ( l , n - r - 1 ) [ENDL] declare new int variables n , a and b", "c++": "cin >> n >> l >> r ; int main() { cout << ( n - max ( l , n - r - 1 ) ) << endl ; int n , a , b ; return 0; }"}}
{"translation": {"en": "read from the input to n , a and b [ENDL] declare integer variable called x = min of n - a and b + 1 [ENDL] print x [ENDL] create integers n , a and b", "c++": "int main() { cin >> n >> a >> b ; int x = min ( n - a , b + 1 ) ; cout << x << endl ; int n , a , b ; return 0; }"}}
{"translation": {"en": "read n , a and b [ENDL] print min of n - a and b + 1 to the standard output [ENDL] declare integers a , b , c", "c++": "cin >> n >> a >> b ; int main() { cout << min ( n - a , b + 1 ) << endl ; int a , b , c ; return 0; }"}}
{"translation": {"en": "read a , b , c [ENDL] if a - b is greater than c + 1 [ENDL] print c + 1 and newline [ENDL] else [ENDL] print a - b and newline [ENDL] declare res as integer", "c++": "int main() { cin >> a >> b >> c ; if ( a - b > c + 1 ) cout << c + 1 << endl ; else cout << a - b << endl ; int res ; }"}}
{"translation": {"en": "declare n , a , b as integer [ENDL] read n and a and b [ENDL] let res be maximum of ( a + 1 and n - b ) [ENDL] print n - res + 1 and newline [ENDL] declare integers n , a , b", "c++": "int n , a , b ; int main() { cin >> n >> a >> b ; res = max ( a + 1 , n - b ) ; cout << n - res + 1 << endl ; int n , a , b ; return 0; }"}}
{"translation": {"en": "read n and a and b [ENDL] declare long long c = 0 [ENDL] for i = 1 to n inclusive [ENDL] if ( i is greater than a ) and ( n - i ) is less than or equal to b , increment c [ENDL] print c and \" \\ n \" [ENDL] n , a , b = int , d and c = 0", "c++": "int main() { cin >> n >> a >> b ; long long c = 0 ; for ( int i = 1 ; i <= n ; i ++ ) if ( ( ( i > a ) && ( n - i ) <= b ) ) c ++ ; cout << c << \" \\n \" ; } int n , a , b , d = 0 , c = 0 ; }"}}
{"translation": {"en": "read n , a , b [ENDL] d = n - a [ENDL] c = b + 1 [ENDL] if d < = c [ENDL] print d [ENDL] else [ENDL] print c [ENDL] n , a , b = int", "c++": "int main() { cin >> n >> a >> b ; d = n - a ; c = b + 1 ; if ( d <= c ) cout << d << endl ; else cout << c << endl ; int n , a , b ; return 0; }"}}
{"translation": {"en": "read n , a , b [ENDL] k = n - a [ENDL] print min ( k , b + 1 ) [ENDL] n , a , b = int", "c++": "int main() { cin >> n >> a >> b ; int k = n - a ; cout << min ( k , b + 1 ) << endl ; int n , a , b ; return 0; }"}}
{"translation": {"en": "while read n , a , b [ENDL] cnt = 0 [ENDL] subtract a from n [ENDL] if n < = b + 1 [ENDL] print n [ENDL] break [ENDL] else [ENDL] print b + 1 [ENDL] let a , b , c long long ints", "c++": "int main() { while ( cin >> n >> a >> b ) int cnt = 0 ; n -= a ; if ( n <= ( b + 1 ) ) cout << n << endl ; break ; else cout << b + 1 << endl ; long long int a , b , c ; } return 0; }"}}
{"translation": {"en": "read a , b , and c [ENDL] let k , g long long ints with k = 0 , g = b + 1 [ENDL] while g at most a [ENDL] if a - g at most c , increment k [ENDL] increment g [ENDL] print k [ENDL] maxx = constant integer = 1e3 + 10", "c++": "int main() { cin >> a >> b >> c ; long long int k = 0 , g = b + 1 ; while ( g <= a ) if ( a - g <= c ) { k ++ ; } g ++ ; cout << k << ' \\n ' ; } const int maxx = 1e3 + 10 ; return 0; }"}}
{"translation": {"en": "a = integer array of size maxx [ENDL] n = integer [ENDL] while n is read with a valid integer [ENDL] for i = 0 to n exclusive , read a [ i ] [ENDL] sort a in ascending order [ENDL] sum = long long = 0 [ENDL] for i = 1 to n exclusive , then sum = sum + ( a [ i ] - a [ i - 1 ] - 1 ) [ENDL] print sum [ENDL] create ints n , x , max = 0 , and min = INT_MAX", "c++": "int a [ maxx ] ; int n ; while ( cin >> n ) int main() { for ( int i = 0 ; i < n ; i ++ ) cin >> a [ i ] ; sort ( a , a + n ) ; long long sum = 0 ; for ( int i = 1 ; i < n ; i ++ ) { sum += ( a [ i ] - a [ i - 1 ] - 1 ) ; } cout << sum << endl ; int n , x , max = 0 , min = INT_MAX ; } return 0; }"}}
{"translation": {"en": "read n [ENDL] for i = 0 to n exclusive [ENDL] read x [ENDL] if x is greater than or equal to max , set max to x [ENDL] if min is greater than x , set min to x [ENDL] print max - min + 1 - n [ENDL] n = int", "c++": "int main() { cin >> n ; for ( int i = 0 ; i < n ; i ++ ) cin >> x ; if ( x >= max ) max = x ; if ( min > x ) min = x ; cout << max - min + 1 - n << endl ; } int n ; }"}}
{"translation": {"en": "read n [ENDL] a = int array of size n [ENDL] read n values into a [ENDL] sort a [ENDL] print a [ n - 1 ] - a [ 0 ] + 1 - n [ENDL] n , result = integers and a = array of 1000 integers", "c++": "int main() { cin >> n ; int a [ n ] ; for ( int i = 0 ; i < n ; i ++ ) cin >> a [ i ] ; sort ( a , a + n ) ; cout << a [ n - 1 ] - a [ 0 ] + 1 - n << endl ; long long int n , a [ 1000 ] , result ; }"}}
{"translation": {"en": "Read n [ENDL] Read n values into array a [ENDL] sort array elements of a in ascending order [ENDL] set result to a [ n - 1 ] - a [ 0 ] - n + 1 [ENDL] print result and a new line [ENDL] n , i , j , l , r = integers with l = 1000000000000000 and r = 0", "c++": "int main() { cin >> n ; for ( int i = 0 ; i < n ; i ++ ) cin >> a [ i ] ; sort ( a , a + n ) ; result = a [ n - 1 ] - a [ 0 ] - n + 1 ; cout << result << endl ; long long n , i , j , l = 1000000000000000 , r = 0 ; }"}}
{"translation": {"en": "Read n [ENDL] for i = 0 to n exclusive [ENDL] Read j [ENDL] set l to minimum value of l and j [ENDL] set r to minimum value of r and j [ENDL] print ( r - l + 1 ) - n and a new line [ENDL] let inf = 0x3f3f3f3f = const int", "c++": "int main() { cin >> n ; for ( i = 0 ; i < n ; i ++ ) cin >> j ; l = min ( l , j ) ; r = max ( r , j ) ; cout << ( r - l + 1 ) - n << endl ; } const int inf = 0x3f3f3f3f ; }"}}
{"translation": {"en": "N = 1010 = int const [ENDL] let a be a long long array of length N [ENDL] m = int [ENDL] read m [ENDL] read the first m elements of a [ENDL] sort the first m elements of a [ENDL] ans = 0 = long long [ENDL] for i = 1 to m exclusive then increment ans by a [ i ] + a [ i - 1 ] - 1 [ENDL] print ans [ENDL] let n and res be ints with res = 0", "c++": "const int N = 1010 ; long long a [ N ] ; int m ; int main() { cin >> m ; for ( int i = 0 ; i < m ; i ++ ) cin >> a [ i ] ; sort ( a , a + m ) ; long long ans = 0 ; for ( int i = 1 ; i < m ; i ++ ) ans += a [ i ] - a [ i - 1 ] - 1 ; cout << ans << endl ; int n , res = 0 ; return 0; }"}}
{"translation": {"en": "read input to n [ENDL] declare new array of long longs arr with n elements [ENDL] read standard input to arr n times [ENDL] sort arr [ENDL] for integer i = 1 to n exclusive [ENDL] if arr [ i ] ! = arr [ i - 1 ] + 1 , change res to the sum of res and arr [ i ] - arr [ i - 1 ] - 1 [ENDL] print res and \" \\ n \" [ENDL] create long long int arra [ 1100 ]", "c++": "int main() { cin >> n ; long long arr [ n ] ; for ( int i = 0 ; i < n ; i ++ ) cin >> arr [ i ] ; sort ( arr , arr + n ) ; for ( int i = 1 ; i < n ; i ++ ) if ( arr [ i ] != ( arr [ i - 1 ] + 1 ) ) res += ( arr [ i ] - arr [ i - 1 ] - 1 ) ; cout << res << \" \\n \" ; long long int arra [ 1100 ] ; return 0; }"}}
{"translation": {"en": "create long long int i , j , k , l , p , q , r , s , t , u , v , w , n , max_i , set max_i to 0 [ENDL] read n [ENDL] for i = 1 to n inclusive , read arra [ i ] [ENDL] sort elements between arra and arra + n + 1 [ENDL] for i = 1 to n inclusive [ENDL] if arra [ i ] > = max_i , set max_i = arra [ i ] [ENDL] if n equal to 1 [ENDL] print 0 and a new line [ENDL] else [ENDL] set l to max_i - arra [ 1 ] + 1 - n [ENDL] print l and a newline [ENDL] n = int", "c++": "int main() { long long int i , j , k , l , p , q , r , s , t , u , v , w , n , max_i = 0 ; cin >> n ; for ( i = 1 ; i <= n ; i ++ ) { cin >> arra [ i ] ; } sort ( arra , arra + n + 1 ) ; for ( i = 1 ; i <= n ; i ++ ) if ( arra [ i ] >= max_i ) { max_i = arra [ i ] ; } if ( n == 1 ) } cout << \" 0 \" << ' \\n ' ; else l = max_i - arra [ 1 ] + 1 - n ; cout << l << ' \\n ' ; int n ; } }"}}
{"translation": {"en": "read n [ENDL] mi , mx = int with mi = 1 bitshift left by 30 and mx = 0 [ENDL] for i = 0 to n [ENDL] x = int [ENDL] read x [ENDL] set mi to min of x , mi [ENDL] set mx to max of x , mx [ENDL] print mx - mi + 1 - n [ENDL] set maxn to 1000010", "c++": "int main() { cin >> n ; int mi = 1 << 30 , mx = 0 ; for ( int i = 0 ; i < n ; i ++ ) int x ; cin >> x ; mi = min ( x , mi ) ; mx = max ( x , mx ) ; cout << mx - mi + 1 - n << endl ; } const int maxn = 1000010 ; return 0; }"}}
{"translation": {"en": "assign 500000 to MAXM [ENDL] create int n [ENDL] while read n [ENDL] create int a [ 1005 ] [ENDL] for i = 0 to n exclusive , read a [ i ] [ENDL] sort elements between a and a + n [ENDL] cnt = 0 [ENDL] for i = 1 to n exclusive [ENDL] if a [ i ] - a [ i - 1 ] > 1 , cnt = cnt + ( a [ i ] - a [ i - 1 ] ) - 1 [ENDL] print cnt [ENDL] n = integer", "c++": "const int MAXM = 500000 ; int n ; int main() { while ( cin >> n ) int a [ 1005 ] ; for ( int i = 0 ; i < n ; i ++ ) { cin >> a [ i ] ; } sort ( a , a + n ) ; int cnt = 0 ; for ( int i = 1 ; i < n ; i ++ ) if ( a [ i ] - a [ i - 1 ] > 1 ) { cnt += ( a [ i ] - a [ i - 1 ] ) - 1 ; } cout << cnt << endl ; } int n ; } return 0; }"}}
{"translation": {"en": "Read n [ENDL] mx = integer with 0 [ENDL] mn = integer with 0 [ENDL] for i = 0 to n exclusive [ENDL] t = integer [ENDL] Read t [ENDL] set mx to maximum value of mx and t [ENDL] set mn to minimum value of mx and t [ENDL] print mx - mn + 1 - n and a new line [ENDL] a = array of 1010 integers", "c++": "int main() { cin >> n ; int mx = 0 ; int mn = 1e9 ; for ( int i = 0 ; i < n ; i ++ ) int t ; cin >> t ; mx = max ( mx , t ) ; mn = min ( mn , t ) ; cout << mx - mn + 1 - n << ' \\n ' ; } int a [ 1010 ] ; }"}}
{"translation": {"en": "n = integer [ENDL] Read n [ENDL] Read n values into array a [ENDL] sort array elements of a in ascending order [ENDL] print a [ n - 1 ] - a [ 0 ] - n + 1 and a new line [ENDL] create n and res = 0", "c++": "int n ; int main() { cin >> n ; for ( int i = 0 ; i < n ; i ++ ) cin >> a [ i ] ; sort ( a , a + n ) ; cout << a [ n - 1 ] - a [ 0 ] - n + 1 << endl ; int n , res = 0 ; return 0; }"}}
{"translation": {"en": "read n [ENDL] make long long integer arr of size n [ENDL] for i = 0 to n exclusive , read arr [ i ] [ENDL] sort arr using argument arr + n [ENDL] for i = 1 to exclusive [ENDL] if arr [ i ] is not equal to arr [ i - 1 ] + 1 , set res to res + arr [ i ] - arr [ i - 1 ] - 1 [ENDL] print res [ENDL] maxn = const integer with maxn = 1e6", "c++": "int main() { cin >> n ; long long arr [ n ] ; for ( int i = 0 ; i < n ; i ++ ) cin >> arr [ i ] ; sort ( arr , arr + n ) ; for ( int i = 1 ; i < n ; i ++ ) if ( arr [ i ] != ( arr [ i - 1 ] + 1 ) ) res += ( arr [ i ] - arr [ i - 1 ] - 1 ) ; cout << res << \" \\n \" ; const int maxn = 1e6 ; return 0; }"}}
{"translation": {"en": "n , a , res = long long with a = array of size maxn [ENDL] read n [ENDL] for i = cast to int ( 0 ) to cast to int ( n ) , read a [ i ] [ENDL] sort a and a + n [ENDL] res = a [ n - 1 ] - a [ 0 ] - n + 1 [ENDL] print res [ENDL] create new integer variable n", "c++": "long long n , a [ maxn ] , res ; cin >> n ; int main() { for ( int i = int ( 0 ) ; i < int ( n ) ; i ++ ) cin >> a [ i ] ; sort ( a , a + n ) ; res = a [ n - 1 ] - a [ 0 ] - n + 1 ; cout << res << ' \\n ' ; int n ; return 0; }"}}
{"translation": {"en": "read n and loop further [ENDL] a is a new array of integers with size 1005 [ENDL] read n elements into a [ENDL] sort a [ENDL] cnt is a new integer variable = 0 [ENDL] for i from 1 to n exclusive [ENDL] if a [ i ] - a [ i - 1 ] is greater than 1 , change cnt to cnt + ( a [ i ] - a [ i - 1 ] ) - 1 [ENDL] print cnt [ENDL] declare long long variable with name n", "c++": "int main() { while ( cin >> n ) int a [ 1005 ] ; for ( int i = 0 ; i < n ; i ++ ) { cin >> a [ i ] ; } sort ( a , a + n ) ; int cnt = 0 ; for ( int i = 1 ; i < n ; i ++ ) if ( a [ i ] - a [ i - 1 ] > 1 ) { cnt += ( a [ i ] - a [ i - 1 ] ) - 1 ; } cout << cnt << endl ; } long long n ; } return 0; }"}}
{"translation": {"en": "read standard input to n [ENDL] a is a new array of long longs with n elements [ENDL] read n elements into a [ENDL] sort a [ENDL] declare new long long variable ans with value 0 [ENDL] start for loop from i = 0 to n - 1 exclusive [ENDL] if a [ i + 1 ] - a [ i ] is greater than 1 , assign the new value = ans + ( ( a [ i + 1 ] - a [ i ] ) - 1 ) to ans [ENDL] print ans [ENDL] create constant integer inf = 0x3f3f3f3f", "c++": "int main() { cin >> n ; long long a [ n ] ; for ( long long i = 0 ; i < n ; i ++ ) { cin >> a [ i ] ; } sort ( a , a + n ) ; long long ans = 0 ; for ( long long i = 0 ; i < n - 1 ; i ++ ) if ( ( a [ i + 1 ] - a [ i ] ) > 1 ) { ans = ans + ( ( a [ i + 1 ] - a [ i ] ) - 1 ) ; } cout << ans << endl ; } const int inf = 0x3f3f3f3f ; return 0; }"}}
{"translation": {"en": "make const int N = 1010 [ENDL] make long long array a of size N [ENDL] make int m [ENDL] read m [ENDL] for i = 0 to m exclusive , read a [ i ] [ENDL] sort a using argument a + m [ENDL] create long long int ans = 0 [ENDL] for i = 1 to m exclusive , add a [ i ] - a [ i - 1 ] - 1 to ans [ENDL] print ans [ENDL] create long long n", "c++": "const int N = 1010 ; long long a [ N ] ; int m ; int main() { cin >> m ; for ( int i = 0 ; i < m ; i ++ ) cin >> a [ i ] ; sort ( a , a + m ) ; long long ans = 0 ; for ( int i = 1 ; i < m ; i ++ ) ans += a [ i ] - a [ i - 1 ] - 1 ; cout << ans << endl ; long long n ; return 0; }"}}
{"translation": {"en": "read n [ENDL] create long long ar [ n + 1 ] [ENDL] i = 0 to n exclusive , read ar [ i ] [ENDL] sort elements between ar and ar + n [ENDL] count = 0 [ENDL] set temp to n - 2 [ENDL] count = ( ar [ n - 1 ] - ar [ 0 ] - 1 ) - temp [ENDL] print ( count ) and a newline [ENDL] make int n", "c++": "int main() { cin >> n ; long long ar [ n + 1 ] ; for ( int i = 0 ; i < n ; i ++ ) { cin >> ar [ i ] ; } sort ( ar , ar + n ) ; long long count = 0 ; long long temp = n - 2 ; count = ( ar [ n - 1 ] - ar [ 0 ] - 1 ) - temp ; cout << ( count ) << \" \\n \" ; int n ; return 0; }"}}
{"translation": {"en": "read n [ENDL] create long long array a of size 100001 [ENDL] for i = 0 to n exclusive , read a [ i ] [ENDL] sort a using a + n [ENDL] print a [ n - 1 ] - a [ 0 ] + 1 - n [ENDL] inf = constant integer = 0x3f3f3f3f", "c++": "int main() { cin >> n ; long long a [ 100001 ] ; for ( int i = 0 ; i < n ; i ++ ) { cin >> a [ i ] ; } sort ( a , a + n ) ; cout << a [ n - 1 ] - a [ 0 ] + 1 - n << endl ; const int inf = 0x3f3f3f3f ; }"}}
{"translation": {"en": "N = constant integer = 1010 [ENDL] a = long long array of size N [ENDL] n = integer [ENDL] read n [ENDL] for i = 0 to n exclusive , then read a [ i ] [ENDL] sort a in ascending order [ENDL] ans = long long = 0 [ENDL] for i = 1 to n exclusive , then ans = ans + a [ i ] - a [ i - 1 ] - 1 [ENDL] print ans [ENDL] declare long long variables i , j , k , n , t , m , x , z and ans and an array a with size 200007", "c++": "const int N = 1010 ; long long a [ N ] ; int n ; int main() { cin >> n ; for ( int i = 0 ; i < n ; i ++ ) cin >> a [ i ] ; sort ( a , a + n ) ; long long ans = 0 ; for ( int i = 1 ; i < n ; i ++ ) ans += a [ i ] - a [ i - 1 ] - 1 ; cout << ans << endl ; long long i , j , k , n , t , m , x , z , ans , a [ 200007 ] ; return 0; }"}}
{"translation": {"en": "read n from the input [ENDL] read n elements into a from the input [ENDL] sort a [ENDL] in a loop , change i from 1 to n exclusive , increasing ans by a [ i ] - a [ i - 1 ] - 1 on each loop [ENDL] print ans [ENDL] declare integer n", "c++": "cin >> n ; int main() { for ( i = 0 ; i < n ; i ++ ) { cin >> a [ i ] ; } sort ( a , a + n ) ; for ( i = 1 ; i < n ; i ++ ) { ans += a [ i ] - a [ i - 1 ] - 1 ; } cout << ans << endl ; int n ; return 0; }"}}
{"translation": {"en": "read n [ENDL] if n % 2 is 0 [ENDL] print \" 0 \\ n \" [ENDL] else [ENDL] print \" 1 \\ n \" [ENDL] n = int", "c++": "int main() { cin >> n ; if ( n % 2 == 0 ) cout << \" 0\\n \" ; else cout << \" 1\\n \" ; int n ; }"}}
{"translation": {"en": "read n [ENDL] if even [ENDL] print 0 [ENDL] if not even [ENDL] print 1 [ENDL] i , j , m , n , x , y , k = int", "c++": "int main() { cin >> n ; if ( n % 2 == 0 ) cout << \" 0 \" << endl ; else if ( n % 2 != 0 ) cout << \" 1 \" << endl ; int i , j , m , n , x , y , k ; }"}}
{"translation": {"en": "read n [ENDL] print n modulo 2 [ENDL] create integer n", "c++": "int main() { cin >> n ; cout << n % 2 << endl ; int n ; return 0; }"}}
{"translation": {"en": "read from the input to n [ENDL] print 1 if n & 1 = 1 , or 0 , and ' \\ n ' [ENDL] a = int", "c++": "int main() { cin >> n ; cout << ( n & 1 ? 1 : 0 ) << ' \\n ' ; int a ; }"}}
{"translation": {"en": "read a [ENDL] if a is even [ENDL] print 0 [ENDL] else [ENDL] print 1 [ENDL] declare integer n", "c++": "int main() { cin >> a ; if ( a % 2 == 0 ) cout << 0 << endl ; else cout << 1 << endl ; int n ; }"}}
{"translation": {"en": "read n [ENDL] print n % 2 and ' \\ n ' [ENDL] declare constant integer maxn = 5001", "c++": "int main() { cin >> n ; cout << n % 2 << ' \\n ' ; const int maxn = 5001 ; return 0; }"}}
{"translation": {"en": "declare integer n [ENDL] read n [ENDL] print n % 2 and newline [ENDL] n = int", "c++": "int n ; int main() { cin >> n ; cout << n % 2 << endl ; int n ; return 0; }"}}
{"translation": {"en": "read n [ENDL] print remainder of n % 2 [ENDL] n = int", "c++": "int main() { cin >> n ; cout << n % 2 << ' \\n ' ; int n ; return 0; }"}}
{"translation": {"en": "read n [ENDL] print remainder of n / 2 [ENDL] create integer variable a", "c++": "int main() { cin >> n ; cout << n % 2 << endl ; int a ; }"}}
{"translation": {"en": "read standard input to a [ENDL] if a is odd [ENDL] print \" 1 \" [ENDL] else [ENDL] print \" 0 \" to the standard output [ENDL] declare integer n", "c++": "int main() { cin >> a ; if ( a % 2 != 0 ) cout << \" 1 \" << endl ; else cout << \" 0 \" << endl ; int n ; }"}}
{"translation": {"en": "read n [ENDL] if n % 2 is 0 [ENDL] print \" 0 \" and newline [ENDL] else [ENDL] print \" 1 \" and newline [ENDL] n = integer", "c++": "int main() { cin >> n ; if ( n % 2 == 0 ) cout << \" 0 \" << endl ; else cout << \" 1 \" << endl ; int n ; return 0; }"}}
{"translation": {"en": "read n [ENDL] if n % 2 = = 0 [ENDL] print 0 [ENDL] else [ENDL] print 1 [ENDL] a = int", "c++": "int main() { cin >> n ; if ( n % 2 == 0 ) cout << \" 0 \" << endl ; else cout << \" 1 \" << endl ; int a ; } return 0; }"}}
{"translation": {"en": "read a [ENDL] if a is even [ENDL] print 0 [ENDL] else [ENDL] print 1 [ENDL] a = int", "c++": "int main() { cin >> a ; if ( a % 2 == 0 ) cout << 0 << endl ; else cout << 1 << endl ; int a ; return 0; }"}}
{"translation": {"en": "read a [ENDL] print remainder of a / 2 [ENDL] INF = const int with INF = 0x3f3f3f3f", "c++": "int main() { cin >> a ; cout << a % 2 << endl ; const int INF = 0x3f3f3f3f ; }"}}
{"translation": {"en": "n = int [ENDL] read n [ENDL] if n is even [ENDL] print \" 0 \" [ENDL] else [ENDL] print \" 1 \" [ENDL] let a = int", "c++": "int n ; int main() { cin >> n ; if ( n % 2 == 0 ) puts ( \" 0 \" ) ; else puts ( \" 1 \" ) ; int a ; return 0; }"}}
{"translation": {"en": "read a [ENDL] if remainder of a / 2 equals 1 [ENDL] print 1 [ENDL] else [ENDL] print 0 [ENDL] create integer x", "c++": "int main() { cin >> a ; if ( a % 2 == 1 ) cout << \" 1 \" << endl ; else cout << \" 0 \" << endl ; int x ; }"}}
{"translation": {"en": "read x [ENDL] print x % 2 [ENDL] create long long int n", "c++": "int main() { cin >> x ; cout << x % 2 << endl ; long long int n ; }"}}
{"translation": {"en": "read n [ENDL] if n & 1 is truthy [ENDL] print 1 [ENDL] else do [ENDL] show 0 [ENDL] a = int", "c++": "int main() { cin >> n ; if ( n & 1 ) cout << 1 << endl ; else cout << 0 << endl ; int a ; return 0; }"}}
{"translation": {"en": "read a [ENDL] if a % 2 [ENDL] print 1 and new line [ENDL] else [ENDL] print 0 and new line [ENDL] n = int", "c++": "int main() { cin >> a ; if ( a % 2 ) cout << \" 1\\n \" ; else cout << \" 0\\n \" ; int n ; }"}}
{"translation": {"en": "read n [ENDL] print n and 1 [ENDL] let n be a integer", "c++": "int main() { cin >> n ; cout << ( n & 1 ) << endl ; int n ; }"}}
{"translation": {"en": "read n [ENDL] if n modulo 2 equals 0 [ENDL] print 0 and newline [ENDL] else do the following [ENDL] print 1 and newline [ENDL] n is a new integer variable", "c++": "int main() { cin >> n ; if ( n % 2 == 0 ) cout << 0 << endl ; else cout << 1 << endl ; int n ; return 0; }"}}
{"translation": {"en": "read variable n from the input [ENDL] print n & 1 [ENDL] create new integer variable n", "c++": "int main() { cin >> n ; cout << ( n & 1 ) << endl ; int n ; }"}}
{"translation": {"en": "read n from the user input [ENDL] print n % 2 [ENDL] let num be an integer", "c++": "int main() { cin >> n ; cout << n % 2 << endl ; int num ; }"}}
{"translation": {"en": "read in num [ENDL] if num is even [ENDL] print 0 [ENDL] or else [ENDL] print 1 [ENDL] new integer n", "c++": "int main() { cin >> num ; if ( num % 2 == 0 ) cout << 0 << endl ; else cout << 1 << endl ; int n ; } }"}}
{"translation": {"en": "read from the input to n [ENDL] if n & 1 ! = 0 [ENDL] print \" 1 \" [ENDL] else [ENDL] print \" 0 \" [ENDL] declare integer n", "c++": "int main() { cin >> n ; if ( n & 1 ) cout << \" 1 \" << endl ; else cout << \" 0 \" << endl ; int n ; }"}}
{"translation": {"en": "read n [ENDL] print n % 2 and newline [ENDL] let n be a integer", "c++": "cin >> n ; int main() { cout << n % 2 << endl ; int n ; }"}}
{"translation": {"en": "read n [ENDL] if n modulo 2 is equal to 0 [ENDL] print 1 and newline [ENDL] else do the following [ENDL] print 0 and newline [ENDL] n = int", "c++": "int main() { cin >> n ; if ( n % 2 != 0 ) cout << 1 << endl ; else cout << 0 << endl ; int n ; } return 0; }"}}
{"translation": {"en": "read n [ENDL] print n modulo 2 [ENDL] n = int", "c++": "int main() { cin >> n ; cout << n % 2 << endl ; int n ; return 0; }"}}
{"translation": {"en": "read n [ENDL] if even [ENDL] print 0 [ENDL] else [ENDL] print 1 [ENDL] declare integer a", "c++": "int main() { cin >> n ; if ( n % 2 == 0 ) cout << \" 0 \" << endl ; else cout << \" 1 \" << endl ; int a ; return 0; }"}}
{"translation": {"en": "read a [ENDL] print a % 2 , \" \\ n \" [ENDL] n = int", "c++": "int main() { cin >> a ; cout << a % 2 << \" \\n \" ; int n ; }"}}
{"translation": {"en": "read n [ENDL] if n bitwise and 1 [ENDL] print 1 [ENDL] else [ENDL] print 0 [ENDL] x = int", "c++": "int main() { cin >> n ; if ( n & 1 ) cout << 1 << endl ; else cout << 0 << endl ; int x ; return 0; }"}}
{"translation": {"en": "read x [ENDL] print remainder of x / 2 [ENDL] create int in", "c++": "int main() { cin >> x ; cout << ( x % 2 ) << endl ; int in ; return 0; }"}}
{"translation": {"en": "read in [ENDL] print in % 2 [ENDL] a = int", "c++": "int main() { cin >> in ; cout << in % 2 << endl ; int a ; return 0; }"}}
{"translation": {"en": "read a [ENDL] print remainder of a / 2 [ENDL] declare long longs a , b , c", "c++": "cin >> a ; int main() { cout << a % 2 << ' \\n ' ; long long a , b , c ; }"}}
{"translation": {"en": "read a [ENDL] read b [ENDL] read c [ENDL] print 2 * c * ( a + b - 2 ) - 8 * ( c * ( c - 1 ) ) and newline [ENDL] declare integers w , h , k", "c++": "int main() { cin >> a ; cin >> b ; cin >> c ; cout << 2 * c * ( a + b - 2 ) - 8 * ( c * ( c - 1 ) ) << endl ; int w , h , k ; }"}}
{"translation": {"en": "read w , h , k [ENDL] print 2 * k * ( w + h - 2 ) - 8 * ( k * ( k - 1 ) ) and newline [ENDL] let can be a function that accepts integers i , j , k and returns a boolean value", "c++": "int main() { cin >> w >> h >> k ; cout << 2 * k * ( w + h - 2 ) - 8 * ( k * ( k - 1 ) ) << endl ; bool can ( int i , int j , int k ) return 0; }"}}
{"translation": {"en": "if i + j is greater than k and j + k is greater than i and i + k is greater than j , return true [ENDL] return false [ENDL] let w , h , k be integers [ENDL] read w , h , k [ENDL] let ans be a integer with ans = 0 [ENDL] while w is greater than 0 and h is greater than 0 and k is greater than 0 [ENDL] increment ans by 2 * ( w + h ) - 4 [ENDL] decrement w by 4 [ENDL] decrement h by 4 [ENDL] decrement k by 1 [ENDL] print ans and newline [ENDL] create ints w , h , and k", "c++": "if ( i + j > k && j + k > i && i + k > j ) return true ; return false ; int w , h , k ; } int main() { cin >> w >> h >> k ; int ans = 0 ; while ( w > 0 && h > 0 && k > 0 ) ans += 2 * ( w + h ) - 4 ; w -= 4 ; h -= 4 ; k -- ; cout << ans << endl ; } int w , h , k ; }"}}
{"translation": {"en": "read w , h , and k [ENDL] show the result of 2 * k * ( w + h - 2 ) - 8 * ( k * ( k - 1 ) ) [ENDL] let n , m , k be long long ints", "c++": "int main() { cin >> w >> h >> k ; cout << 2 * k * ( w + h - 2 ) - 8 * ( k * ( k - 1 ) ) << endl ; long long n , m , k ; return 0; }"}}
{"translation": {"en": "let ans be a long long int with value 0 [ENDL] read n and m and k [ENDL] for longlong int i = 0 to k [ENDL] let len be a long long int with value n - ( i * 2 ) * 2 [ENDL] let win be a long long int with value m - ( i * 2 ) * 2 [ENDL] set ans to ans + ( ( len + wid ) * 2 - 4 ) [ENDL] print ans and newline [ENDL] make ints w , h , i , and r = 0", "c++": "long long ans = 0 ; cin >> n >> m >> k ; int main() { for ( long long i = 0 ; i < k ; i ++ ) long long len = n - ( i * 2 ) * 2 ; long long wid = m - ( i * 2 ) * 2 ; ans += ( ( len + wid ) * 2 - 4 ) ; cout << ans << \" \\n \" ; } int w , h , i , r = 0 ; }"}}
{"translation": {"en": "read w , h , and i [ENDL] while i is greater than or equal to 1 [ENDL] set r to r + ( w + h - 2 ) * 2 [ENDL] set w to ( w - 4 ) [ENDL] set h to ( h - 4 ) [ENDL] subtract 1 from i [ENDL] print r [ENDL] let x , y , z , and t ints with t = 0", "c++": "int main() { cin >> w >> h >> i ; while ( i >= 1 ) r = r + ( w + h - 2 ) * 2 ; w = ( w - 4 ) ; h = ( h - 4 ) ; i -- ; cout << r << endl ; } int x , y , z , t = 0 ; return 0; }"}}
{"translation": {"en": "read x , y , and z [ENDL] for i from 0 to z exclusive [ENDL] set t to t + 2 * x + 2 * y - 4 [ENDL] subtract 4 from x [ENDL] subtract 4 from y [ENDL] print t [ENDL] i , b , a , t , k , l , ans = long long", "c++": "int main() { cin >> x >> y >> z ; for ( int i = 0 ; i < z ; i ++ ) t = t + 2 * x + 2 * y - 4 ; x = x - 4 ; y = y - 4 ; cout << t << endl ; } long long i , b , a , t , k , l , ans ; return 0; }"}}
{"translation": {"en": "read a [ENDL] read b [ENDL] read k [ENDL] for i = 1 to k inclusive [ENDL] set ans to ans + ( a + b ) * 2 - 4 [ENDL] decrement a by 4 [ENDL] decrement b by 4 [ENDL] print ans [ENDL] create ints w , h , and k", "c++": "cin >> a ; int main() { cin >> b ; cin >> k ; for ( i = 1 ; i <= k ; i ++ ) ans = ans + ( a + b ) * 2 - 4 ; a = a - 4 ; b = b - 4 ; cout << ans << endl ; } int w , h , k ; return 0; }"}}
{"translation": {"en": "read w , h , and k [ENDL] make int cnt = 0 [ENDL] for i = 1 to k [ENDL] create int size = ( w - 4 * ( i - 1 ) ) * ( h - 4 * ( i - 1 ) ) [ENDL] if size is less than or equal to 0 [ENDL] break loop [ENDL] else do [ENDL] set cnt to cnt + ( w - 4 * ( i - 1 ) ) * 2 + ( h - 4 * ( i - 1 ) - 2 ) * 2 [ENDL] display cnt [ENDL] create ints w , h , and k", "c++": "int main() { cin >> w >> h >> k ; int cnt = 0 ; for ( int i = 1 ; i <= k ; i ++ ) int size = ( w - 4 * ( i - 1 ) ) * ( h - 4 * ( i - 1 ) ) ; if ( size <= 0 ) break ; else cnt += ( w - 4 * ( i - 1 ) ) * 2 + ( h - 4 * ( i - 1 ) - 2 ) * 2 ; cout << cnt << endl ; } int w , h , k ; return 0; }"}}
{"translation": {"en": "make int ans = 0 [ENDL] read w , h , and k [ENDL] for i = 1 to k [ENDL] create int _w = w - ( i - 1 ) * 4 [ENDL] let integer _h = h - ( i - 1 ) * 4 [ENDL] set ans to ans + 2 * ( _w + _h ) - 4 [ENDL] display ans [ENDL] w , h , k = int , res and i = 0", "c++": "int ans = 0 ; int main() { cin >> w >> h >> k ; for ( int i = 1 ; i <= k ; i ++ ) int _w = w - ( i - 1 ) * 4 ; int _h = h - ( i - 1 ) * 4 ; ans += 2 * ( _w + _h ) - 4 ; cout << ans << endl ; } int w , h , k , res = 0 , i = 0 ; return 0; }"}}
{"translation": {"en": "read w , h , k [ENDL] while decremented value of k is not 0 [ENDL] add 2 * ( w - ( 4 * i ) + h - ( 4 * i ) ) - 4 to res [ENDL] increment i [ENDL] print res [ENDL] create ints w , h , k and counter_yello = 0", "c++": "int main() { cin >> w >> h >> k ; while ( k -- ) res += 2 * ( w - ( 4 * i ) + h - ( 4 * i ) ) - 4 ; i ++ ; cout << res << endl ; } int w = 0 , h = 0 , k = 0 , counter_yello = 0 ; }"}}
{"translation": {"en": "read standard input to w , h and k [ENDL] for i from 0 to k exclusive incrementing i [ENDL] change counter_yello to counter_yello + 2 * w + 2 * h - 4 [ENDL] change w to w - 4 [ENDL] change h to h - 4 [ENDL] print counter_yello to the standard output [ENDL] create long long integers a , b , c , r = 0", "c++": "int main() { cin >> w >> h >> k ; for ( size_t i = 0 ; i < k ; ++ i ) counter_yello += 2 * w + 2 * h - 4 ; w -= 4 ; h -= 4 ; cout << counter_yello << endl ; } long long a , b , c , r = 0 ; return 0; }"}}
{"translation": {"en": "read a , b and c [ENDL] for c iterations set r to r + ( ( ( ( a - ( 4 * i ) ) - 1 ) + ( ( b - ( 4 * i ) ) - 1 ) ) * 2 ) [ENDL] print r [ENDL] let w , h , k , count be integers with count = 0", "c++": "int main() { cin >> a >> b >> c ; for ( long long i = 0 ; i < c ; i ++ ) r += ( ( ( ( a - ( 4 * i ) ) - 1 ) + ( ( b - ( 4 * i ) ) - 1 ) ) * 2 ) ; cout << r << \" \\n \" ; int w , h , k , count = 0 ; return 0; }"}}
{"translation": {"en": "read w , h , k [ENDL] while k is decremented by 1 [ENDL] increment count by 2 * ( w + h ) - 4 [ENDL] decrement w by 4 [ENDL] decrement h by 4 [ENDL] print count and newline [ENDL] create long long ints w , h , and k", "c++": "int main() { cin >> w >> h >> k ; while ( k -- ) count += 2 * ( w + h ) - 4 ; w -= 4 ; h -= 4 ; cout << count << endl ; } long long int w , h , k ; return 0; }"}}
{"translation": {"en": "read w , h , and k [ENDL] make long long int _rs = 0 [ENDL] while k - - is truthy [ENDL] set _rs to _rs + 2 * ( w + h ) - 4 [ENDL] set w to w - 4 [ENDL] set h to h - 4 [ENDL] print _rs [ENDL] declare new integer variables w , h and k = 0", "c++": "cin >> w >> h >> k ; int main() { long long int _rs = 0 ; while ( k -- ) _rs = _rs + 2 * ( w + h ) - 4 ; w -= 4 ; h -= 4 ; cout << _rs << \" \\n \" ; } int w = 0 , h = 0 , k = 0 ; return 0; }"}}
{"translation": {"en": "read w , h and k from the input [ENDL] create new integer called cells = 0 [ENDL] while k ! = 0 , decrement it and continue the loop [ENDL] set cells to cells + ( ( 2 * ( w + h ) ) - 4 ) [ENDL] subtract 4 from w [ENDL] decrease h by 4 [ENDL] print cells and \" \\ n \" [ENDL] declare new constant integer called maxn = 1e3 + 5", "c++": "int main() { cin >> w >> h >> k ; int cells = 0 ; while ( k -- ) cells = cells + ( ( 2 * ( w + h ) ) - 4 ) ; w -= 4 ; h -= 4 ; cout << cells << \" \\n \" ; } const int maxn = 1e3 + 5 ; return 0; }"}}
{"translation": {"en": "declare new int variables w , h and k [ENDL] read input to w , h and k [ENDL] create integer variable total = 0 [ENDL] declare integer variable sum with value 0 [ENDL] change the value of sum to ( w + h - 2 ) * 2 [ENDL] in a for loop , change i from 1 to k inclusive [ENDL] a is a new integer with value sum - 16 * ( i - 1 ) [ENDL] assign total + a to total [ENDL] print total [ENDL] make ints w , h , and k", "c++": "int w , h , k ; cin >> w >> h >> k ; int main() { int total = 0 ; int sum = 0 ; sum = ( w + h - 2 ) * 2 ; for ( int i = 1 ; i <= k ; i ++ ) int a = sum - 16 * ( i - 1 ) ; total = total + a ; cout << total << endl ; } int w , h , k ; }"}}
{"translation": {"en": "read w , h , k and while they ' re truthy [ENDL] make integer sum = 0 [ENDL] for i = 0 to k exclusive [ENDL] add 2 * ( w + h ) - 4 to sum [ENDL] substract 4 from w [ENDL] set h to h - 4 [ENDL] print sum [ENDL] create integers w , h , k , and value = 0", "c++": "int main() { while ( cin >> w >> h >> k ) int sum = 0 ; for ( int i = 0 ; i < k ; ++ i ) sum += 2 * ( w + h ) - 4 ; w -= 4 ; h -= 4 ; cout << sum << ' \\n ' ; } int w , h , k , value = 0 ; } return 0; }"}}
{"translation": {"en": "read w , h , and k [ENDL] create integers deck = 0 and it = 2 [ENDL] for i = 1 to k [ENDL] set value to ( ( ( h - deck ) * 2 ) + ( ( w - it ) * 2 ) ) + value [ENDL] set deck to deck + 4 [ENDL] set it to it + 4 [ENDL] show value [ENDL] let w , h , k , sum be integers with sum = 0", "c++": "int main() { cin >> w >> h >> k ; int deck = 0 , it = 2 ; for ( int i = 1 ; i <= k ; i ++ ) value = ( ( ( h - deck ) * 2 ) + ( ( w - it ) * 2 ) ) + value ; deck = deck + 4 ; it = it + 4 ; cout << value << endl ; } int w , h , k , sum = 0 ; }"}}
{"translation": {"en": "read w , h , k [ENDL] for q = 0 to k exclusive [ENDL] increment sum by ( 2 * w ) + ( 2 * h ) - 4 [ENDL] decrement w by 4 [ENDL] decrement h by 4 [ENDL] if w < = 1 or h < = 1 , stop [ENDL] print sum and new line [ENDL] let h , w , k be long integers", "c++": "int main() { cin >> w >> h >> k ; for ( int q = 0 ; q < k ; q ++ ) sum += ( ( 2 * w ) + ( 2 * h ) - 4 ) ; w -= 4 ; h -= 4 ; if ( w <= 1 || h <= 1 ) break ; cout << sum << endl ; } long long int h , w , k ; return 0; }"}}
{"translation": {"en": "read h , w , k [ENDL] let g be a long integer with g = 0 [ENDL] while k is greater than 0 [ENDL] increment g by h * 2 + ( w - 2 ) * 2 [ENDL] decrement k by 1 [ENDL] decrement h by 4 [ENDL] decrement w by 4 [ENDL] if h < = 0 , stop [ENDL] if w < = 0 , stop [ENDL] print g and newline [ENDL] create int n , a , count , set count to 0", "c++": "int main() { cin >> h >> w >> k ; long long int g = 0 ; while ( k > 0 ) g += h * 2 + ( w - 2 ) * 2 ; k -- ; h -= 4 ; w -= 4 ; if ( h <= 0 ) { break ; } if ( w <= 0 ) { break ; } cout << g << ' \\n ' ; } int n , a , count = 0 ; return 0; }"}}
{"translation": {"en": "read n and a [ENDL] for i = 1 to n inclusive [ENDL] if a mod i = 0 and ( a / i ) < = n , increment count [ENDL] print count [ENDL] let n and z be long long variables", "c++": "int main() { cin >> n >> a ; for ( int i = 1 ; i <= n ; i ++ ) if ( a % i == 0 && ( a / i ) <= n ) { count ++ ; } cout << count << endl ; } long long n , x ; return 0; }"}}
{"translation": {"en": "get value of n and x [ENDL] let c be integer = 0 [ENDL] for i = 1 to n inclusive [ENDL] if x modulo i is zero and x less than or equal to n * i then increment c [ENDL] print c [ENDL] n = long long", "c++": "int main() { cin >> n >> x ; int c = 0 ; for ( int i = 1 ; i <= n ; i ++ ) if ( x % i == 0 and x <= n * i ) { c ++ ; } cout << c << endl ; } long long n ; return 0; }"}}
{"translation": {"en": "x = long long [ENDL] read n , x [ENDL] cnt = 0 = int [ENDL] for i = 1 to n inclusive [ENDL] if x mod i = 0 and x < = i * n then increment cnt [ENDL] print cnt [ENDL] let n , x and r be ints where r = 0", "c++": "int main() { long long x ; cin >> n >> x ; int cnt = 0 ; for ( int i = 1 ; i <= n ; i ++ ) if ( x % i == 0 && x <= i * n ) cnt ++ ; cout << cnt << endl ; } int n , x , r = 0 ; return 0; }"}}
{"translation": {"en": "read from the input to n and x [ENDL] for i = 1 to n inclusive [ENDL] skip the rest of the loop if x % i is not 0 [ENDL] create integer variable y with value x / i [ENDL] if y < = n , increment r by one [ENDL] print r [ENDL] let n , x and count = 0 be integers", "c++": "int main() { cin >> n >> x ; for ( int i = 1 ; i <= n ; ++ i ) if ( x % i != 0 ) continue ; int y = x / i ; if ( y <= n ) r ++ ; cout << r << endl ; } int n , x , count = 0 ; return 0; }"}}
{"translation": {"en": "read n and x [ENDL] if x equal to 1 [ENDL] print 1 [ENDL] for i = 2 to n inclusive [ENDL] if x modulo i is equal to 0 and x / i less then or equal to n then increment count [ENDL] if x less than or equal to n print count + 1 or print count [ENDL] let n , m be integers", "c++": "int main() { cin >> n >> x ; if ( x == 1 ) cout << 1 << endl ; for ( int i = 2 ; i <= n ; i ++ ) return 0; } if ( x % i == 0 && x / i <= n ) count ++ ; cout << ( x <= n ? count + 1 : count ) << endl ; } long long n , m ; return 0; }"}}
{"translation": {"en": "while read n , m [ENDL] the integer value of flag = 0 [ENDL] for i = 1 to n inclusive [ENDL] the integer value of k = m / i [ENDL] if m modulo i is equal to 0 and k < = n , increment flag by 1 [ENDL] print flag and newline [ENDL] let a , b , c be integers with c = 0", "c++": "int main() { while ( cin >> n >> m ) int flag = 0 ; for ( int i = 1 ; i <= n ; i ++ ) int k = m / i ; if ( m % i == 0 && k <= n ) flag ++ ; cout << flag << endl ; } int a , b , c = 0 ; } }"}}
{"translation": {"en": "read a , b [ENDL] if a is equal to 1 and b is equal to 1 [ENDL] print 1 and newline [ENDL] if a is equal to 1 and b is equal to 0 [ENDL] print 0 and newline [ENDL] for i = 1 to a inclusive [ENDL] if b modulo i is equal to 0 and b / i < = a [ENDL] print c and newline [ENDL] let tabeSize , num , i and cnt be long long ints with cnt = 0", "c++": "int main() { cin >> a >> b ; if ( a == 1 && b == 1 ) cout << 1 << endl ; if ( a == 1 && b == 0 ) return 0; } cout << 0 << endl ; for ( int i = 1 ; i <= a ; i ++ ) return 0; } if ( b % i == 0 && b / i <= a ) { c ++ ; } cout << c << endl ; } long long int tabeSize , num , i , cnt = 0 ; return 0; }"}}
{"translation": {"en": "read input to tabeSize and num [ENDL] start for loop from i = 1 to tabeSize inclusive incrementing i [ENDL] increment cnt if num % i = 0 and num / i < = tabeSize [ENDL] print cnt [ENDL] n , x , cnt = 0 be ints", "c++": "int main() { cin >> tabeSize >> num ; for ( i = 1 ; i <= tabeSize ; i ++ ) if ( num % i == 0 && num / i <= tabeSize ) cnt ++ ; cout << cnt << endl ; } long long int n , x , cnt = 0 ; return 0; }"}}
{"translation": {"en": "read n , x [ENDL] for i = 1 , until i ^ 2 < = x [ENDL] if x mod i = 0 [ENDL] if i = x / i and i < = n and x / i < = n then increment cnt [ENDL] if i isn ' t x / i and i < = n and x / i < = n then increment cnt by 2 [ENDL] print cnt [ENDL] create long long n , x", "c++": "int main() { cin >> n >> x ; for ( int i = 1 ; i * i <= x ; i ++ ) if ( x % i == 0 ) if ( i == x / i && i <= n && x / i <= n ) cnt ++ ; if ( i != x / i && i <= n && x / i <= n ) cnt += 2 ; cout << cnt << endl ; } } long long n , x ; return 0; }"}}
{"translation": {"en": "read n and x [ENDL] c = 0 [ENDL] if x < = n , increment c [ENDL] for i = 2 to n inclusive [ENDL] if x % i = 0 and x / i < = n , increment c [ENDL] print c [ENDL] let n , i , c , t , d be integers with d = 0", "c++": "int main() { cin >> n >> x ; int c = 0 ; if ( x <= n ) c ++ ; for ( int i = 2 ; i <= n ; i ++ ) if ( x % i == 0 && x / i <= n ) { c ++ ; } cout << c << endl ; } int n , i , c , t , d = 0 ; return 0; }"}}
{"translation": {"en": "read n , t [ENDL] c is equal to 0 [ENDL] for i = 1 to n inclusive [ENDL] if t modulo i is equal to 0 [ENDL] d is equal to t / i [ENDL] if d > = 1 and d < = n , increment c by 1 [ENDL] print c and newline [ENDL] declare long long ints a , b , c , d , e , f , g , h , i and j", "c++": "int main() { cin >> n >> t ; c = 0 ; for ( i = 1 ; i <= n ; i ++ ) if ( t % i == 0 ) d = t / i ; if ( d >= 1 && d <= n ) { c ++ ; } cout << c << endl ; } } long long int a , b , c , d , e , f , g , h , i , j ; return 0; }"}}
{"translation": {"en": "declare vectors of long long integers s v , x and u [ENDL] create new strings s and t [ENDL] read a and b and keep looping [ENDL] for c from 1 to a inclusive , add element = c to the end of v [ENDL] assign the new value = 0 to e [ENDL] change f to a - 1 [ENDL] assign 0 to g [ENDL] while e < = f [ENDL] if v [ e ] * v [ f ] = b and v [ e ] ! = v [ f ] [ENDL] add 2 to g [ENDL] decrement f by one [ENDL] else if v [ e ] * v [ f ] = b and v [ e ] is equal to v [ f ] [ENDL] change g to g + 1 [ENDL] decrement f [ENDL] else if v [ e ] * v [ f ] is less than b [ENDL] increment e by one [ENDL] else [ENDL] decrement f by one [ENDL] print g [ENDL] clear vector v [ENDL] declare new integers n and x", "c++": "int main() { vector < long long int > v , x , u ; string s , t ; while ( cin >> a >> b ) for ( c = 1 ; c <= a ; c ++ ) { v . push_back ( c ) ; } e = 0 ; f = a - 1 ; g = 0 ; while ( e <= f ) if ( v [ e ] * v [ f ] == b && v [ e ] != v [ f ] ) g += 2 ; f -- ; else if ( v [ e ] * v [ f ] == b && v [ e ] == v [ f ] ) g += 1 ; f -- ; else if ( v [ e ] * v [ f ] < b ) e ++ ; else f -- ; cout << g << endl ; } } v . clear ( ) ; int n , x ; } return 0; }"}}
{"translation": {"en": "read n and x from the user input [ENDL] declare new integer called ans with value 0 [ENDL] for i from 1 to n inclusive [ENDL] increment ans if x modulo i = 0 and x / i < = n [ENDL] print ans [ENDL] create ints i , j , k , n , m , ans , mn and count with ans and count = 0", "c++": "int main() { cin >> n >> x ; int ans = 0 ; for ( int i = 1 ; i <= n ; i ++ ) if ( x % i == 0 && x / i <= n ) { ans ++ ; } cout << ans << endl ; } int i , j , k , n , m , ans = 0 , mn , count = 0 ; return 0; }"}}
{"translation": {"en": "read user input to n and m [ENDL] change the value of mn to min of n and m [ENDL] in a for loop , change i from 1 to mn inclusive incrementing i [ENDL] if m % i = 0 and m / i < = n , increment count [ENDL] print count to the standard output [ENDL] create new ints n and k", "c++": "int main() { cin >> n >> m ; mn = min ( n , m ) ; for ( i = 1 ; i <= mn ; i ++ ) if ( m % i == 0 && m / i <= n ) count ++ ; cout << count << endl ; int n , k ; return 0; }"}}
{"translation": {"en": "read standard input to n and k [ENDL] define integer cnt = 0 [ENDL] for integer i = 1 to n inclusive [ENDL] increment cnt if k % i = 0 and i * 1LL * n > = k [ENDL] print cnt [ENDL] define long long ints n , x and occurances with occurances = 0", "c++": "int main() { cin >> n >> k ; int cnt = 0 ; for ( int i = 1 ; i <= n ; i ++ ) if ( k % i == 0 && i * 1LL * n >= k ) { cnt ++ ; } cout << cnt << endl ; } long long int n , x , occurances = 0 ; }"}}
{"translation": {"en": "read n and x [ENDL] in a for loop , change i from 1 to n inclusive incrementing i [ENDL] if x % i = 0 and x / i < = n , increment occurances [ENDL] print occurances and \" \\ n \" [ENDL] i , j = int", "c++": "int main() { cin >> n >> x ; for ( int i = 1 ; i <= n ; i ++ ) if ( x % i == 0 && x / i <= n ) { occurances ++ ; } cout << occurances << \" \\n \" ; } int i , j ; return 0; }"}}
{"translation": {"en": "in function cnt taking int n and returning int [ENDL] ans , res = int with ans = 1 [ENDL] iterate i from 2 while i * i < = n [ENDL] set res to 0 [ENDL] loop while n is a multiple of i [ENDL] set n to n / i [ENDL] increment res [ENDL] set ans to ans * ( res + 1 ) [ENDL] return ans [ENDL] n , x , ans = int with ans = 0 [ENDL] read n then x [ENDL] iterate i from 1 while i * i < = x and i < = n [ENDL] if x is not a multiple of i continue [ENDL] if x / i < = n increment ans by 2 [ENDL] if i * i is x decrement ans [ENDL] print ans [ENDL] create long long n , t , cont , set cont to 0", "c++": "int cnt ( int n ) int ans = 1 , res ; for ( int i = 2 ; i * i <= n ; i ++ ) res = 0 ; while ( n % i == 0 ) n /= i ; res ++ ; ans *= res + 1 ; } return ans ; } int n , x , ans = 0 ; } int main() { cin >> n >> x ; for ( i = 1 ; i * i <= x && i <= n ; i ++ ) if ( x % i ) continue ; if ( x / i <= n ) { ans += 2 ; } if ( i * i == x ) ans -- ; cout << ans << endl ; } long long n , t , cont = 0 ; }"}}
{"translation": {"en": "read na dn t [ENDL] for i = 1 to n inclusive [ENDL] if t mod i = 0 [ENDL] if t / i > = 1 and t / i < = n , increment cont [ENDL] print cont [ENDL] create long long int n , x , i , cnt , set cnt to 0", "c++": "int main() { cin >> n >> t ; for ( int i = 1 ; i <= n ; i ++ ) if ( t % i == 0 ) if ( t / i >= 1 && t / i <= n ) { cont ++ ; } cout << cont << endl ; } } long long int n , x , i , cnt = 0 ; return 0; }"}}
{"translation": {"en": "read n and x [ENDL] for i = 0 to n inclusive [ENDL] if x mod i = 0 and x < = ( i * n ) , increment cnt [ENDL] print cnt [ENDL] declare ints n and k", "c++": "int main() { cin >> n >> x ; for ( i = 1 ; i <= n ; i ++ ) if ( x % i == 0 && x <= ( i * n ) ) cnt ++ ; cout << cnt << endl ; } int n , k ; }"}}
{"translation": {"en": "a is a new array of integers with 105 elements [ENDL] read from the input to n and k [ENDL] create integer ans = 0 [ENDL] start for loop from i = 0 to n exclusive incrementing i [ENDL] read user input to a [ i ] [ENDL] if a [ i ] is equal to 0 , break [ENDL] if k is greater than 0 [ENDL] decrement k [ENDL] increment ans by one [ENDL] else if a [ i ] is equal to a [ i - 1 ] [ENDL] increment ans by one [ENDL] else [ENDL] stop the loop [ENDL] print ans [ENDL] create int n and k", "c++": "int main() { int a [ 105 ] ; cin >> n >> k ; int ans = 0 ; for ( int i = 0 ; i < n ; i ++ ) cin >> a [ i ] ; if ( a [ i ] == 0 ) break ; if ( k > 0 ) k -- ; ans ++ ; else if ( a [ i ] == a [ i - 1 ] ) ans ++ ; else break ; cout << ans << endl ; } int n , k ; return 0; }"}}
{"translation": {"en": "read n and k [ENDL] create int prev , next , cnt , set cnt to 0 [ENDL] read prev [ENDL] set total_cnt = 0 [ENDL] if prev different from 0 [ENDL] total_cnt = 1 [ENDL] for i = 1 to n exclusive [ENDL] read next [ENDL] if next = 0 , break [ENDL] if prev different from next [ENDL] if total_cnt + 1 > k , break [ENDL] increment total_cnt [ENDL] set prev to nect [ENDL] print total_cnt [ENDL] create ints n , k , f , a , count and temp where count = 0 and f = 1", "c++": "int main() { cin >> n >> k ; int prev , next , cnt = 0 ; cin >> prev ; int total_cnt = 0 ; if ( prev ) total_cnt = 1 ; for ( int i = 1 ; i < n ; i ++ ) cin >> next ; if ( ! next ) break ; if ( prev != next ) if ( total_cnt + 1 > k ) break ; total_cnt ++ ; } prev = next ; cout << total_cnt << endl ; } } int n , k , f = 1 , a , count = 0 , temp ; return 0; }"}}
{"translation": {"en": "read input to n and k [ENDL] in a for loop , change i from 0 to n exclusive incrementing i [ENDL] read from the input to a [ENDL] if f > k and temp ! = a [ENDL] break the loop [ENDL] else if a is greater than 0 [ENDL] increment count by one [ENDL] assign the new value = a to temp [ENDL] increment f by one [ENDL] print count [ENDL] i , n , m , x = int", "c++": "int main() { cin >> n >> k ; for ( int i = 0 ; i < n ; i ++ ) cin >> a ; if ( f > k && temp != a ) break ; else if ( a > 0 ) count ++ ; temp = a ; f ++ ; cout << count << endl ; } int i , n , m , x ; return 0; }"}}
{"translation": {"en": "read n then m [ENDL] a = int array of size n [ENDL] for i = 1 to n inclusive read a [ i ] [ENDL] set x to 0 [ENDL] for i = 1 to n inclusive [ENDL] if ( a [ i ] > = a [ m ] ) and ( a [ i ] > 0 ) increment x [ENDL] print x [ENDL] let n , k be integers and 50th element of integer array a is 0", "c++": "int main() { cin >> n >> m ; int a [ n ] ; for ( i = 1 ; i <= n ; i ++ ) { cin >> a [ i ] ; } x = 0 ; for ( i = 1 ; i <= n ; i ++ ) if ( ( a [ i ] >= a [ m ] ) && ( a [ i ] > 0 ) ) x ++ ; cout << x << endl ; } int n , k , a [ 50 ] = { 0 } ; return 0; }"}}
{"translation": {"en": "read n and k [ENDL] for i = 0 to n exclusive , read a [ i ] [ENDL] if a [ k - 1 ] is not equal to 0 [ENDL] while a [ k - 1 ] is equal to a [ k ] , increment k by 1 [ENDL] print k and newline [ENDL] else do the following [ENDL] if k is equal to 1 [ENDL] print 0 and newline [ENDL] else do the following [ENDL] k is decremented by 1 [ENDL] while a [ k - 1 ] is equal to 0 , decrement k by 1 [ENDL] print k and newline [ENDL] n , k , a , b = long long integers", "c++": "int main() { cin >> n >> k ; for ( int i = 0 ; i < n ; i ++ ) { cin >> a [ i ] ; } if ( a [ k - 1 ] != 0 ) while ( a [ k - 1 ] == a [ k ] ) { k ++ ; } cout << k << endl ; else if ( k == 1 ) cout << 0 << endl ; else k -- ; while ( a [ k - 1 ] == 0 ) k -- ; cout << k << endl ; int n , k , a , b ; } } return 0; }"}}
{"translation": {"en": "Read n and k [ENDL] for i = 0 to n exclusive [ENDL] Read a [ENDL] if a is 0 [ENDL] print i and a new line [ENDL] for i = k to n exclusive [ENDL] Read b [ENDL] if b is not a [ENDL] print i and a new line [ENDL] print n and a new line [ENDL] ara = integer array of size 10000", "c++": "cin >> n >> k ; int main() { for ( int i = 0 ; i < k ; i ++ ) cin >> a ; if ( a == 0 ) cout << i << endl ; for ( int i = k ; i < n ; ++ i ) return 0; } } cin >> b ; if ( b != a ) cout << i << endl ; cout << n << endl ; return 0; } } int ara [ 10000 ] ; return 0; }"}}
{"translation": {"en": "n , k = integers [ENDL] read n , k [ENDL] cnt = integer with cnt = 0 [ENDL] for i = 0 to n exclusive , read ara [ i ] [ENDL] for i = 0 to n exclusive [ENDL] if ( ara [ i ] > = ara [ k - 1 ] and ara [ i ] > 0 ) , increment cnt [ENDL] print cnt [ENDL] x = integer array of size 1000001", "c++": "int main() { int n , k ; cin >> n >> k ; int cnt = 0 ; for ( int i = 0 ; i < n ; i ++ ) { cin >> ara [ i ] ; } for ( int i = 0 ; i < n ; i ++ ) if ( ara [ i ] >= ara [ k - 1 ] && ara [ i ] > 0 ) cnt ++ ; cout << cnt << endl ; } int x [ 1000001 ] ; }"}}
{"translation": {"en": "k , n , points = integers with points = 0 [ENDL] read n , k [ENDL] for i = 0 to n exclusive , read x [ i ] [ENDL] for i = 0 to n exclusive [ENDL] if ( x [ i ] > = x [ k - 1 ] and x [ i ] is not 0 ) increment points [ENDL] print points [ENDL] n , k = int", "c++": "int k , n , points = 0 ; int main() { cin >> n >> k ; for ( int i = 0 ; i < n ; i ++ ) { cin >> x [ i ] ; } for ( int i = 0 ; i < n ; i ++ ) if ( x [ i ] >= x [ k - 1 ] && x [ i ] != 0 ) points ++ ; cout << points << endl ; } int n , k ; return 0; }"}}
{"translation": {"en": "read n then k [ENDL] a = int array of size n [ENDL] noop [ENDL] i , 1 = int [ENDL] for i = 0 to n [ENDL] rad a [ i ] [ENDL] if k is i + 1 set t1 to a [ i ] [ENDL] sort a using greater of type int [ENDL] c = int with c = 0 [ENDL] for i = 0 to n [ENDL] if a [ i ] is not 0 and a [ i ] > = t1 increment c [ENDL] if a [ 0 ] is 0 [ENDL] print \" 0 \" [ENDL] else [ENDL] print c [ENDL] declare integers n , k , i , c = 0 , integer array A size 110", "c++": "int main() { cin >> n >> k ; int a [ n ] ; ; int i , t1 ; for ( i = 0 ; i < n ; i ++ ) cin >> a [ i ] ; if ( k == i + 1 ) t1 = a [ i ] ; sort ( a , a + n , greater < int > ( ) ) ; } int c = 0 ; for ( i = 0 ; i < n ; i ++ ) if ( a [ i ] != 0 && a [ i ] >= t1 ) c ++ ; if ( a [ 0 ] == 0 ) } cout << \" 0\\n \" ; else cout << c << \" \\n \" ; int n , k , i , A [ 110 ] , c = 0 ; }"}}
{"translation": {"en": "read n and k [ENDL] for i = 1 to n inclusive , read A [ i ] [ENDL] for i = 1 to n inclusive [ENDL] if A [ i ] is greater than or equal to A [ k ] ] and A [ i ] is greater than 0 , increment c [ENDL] print c and newline [ENDL] create int n , k , i , a [ 100 ] , cnt . set cnt to 0", "c++": "int main() { cin >> n >> k ; for ( i = 1 ; i <= n ; i ++ ) { cin >> A [ i ] ; } for ( i = 1 ; i <= n ; i ++ ) if ( A [ i ] >= A [ k ] && A [ i ] > 0 ) { c ++ ; } cout << c << endl ; } int n , k , i , a [ 100 ] , cnt = 0 ; return 0; }"}}
{"translation": {"en": "read n and k [ENDL] for i = 1 to n inclusive , read a [ i ] [ENDL] for i = 1 to n inclusive [ENDL] if a [ i ] > = a [ k ] and a [ i ] > 0 , increment cnt [ENDL] print cnt [ENDL] create integers n , k and ans with ans = 0 ; create an array of integers a with size 1000 filled with 0", "c++": "int main() { cin >> n >> k ; for ( i = 1 ; i <= n ; i ++ ) { cin >> a [ i ] ; } for ( i = 1 ; i <= n ; i ++ ) if ( a [ i ] >= a [ k ] && a [ i ] > 0 ) cnt ++ ; cout << cnt << endl ; } int n , k , a [ 1000 ] = { } , ans = 0 ; }"}}
{"translation": {"en": "read n and k [ENDL] read n elements into a [ENDL] change i in a loop from 0 to n exclusive [ENDL] increment ans if a [ i ] > = a [ k - 1 ] and a [ i ] > 0 [ENDL] print ans to the standard output [ENDL] declare integer array a size 101 , integers n , c , s = 0", "c++": "cin >> n >> k ; int main() { for ( int i = 0 ; i < n ; i ++ ) { cin >> a [ i ] ; } for ( int i = 0 ; i < n ; i ++ ) if ( a [ i ] >= a [ k - 1 ] and a [ i ] > 0 ) { ans ++ ; } cout << ans << endl ; } int a [ 101 ] , n , c , s = 0 ; return 0; }"}}
{"translation": {"en": "read n and c [ENDL] for i = 0 to n exclusive , read a [ i ] [ENDL] for i = 0 to n exclusive [ENDL] if a [ i ] is greater than 0 and a [ i ] is greater than or equal to a [ c - 1 ] , increment s by i [ENDL] print s and newline [ENDL] n , k = int", "c++": "int main() { cin >> n >> c ; for ( int i = 0 ; i < n ; i ++ ) cin >> a [ i ] ; for ( int i = 0 ; i < n ; i ++ ) if ( a [ i ] > 0 && a [ i ] >= a [ c - 1 ] ) s += 1 ; cout << s << endl ; } int n , k ; return 0; }"}}
{"translation": {"en": "read n and k [ENDL] let a pointer be a new int array of length n [ENDL] output = 0 = int [ENDL] for i = 0 to n exclusive [ENDL] read a at i [ENDL] if i < = k - 1 and a [ i ] is positive [ENDL] increment output [ENDL] else if i > k - 1 and a [ i ] is positive and a [ i ] = a [ k - 1 ] [ENDL] increment output [ENDL] else [ENDL] exit loop [ENDL] print output [ENDL] create new int variables n , k and sum with sum = 0 and a new int pointer * arr", "c++": "int main() { cin >> n >> k ; int * a = new int [ n ] ; int output = 0 ; for ( int i = 0 ; i < n ; i ++ ) cin >> a [ i ] ; if ( i <= ( k - 1 ) && a [ i ] > 0 ) output ++ ; else if ( i > ( k - 1 ) && a [ i ] > 0 && a [ i ] == a [ k - 1 ] ) output ++ ; else break ; cout << output << endl ; } int n , k , * arr , sum = 0 ; return 0; }"}}
{"translation": {"en": "read input to n and k [ENDL] set arr to point to the new integer array with n elements [ENDL] read n elements into arr [ENDL] in a for loop , change i from 0 to n exclusive [ENDL] if arr [ k - 1 ] = 0 [ENDL] if arr [ i ] is greater than arr [ k - 1 ] , add 1 to sum [ENDL] else [ENDL] if arr [ i ] > = arr [ k - 1 ] , change sum to sum + 1 [ENDL] print sum [ENDL] create ints x and y and int array ar of size 100", "c++": "int main() { cin >> n >> k ; arr = new int [ n ] ; for ( int i = 0 ; i < n ; i ++ ) { cin >> arr [ i ] ; } for ( int i = 0 ; i < n ; i ++ ) if ( arr [ k - 1 ] == 0 ) if ( arr [ i ] > arr [ k - 1 ] ) { sum += 1 ; } else if ( arr [ i ] >= arr [ k - 1 ] ) sum += 1 ; cout << sum << endl ; } } int x , y , ar [ 100 ] ; return 0; }"}}
{"translation": {"en": "make integer c = 0 [ENDL] read x and y [ENDL] for i = 0 to x exclusive [ENDL] read ar [ i ] [ENDL] if ar [ i ] is greater than or equal to ar [ y - 1 ] and ar [ i ] is greater than 0 [ENDL] print c [ENDL] create long long n , k", "c++": "int c = 0 ; int main() { cin >> x >> y ; for ( int i = 0 ; i < x ; i ++ ) cin >> ar [ i ] ; if ( ar [ i ] >= ar [ y - 1 ] && ar [ i ] > 0 ) c ++ ; cout << c << endl ; } long long n , k ; return 0; }"}}
{"translation": {"en": "read n and k [ENDL] if k mod n = 0 [ENDL] print k / n [ENDL] else [ENDL] print k / n + 1 [ENDL] n , k = long long", "c++": "cin >> n >> k ; int main() { if ( k % n == 0 ) cout << k / n << endl ; else cout << k / n + 1 << endl ; long long n , k ; return 0; }"}}
{"translation": {"en": "while read n , k [ENDL] ans = k / n [ENDL] if k is not multiple of n increment ans [ENDL] print ans [ENDL] create new long longs n and m", "c++": "int main() { while ( cin >> n >> k ) long long ans = k / n ; if ( k % n ) ans ++ ; cout << ans << endl ; long long n , m ; } return 0; }"}}
{"translation": {"en": "read user input to n and m [ENDL] if m % n ! = 0 [ENDL] print m / n + 1 to the output [ENDL] else [ENDL] print m / n [ENDL] create long long n , k , h", "c++": "int main() { cin >> n >> m ; if ( m % n != 0 ) cout << m / n + 1 << endl ; else cout << m / n << endl ; long long n , k , h ; }"}}
{"translation": {"en": "read n and k [ENDL] if k mod n = 0 [ENDL] print k / n [ENDL] else [ENDL] print k / n + 1 [ENDL] n , m = long long int", "c++": "int main() { cin >> n >> k ; if ( k % n == 0 ) cout << k / n << endl ; else cout << k / n + 1 << endl ; long long int n , m ; }"}}
{"translation": {"en": "read n then m [ENDL] if m < = n [ENDL] print \" 1 \" [ENDL] else [ENDL] if m is a multiple of n [ENDL] print m / n [ENDL] else [ENDL] print m / n + 1 [ENDL] n , k , h = long long int", "c++": "int main() { cin >> n >> m ; if ( m <= n ) cout << \" 1 \" << endl ; else if ( m % n == 0 ) cout << m / n << endl ; else cout << m / n + 1 << endl ; long long int n , k , h ; } } return 0; }"}}
{"translation": {"en": "read n , k [ENDL] if k < = n [ENDL] h = 1 [ENDL] else [ENDL] if k is not multiple of n [ENDL] h = k / n + 1 [ENDL] else [ENDL] h = k / n [ENDL] print h [ENDL] n , k = long long", "c++": "int main() { cin >> n >> k ; if ( k <= n ) h = 1 ; else if ( ( k % n ) != 0 ) h = k / n + 1 ; else h = k / n ; cout << h << endl ; } long long n , k ; return 0; }"}}
{"translation": {"en": "read n then k [ENDL] counts = long long with counts = 0 [ENDL] if k is not a multiple of n increment counts [ENDL] increment counts by k / n [ENDL] print counts [ENDL] MAXN = const int = 1e4 + 20", "c++": "int main() { cin >> n >> k ; long long counts = 0 ; if ( k % n ) counts ++ ; counts += k / n ; cout << counts << endl ; const int MAXN = 1e4 + 20 ; }"}}
{"translation": {"en": "const int = INF = 1e9 + 100 [ENDL] MOD = const int = 1e9 [ENDL] n , k = long long [ENDL] while read n and k , print ( k + n - 1 ) / n [ENDL] n , k , h = integers", "c++": "const int INF = 1e9 + 100 ; const int MOD = 1e9 ; long long n , k ; int main() { while ( cin >> n >> k ) { cout << ( k + n - 1 ) / n << endl ; } long long int n , k , h ; }"}}
{"translation": {"en": "Read n and k [ENDL] set h to k / n [ENDL] if h is not equal to 0 [ENDL] if k modulo n is equal to 0 [ENDL] print h and a new line [ENDL] else do the following [ENDL] print h + 1 and a new line [ENDL] else do the following [ENDL] print 1 and a new line [ENDL] create new long longs n and k", "c++": "int main() { cin >> n >> k ; h = ( k / n ) ; if ( h != 0 ) if ( k % n == 0 ) cout << h << endl ; else cout << h + 1 << endl ; else } cout << 1 << endl ; long long n , k ; } return 0; }"}}
{"translation": {"en": "loop , reading n and k from the input [ENDL] if k % n = 0 [ENDL] print k / n [ENDL] else [ENDL] print k / n + 1 [ENDL] n , k = integers", "c++": "int main() { while ( cin >> n >> k ) if ( k % n == 0 ) cout << k / n << endl ; else cout << k / n + 1 << endl ; long long n , k ; } return 0; }"}}
{"translation": {"en": "while reading values n , k [ENDL] if k modulo n is 0 [ENDL] print k / n and a new line [ENDL] else do the following [ENDL] print k / n + 1 and a new line [ENDL] n , k , h = integers", "c++": "int main() { while ( cin >> n >> k ) if ( k % n == 0 ) cout << k / n << endl ; else cout << k / n + 1 << endl ; long long int n , k , h ; } return 0; }"}}
{"translation": {"en": "while reading values n , k , h [ENDL] if n is 0 OR k is 0 , then Terminate the loop [ENDL] set h to k / n [ENDL] if k modulo n is 0 [ENDL] print h and a new line [ENDL] else do the following [ENDL] print h + 1 and a new line [ENDL] let n , k be long integers", "c++": "int main() { while ( cin >> n >> k ) if ( n == 0 || k == 0 ) break ; h = k / n ; if ( k % n == 0 ) cout << h << endl ; else cout << h + 1 << endl ; long long n , k ; } return 0; }"}}
{"translation": {"en": "read n , k [ENDL] if n > = k [ENDL] print 1 and newline [ENDL] else if k modulo n equals 0 [ENDL] print k / n and newline [ENDL] else do the following [ENDL] print k / n + 1 and newline [ENDL] n , k = long long", "c++": "int main() { cin >> n >> k ; if ( n >= k ) cout << \" 1 \" << endl ; else if ( k % n == 0 ) cout << k / n << endl ; else cout << k / n + 1 << endl ; long long n , k ; return 0; }"}}
{"translation": {"en": "read n then k [ENDL] if n > = k [ENDL] print 1 [ENDL] else [ENDL] if k is a multiple of n [ENDL] print k / n [ENDL] else [ENDL] print k / n + 1 [ENDL] define new long longs n and s", "c++": "int main() { cin >> n >> k ; if ( n >= k ) cout << 1 << endl ; else if ( k % n == 0 ) cout << k / n << endl ; else cout << k / n + 1 << endl ; long long n , s ; } return 0; }"}}
{"translation": {"en": "read n and s from the user input [ENDL] print ( s / n ) + ( 1 if s modulo n ! = 0 , or 0 otherwise ) [ENDL] a = int", "c++": "int main() { cin >> n >> s ; cout << ( s / n ) + ( s % n != 0 ) << endl ; int a ; return 0; }"}}
{"translation": {"en": "n , k = long long [ENDL] read n , k [ENDL] if k < = n [ENDL] print 1 [ENDL] else [ENDL] if k is multiple of n [ENDL] print k / n [ENDL] else [ENDL] print k / n + 1 [ENDL] create long long n , k", "c++": "int main() { long long n , k ; cin >> n >> k ; if ( k <= n ) cout << 1 << endl ; else if ( k % n == 0 ) cout << k / n << endl ; else cout << k / n + 1 << endl ; long long n , k ; } } return 0; }"}}
{"translation": {"en": "while read n and k [ENDL] if k < = n [ENDL] print 1 [ENDL] else if k mod n = 0 [ENDL] print k / n [ENDL] else if k mod n different from 0 [ENDL] print k / n + 1 [ENDL] n , l = long long", "c++": "while ( cin >> n >> k ) int main() { if ( k <= n ) cout << 1 << endl ; else if ( k % n == 0 ) cout << k / n << endl ; else if ( k % n != 0 ) cout << k / n + 1 << endl ; long long n , k ; } }"}}
{"translation": {"en": "function c1 ( get long long n and k , return long long ) [ENDL] if n is multiple of k return n / k [ENDL] return n / k + 1 [ENDL] read n [ENDL] print cl ( k , n ) [ENDL] n , k = integers", "c++": "long long cl ( long long n , long long k ) if ( n % k == 0 ) return n / k ; return n / k + 1 ; cin >> n >> k ; } int main() { cout << cl ( k , n ) << \" \\n \" ; long long n , k ; return 0; }"}}
{"translation": {"en": "while reading values n , k [ENDL] ans = integer , set to k / n [ENDL] if k modulo n , then increment ans [ENDL] print ans and a new line [ENDL] create new long longs n and m", "c++": "while ( cin >> n >> k ) int main() { long long ans = k / n ; if ( k % n ) ans ++ ; cout << ans << endl ; long long n , m ; } return 0; }"}}
{"translation": {"en": "read n and m from the user input [ENDL] if n > = m [ENDL] print 1 [ENDL] else [ENDL] if m % n = 0 [ENDL] print m / n [ENDL] else [ENDL] print m / n + 1 [ENDL] n , k = integers", "c++": "int main() { cin >> n >> m ; if ( n >= m ) cout << 1 << endl ; else if ( m % n == 0 ) cout << m / n << endl ; else cout << m / n + 1 << endl ; long long n , k ; } return 0; }"}}
{"translation": {"en": "Read n and k [ENDL] if k modulo n is 0 [ENDL] print k / n and a new line [ENDL] else do the following [ENDL] print k / n + 1 and a new line [ENDL] n = integer", "c++": "int main() { for ( ; cin >> n >> k ; ) if ( k % n == 0 ) cout << k / n << endl ; else cout << k / n + 1 << endl ; int n ; } return 0; }"}}
{"translation": {"en": "read n [ENDL] if ( ( n modulo 3 ) is 1 ) , decrement n [ENDL] if ( ( n modulo 3 ) is 2 ) , increment n [ENDL] n = n / 3 [ENDL] feet = integer with feet = n / 12 [ENDL] inch = integer with inch = n modulo 12 [ENDL] print feet , \" \" , inch [ENDL] let n be a integer", "c++": "int main() { cin >> n ; if ( ( n % 3 ) == 1 ) n -- ; if ( ( n % 3 ) == 2 ) n ++ ; n /= 3 ; int feet = n / 12 ; int inch = n % 12 ; cout << feet << \"   \" << inch << endl ; int n ; return 0; }"}}
{"translation": {"en": "read n [ENDL] let ans1 be a integer with ans1 = n / 3 [ENDL] n is equal to n modulo 3 [ENDL] if n > = 2 , increment ans1 by 1 [ENDL] let ans2 be a integer with ans2 = ans1 / 12 [ENDL] ans1 is equal to ans1 modulo 12 [ENDL] print ans2 and space and ans1 and newline [ENDL] let n an int", "c++": "int main() { cin >> n ; int ans1 = n / 3 ; n %= 3 ; if ( n >= 2 ) { ans1 ++ ; } int ans2 = ans1 / 12 ; ans1 %= 12 ; cout << ans2 << \"   \" << ans1 << endl ; int n ; return 0; }"}}
{"translation": {"en": "read n [ENDL] let inches an int with value n / 3 [ENDL] if n mod 3 is 2 , add 1 to inches [ENDL] print inches / 12 , followed by a space , followed by inches mod 12 [ENDL] let n be a integer", "c++": "int main() { cin >> n ; int inches = n / 3 ; if ( n % 3 == 2 ) inches += 1 ; cout << inches / 12 << \"   \" << inches % 12 << endl ; int n ; }"}}
{"translation": {"en": "read n [ENDL] let k be a integer with k = ( n + 1 ) / 3 [ENDL] print k / 12 and space and k modulo 12 and newline [ENDL] create new integer called n", "c++": "int main() { cin >> n ; int k = ( n + 1 ) / 3 ; cout << k / 12 << \"   \" << k % 12 << endl ; int n ; return 0; }"}}
{"translation": {"en": "read standard input to n [ENDL] define new integer variable a = n / 36 [ENDL] define new integer b with value ( n - 36 * a ) / 3 [ENDL] c is a new integer variable with value n - 36 * a - b * 3 [ENDL] if c = 2 , increase b by 1 [ENDL] if b = 12 [ENDL] add 1 to a [ENDL] assign 0 to b [ENDL] print a , \" \" and b [ENDL] n is a new integer", "c++": "int main() { cin >> n ; int a = n / 36 ; int b = ( n - 36 * a ) / 3 ; int c = n - 36 * a - b * 3 ; if ( c == 2 ) b ++ ; if ( b == 12 ) a ++ ; b = 0 ; cout << a << \"   \" << b << endl ; } int n ; return 0; }"}}
{"translation": {"en": "read user input to n [ENDL] print ( n + 1 ) / 36 and \" \" [ENDL] change the value of n to n modulo 36 [ENDL] if ( n + 1 ) / 36 < = n / 36 [ENDL] print ( n + 1 ) / 3 [ENDL] else [ENDL] print 0 to the standard output [ENDL] n = integer", "c++": "int main() { cin >> n ; cout << ( n + 1 ) / 36 << \"   \" ; n %= 36 ; if ( ( n + 1 ) / 36 <= n / 36 ) cout << ( n + 1 ) / 3 << endl ; else cout << 0 << endl ; int n ; return 0; }"}}
{"translation": {"en": "read n [ENDL] if ( ( n + 1 ) modulo 36 is 0 ) , increment n [ENDL] ft = integer with ft = n / 36 [ENDL] n = n modulo 36 [ENDL] in = integer [ENDL] if ( n modulo 3 is 0 or ( n - 1 ) modulo 3 is 0 ) [ENDL] in = n / 3 [ENDL] else [ENDL] in = n / 3 + 1 [ENDL] print ft , ' ' , in [ENDL] create integer n", "c++": "int main() { cin >> n ; if ( ( n + 1 ) % 36 == 0 ) n ++ ; int ft = n / 36 ; n %= 36 ; int in ; if ( n % 3 == 0 || ( n - 1 ) % 3 == 0 ) in = n / 3 ; else in = n / 3 + 1 ; cout << ft << '   ' << in << ' \\n ' ; int n ; return 0; }"}}
{"translation": {"en": "read standard input to n [ENDL] define new integer inches with value n / 3 + ( n modulo 3 > 1 ) [ENDL] print inches / 12 , \" \" , inches modulo 12 and \" \\ n \" [ENDL] n = integer", "c++": "int main() { cin >> n ; int inches = n / 3 + ( n % 3 > 1 ) ; cout << inches / 12 << \"   \" << inches % 12 << \" \\n \" ; int n ; return 0; }"}}
{"translation": {"en": "Read n [ENDL] c = integer , set to n / 3 [ENDL] if n modulo 3 is 2 , then set c to c + 1 [ENDL] print c / 12 , c modulo 12 and a new line [ENDL] n , foot , inch , x = integers", "c++": "int main() { cin >> n ; int c = n / 3 ; if ( n % 3 == 2 ) { c += 1 ; } cout << c / 12 << '   ' << c % 12 << endl ; int n , foot , inch , x ; return 0; }"}}
{"translation": {"en": "Read n [ENDL] set foot to n / 36 [ENDL] set x to n modulo 36 [ENDL] if x is equal to 35 [ENDL] increment foot [ENDL] set inch to 0 [ENDL] print foot , inch and a new line [ENDL] else do the following [ENDL] set inch to x / 3 [ENDL] if x modulo 3 is 2 , then increment inch [ENDL] print foot , inch and a new line [ENDL] n = integer", "c++": "int main() { cin >> n ; foot = n / 36 ; x = n % 36 ; if ( x == 35 ) foot ++ ; inch = 0 ; cout << foot << '   ' << inch << endl ; else inch = x / 3 ; if ( x % 3 == 2 ) inch ++ ; cout << foot << '   ' << inch << endl ; int n ; } return 0; }"}}
{"translation": {"en": "read n [ENDL] k = integer with k = ( n + 1 ) / 3 [ENDL] print k / 12 , ' ' , k modulo 12 [ENDL] m = long long", "c++": "int main() { cin >> n ; int k = ( n + 1 ) / 3 ; cout << k / 12 << '   ' << k % 12 << endl ; long long m ; return 0; }"}}
{"translation": {"en": "n = double [ENDL] read n [ENDL] m = round ( n / 3 ) [ENDL] print m / 12 , space , m modulo 12 [ENDL] n = long long", "c++": "int main() { double n ; cin >> n ; m = ( long long ) round ( n / 3 ) ; cout << m / 12 << \"   \" << m % 12 << endl ; long long n ; }"}}
{"translation": {"en": "read n [ENDL] ft , cm = long long with ft = ( n / 36 ) and cm = n - ( 36 * ft ) [ENDL] in = long long with in = cm / 3 [ENDL] if cm mod 3 is 2 increment in [ENDL] if in is 12 increment ft then set in to 0 [ENDL] print ft and in [ENDL] new integer variable n", "c++": "int main() { cin >> n ; long long ft = ( n / 36 ) , cm = n - ( 36 * ft ) ; long long in = cm / 3 ; if ( cm % 3 == 2 ) in ++ ; if ( in == 12 ) ft ++ , in = 0 ; cout << ft << \"   \" << in << endl ; int n ; }"}}
{"translation": {"en": "read n and keep looping [ENDL] new integer variable inches with value ( n + 1 ) / 3 [ENDL] define new integer foot = inches / 12 [ENDL] print foot and \" \" [ENDL] if inches - foot * 12 < = 0 [ENDL] print \" 0 \" [ENDL] else [ENDL] print inches - foot * 12 [ENDL] n , x , y = integers", "c++": "int main() { while ( cin >> n ) int inches = ( n + 1 ) / 3 ; int foot = ( inches ) / 12 ; cout << foot << \"   \" ; if ( inches - foot * 12 <= 0 ) cout << \" 0 \" << endl ; else cout << inches - foot * 12 << endl ; int n , x , y ; } }"}}
{"translation": {"en": "read n [ENDL] set x to n / 36 [ENDL] set n to n - x * 36 [ENDL] if n mod 3 equals 2 [ENDL] set y to n / 3 + 1 [ENDL] else [ENDL] set y to n / 3 [ENDL] if y equals 12 [ENDL] print x + 1 space 0 [ENDL] else [ENDL] print x space y [ENDL] create integer n", "c++": "int main() { cin >> n ; x = n / 36 ; n = n - x * 36 ; if ( n % 3 == 2 ) y = n / 3 + 1 ; else y = n / 3 ; if ( y == 12 ) cout << x + 1 << \"   \" << 0 << endl ; else cout << x << \"   \" << y << endl ; int n ; }"}}
{"translation": {"en": "read n [ENDL] make int inch = 0 [ENDL] create integer feet = n / 36 [ENDL] subtract ( n / 36 ) * 36 from n [ENDL] if n is 35 [ENDL] increment feet [ENDL] else do [ENDL] set inch to n / 3 [ENDL] set n to n - ( n / 3 ) * 3 [ENDL] if n is equal to 2 , increment inch [ENDL] show feet , \" \" , and inch [ENDL] define new integer constant INF with value 0x3f3f3f3f", "c++": "int main() { cin >> n ; int inch = 0 ; int feet = n / 36 ; n -= ( n / 36 ) * 36 ; if ( n == 35 ) ++ feet ; else inch = n / 3 ; n -= ( n / 3 ) * 3 ; if ( n == 2 ) ++ inch ; cout << feet << \"   \" << inch << endl ; } const int INF = 0x3f3f3f3f ; return 0; }"}}
{"translation": {"en": "declare long long variables i , j and k [ENDL] create new long longs n and m [ENDL] read input to n [ENDL] assign n modulo 3 to k [ENDL] divide n by 3 [ENDL] if k is equal to 2 , increment n [ENDL] print n / 12 , ' ' and n modulo 12 to the output [ENDL] declare new integer variable n", "c++": "long long i , j , k ; int main() { long long n , m ; cin >> n ; k = n % 3 ; n /= 3 ; if ( k == 2 ) n ++ ; cout << n / 12 << '   ' << n % 12 << endl ; int n ; return 0; }"}}
{"translation": {"en": "read n from the user input [ENDL] create new integer m = n / 36 [ENDL] define integer q with value ( n % 36 ) / 3 [ENDL] mo is a new integer with value n modulo 36 modulo 3 [ENDL] if mo is equal to 2 , add 1 to q [ENDL] assign 0 to q and increment m by one , if q = 12 [ENDL] print m , \" \" and q [ENDL] create long longs n , inches and feets", "c++": "int main() { cin >> n ; int m = n / 36 ; int q = ( n % 36 ) / 3 ; int mo = ( n % 36 ) % 3 ; if ( mo == 2 ) q += 1 ; if ( q == 12 ) q = 0 , m ++ ; cout << m << \"   \" << q << endl ; long long n , inches , feets ; }"}}
{"translation": {"en": "read variable n from the input [ENDL] set inches to n / 3 [ENDL] if n modulo 3 is 2 , add 1 to inches [ENDL] change feets to inches / 12 [ENDL] subtract feets * 12 from inches [ENDL] print feets , \" \" and inches [ENDL] define ints n , ft , inch and r", "c++": "int main() { cin >> n ; inches = n / 3 ; if ( n % 3 == 2 ) inches += 1 ; feets = inches / 12 ; inches -= feets * 12 ; cout << feets << \"   \" << inches << endl ; int n , ft , inch , r ; return 0; }"}}
{"translation": {"en": "read variable n from the input [ENDL] assign the new value = n / 36 to ft [ENDL] set inch to ( n modulo 36 ) / 3 [ENDL] change the value of r to ( n % 36 ) % 3 [ENDL] increment inch if r is greater than 1 [ENDL] if inch is 12 [ENDL] add one to ft [ENDL] set inch to 0 [ENDL] print ft , \" \" and inch to the standard output [ENDL] let m be a map from integers to integers", "c++": "int main() { cin >> n ; ft = n / 36 ; inch = ( n % 36 ) / 3 ; r = ( n % 36 ) % 3 ; if ( r > 1 ) inch ++ ; if ( inch == 12 ) ft ++ ; inch = 0 ; cout << ft << \"   \" << inch << endl ; } map < int , int > m ; return 0; }"}}
{"translation": {"en": "create ints t , x , c and y with c and y = 1 [ENDL] read t [ENDL] create boolean variable hard with value false [ENDL] start for loop from i = 0 to t exclusive incrementing i [ENDL] read variable x from the input [ENDL] if m [ x ] > = c [ENDL] increment m [ x ] by one [ENDL] if m [ x ] is greater than y , assign the new value = m [ x ] to y [ENDL] else [ENDL] change the value of m [ x ] to c [ENDL] if m [ x ] is greater than y , set y to m [ x ] [ENDL] print t - y [ENDL] n = integer", "c++": "int main() { int t , x , c = 1 , y = 1 ; cin >> t ; bool hard = false ; for ( int i = 0 ; i < t ; i ++ ) cin >> x ; if ( m [ x ] >= c ) m [ x ] ++ ; if ( m [ x ] > y ) y = m [ x ] ; else m [ x ] = c ; if ( m [ x ] > y ) y = m [ x ] ; cout << t - y << endl ; } } int n ; return 0; }"}}
{"translation": {"en": "Read n [ENDL] j , d , t = integers with all set to 0 [ENDL] for i = 0 to n exclusive [ENDL] Read temp [ENDL] if temp is equal to 1 [ENDL] increment j [ENDL] else if temp is equal to 2 [ENDL] increment d [ENDL] else do the following [ENDL] increment t [ENDL] set maximum value of ( maximum value of ( j and t ) and maximum value of ( j and d ) ) [ENDL] print n - temp and a new line [ENDL] v is a new array of integers with 5 elements", "c++": "int main() { cin >> n ; int temp , j = 0 , d = 0 , t = 0 ; for ( int i = 0 ; i < n ; i ++ ) cin >> temp ; if ( temp == 1 ) j ++ ; else if ( temp == 2 ) d ++ ; else t ++ ; temp = max ( max ( j , t ) , max ( j , d ) ) ; } cout << n - temp << endl ; int v [ 5 ] ; return 0; }"}}
{"translation": {"en": "create new integer variable n [ENDL] read variable n from the input [ENDL] incrementi i in a for loop , changing it from 1 to n inclusive [ENDL] create new integer called x [ENDL] read from the input to x [ENDL] increment v [ x ] by one [ENDL] maxi is a new integer variable = max of v [ 1 ] and max ( v [ 2 ] , v [ 3 ] ) [ENDL] print n - maxi [ENDL] let n be a integer", "c++": "int n ; int main() { cin >> n ; for ( int i = 1 ; i <= n ; i ++ ) int x ; cin >> x ; v [ x ] ++ ; int maxi = max ( v [ 1 ] , max ( v [ 2 ] , v [ 3 ] ) ) ; } cout << n - maxi << endl ; int n ; return 0; }"}}
{"translation": {"en": "read n [ENDL] a = array of integers of length 1000005 [ENDL] let n1 , n2 , n3 be integers [ENDL] for i = 0 to n exclusive [ENDL] read a [ i ] [ENDL] if a [ i ] is equal to 1 [ENDL] increment n1 by 1 [ENDL] else if a [ i ] is equal to 2 [ENDL] increment n2 by 1 [ENDL] else do the following [ENDL] increment n3 by 1 [ENDL] if ( n1 > = n2 ) and ( n1 > = n3 ) [ENDL] print n - n1 and newline [ENDL] else if ( n2 > = n1 ) and ( n2 > = n3 ) [ENDL] print n - n2 and newline [ENDL] else do the following [ENDL] print n - n3 and newline [ENDL] set num [ 4 ] = { 0 }", "c++": "int main() { cin >> n ; int a [ 1000005 ] ; int n1 , n2 , n3 ; for ( int i = 0 ; i < n ; i ++ ) cin >> a [ i ] ; if ( a [ i ] == 1 ) n1 ++ ; else if ( a [ i ] == 2 ) n2 ++ ; else n3 ++ ; if ( ( n1 >= n2 ) && ( n1 >= n3 ) ) } cout << n - n1 << endl ; else if ( ( n2 >= n1 ) && ( n2 >= n3 ) ) cout << n - n2 << endl ; else cout << n - n3 << endl ; int num [ 4 ] = { 0 } ; return 0; }"}}
{"translation": {"en": "create int n [ENDL] read n [ENDL] for i = 1 to n inclusive [ENDL] create int tmp [ENDL] read tmp [ENDL] increment num [ tmp ] [ENDL] if num [ 1 ] > = num [ 2 ] and num [ 1 ] > = num [ 3 ] [ENDL] print num [ 2 ] + num [ 3 ] [ENDL] else if num [ 2 ] > = num [ 1 ] and num [ 2 ] > = num [ 3 ] [ENDL] print num [ 1 ] + num [ 3 ] [ENDL] else [ENDL] print num [ 1 ] + num [ 2 ] [ENDL] freq = array of 3 int", "c++": "int main() { int n ; cin >> n ; for ( int i = 1 ; i <= n ; i ++ ) int tmp ; cin >> tmp ; num [ tmp ] ++ ; if ( num [ 1 ] >= num [ 2 ] && num [ 1 ] >= num [ 3 ] ) } cout << num [ 2 ] + num [ 3 ] << endl ; else if ( num [ 2 ] >= num [ 1 ] && num [ 2 ] >= num [ 3 ] ) cout << num [ 1 ] + num [ 3 ] << endl ; else cout << num [ 1 ] + num [ 2 ] << endl ; int freq [ 3 ] ; return 0; }"}}
{"translation": {"en": "a , b , mx = int [ENDL] read a [ENDL] for i = 0 to a exclusive [ENDL] read b [ENDL] increment freq [ b - 1 ] [ENDL] mx = max of freq items [ENDL] print a - mx [ENDL] let n be an integer", "c++": "int a , b , mx ; int main() { cin >> a ; for ( int i = 0 ; i < a ; i ++ ) cin >> b ; freq [ b - 1 ] ++ ; mx = max ( max ( freq [ 0 ] , freq [ 1 ] ) , freq [ 2 ] ) ; } cout << a - mx << endl ; int n ; return 0; }"}}
{"translation": {"en": "read n [ENDL] let a , b , c be integers with value of 0 [ENDL] for int i = 0 to n [ENDL] let x be an integer [ENDL] read x [ENDL] if x equals 1 , add one to a [ENDL] if x equals 2 , add one to b [ENDL] if x equals 3 , add one to c [ENDL] if a is greater or equal to b and a is greater or equal to c [ENDL] print b + c [ENDL] else if b is greater or equal to a and b is greater or equal to c [ENDL] print a + c [ENDL] else if c is greater or equal to a and c is greater or equal to b [ENDL] print a + b [ENDL] let n be integer", "c++": "int main() { cin >> n ; int a = 0 , b = 0 , c = 0 ; for ( int i = 0 ; i < n ; i ++ ) int x ; cin >> x ; if ( x == 1 ) a ++ ; if ( x == 2 ) b ++ ; if ( x == 3 ) c ++ ; if ( a >= b && a >= c ) } cout << b + c << endl ; else if ( b >= a && b >= c ) cout << a + c << endl ; else if ( c >= a && c >= b ) cout << a + b << endl ; int n ; return 0; }"}}
{"translation": {"en": "read n [ENDL] let freq be integer array of length 3 and initiate it to blank [ENDL] for i = 0 to n exclusive [ENDL] let x be integer [ENDL] read x [ENDL] call freq with x - 1 and increment [ENDL] let m be integer and assign max ( freq [ 0 ] , max ( freq [ 1 ] , freq [ 2 ] ) ) to m [ENDL] print n - m [ENDL] create int n , i , j , k , x", "c++": "int main() { cin >> n ; int freq [ 3 ] = { } ; for ( int i = 0 ; i < n ; i ++ ) int x ; cin >> x ; freq [ x - 1 ] ++ ; int m = max ( freq [ 0 ] , max ( freq [ 1 ] , freq [ 2 ] ) ) ; } cout << n - m << endl ; int n , i , j , k , x ; }"}}
{"translation": {"en": "crate vector int ct [ENDL] read n [ENDL] for i = 0 to n exclusive [ENDL] read x [ENDL] increment ct [ x ] [ENDL] print n - max of ct [ 1 ] and max ( ct [ 2 ] , ct [ 3 ] ) , and a newline [ENDL] ; [ENDL] a = array of 11 integers", "c++": "int main() { vector < int > ct ( 4 , 0 ) ; cin >> n ; for ( i = 0 ; i < n ; i ++ ) cin >> x ; ct [ x ] ++ ; cout << n - max ( ct [ 1 ] , max ( ct [ 2 ] , ct [ 3 ] ) ) << \" \\n \" ; } ; int a [ 11 ] ; return 0; }"}}
{"translation": {"en": "n , i , x = integers [ENDL] Read n [ENDL] for i = 1 to n exclusive [ENDL] Read x [ENDL] increment a [ x ] [ENDL] max = integer , set to - 1 [ENDL] for i = 1 to 3 exclusive [ENDL] if a [ i ] is greater than max , set max to a [ i ] [ENDL] print n - max and a new line [ENDL] create int n", "c++": "int n , i , x ; int main() { cin >> n ; for ( i = 1 ; i <= n ; i ++ ) cin >> x ; a [ x ] ++ ; int max = - 1 ; } for ( i = 1 ; i <= 3 ; i ++ ) if ( a [ i ] > max ) max = a [ i ] ; cout << n - max << endl ; } int n ; }"}}
{"translation": {"en": "read n [ENDL] set a , b and c = 0 [ENDL] for i = 0 to n exclusive [ENDL] create int x [ENDL] read x [ENDL] if x = 1 , increment a [ENDL] if x = 2 , increment b [ENDL] if x = 3 , add 1 to c [ENDL] if a > = b and a > = c [ENDL] print b + c [ENDL] else if b > = a and b > = c [ENDL] print a + c [ENDL] else if c > = a and c > = b [ENDL] print a + b [ENDL] a = integer array of size 1000005", "c++": "int main() { cin >> n ; int a = 0 , b = 0 , c = 0 ; for ( int i = 0 ; i < n ; i ++ ) int x ; cin >> x ; if ( x == 1 ) a ++ ; if ( x == 2 ) b ++ ; if ( x == 3 ) c ++ ; if ( a >= b && a >= c ) } cout << b + c << endl ; else if ( b >= a && b >= c ) cout << a + c << endl ; else if ( c >= a && c >= b ) cout << a + b << endl ; int a [ 1000005 ] ; return 0; }"}}
{"translation": {"en": "in the function max that takes integer a , b and returns integer [ENDL] return if a > b , a else b [ENDL] n = integer [ENDL] read n [ENDL] x , y , z = integers x = 0 , y = 0 , z = 0 [ENDL] for i = 0 to n exclusive [ENDL] read a [ i ] [ENDL] if ( a [ i ] is 1 ) , increment x [ENDL] if ( a [ i ] is 2 ) , increment y [ENDL] if ( a [ i ] is 3 ) , increment z [ENDL] print x + y + z - max ( max ( x , y ) , z ) [ENDL] num = int array of length 4", "c++": "int max ( int a , int b ) return a > b ? a : b ; int n ; } int main() { cin >> n ; int x = 0 , y = 0 , z = 0 ; for ( int i = 0 ; i < n ; i ++ ) cin >> a [ i ] ; if ( a [ i ] == 1 ) { x ++ ; } if ( a [ i ] == 2 ) { y ++ ; } if ( a [ i ] == 3 ) { z ++ ; } cout << x + y + z - max ( max ( x , y ) , z ) << endl ; } int num [ 4 ] ; return 0; }"}}
{"translation": {"en": "n = int [ENDL] read n [ENDL] for i = 0 to n exclusive [ENDL] a = int [ENDL] read a [ENDL] increment num at a [ENDL] max_num = - 1 = int [ENDL] for i = 1 to 3 inclusive [ENDL] if num [ i ] > max_num then set max_num to num at i [ENDL] print n - max_num [ENDL] create int A [ 4 ]", "c++": "int n ; int main() { cin >> n ; for ( int i = 0 ; i < n ; i ++ ) int a ; cin >> a ; num [ a ] ++ ; int max_num = - 1 ; } for ( int i = 1 ; i <= 3 ; i ++ ) if ( num [ i ] > max_num ) { max_num = num [ i ] ; } cout << n - max_num << endl ; } int A [ 4 ] ; }"}}
{"translation": {"en": "create int n and inp [ENDL] read n [ENDL] while read inp , pre increment A [ inp ] [ENDL] print n - max ( A [ 1 ] , max ( A [ 2 ] , A [ 3 ] ) ) [ENDL] create long long n and a", "c++": "int n , inp ; int main() { cin >> n ; while ( cin >> inp ) ++ A [ inp ] ; cout << n - max ( A [ 1 ] , max ( A [ 2 ] , A [ 3 ] ) ) << endl ; long long n , a ; return 0; }"}}
{"translation": {"en": "read n [ENDL] if n is even [ENDL] a = n / 2 [ENDL] else [ENDL] set ( ( n + 1 ) / 2 ) * ( - 1 ) [ENDL] print a [ENDL] let n be a long integer", "c++": "int main() { cin >> n ; if ( n % 2 == 0 ) a = n / 2 ; else a = ( ( n + 1 ) / 2 ) * ( - 1 ) ; cout << a << endl ; long long n ; return 0; }"}}
{"translation": {"en": "read n [ENDL] if n modulo 2 is equal to 0 [ENDL] print n / 2 and newline [ENDL] else do the following [ENDL] print ( - n - 1 ) / 2 and newline [ENDL] in function MIN taking long long int a , long long int b and returning long long int", "c++": "int main() { cin >> n ; if ( n % 2 == 0 ) cout << n / 2 << endl ; else cout << ( - n - 1 ) / 2 << endl ; long long int MIN ( long long int a , long long int b ) } return 0; }"}}
{"translation": {"en": "if a > b [ENDL] return b [ENDL] else [ENDL] return a [ENDL] in function MAX taking long long int a , long long int b and returning long long int [ENDL] if a > b [ENDL] return a [ENDL] else [ENDL] return b [ENDL] in function MOD taking long long int x and returning long long int [ENDL] if x > = 0 [ENDL] return x [ENDL] else [ENDL] return - x [ENDL] n = long long int [ENDL] read n [ENDL] if n is even [ENDL] print n / 2 [ENDL] else [ENDL] d = long long int with d = n / 2 [ENDL] decrement d by n [ENDL] print d [ENDL] n , a = long long", "c++": "if ( a > b ) return b ; else return a ; long long int MAX ( long long int a , long long int b ) } if ( a > b ) return a ; else return b ; long long int MOD ( long long int x ) } if ( x >= 0 ) return x ; else return - x ; long long int n ; } int main() { cin >> n ; if ( n % 2 == 0 ) cout << n / 2 << endl ; else long long int d = n / 2 ; d -= n ; cout << d << endl ; long long n , a ; } return 0; }"}}
{"translation": {"en": "read n [ENDL] set a to n / 2 [ENDL] if n is even [ENDL] print a [ENDL] else [ENDL] print a - n [ENDL] declare long longs a , b = 0", "c++": "int main() { cin >> n ; a = n / 2 ; if ( n % 2 == 0 ) cout << a << endl ; else cout << a - n << endl ; long long a , b = 0 ; }"}}
{"translation": {"en": "read a [ENDL] declare integer i [ENDL] if a % 2 is not 0 [ENDL] let i be - 1 [ENDL] else [ENDL] let i be 0 [ENDL] let b be a / 2 * ( - 1 raised to power of a % 2 ) + i [ENDL] print b and newline [ENDL] create long long n", "c++": "int main() { cin >> a ; int i ; if ( a % 2 != 0 ) i = - 1 ; else i = 0 ; b = a / 2 * powl ( - 1 , a % 2 ) + i ; } cout << b << endl ; long long n ; return 0; }"}}
{"translation": {"en": "read n [ENDL] if n is even [ENDL] print n / 2 [ENDL] else [ENDL] print - ( n + 1 ) / 2 [ENDL] create long long int n", "c++": "int main() { cin >> n ; if ( n % 2 == 0 ) cout << n / 2 << endl ; else cout << - ( n + 1 ) / 2 << endl ; long long int n ; return 0; }"}}
{"translation": {"en": "read n [ENDL] if n is even [ENDL] print n / 2 [ENDL] else [ENDL] print - , ( n + 1 ) / 2 [ENDL] declare long longs n , a", "c++": "int main() { cin >> n ; if ( n % 2 == 0 ) cout << n / 2 << endl ; else cout << \" - \" << ( n + 1 ) / 2 << endl ; long long n , a ; return 0; }"}}
{"translation": {"en": "read n [ENDL] if n % 2 is 0 [ENDL] let a be n / 2 [ENDL] else [ENDL] let a be ( ( n + 1 ) / 2 ) * ( - 1 ) [ENDL] print a and newline [ENDL] create long long int n", "c++": "int main() { cin >> n ; if ( n % 2 == 0 ) a = n / 2 ; else a = ( ( n + 1 ) / 2 ) * ( - 1 ) ; cout << a << endl ; long long int n ; return 0; }"}}
{"translation": {"en": "read n [ENDL] if n is even [ENDL] print n / 2 [ENDL] else if n = 1 [ENDL] print - 1 and a newline [ENDL] create long long int div [ENDL] div = n / 2 [ENDL] set n = ( n * ( - 1 ) ) + div [ENDL] print n [ENDL] n = 0", "c++": "int main() { cin >> n ; if ( n % 2 == 0 ) cout << n / 2 << endl ; else if ( n == 1 ) return 0; cout << \" -1\\n \" ; long long int div ; return 0; } div = n / 2 ; n = ( n * ( - 1 ) ) + div ; cout << n << endl ; long long int n = 0 ; return 0; }"}}
{"translation": {"en": "read n [ENDL] if n is even [ENDL] print n / 2 [ENDL] else [ENDL] print - ( ( n + 1 ) / 2 ) [ENDL] n = long long int", "c++": "int main() { cin >> n ; if ( n % 2 == 0 ) cout << n / 2 << endl ; else cout << - ( ( n + 1 ) / 2 ) << endl ; long long int n ; }"}}
{"translation": {"en": "read n [ENDL] if ( ( n modulo 2 ) is 0 ) [ENDL] print n / 2 [ENDL] else [ENDL] print ( n / 2 ) - n [ENDL] declare f with long long as argument , returning long long", "c++": "int main() { cin >> n ; if ( ( n % 2 ) == 0 ) cout << n / 2 << endl ; else cout << ( n / 2 ) - n << endl ; long long f ( long long ) ; return 0; }"}}
{"translation": {"en": "declare long long n [ENDL] read n [ENDL] run f ( n ) [ENDL] declare f with long long n as argument , returning long long [ENDL] if n % 2 is 0 [ENDL] print ( n / 2 ) and newline [ENDL] else [ENDL] print ( n / 2 - n ) and newline [ENDL] declare integer array dx = { 1 , 0 , - 1 , 0 , 1 , 1 , - 1 , - 1 }", "c++": "long long n ; int main() { cin >> n ; f ( n ) ; long long f ( long long n ) } if ( n % 2 == 0 ) cout << ( n / 2 ) << endl ; else cout << ( n / 2 - n ) << endl ; int dx [ ] = { 1 , 0 , - 1 , 0 , 1 , 1 , - 1 , - 1 } ; return 0; }"}}
{"translation": {"en": "declare integer array dy = { 0 , 1 , 0 , - 1 , 1 , - 1 , 1 , - 1 } [ENDL] declare fast with no arguments , returning void [ENDL] declare constant long long md = 1e9 + 7 [ENDL] run fast [ENDL] declare long long n [ENDL] read n [ENDL] if n % 2 is 0 [ENDL] print n / 2 and \" \\ n \" [ENDL] else [ENDL] print - ( n + 1 ) / 2 and \" \\ n \" [ENDL] declare long long variable n", "c++": "int dy [ ] = { 0 , 1 , 0 , - 1 , 1 , - 1 , 1 , - 1 } ; void fast ( ) { } const long long md = 1e9 + 7 ; fast ( ) ; int main() { long long n ; cin >> n ; if ( n % 2 == 0 ) cout << n / 2 << \" \\n \" ; else cout << - ( n + 1 ) / 2 << \" \\n \" ; long long n ; return 0; }"}}
{"translation": {"en": "read n from the input [ENDL] if n is even [ENDL] print n / 2 [ENDL] else [ENDL] print - ( n + 1 ) / 2 to the output [ENDL] create long long variable n", "c++": "int main() { cin >> n ; if ( n % 2 == 0 ) cout << n / 2 << endl ; else cout << - ( n + 1 ) / 2 << endl ; long long n ; return 0; }"}}
{"translation": {"en": "read user input to n [ENDL] define long long chk = 0 [ENDL] assign n / 2 to chk [ENDL] if chk * 2 is equal to n [ENDL] print chk to the standard output [ENDL] else [ENDL] print chk - n to the standard output [ENDL] print new line [ENDL] n = long long ing", "c++": "int main() { cin >> n ; long long chk = 0 ; chk = n / 2 ; if ( chk * 2 == n ) cout << chk ; else cout << chk - n ; cout << endl ; long long int n ; return 0; }"}}
{"translation": {"en": "read n [ENDL] if n is even [ENDL] print n / 2 [ENDL] else [ENDL] ans = long long int with value of ( n - 1 ) / 2 [ENDL] print - 1 - ans [ENDL] n , y = long long", "c++": "int main() { cin >> n ; if ( n % 2 == 0 ) cout << n / 2 << endl ; else long long int ans = ( n - 1 ) / 2 ; cout << - 1 - ans << endl ; long long n , y ; } return 0; }"}}
{"translation": {"en": "x = double [ENDL] read n [ENDL] if n % 2 = 0 & & n ! = 0m print n / 2 [ENDL] if n % 2 ! = 0 & & n ! = 0 [ENDL] let x = ceil ( 1 . * n / 2 ) [ENDL] let y = x [ENDL] print - y [ENDL] declare long long n", "c++": "int main() { double x ; cin >> n ; if ( n % 2 == 0 && n != 0 ) { cout << n / 2 << endl ; } if ( n % 2 != 0 && n != 0 ) x = ceil ( ( 1. * n ) / 2 ) ; y = x ; cout << - y << endl ; long long n ; } }"}}
{"translation": {"en": "read n [ENDL] declare long long k1 = ( ( 2 + ( n - 1 if n % 2 is 1 , else n ) ) / 2 ) * ( n / 2 ) [ENDL] declare long long k2 = ( ( 1 + ( n if n % 2 is 1 , else n - 1 ) ) / 2 ) * ( ( n + 1 ) / 2 ) [ENDL] print k1 - k2 and ' \\ n ' [ENDL] num = char", "c++": "int main() { cin >> n ; long long k1 = ( ( 2 + ( n % 2 == 1 ? n - 1 : n ) ) / 2 ) * ( n / 2 ) ; long long k2 = ( ( 1 + ( n % 2 == 1 ? n : n - 1 ) ) / 2 ) * ( ( n + 1 ) / 2 ) ; cout << k1 - k2 << ' \\n ' ; char num ; }"}}
{"translation": {"en": "n = int , n = 0 [ENDL] while num is not a new line [ENDL] let num = getchar [ENDL] if n = 0 and num = 9 [ENDL] print num [ENDL] else if num > = 5 [ENDL] print 9 [ENDL] else [ENDL] print num [ENDL] add one to n [ENDL] function check with int arguments x and y that returns int", "c++": "int main() { int n = 0 ; while ( num != ' \\n ' ) num = getchar ( ) ; if ( n == 0 && num == ' 9 ' ) cout << num ; else if ( num >= ' 5 ' ) cout << ' 9 ' - num ; else cout << num ; n ++ ; int check ( int x , int y ) } return 0; }"}}
{"translation": {"en": "if x < = y , return x [ENDL] return y [ENDL] define strings s and p with p = \" \" [ENDL] declare int variables i and j [ENDL] read variable s from the input [ENDL] assign the new value = s to p [ENDL] for i = length of s - 1 to 0 counting down [ENDL] change j to the result of check ( s [ i ] - ' 0 ' , 9 - ( s [ i ] - ' 0 ' ) ) [ENDL] assign the new value = ( j + ' 0 ' ) casted to char , to p [ i ] [ENDL] change j to 9 - ( s [ 0 ] - ' 0 ' ) [ENDL] if j is not 0 [ENDL] assign the returned value of check ( s [ 0 ] - ' 0 ' , 9 - ( s [ 0 ] - ' 0 ' ) ) to j [ENDL] change p [ 0 ] to ( j + ' 0 ' ) casted to char [ENDL] print p [ENDL] declare string s", "c++": "if ( x <= y ) return x ; return y ; string s , p = \"  \" ; } int main() { int i , j ; cin >> s ; p = s ; for ( i = s . size ( ) - 1 ; i > 0 ; i -- ) j = check ( s [ i ] - ' 0 ' , 9 - ( s [ i ] - ' 0 ' ) ) ; p [ i ] = ( char ) ( j + ' 0 ' ) ; j = 9 - ( s [ 0 ] - ' 0 ' ) ; } if ( j ) j = check ( s [ 0 ] - ' 0 ' , 9 - ( s [ 0 ] - ' 0 ' ) ) ; p [ 0 ] = ( char ) ( j + ' 0 ' ) ; cout << p << endl ; } string s ; }"}}
{"translation": {"en": "new integer i [ENDL] read s and keep looping [ENDL] change the value of i to 0 [ENDL] if s [ 0 ] is equal to ' 9 ' , increment i by one [ENDL] while i < length of s , increment it by 1 in a loop [ENDL] if s [ i ] is greater than ' 4 ' , assign the value = ' 9 ' - s [ i ] + ' 0 ' to s [ i ] [ENDL] print s to the standard output [ENDL] declare new string s", "c++": "int main() { int i ; while ( cin >> s ) i = 0 ; if ( s [ 0 ] == ' 9 ' ) i ++ ; for ( ; i < s . size ( ) ; i ++ ) if ( s [ i ] > ' 4 ' ) { s [ i ] = ' 9 ' - s [ i ] + ' 0 ' ; } cout << s << endl ; } string s ; } return 0; }"}}
{"translation": {"en": "read variable s from the input [ENDL] for integer i = 0 to length of s exclusive [ENDL] if s [ i ] - ' 0 ' > = 5 [ENDL] create integer x with value = 9 - ( s [ i ] - ' 0 ' ) [ENDL] change s [ i ] to x + ' 0 ' [ENDL] if s [ 0 ] is equal to ' 0 ' , set s [ 0 ] to ' 9 ' [ENDL] print s [ENDL] define string s", "c++": "int main() { cin >> s ; for ( int i = 0 ; i < s . length ( ) ; i ++ ) if ( s [ i ] - ' 0 ' >= 5 ) int x = 9 - ( s [ i ] - ' 0 ' ) ; s [ i ] = x + ' 0 ' ; if ( s [ 0 ] == ' 0 ' ) { s [ 0 ] = ' 9 ' ; } } cout << s << endl ; } string s ; }"}}
{"translation": {"en": "read from the input to s [ENDL] for i from 0 to length of s exclusive [ENDL] if i = 0 and s [ i ] is equal to ' 9 ' , go to the start of the loop [ENDL] if s [ i ] > = ' 5 ' , change s [ i ] to ' 9 ' - s [ i ] + ' 0 ' [ENDL] print s [ENDL] create new string s", "c++": "int main() { cin >> s ; for ( int i = 0 ; i < s . size ( ) ; i ++ ) if ( i == 0 && s [ i ] == ' 9 ' ) continue ; if ( s [ i ] >= ' 5 ' ) { s [ i ] = ' 9 ' - s [ i ] + ' 0 ' ; } cout << s << endl ; } string s ; return 0; }"}}
{"translation": {"en": "read standard input to s [ENDL] for i = 0 to length of s exclusive [ENDL] if s [ i ] = ' 9 ' [ENDL] if i is equal to 0 [ENDL] go to the start of the loop [ENDL] else [ENDL] assign the new value = ' 0 ' to s [ i ] [ENDL] go to the start of the loop [ENDL] if s [ i ] - ' 0 ' is greater than 4 , set s [ i ] to 48 + 9 - ( s [ i ] - ' 0 ' ) [ENDL] print s and \" \\ n \" to the standard output [ENDL] s = string", "c++": "int main() { cin >> s ; for ( long long int i = 0 ; i < s . length ( ) ; i ++ ) if ( s [ i ] == ' 9 ' ) if ( i == 0 ) continue ; else s [ i ] = ' 0 ' ; continue ; if ( ( s [ i ] - ' 0 ' ) > 4 ) s [ i ] = 48 + 9 - ( s [ i ] - ' 0 ' ) ; } cout << s << \" \\n \" ; } string s ; }"}}
{"translation": {"en": "read s [ENDL] i = unsigned long long int with i = 0 [ENDL] if s [ i ] is ' 9 ' [ENDL] print s [ i ] [ENDL] increment i [ENDL] continue iterating i while i < length of s print min of s [ i ] - ' 0 ' , 9 - ( s [ i ] - ' 0 ' ) [ENDL] print newline [ENDL] let numero be a string", "c++": "int main() { cin >> s ; unsigned long long int i = 0 ; if ( s [ i ] == ' 9 ' ) cout << s [ i ] ; i ++ ; for ( ; i < s . length ( ) ; i ++ ) { cout << min ( s [ i ] - ' 0 ' , 9 - ( s [ i ] - ' 0 ' ) ) ; } } cout << endl ; string numero ; return 0; }"}}
{"translation": {"en": "read numero [ENDL] let n be a integer with n is equal to length of numero [ENDL] for i = 0 to n - 1 inclusive [ENDL] let x be a integer with x = numero [ i ] - 0 [ENDL] if i is equal to 0 [ENDL] if 5 < = x and x < = 8 , numero [ i ] is equal to ( char ) ( 0 + 9 - x ) [ENDL] else if 5 < = x [ENDL] numero [ i ] is equal to ( char ) ( 0 + 9 - x ) [ENDL] print numero and newline [ENDL] declare integer array a size 100010", "c++": "int main() { cin >> numero ; int n = numero . size ( ) ; for ( int i = 0 ; i <= n - 1 ; ++ i ) int x = numero [ i ] - ' 0 ' ; if ( i == 0 ) if ( 5 <= x and x <= 8 ) { numero [ i ] = ( char ) ( ' 0 ' + 9 - x ) ; } else if ( 5 <= x ) numero [ i ] = ( char ) ( ' 0 ' + 9 - x ) ; cout << numero << endl ; } } int a [ 100010 ] ; return 0; }"}}
{"translation": {"en": "declare long long array cnt size 100010 [ENDL] declare character array c size 155 [ENDL] declare integer array num size 155 [ENDL] read c [ENDL] declare integer len = string length of c [ENDL] for i = 0 to len exclusive [ENDL] if c [ i ] is greater than or equal to ' 5 ' and c [ i ] is less than or equal to ' 9 ' [ENDL] if c [ i ] is ' 9 ' and i is 0 [ENDL] let num [ i ] be c [ i ] - ' 0 ' [ENDL] else [ENDL] let num [ i ] be 9 - ( c [ i ] - ' 0 ' ) [ENDL] else [ENDL] let num [ i ] be c [ i ] - ' 0 ' [ENDL] for i = 0 to len exclusive , print num [ i ] [ENDL] print newline [ENDL] declare character array x size 20", "c++": "long long cnt [ 100010 ] ; char c [ 155 ] ; int main() { int num [ 155 ] ; cin >> c ; int len = strlen ( c ) ; for ( int i = 0 ; i < len ; i ++ ) if ( c [ i ] >= ' 5 ' && c [ i ] <= ' 9 ' ) if ( ( c [ i ] == ' 9 ' && i == 0 ) ) num [ i ] = c [ i ] - ' 0 ' ; else num [ i ] = 9 - ( c [ i ] - ' 0 ' ) ; else num [ i ] = c [ i ] - ' 0 ' ; for ( int i = 0 ; i < len ; i ++ ) cout << num [ i ] ; } cout << endl ; char x [ 20 ] ; return 0; }"}}
{"translation": {"en": "declare integer ok = 1 [ENDL] while read x is true [ENDL] declare integer len = string length of x [ENDL] for i = 0 to len exclusive [ENDL] if i is 0 [ENDL] if x [ i ] is ' 9 ' [ENDL] print x [ i ] [ENDL] else if x [ i ] is greater than or equal to ' 5 ' [ENDL] print ' 9 ' - x [ i ] [ENDL] else [ENDL] print x [ i ] [ENDL] else [ENDL] if x [ i ] is greater than or equal to ' 5 ' [ENDL] print ' 9 ' - x [ i ] [ENDL] else [ENDL] print x [ i ] [ENDL] print newline [ENDL] create string str", "c++": "int main() { int ok = 1 ; while ( cin >> x ) int len = strlen ( x ) ; for ( int i = 0 ; i < len ; i ++ ) if ( i == 0 ) if ( x [ i ] == ' 9 ' ) cout << x [ i ] ; else if ( x [ i ] >= ' 5 ' ) cout << ' 9 ' - x [ i ] ; else cout << x [ i ] ; else if ( x [ i ] >= ' 5 ' ) cout << ' 9 ' - x [ i ] ; else cout << x [ i ] ; cout << endl ; } } string str ; } return 0; }"}}
{"translation": {"en": "read str [ENDL] for i = 0 to size of str exclusive [ENDL] if i = 0 and str [ i ] = 9 , continue [ENDL] if str [ i ] > 4 , set str [ i ] = 9 - str [ i ] + 48 [ENDL] print str [ENDL] create string s", "c++": "int main() { cin >> str ; for ( int i = 0 ; i < str . size ( ) ; i ++ ) if ( i == 0 && str [ i ] == ' 9 ' ) { continue ; } if ( str [ i ] > ' 4 ' ) { str [ i ] = ' 9 ' - str [ i ] + 48 ; } cout << str << endl ; } string s ; return 0; }"}}
{"translation": {"en": "read s [ENDL] for i = 0 to length of s exclusive [ENDL] if s [ i ] > 9 - s [ i ] + 0 , s [ i ] = 9 - s [ i ] + 0 [ENDL] if s [ 0 ] = 0 , s [ 0 ] = 9 [ENDL] print s [ENDL] define new string a", "c++": "int main() { cin >> s ; for ( int i = 0 ; i < s . length ( ) ; i ++ ) if ( s [ i ] > ' 9 ' - s [ i ] + ' 0 ' ) s [ i ] = ' 9 ' - s [ i ] + ' 0 ' ; if ( s [ 0 ] == ' 0 ' ) s [ 0 ] = ' 9 ' ; cout << s << endl ; } string a ; }"}}
{"translation": {"en": "read user input to a [ENDL] for i = 0 to length of a exclusive [ENDL] if a [ i ] > = ' 5 ' , change the value of a [ i ] to 9 - ( a [ i ] - ' 0 ' ) + ' 0 ' [ENDL] if a [ 0 ] is equal to ' 0 ' [ENDL] print 9 [ENDL] else [ENDL] print a [ 0 ] [ENDL] print all elements of a , starting from the index 1 , to the output [ENDL] print new line [ENDL] create strings s and output", "c++": "int main() { cin >> a ; for ( int i = 0 ; i < a . size ( ) ; i ++ ) if ( a [ i ] >= ' 5 ' ) a [ i ] = 9 - ( a [ i ] - ' 0 ' ) + ' 0 ' ; if ( a [ 0 ] == ' 0 ' ) } cout << 9 ; else cout << a [ 0 ] ; for ( int j = 1 ; j < a . size ( ) ; j ++ ) { cout << a [ j ] ; } cout << endl ; string s , output ; return 0; }"}}
{"translation": {"en": "read from the input to s [ENDL] start for loop from i = 0 to length of s exclusive [ENDL] declare new integer temp with value s [ i ] - 48 [ENDL] create new character called tempChar = ' \\ 0 ' [ENDL] if ( i = 0 and temp = 9 ) or temp < 5 [ENDL] add new element = s [ i ] after the last element of output [ENDL] else [ENDL] assign ( 9 - temp ) + 48 to tempChar [ENDL] push tempChar to the variable output [ENDL] print output to the stdout [ENDL] arr = 4 * 1e5", "c++": "int main() { cin >> s ; for ( int i = 0 ; i < s . length ( ) ; i ++ ) int temp = s [ i ] - 48 ; char tempChar = ' \\0 ' ; if ( ( i == 0 && temp == 9 ) || temp < 5 ) output . push_back ( s [ i ] ) ; else tempChar = ( 9 - temp ) + 48 ; output . push_back ( tempChar ) ; cout << output << endl ; } } const int arr = 4 * 1e5 ; return 0; }"}}
{"translation": {"en": "md = 1e9 + 7 [ENDL] create int pref [ 2600 ] [ 2600 ] [ENDL] create n and m [ENDL] call solve ( int u ) [ENDL] res = 0 [ENDL] for i = 0 to n exclusive [ENDL] for j = 0 to m exclusive [ENDL] l1 = i [ENDL] set l2 = j [ENDL] assign min ( n , i + u ) to r1 [ENDL] set r2 to min ( m , j + u ) [ENDL] set now = pref [ r1 ] [ r2 ] - pref [ r1 ] [ l2 ] - pref [ l1 ] [ r2 ] + pref [ l1 ] [ l2 ] ; [ENDL] set res to res + min of now and u * u - now [ENDL] return res [ENDL] read n and m [ENDL] for i = 1 to n inclusive [ENDL] create string st [ENDL] read st [ENDL] for j = 0 to size of st , pref [ i ] [ j + 1 ] = st [ j ] - 0 [ENDL] for i = 1 to n inclusive [ENDL] for j = 1 to m inclusive , set pref [ i ] [ j ] = pref [ i - 1 ] [ j ] + pref [ i ] [ j - 1 ] - pref [ i - 1 ] [ j - 1 ] + pref [ i ] [ j ] [ENDL] assign 1e9 to ans [ENDL] for k = 2 to max of n and m inclusive , set ans to min of ans and solve ( k ) [ENDL] print ans and a newline [ENDL] declare integer array at size 5001 by 5001", "c++": "const int md = 1e9 + 7 ; int pref [ 2600 ] [ 2600 ] ; int n , m ; int solve ( int u ) int res = 0 ; for ( int i = 0 ; i < n ; i += u ) for ( int j = 0 ; j < m ; j += u ) int l1 = i ; int l2 = j ; int r1 = min ( n , i + u ) ; int r2 = min ( m , j + u ) ; int now = pref [ r1 ] [ r2 ] - pref [ r1 ] [ l2 ] - pref [ l1 ] [ r2 ] + pref [ l1 ] [ l2 ] ; res += min ( now , u * u - now ) ; return ( res ) ; } cin >> n >> m ; } int main() { for ( int i = 1 ; i <= n ; i ++ ) string st ; cin >> st ; for ( int j = 0 ; j < st . size ( ) ; j ++ ) pref [ i ] [ j + 1 ] = st [ j ] - ' 0 ' ; for ( int i = 1 ; i <= n ; i ++ ) } for ( int j = 1 ; j <= m ; j ++ ) pref [ i ] [ j ] = pref [ i - 1 ] [ j ] + pref [ i ] [ j - 1 ] - pref [ i - 1 ] [ j - 1 ] + pref [ i ] [ j ] ; int ans = 1e9 ; for ( int k = 2 ; k <= max ( n , m ) ; k ++ ) ans = min ( ans , solve ( k ) ) ; cout << ans << ' \\n ' ; int mat [ 5001 ] [ 5001 ] ; }"}}
{"translation": {"en": "declare integer array psum size 5001 by 5001 [ENDL] declare sum with integers fi , li , fj , lj as arguments , returning integer [ENDL] declare integer big = psum [ li ] [ lj ] [ENDL] declare integer smol = psum [ fi - 1 ] [ fj - 1 ] if fi and fj , else 0 [ENDL] declare integer lat1 = psum [ li ] [ fj - 1 ] if fj is true , else 0 [ENDL] declare integer lat2 = psum [ fi - 1 ] [ lj ] if fi is true , else 0 [ENDL] return big + smol - lat1 - lat2 from function [ENDL] declare integers n , m [ENDL] read n and m [ENDL] for i = 0 to 5001 exclusive [ENDL] for j = 0 to 5001 exclusive , let mat [ i ] [ j ] be 0 [ENDL] for i = 0 to n exclusive [ENDL] declare string s [ENDL] read s [ENDL] for j = 0 to m exclusive , let max [ i ] [ j ] be s [ j ] - ' 0 ' [ENDL] let psum [ 0 ] [ 0 ] be mat [ 0 ] [ 0 ] [ENDL] for i = 1 to 5001 exclusive , let psum [ 0 ] [ i ] be psum [ 0 ] [ i - 1 ] + mat [ 0 ] [ i ] [ENDL] for i = 1 to 5001 exclusive , let psum [ i ] [ 0 ] be psum [ i - 1 ] [ 0 ] + mat [ i ] [ 0 ] [ENDL] for i = 1 to 5001 exclusive [ENDL] for j = 1 to 5001 exclusive , let psum [ i ] [ j ] be psum [ i ] [ j - 1 ] + psum [ i - 1 ] [ j ] - psum [ i - 1 ] [ j - 1 ] + mat [ i ] [ j ] [ENDL] declare integer ans = 1e9 [ENDL] for k = 2 to 2500 inclusive [ENDL] end statement [ENDL] declare integer pans = 0 [ENDL] for i = 0 to ( n + k - 1 ) / k exclusive [ENDL] for j = t0 to ( m + k - 1 ) / k excclusive [ENDL] declare integer c1 = result of run sum with i * k , ( i + 1 ) * k - 1 , j * k , ( j + 1 ) * k - 1 as arguments [ENDL] declare integer c0 = k * k - c1 [ENDL] end statement [ENDL] end statement [ENDL] end statement [ENDL] end statement [ENDL] increment pans by minimum of c0 and c1 [ENDL] end statement [ENDL] let ans be minimum of ans and pans [ENDL] print ans and ' \\ n ' [ENDL] create int array dp of size 2505 with array of size 2505", "c++": "int psum [ 5001 ] [ 5001 ] ; int sum ( int fi , int li , int fj , int lj ) int big = psum [ li ] [ lj ] ; int smol = ( fi and fj ? psum [ fi - 1 ] [ fj - 1 ] : 0 ) ; int lat1 = ( fj ? psum [ li ] [ fj - 1 ] : 0 ) ; int lat2 = ( fi ? psum [ fi - 1 ] [ lj ] : 0 ) ; return big + smol - lat1 - lat2 ; int n , m ; } int main() { cin >> n >> m ; for ( int i = 0 ; i < 5001 ; ++ i ) for ( int j = 0 ; j < 5001 ; ++ j ) { mat [ i ] [ j ] = 0 ; } for ( int i = 0 ; i < n ; ++ i ) } string s ; cin >> s ; for ( int j = 0 ; j < m ; ++ j ) { mat [ i ] [ j ] = s [ j ] - ' 0 ' ; } psum [ 0 ] [ 0 ] = mat [ 0 ] [ 0 ] ; } for ( int i = 1 ; i < 5001 ; ++ i ) { psum [ 0 ] [ i ] = psum [ 0 ] [ i - 1 ] + mat [ 0 ] [ i ] ; } for ( int i = 1 ; i < 5001 ; ++ i ) { psum [ i ] [ 0 ] = psum [ i - 1 ] [ 0 ] + mat [ i ] [ 0 ] ; } for ( int i = 1 ; i < 5001 ; ++ i ) for ( int j = 1 ; j < 5001 ; ++ j ) { psum [ i ] [ j ] = psum [ i ] [ j - 1 ] + psum [ i - 1 ] [ j ] - psum [ i - 1 ] [ j - 1 ] + mat [ i ] [ j ] ; } int ans = 1e9 ; } for ( int k = 2 ; k <= 2500 ; ++ k ) ; int pans = 0 ; for ( int i = 0 ; i < ( n + k - 1 ) / k ; ++ i ) for ( int j = 0 ; j < ( m + k - 1 ) / k ; ++ j ) int c1 = sum ( i * k , ( i + 1 ) * k - 1 , j * k , ( j + 1 ) * k - 1 ) ; int c0 = k * k - c1 ; ; ; ; ; pans += min ( c0 , c1 ) ; ; } ans = min ( ans , pans ) ; cout << ans << ' \\n ' ; } int dp [ 2505 ] [ 2505 ] ; return 0; }"}}
{"translation": {"en": "make ints n and m [ENDL] declare cntt taking in int k and returning integer [ENDL] create integers k - 1 and res = 0 [ENDL] for i = 1 to n [ENDL] for j = 1 to m [ENDL] create integer cnt = 0 [ENDL] set cnt to cnt + dp [ min ( i + k1 , n ) ] [ min ( j + k1 , m ) ] [ENDL] set cnt to cnt - dp [ i - 1 ] [ min ( j + k1 , m ) ] [ENDL] subtract dp [ min ( i + k1 , n ) ] [ j - 1 ] from cnt [ENDL] add dp [ i - 1 ] [ j - 1 ] to cnt [ENDL] add min ( cnt , k * k - cnt ) to res [ENDL] return res [ENDL] read n and m [ENDL] create string s [ENDL] for i = 1 to n [ENDL] read s [ENDL] for j = 1 to m , set dp [ i ] [ j ] to dp [ i - 1 ] [ j ] + dp [ i ] [ j - 1 ] - dp [ i - 1 ] [ j - 1 ] + s [ j - 1 ] - ' 0 ' [ENDL] create integer res = n * m [ENDL] for k = 2 to min ( n , m ) , set res to min of res and cntt ( k ) [ENDL] show res [ENDL] create int array mat of size 5001 with array of size 5001", "c++": "int n , m ; int cntt ( int k ) int k1 = k - 1 , res = 0 ; for ( int i = 1 ; i <= n ; i += k ) for ( int j = 1 ; j <= m ; j += k ) int cnt = 0 ; cnt += dp [ min ( i + k1 , n ) ] [ min ( j + k1 , m ) ] ; cnt -= dp [ i - 1 ] [ min ( j + k1 , m ) ] ; cnt -= dp [ min ( i + k1 , n ) ] [ j - 1 ] ; cnt += dp [ i - 1 ] [ j - 1 ] ; res += min ( cnt , k * k - cnt ) ; return res ; } } cin >> n >> m ; } int main() { string s ; for ( int i = 1 ; i <= n ; ++ i ) cin >> s ; for ( int j = 1 ; j <= m ; ++ j ) { dp [ i ] [ j ] = dp [ i - 1 ] [ j ] + dp [ i ] [ j - 1 ] - dp [ i - 1 ] [ j - 1 ] + s [ j - 1 ] - ' 0 ' ; } int res = n * m ; } for ( int k = 2 ; k <= min ( n , m ) ; ++ k ) { res = min ( res , cntt ( k ) ) ; } cout << res << ' \\n ' ; int mat [ 5001 ] [ 5001 ] ; return 0; }"}}
{"translation": {"en": "make integer array psum of size 5001 with array of size 5001 [ENDL] declare sum taking in ints fi , li , fj , and lj and returning integer [ENDL] make integer big = psum [ li ] [ lj ] [ENDL] create integer smol = [ENDL] make integer lat1 = ( fj ? psum [ li ] [ fj - 1 ] : 0 ) [ENDL] let int lat2 = ( fi ? psum [ fi - 1 ] [ lj ] : 0 ) [ENDL] return big + smol - lat1 - lat2 [ENDL] create ints n and m [ENDL] read n and m [ENDL] for i = 0 to 5001 exclusive [ENDL] for j = 0 to 5001 exclusive , set mat [ i ] [ j ] to 1 [ENDL] for i = 0 to n exclusive [ENDL] make string s [ENDL] read s [ENDL] for j = 0 to m exclusive , set m [ i ] [ j ] to s [ j ] - ' 0 ' [ENDL] set psum [ 0 ] [ 0 ] to mat [ 0 ] [ 0 ] [ENDL] for i = 1 to 5001 exclusive , set psum [ 0 ] [ i ] to psum [ 0 ] [ i - 1 ] + mat [ 0 ] [ i ] [ENDL] for i = 1 to 5001 exclusive , set psum [ i ] [ 0 ] to psum [ i - 1 ] [ 0 ] + mat [ i ] [ 0 ] [ENDL] for i = 1 to 5001 exclusive [ENDL] for j = 1 to 5001 exclusive , set psum [ i ] [ j ] to psum [ i ] [ j - 1 ] + psum [ i - 1 ] [ j ] - psum [ i - 1 ] [ j - 1 ] + mat [ i ] [ j ] [ENDL] make integer ans = 1e9 [ENDL] for k = 2 to 10 [ENDL] end statement [ENDL] make integer pans = 0 [ENDL] for i = 0 to ( n + k - 1 ) / k exclusive [ENDL] for j = 0 to ( m + k - 1 ) / k exclusive [ENDL] create int c1 = sum ( i * k , ( i + 1 ) * k - 1 , j * k , ( j + 1 ) * k - 1 ) [ENDL] create integer c0 to k * k - c1 [ENDL] end [ENDL] end [ENDL] end [ENDL] end statement [ENDL] set pans to pans + min of c0 and c1 [ENDL] end statement [ENDL] set ans to min of ans and pans [ENDL] print ans [ENDL] db = string of size 2501", "c++": "int psum [ 5001 ] [ 5001 ] ; int sum ( int fi , int li , int fj , int lj ) int big = psum [ li ] [ lj ] ; int smol = ( fi and fj ? psum [ fi - 1 ] [ fj - 1 ] : 0 ) ; int lat1 = ( fj ? psum [ li ] [ fj - 1 ] : 0 ) ; int lat2 = ( fi ? psum [ fi - 1 ] [ lj ] : 0 ) ; return big + smol - lat1 - lat2 ; int n , m ; } int main() { cin >> n >> m ; for ( int i = 0 ; i < 5001 ; ++ i ) for ( int j = 0 ; j < 5001 ; ++ j ) { mat [ i ] [ j ] = 0 ; } for ( int i = 0 ; i < n ; ++ i ) } string s ; cin >> s ; for ( int j = 0 ; j < m ; ++ j ) { mat [ i ] [ j ] = s [ j ] - ' 0 ' ; } psum [ 0 ] [ 0 ] = mat [ 0 ] [ 0 ] ; } for ( int i = 1 ; i < 5001 ; ++ i ) { psum [ 0 ] [ i ] = psum [ 0 ] [ i - 1 ] + mat [ 0 ] [ i ] ; } for ( int i = 1 ; i < 5001 ; ++ i ) { psum [ i ] [ 0 ] = psum [ i - 1 ] [ 0 ] + mat [ i ] [ 0 ] ; } for ( int i = 1 ; i < 5001 ; ++ i ) for ( int j = 1 ; j < 5001 ; ++ j ) { psum [ i ] [ j ] = psum [ i ] [ j - 1 ] + psum [ i - 1 ] [ j ] - psum [ i - 1 ] [ j - 1 ] + mat [ i ] [ j ] ; } int ans = 1e9 ; } for ( int k = 2 ; k <= 10 ; ++ k ) ; int pans = 0 ; for ( int i = 0 ; i < ( n + k - 1 ) / k ; ++ i ) for ( int j = 0 ; j < ( m + k - 1 ) / k ; ++ j ) int c1 = sum ( i * k , ( i + 1 ) * k - 1 , j * k , ( j + 1 ) * k - 1 ) ; int c0 = k * k - c1 ; ; ; ; ; pans += min ( c0 , c1 ) ; ; } ans = min ( ans , pans ) ; cout << ans << ' \\n ' ; } string db [ 2501 ] ; return 0; }"}}
{"translation": {"en": "n , m , ans , prf = integers with ans = 6250000 , prf = array of size [ 2 * 2501 ] [ 2 * 2501 ] [ENDL] read n , m [ENDL] for i = 0 to n exclusive , read db [ i ] [ENDL] for i = 0 to 2 * 2501 exclusive [ENDL] for j = 0 to 2 * 2501 exclusive [ENDL] if ( i < n and j < m and db [ i ] [ j ] is 1 ) , prf [ i ] [ j ] = 1 [ENDL] if ( i ) , prf [ i ] [ j ] = prf [ i ] [ j ] + prf [ i - 1 ] [ j ] [ENDL] if ( j ) , prf [ i ] [ j ] = prf [ i ] [ j ] + prf [ i ] [ j - 1 ] [ENDL] if ( i and j ) , prf [ i ] [ j ] = prf [ i ] [ j ] - prf [ i - 1 ] [ j - 1 ] [ENDL] maxk = integer with maxk = min of n and m [ENDL] for k = 2 to maxk [ENDL] tmp_ans = integer with tmp_ans = 0 [ENDL] for i = 0 to n exclusvie , i = i + k [ENDL] for j = 0 to m exclusive , j = j + k [ENDL] solve = integer with solve = prf [ i + k - 1 ] [ j + k - 1 ] [ENDL] if ( i ) , solve = solve - prf [ i - 1 ] [ j + k - 1 ] [ENDL] if ( j ) , solve = solve - prf [ i + k - 1 ] [ j - 1 ] [ENDL] if ( i and j ) , solve = solve + prf [ i - 1 ] [ j - 1 ] [ENDL] tmp_ans = tmp_ans + min ( solve , k * k - solve ) [ENDL] ans = min of ans and tmp_ans [ENDL] print ans [ENDL] MAXN , MAXM = const int with MAXN = 2500 and MAXM = 2500", "c++": "int n , m , ans = 6250000 , prf [ 2 * 2501 ] [ 2 * 2501 ] ; cin >> n >> m ; int main() { for ( int i = 0 ; i < n ; i ++ ) { cin >> db [ i ] ; } for ( int i = 0 ; i < 2 * 2501 ; i ++ ) for ( int j = 0 ; j < 2 * 2501 ; j ++ ) if ( i < n && j < m && db [ i ] [ j ] == ' 1 ' ) prf [ i ] [ j ] = 1 ; if ( i ) prf [ i ] [ j ] += prf [ i - 1 ] [ j ] ; if ( j ) prf [ i ] [ j ] += prf [ i ] [ j - 1 ] ; if ( i && j ) prf [ i ] [ j ] -= prf [ i - 1 ] [ j - 1 ] ; int maxk = min ( n , m ) ; } } for ( int k = 2 ; k <= maxk ; k ++ ) int tmp_ans = 0 ; for ( int i = 0 ; i < n ; i += k ) for ( int j = 0 ; j < m ; j += k ) int solve = prf [ i + k - 1 ] [ j + k - 1 ] ; if ( i ) solve -= prf [ i - 1 ] [ j + k - 1 ] ; if ( j ) solve -= prf [ i + k - 1 ] [ j - 1 ] ; if ( i && j ) solve += prf [ i - 1 ] [ j - 1 ] ; tmp_ans += min ( solve , k * k - solve ) ; ans = min ( ans , tmp_ans ) ; } } cout << ans << endl ; } const int MAXN = 2500 , MAXM = 2500 ; }"}}
{"translation": {"en": "S = two dimensional int array of sizes MAXN + 1 and MAXM + 1 [ENDL] N , M = int [ENDL] read N then M [ENDL] for i = 1 to N inclusive [ENDL] R = string [ENDL] read R [ENDL] for j = 1 to M inclusive set S [ i ] [ j ] to ( R [ j - 1 ] - ' 0 ' ) + S [ i - 1 ] [ j ] + S [ i ] [ j - 1 ] - S [ i - 1 ] [ j - 1 ] [ENDL] ans = int with ans = INT_MAX [ENDL] iterate k from 2 while k < = N or k < = M [ENDL] aux = int with aux = 0 [ENDL] for i = 1 to N inclusive incrementing i by k [ENDL] for j = 1 to M inclusive incrementing j by k [ENDL] ii , jj = int with ii = min of N , i + k - 1 and jj = min of M , j + k - 1 [ENDL] q = int with q = S [ ii ] [ jj ] - S [ ii ] [ j - 1 ] - S [ i - 1 ] [ jj ] + S [ i - 1 ] [ j - 1 ] [ENDL] increment aux by min of q , k * k - q [ENDL] set ans to min of ans , aux [ENDL] print ans [ENDL] let n be a integer", "c++": "int S [ MAXN + 1 ] [ MAXM + 1 ] ; int N , M ; int main() { cin >> N >> M ; for ( int i = 1 ; i <= N ; ++ i ) string R ; cin >> R ; for ( int j = 1 ; j <= M ; ++ j ) S [ i ] [ j ] = ( R [ j - 1 ] - ' 0 ' ) + S [ i - 1 ] [ j ] + S [ i ] [ j - 1 ] - S [ i - 1 ] [ j - 1 ] ; int ans = INT_MAX ; } for ( int k = 2 ; k <= N || k <= M ; ++ k ) int aux = 0 ; for ( int i = 1 ; i <= N ; i += k ) for ( int j = 1 ; j <= M ; j += k ) int ii = min ( N , i + k - 1 ) , jj = min ( M , j + k - 1 ) ; int q = S [ ii ] [ jj ] - S [ ii ] [ j - 1 ] - S [ i - 1 ] [ jj ] + S [ i - 1 ] [ j - 1 ] ; aux += min ( q , k * k - q ) ; ans = min ( ans , aux ) ; } cout << ans << ' \\n ' ; } int n ; return 0; }"}}
{"translation": {"en": "read n [ENDL] if n equals 2 [ENDL] print 2 and newline [ENDL] else do the following [ENDL] print 1 and newline [ENDL] n = int", "c++": "int main() { cin >> n ; if ( n == 2 ) cout << \" 2\\n \" ; else cout << \" 1\\n \" ; int n ; return 0; }"}}
{"translation": {"en": "while read n [ENDL] if n is 2 [ENDL] print 2 [ENDL] else [ENDL] print 1 [ENDL] n = int", "c++": "int main() { while ( cin >> n ) if ( n == 2 ) cout << 2 << endl ; else cout << 1 << endl ; int n ; } } return 0; }"}}
{"translation": {"en": "read n [ENDL] if n is 2 [ENDL] print \" 2 \" [ENDL] else [ENDL] print \" 1 \" [ENDL] n = int", "c++": "int main() { cin >> n ; if ( n == 2 ) cout << \" 2 \" << endl ; else cout << \" 1 \" << endl ; int n ; return 0; }"}}
{"translation": {"en": "read n [ENDL] if n = 2 [ENDL] print n [ENDL] else [ENDL] print 1 [ENDL] integer as l , r , a , b , d , i , n", "c++": "int main() { cin >> n ; if ( n == 2 ) cout << n << endl ; else cout << 1 << endl ; int l , r , a , b , d , i , n ; } }"}}
{"translation": {"en": "read n [ENDL] output 2 if n = 2 , else output 1 [ENDL] declare integer n", "c++": "int main() { cin >> n ; cout << ( ( n == 2 ) ? 2 : 1 ) << \" \\n \" ; int n ; return 0; }"}}
{"translation": {"en": "read n [ENDL] if n is 2 [ENDL] print 2 and newline [ENDL] else [ENDL] print 1 and newline [ENDL] declare integer n", "c++": "cin >> n ; int main() { if ( n == 2 ) cout << 2 << endl ; else cout << 1 << endl ; int n ; return 0; }"}}
{"translation": {"en": "read n [ENDL] if n is 2 [ENDL] print 2 and newline [ENDL] else [ENDL] print 1 and newline [ENDL] declare integer v", "c++": "int main() { cin >> n ; if ( n == 2 ) cout << 2 << endl ; else cout << 1 << endl ; int v ; return 0; }"}}
{"translation": {"en": "read v [ENDL] if v is 2 [ENDL] print 2 and newline [ENDL] else [ENDL] print 1 and newline [ENDL] n = int", "c++": "int main() { cin >> v ; if ( v == 2 ) cout << 2 << endl ; else cout << 1 << endl ; int n ; return 0; }"}}
{"translation": {"en": "read n [ENDL] if n is not 2 [ENDL] print \" 1 \" [ENDL] else [ENDL] print \" 2 \" [ENDL] let n , x , v be long integers", "c++": "int main() { cin >> n ; if ( n != 2 ) cout << \" 1 \" << endl ; else cout << \" 2 \" << endl ; long int n , x , v ; }"}}
{"translation": {"en": "read v [ENDL] n is equal to v [ENDL] if n is greater than 2 [ENDL] n is equal to 1 [ENDL] else if n is equal to 2 [ENDL] n is equal to 2 [ENDL] print n and newline [ENDL] integer as n", "c++": "int main() { cin >> v ; n = v ; if ( n > 2 ) n = 1 ; else if ( n == 2 ) n = 2 ; cout << n << endl ; } int n ; return 0; }"}}
{"translation": {"en": "read n [ENDL] if n is 1 or n is 2 then do the following [ENDL] output n [ENDL] else [ENDL] output 1 [ENDL] let n be a integer", "c++": "int main() { cin >> n ; if ( n == 1 || n == 2 ) cout << n << endl ; else cout << 1 << endl ; int n ; return 0; }"}}
{"translation": {"en": "read n [ENDL] if n equals 2 [ENDL] print 2 and newline [ENDL] else do the following [ENDL] print 1 and newline [ENDL] let n be a long integer", "c++": "int main() { cin >> n ; if ( n == 2 ) cout << \" 2 \" << endl ; else cout << \" 1 \" << endl ; long long n ; return 0; }"}}
{"translation": {"en": "while read n [ENDL] if n equals 2 [ENDL] print 2 and newline [ENDL] else do the following [ENDL] print 1 and newline [ENDL] n = int", "c++": "int main() { while ( cin >> n ) if ( n == 2 ) cout << \" 2 \" << endl ; else cout << \" 1 \" << endl ; int n ; } } return 0; }"}}
{"translation": {"en": "read n [ENDL] if n is 2 [ENDL] print 2 [ENDL] else [ENDL] print 1 [ENDL] n = integer", "c++": "int main() { cin >> n ; if ( n == 2 ) cout << \" 2\\n \" ; else cout << \" 1\\n \" ; int n ; }"}}
{"translation": {"en": "read n [ENDL] if ( n is 2 ) [ENDL] read n [ENDL] else [ENDL] print 1 [ENDL] n = int", "c++": "int main() { cin >> n ; if ( n == 2 ) cout << n << endl ; else cout << \" 1\\n \" ; int n ; return 0; }"}}
{"translation": {"en": "read n [ENDL] k = int , k = n - 1 [ENDL] if n = 2 [ENDL] print 2 [ENDL] else [ENDL] print n - k [ENDL] integer as n", "c++": "int main() { cin >> n ; int k = n - 1 ; if ( n == 2 ) cout << 2 << endl ; else cout << n - k << endl ; int n ; }"}}
{"translation": {"en": "read n [ENDL] if n is 2 then do the following [ENDL] output 2 [ENDL] else [ENDL] output 1 [ENDL] let N be a constant integer with N is equal to 1e5 + 50", "c++": "int main() { cin >> n ; if ( n == 2 ) cout << \" 2 \" << endl ; else cout << \" 1 \" << endl ; const int N = 1e5 + 50 ; return 0; }"}}
{"translation": {"en": "let oo be a constant integer with oo is equal to1e9 [ENDL] let mod be a constant integer with mod is equal to 1e9 + 7 [ENDL] let a , b , f1 , f2 be string arrays of size 2001 [ENDL] let n be a integer [ENDL] read n , m [ENDL] for integer i = 0 to n exclusive , read a [ i ] [ENDL] for integer i = 0 to m exclusive , read b [ i ] [ENDL] for integer i = 0 to n - m inclusive , [ENDL] f1 [ i ] is empty [ENDL] for integer j = 0 to m exclusive , increase f1 [ i ] with a [ i + j ] [ENDL] for integer i = 0 to n - m inclusive , [ENDL] f2 [ i ] is empty [ENDL] for integer j = 0 to m exclusive , increase f2 [ i ] withb [ j ] . substr ( i , m ) [ENDL] for integer i = 0 to n - m inclusive , [ENDL] for integer j = 0 to n - m inclusive , [ENDL] if f1 [ i ] equals f2 [ j ] [ENDL] print i + 1 space j + 1 and endline [ENDL] declare constant integer maxn = 2000 + 5", "c++": "const int oo = 1e9 ; const int mod = 1e9 + 7 ; string a [ 2001 ] , b [ 201 ] , f1 [ 2001 ] , f2 [ 2001 ] ; int n , m ; int main() { cin >> n >> m ; for ( int i = 0 ; i < n ; i ++ ) cin >> a [ i ] ; for ( int i = 0 ; i < m ; i ++ ) cin >> b [ i ] ; for ( int i = 0 ; i + m <= n ; i ++ ) f1 [ i ] = \"  \" ; for ( int j = 0 ; j < m ; j ++ ) f1 [ i ] += a [ i + j ] ; for ( int i = 0 ; i + m <= n ; i ++ ) } f2 [ i ] = \"  \" ; for ( int j = 0 ; j < m ; j ++ ) { f2 [ i ] += b [ j ] . substr ( i , m ) ; } for ( int i = 0 ; i + m <= n ; i ++ ) } for ( int j = 0 ; j + m <= n ; j ++ ) if ( f1 [ i ] == f2 [ j ] ) cout << i + 1 << '   ' << j + 1 << endl ; const int maxn = 2000 + 5 ; return 0; } } } }"}}
{"translation": {"en": "declare string arrays s1 size maxn , s2 size maxn [ENDL] declare integers n , m [ENDL] read n , m [ENDL] for i = 0 to n exclusive , read s1 [ i ] [ENDL] for i = 0 to m exclusive , read s2 [ i ] [ENDL] for i = 0 to n - m inclusive [ENDL] for j = 0 to n - m inclusive [ENDL] declare boolean flag = true [ENDL] for p = 0 to p is less than m and flag , incrementing p [ENDL] if memory compare between address of s1 [ i + p ] [ 0 ] and address of s2 [ p ] [ j ] comparing m bytes , let flag be false [ENDL] if flag is true [ENDL] print i + 1 , \" \" , j + 1 , \" \\ n \" [ENDL] n , m = int", "c++": "string s1 [ maxn ] , s2 [ maxn ] ; int n , m ; int main() { cin >> n >> m ; for ( int i = 0 ; i < n ; i ++ ) cin >> s1 [ i ] ; for ( int i = 0 ; i < m ; i ++ ) cin >> s2 [ i ] ; for ( int i = 0 ; i <= n - m ; i ++ ) for ( int j = 0 ; j <= n - m ; j ++ ) bool flag = true ; for ( int p = 0 ; p < m && flag ; p ++ ) if ( memcmp ( & s1 [ i + p ] [ 0 ] , & s2 [ p ] [ j ] , m ) ) flag = false ; if ( flag ) } cout << i + 1 << \"   \" << j + 1 << \" \\n \" ; int n , m ; return 0; } } return 0; }"}}
{"translation": {"en": "read n , m [ENDL] A , B = string vectors with size of A = n and size of B = m [ENDL] read all A [ENDL] read all B [ENDL] for i = 0 to n exclusive [ENDL] pos = - 1 = int [ENDL] while pos + 1 < n [ENDL] ok = 1 = bool [ENDL] set pos to find A [ i ] , pos + 1 on B [ 0 ] [ENDL] if pos = - 1 then break [ENDL] for k = m - 1 , until k < = 0 and is ok , decrement k [ENDL] if A [ i + k ] isn ' t substring from pos to m of b then set ok to 0 [ENDL] if ok then return print i + 1 and space and pos + 1 and new line [ENDL] print - 1 [ENDL] let mp [ 2 ] [ 2001 ] [ 2001 ] be a array of character elements", "c++": "int main() { cin >> n >> m ; vector < string > A ( n ) , B ( m ) ; for ( auto & s : A ) cin >> s ; for ( auto & s : B ) cin >> s ; for ( int i = 0 ; i < n ; i ++ ) int pos = - 1 ; while ( pos + 1 < n ) bool ok = 1 ; pos = B [ 0 ] . find ( A [ i ] , pos + 1 ) ; if ( pos == - 1 ) break ; for ( int k = m - 1 ; k >= 0 && ok ; k -- ) if ( A [ i + k ] != B [ k ] . substr ( pos , m ) ) ok = 0 ; if ( ok ) return cout << i + 1 << \"   \" << pos + 1 << \" \\n \" , 0 ; cout << - 1 ; } } char mp [ 2 ] [ 2001 ] [ 2001 ] ; }"}}
{"translation": {"en": "let n , m be integers [ENDL] read n , m [ENDL] for i = 0 to n exclusive , read mp [ 0 ] [ i ] [ENDL] for i = 0 to m exclusive , read mp [ 1 ] [ i ] [ENDL] for i = 0 to n - m inclusive [ENDL] for j = 0 to n - m inclusive [ENDL] the integer value of ok = 1 [ENDL] for integer p = 0 , p is less than m and ok equals 1 , increment p by 1 , ok & = ! memcmp ( & mp [ 0 ] [ i + p ] [ 0 ] , & mp [ 1 ] [ p ] [ j ] , m ) [ENDL] if ok is true [ENDL] print i + 1 and ' ' and j + 1 and newline [ENDL] declare constant integer N = 1e5 + 50", "c++": "int n , m ; int main() { cin >> n >> m ; for ( int i = 0 ; i < n ; i ++ ) cin >> mp [ 0 ] [ i ] ; for ( int i = 0 ; i < m ; i ++ ) cin >> mp [ 1 ] [ i ] ; for ( int i = 0 ; i <= n - m ; i ++ ) for ( int j = 0 ; j <= n - m ; j ++ ) int ok = 1 ; for ( int p = 0 ; p < m && ok == 1 ; p ++ ) { ok &= ! memcmp ( & mp [ 0 ] [ i + p ] [ 0 ] , & mp [ 1 ] [ p ] [ j ] , m ) ; } if ( ok ) cout << i + 1 << '   ' << j + 1 << endl ; const int N = 1e5 + 50 ; return 0; } } } return 0; }"}}
{"translation": {"en": "declare constant integer oo = 1e9 [ENDL] declare constant integer mod = 1e9 + 7 [ENDL] declare string arrays a size 2001 , b size 201 , f1 size 2001 , f2 size 2001 [ENDL] declare integers n , m [ENDL] read n , m [ENDL] for i = 0 to n exclusive , read a [ i ] [ENDL] for i = 0 to m exclusive , read b [ i ] [ENDL] for i = 0 to i + m is less than or equal to n , incrementing i [ENDL] let f1 [ i ] be \" \" [ENDL] for j = 0 to m exclusive , increment f1 [ i ] by a [ i + j ] [ENDL] for i = 0 to i + m is less than or equal to n , incrementing i [ENDL] let f2 [ i ] be \" \" [ENDL] for j = 0 to m exclusive , increment f2 [ i ] by substring of b [ j ] from i to m [ENDL] for i = 0 to i + m is less than or equal to n , incrementing i [ENDL] for j = 0 to j + m is less than or equal to n , incrementing j [ENDL] if f1 [ i ] is f2 [ j ] [ENDL] print i + 1 , ' ' , j + 1 , newline [ENDL] declare character array mp size 2 by 2001 by 2001", "c++": "const int oo = 1e9 ; const int mod = 1e9 + 7 ; string a [ 2001 ] , b [ 201 ] , f1 [ 2001 ] , f2 [ 2001 ] ; int n , m ; int main() { cin >> n >> m ; for ( int i = 0 ; i < n ; i ++ ) cin >> a [ i ] ; for ( int i = 0 ; i < m ; i ++ ) cin >> b [ i ] ; for ( int i = 0 ; i + m <= n ; i ++ ) f1 [ i ] = \"  \" ; for ( int j = 0 ; j < m ; j ++ ) f1 [ i ] += a [ i + j ] ; for ( int i = 0 ; i + m <= n ; i ++ ) } f2 [ i ] = \"  \" ; for ( int j = 0 ; j < m ; j ++ ) { f2 [ i ] += b [ j ] . substr ( i , m ) ; } for ( int i = 0 ; i + m <= n ; i ++ ) } for ( int j = 0 ; j + m <= n ; j ++ ) if ( f1 [ i ] == f2 [ j ] ) cout << i + 1 << '   ' << j + 1 << endl ; char mp [ 2 ] [ 2001 ] [ 2001 ] ; return 0; } } } }"}}
{"translation": {"en": "declare integers n , m [ENDL] read n , m [ENDL] for i = 0 to n exclusive , read mp [ 0 ] [ i ] [ENDL] for i = 0 to m exclusive , read mp [ 1 ] [ i ] [ENDL] declare integers i , j [ENDL] for i = 0 to n - m inclusive [ENDL] for j = 0 to n - m inclusive [ENDL] declare boolean ok = true [ENDL] for p = 0 to p is less than m and ok , incrementing p , let ok be ok bitwise and not ( memory compare ( address of mp [ 0 ] [ i + p ] [ 0 ] and address of mp [ 1 ] [ p ] [ j ] comparing m bytes ) ) [ENDL] if ok is true [ENDL] print i + 1 , ' ' , j + 1 , newline [ENDL] n , m = int", "c++": "int n , m ; int main() { cin >> n >> m ; for ( int i = 0 ; i < n ; i ++ ) cin >> mp [ 0 ] [ i ] ; for ( int i = 0 ; i < m ; i ++ ) cin >> mp [ 1 ] [ i ] ; int i , j ; for ( i = 0 ; i <= n - m ; i ++ ) for ( j = 0 ; j <= n - m ; j ++ ) bool ok = true ; for ( int p = 0 ; p < m && ok ; p ++ ) ok &= ! memcmp ( & mp [ 0 ] [ i + p ] [ 0 ] , & mp [ 1 ] [ p ] [ j ] , m ) ; if ( ok ) cout << i + 1 << '   ' << j + 1 << endl ; int n , m ; return 0; } } } }"}}
{"translation": {"en": "read n , m [ENDL] let v1 ( 2002 ) , v2 ( 202 ) , v3 ( 2002 ) , v4 ( 2002 ) be vector of string [ENDL] for i = 0 to n exlcusive , read v [ i ] [ENDL] read the first m elements of v2 [ENDL] for i = 0 until i + m < = n increment i after [ENDL] for j = 0 to m exlcusive , increment v3 at i by v1 [ i + j ] [ENDL] for i = 0 until i + m < = n increment i after [ENDL] for j = 0 to m exclusive , increment v4 [ j ] by substring of v2 [ j ] form i to m [ENDL] for i = 0 until i + m < = n [ENDL] for j = 0 until j + m < = n [ENDL] if v3 at i is v4 at j [ENDL] print i + 1 < < ' ' < < j + 1 < < [ENDL] t = int", "c++": "int main() { cin >> n >> m ; vector < string > v1 ( 2002 ) , v2 ( 202 ) , v3 ( 2002 ) , v4 ( 2002 ) ; for ( int i = 0 ; i < n ; i ++ ) cin >> v1 [ i ] ; for ( int i = 0 ; i < m ; i ++ ) cin >> v2 [ i ] ; for ( int i = 0 ; i + m <= n ; i ++ ) for ( int j = 0 ; j < m ; j ++ ) v3 [ i ] += v1 [ i + j ] ; for ( int i = 0 ; i + m <= n ; i ++ ) for ( int j = 0 ; j < m ; j ++ ) v4 [ i ] += v2 [ j ] . substr ( i , m ) ; for ( int i = 0 ; i + m <= n ; i ++ ) for ( int j = 0 ; j + m <= n ; j ++ ) if ( v3 [ i ] == v4 [ j ] ) cout << i + 1 << '   ' << j + 1 << endl ; int t ; return 0; } return 0; }"}}
{"translation": {"en": "read t [ENDL] loop t times [ENDL] n , r = int [ENDL] read n then r [ENDL] x = int then for i = 1 to n read x then decrement r by x [ENDL] print ( r mod n + n ) mod n + 1 [ENDL] t , n , r , k = integer", "c++": "int main() { cin >> t ; while ( t -- ) int n , r ; cin >> n >> r ; for ( int i = 1 , x ; i < n ; ++ i ) cin >> x , r -= x ; cout << ( r % n + n ) % n + 1 << ' \\n ' ; int t , n , r , k ; } }"}}
{"translation": {"en": "q = integer array of size 5 [ENDL] read t [ENDL] for i = 0 to t exclusive [ENDL] k = 0 [ENDL] read n , r [ENDL] for j = 0 to n - 1 exclusive [ENDL] read q [ j ] [ENDL] k = k + q [ j ] [ENDL] print the result of ( ( r - k ) modulo n + n ) modulo n + 1 [ENDL] test = integer", "c++": "int main() { int q [ 5 ] ; cin >> t ; for ( int i = 0 ; i < t ; i ++ ) k = 0 ; cin >> n >> r ; for ( int j = 0 ; j < n - 1 ; j ++ ) cin >> q [ j ] ; k = k + q [ j ] ; cout << ( ( r - k ) % n + n ) % n + 1 << endl ; } int test ; } return 0; }"}}
{"translation": {"en": "read test [ENDL] while looping decrease test by 1 [ENDL] n , r = integers [ENDL] read n , r [ENDL] sum = integer = r [ENDL] for i = 0 to n - 1 exclusive [ENDL] val = integer [ENDL] read val [ENDL] sum = sum - val [ENDL] sum = ( sum modulo n + n ) modulo n [ENDL] print the result of sum + 1 [ENDL] create int n", "c++": "int main() { cin >> test ; while ( test -- ) int n , r ; cin >> n >> r ; int sum = r ; for ( int i = 0 ; i < n - 1 ; ++ i ) int val ; cin >> val ; sum -= val ; sum = ( sum % n + n ) % n ; } cout << ( sum + 1 ) << \" \\n \" ; int n ; } return 0; }"}}
{"translation": {"en": "read n [ENDL] while decrement n [ENDL] create unsigned int a , b and sum , set sum to 0 [ENDL] read a and b [ENDL] for i = 1 to a exclusive [ENDL] create int c [ENDL] read c [ENDL] set sum to sum + c [ENDL] assign sum mod a to sum [ENDL] sum = ( a + b - sum ) % a [ENDL] print sum + 1 [ENDL] create int nums [ 5 ] , r , n , T", "c++": "int main() { cin >> n ; while ( n -- ) unsigned int a , b , sum = 0 ; cin >> a >> b ; for ( int i = 1 ; i < a ; ++ i ) int c ; cin >> c ; sum += c ; sum %= a ; } sum = ( a + b - sum ) % a ; cout << sum + 1 << endl ; int nums [ 5 ] , r , n , T ; } return 0; }"}}
{"translation": {"en": "read T [ENDL] while decrement T [ENDL] read n and r [ENDL] set sum to 0 [ENDL] for c = 1 to n exclusive [ENDL] create int i [ENDL] read i [ENDL] set sum to sum - i [ENDL] set sum = sum + r [ENDL] assign sum + n * 1000 to sum [ENDL] print sum mod n + 1 [ENDL] no , appr , st = long long arrays all with length 300001", "c++": "cin >> T ; int main() { while ( T -- ) cin >> n >> r ; int sum = 0 ; for ( int c = 1 ; c < n ; c ++ ) int i ; cin >> i ; sum -= i ; sum += r ; } sum += n * 1000 ; cout << ( sum % n + 1 ) << endl ; long long no [ 300001 ] , appr [ 300001 ] , st [ 300001 ] ; } }"}}
{"translation": {"en": "app = long long vector with length 300001 [ENDL] i , j , n , m , k , cnt , ans , t = long long with cnt and ans having value of 0 and t having value of 1 [ENDL] read n and t [ENDL] v = long long vector [ENDL] pos = long long with value of 0 [ENDL] while t is not zero subtract 1 from t and do [ENDL] read m and k [ENDL] if m equals 1 [ENDL] set no [ cnt ] to k [ENDL] append cnt to the end of app [ k ] [ENDL] set st [ cnt ] to 0 [ENDL] append cnt to the end of v [ENDL] add 1 to cnt [ENDL] add 1 to ans [ENDL] else if m equals 2 [ENDL] for i = appr [ k ] to the size of app [ k ] exclusive [ENDL] if st [ app [ k ] [ i ] ] equals 0 subtract 1 from ans [ENDL] set st [ app [ k ] [ i ] ] to 1 [ENDL] set appr [ k ] to the size of app [ k ] [ENDL] else [ENDL] for i = pos to k exclusive [ENDL] if st [ v [ i ] ] equals 0 subtract 1 from ans [ENDL] set st [ v [ i ] ] to 1 [ENDL] set pos to the maximum of pos and k [ENDL] print ans [ENDL] MAXN = 3 * 1e5 + 5", "c++": "vector < long long > app [ 300001 ] ; long long i , j , n , m , k , cnt = 0 , ans = 0 , t = 1 ; int main() { cin >> n >> t ; vector < long long > v ; long long pos = 0 ; while ( t -- ) cin >> m >> k ; if ( m == 1 ) no [ cnt ] = k ; app [ k ] . push_back ( cnt ) ; st [ cnt ] = 0 ; v . push_back ( cnt ) ; cnt ++ ; ans ++ ; else if ( m == 2 ) for ( i = appr [ k ] ; i < app [ k ] . size ( ) ; i ++ ) if ( st [ app [ k ] [ i ] ] == 0 ) ans -- ; st [ app [ k ] [ i ] ] = 1 ; appr [ k ] = app [ k ] . size ( ) ; } else for ( i = pos ; i < k ; i ++ ) if ( st [ v [ i ] ] == 0 ) ans -- ; st [ v [ i ] ] = 1 ; pos = max ( pos , k ) ; } cout << ans << ' \\n ' ; } const int MAXN = 3 * 1e5 + 5 ; } return 0; }"}}
{"translation": {"en": "create int N , M , S , x , y , j , z , r [ENDL] create vector int V [ MAXN ] [ENDL] create int v [ MAXN ] [ENDL] create bool R [ MAXN ] [ENDL] read N and M [ENDL] while decrement M [ENDL] read x and y [ENDL] if x = 1 [ENDL] assign j to last element of V [ y ] [ENDL] increment j [ENDL] increment S [ENDL] if x = 2 [ENDL] set z to size of V [ y ] [ENDL] for i = v [ y ] to z exclusive [ENDL] if R [ V [ y ] [ i ] ] = 0 , decrement S [ENDL] set R [ V [ y ] [ i ] ] = true [ENDL] set v [ y ] = z [ENDL] if x = 3 [ENDL] for i = r to y exclusive [ENDL] if R [ i ] = 0 , decrement S [ENDL] assign true to R [ i ] [ENDL] set r to max of r and y [ENDL] print S [ENDL] declare integers vector arrays mp and dis with size 100010 * 3", "c++": "int N , M , S , x , y , j , z , r ; vector < int > V [ MAXN ] ; int v [ MAXN ] ; bool R [ MAXN ] ; cin >> N >> M ; int main() { while ( M -- ) cin >> x >> y ; if ( x == 1 ) V [ y ] . push_back ( j ) ; j ++ ; S ++ ; if ( x == 2 ) } z = ( int ) V [ y ] . size ( ) ; for ( int i = v [ y ] ; i < z ; i ++ ) if ( ! R [ V [ y ] [ i ] ] ) S -- ; R [ V [ y ] [ i ] ] = true ; v [ y ] = z ; } if ( x == 3 ) } for ( int i = r ; i < y ; i ++ ) if ( ! R [ i ] ) S -- ; R [ i ] = true ; r = max ( r , y ) ; } cout << S << endl ; } vector < int > mp [ 100010 * 3 ] , dis [ 100010 * 3 ] ; } }"}}
{"translation": {"en": "create ints u , v and c [ENDL] declare long long res [ENDL] create long long array a with 100010 * 3 elements [ENDL] create long long arrays dp and dp_max with 100010 * 3 elements [ENDL] dfs is a void function with int arguments x and y [ENDL] create long long max1 = 0 [ENDL] create long long max2 = 0 [ENDL] loop i from 0 to length of mp [ x ] exclusive [ENDL] declare integer f = mp [ x ] [ i ] [ENDL] if f = y , skip the rest of the loop [ENDL] call function dfs with arguments f and x [ENDL] if dp [ f ] - dis [ x ] [ i ] is greater than max1 [ENDL] set max2 to max1 [ENDL] assign dp [ f ] - dis [ x ] [ i ] to max1 [ENDL] else if dp [ f ] - dis [ x ] [ i ] = max1 [ENDL] set value of max2 to max1 [ENDL] else [ENDL] if dp [ f ] - dis [ x ] [ i ] is greater than max2 , change max2 to dp [ f ] - dis [ x ] [ i ] [ENDL] assign max1 + max2 + a [ x ] to dp_max [ x ] [ENDL] change dp [ x ] to max1 + a [ x ] [ENDL] assign max of max ( dp [ x ] , dp_max [ x ] ) and res to res [ENDL] declare int t [ENDL] read t [ENDL] set res to 0 [ENDL] for i = 1 to t inclusive , read a [ i ] [ENDL] subtract 1 from t [ENDL] decrement t and loop further , while t is not 0 [ENDL] read u , v and c [ENDL] push v into mp [ u ] [ENDL] push u into mp [ v ] [ENDL] push c into dis [ u ] [ENDL] push c into dis [ v ] [ENDL] call function dfs with arguments 1 and - 1 [ENDL] print res [ENDL] create long long m and an array of long longs a with size 200000", "c++": "int u , v , c ; long long res ; long long a [ 100010 * 3 ] ; long long dp [ 100010 * 3 ] , dp_max [ 100010 * 3 ] ; void dfs ( int x , int y ) long long max1 = 0 ; long long max2 = 0 ; for ( int i = 0 ; i < mp [ x ] . size ( ) ; i ++ ) int f = mp [ x ] [ i ] ; if ( f == y ) continue ; dfs ( f , x ) ; if ( dp [ f ] - dis [ x ] [ i ] > max1 ) max2 = max1 ; max1 = dp [ f ] - dis [ x ] [ i ] ; else if ( dp [ f ] - dis [ x ] [ i ] == max1 ) max2 = max1 ; else if ( dp [ f ] - dis [ x ] [ i ] > max2 ) max2 = dp [ f ] - dis [ x ] [ i ] ; dp_max [ x ] = max1 + max2 + a [ x ] ; } } dp [ x ] = max1 + a [ x ] ; res = max ( max ( dp [ x ] , dp_max [ x ] ) , res ) ; int t ; } int main() { cin >> t ; res = 0 ; for ( int i = 1 ; i <= t ; i ++ ) cin >> a [ i ] ; t -= 1 ; while ( t -- ) cin >> u >> v >> c ; mp [ u ] . push_back ( v ) ; mp [ v ] . push_back ( u ) ; dis [ u ] . push_back ( c ) ; dis [ v ] . push_back ( c ) ; dfs ( 1 , - 1 ) ; } cout << res << endl ; long long m , a [ 200000 ] ; return 0; }"}}
