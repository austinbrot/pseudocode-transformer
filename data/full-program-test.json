{"translation": {"en": "create integer n", "c++": "int n ;"}}
{"translation": {"en": "read n [ENDL] create integers cur , cnt with cur = 1 , cnt = 0 [ENDL] create integer vector ans [ENDL] for i = 0 to n exclusive [ENDL] create integer x [ENDL] read x [ENDL] if x is cur [ENDL] increment cnt [ENDL] increment cur [ENDL] else [ENDL] add element cnt to end of ans [ENDL] set cnt to 1 [ENDL] set cur to 2 [ENDL] if i is n - 1 , add element cnt to end of ans [ENDL] print integer casted size of ans print newline [ENDL] for i = 0 to integer casted size of ans exclusive [ENDL] if i is greater than 0 , print \" \" [ENDL] print ans [ i ] [ENDL] print newline [ENDL] let n be an integer", "c++": "int main() { cin >> n ; int cur = 1 , cnt = 0 ; vector < int > ans ; for ( int i = 0 ; i < n ; i ++ ) int x ; cin >> x ; if ( x == cur ) cnt ++ ; cur ++ ; else ans . push_back ( cnt ) ; cnt = 1 ; cur = 2 ; if ( i == n - 1 ) { ans . push_back ( cnt ) ; } } cout << ( int ) ans . size ( ) << endl ; } for ( int i = 0 ; i < ( int ) ans . size ( ) ; i ++ ) if ( i > 0 ) cout << \"   \" ; cout << ans [ i ] ; cout << endl ; } int n ; return 0; }"}}
{"translation": {"en": "while reading n [ENDL] let a be an integer array of length n [ENDL] let b be an integer array of length n [ENDL] let max be an int [ENDL] let count = 0 be an int [ENDL] read a n times [ENDL] set max = a at 0 [ENDL] for q = 1 to n exclusive [ENDL] if a at q is 1 then increment count , set b [ count ] to a [ q - 1 ] [ENDL] print count + 1 [ENDL] for j = 1 to count inclusive print b [ENDL] print a [ n - 1 ] [ENDL] create int n", "c++": "int main() { while ( cin >> n ) int a [ n ] ; int b [ n ] ; int max ; int count = 0 ; for ( int i = 0 ; i < n ; i ++ ) { cin >> a [ i ] ; } max = a [ 0 ] ; for ( int q = 1 ; q < n ; q ++ ) if ( a [ q ] == 1 ) { b [ ++ count ] = a [ q - 1 ] ; } cout << count + 1 << endl ; } for ( int j = 1 ; j <= count ; j ++ ) cout << b [ j ] << \"   \" ; cout << a [ n - 1 ] << endl ; int n ; } return 0; }"}}
{"translation": {"en": "read n [ENDL] declare int array arr with n elements and int variable ct = 0 [ENDL] change i from 0 to n exclusive in a loop [ENDL] read input to arr [ i ] [ENDL] if arr [ i ] is equal to 1 , increment ct [ENDL] print ct [ENDL] for i from 1 to n exclusive [ENDL] if arr [ i ] is equal to 1 , print arr [ i - 1 ] and \" \" [ENDL] print arr [ n - 1 ] [ENDL] n = int", "c++": "int main() { cin >> n ; int arr [ n ] , ct = 0 ; for ( int i = 0 ; i < n ; i ++ ) cin >> arr [ i ] ; if ( arr [ i ] == 1 ) ct ++ ; cout << ct << endl ; } for ( int i = 1 ; i < n ; i ++ ) if ( arr [ i ] == 1 ) cout << arr [ i - 1 ] << \"   \" ; cout << arr [ n - 1 ] << endl ; } int n ; return 0; }"}}
{"translation": {"en": "read n [ENDL] i , j , k = int with k = 0 and a = int array of size n + 1 [ENDL] for i = 0 to n [ENDL] read a [ i ] [ENDL] if a [ i ] is 1 then increment k [ENDL] print k [ENDL] for i = 1 to n [ENDL] if a [ i ] is 1 print a [ i - 1 ] and \" \" [ENDL] print a [ n - 1 ] [ENDL] declare int variable n", "c++": "int main() { cin >> n ; int a [ n + 1 ] , i , j , k = 0 ; for ( i = 0 ; i < n ; i ++ ) cin >> a [ i ] ; if ( a [ i ] == 1 ) k ++ ; cout << k << endl ; } for ( i = 1 ; i < n ; i ++ ) if ( a [ i ] == 1 ) cout << a [ i - 1 ] << \"   \" ; cout << a [ n - 1 ] << endl ; } int n ; }"}}
{"translation": {"en": "read n [ENDL] declare an array of integers a with size 1005 [ENDL] declare an array of integers ans with size 1005 [ENDL] for i from 1 to n inclusive , read a [ i ] [ENDL] create integer j = 0 [ENDL] loop i from 1 to n exclusive [ENDL] if a [ i + 1 ] < = a [ i ] , set ans [ j ] to a [ i ] and increment j [ENDL] set ans [ j ] to a [ n ] and increment j [ENDL] print j [ENDL] for i = 0 to j - 1 exclusive , print ans [ i ] and \" \" [ENDL] print ans [ j - 1 ] [ENDL] maxn = const integer with maxn = 1e3 + 5", "c++": "int main() { cin >> n ; int a [ 1005 ] ; int ans [ 1005 ] ; for ( int i = 1 ; i <= n ; i ++ ) { cin >> a [ i ] ; } int j = 0 ; for ( int i = 1 ; i < n ; i ++ ) if ( a [ i + 1 ] <= a [ i ] ) { ans [ j ++ ] = a [ i ] ; } ans [ j ++ ] = a [ n ] ; } cout << j << endl ; for ( int i = 0 ; i < j - 1 ; i ++ ) cout << ans [ i ] << \"   \" ; cout << ans [ j - 1 ] << endl ; const int maxn = 1e3 + 5 ; return 0; }"}}
{"translation": {"en": "arr = integer array of size maxn [ENDL] stc = integer array of size maxn [ENDL] n , top = integers [ENDL] while read n [ENDL] top = 0 [ENDL] for i = 0 to n exclusive , readarr [ i ] [ENDL] i = integer [ENDL] for i = 0 to n - 1 exclusive [ENDL] if arr [ i + 1 ] is 1 , stc [ increment top ] = arr [ i ] [ENDL] stc [ increment top ] = arr [ i ] [ENDL] print top , stc [ 0 ] [ENDL] for i = 1 to top exclusive , print stc [ i ] [ENDL] print next line [ENDL] n = integer", "c++": "int arr [ maxn ] ; int stc [ maxn ] ; int n , top ; int main() { while ( cin >> n ) top = 0 ; for ( int i = 0 ; i < n ; ++ i ) { cin >> arr [ i ] ; } int i ; for ( i = 0 ; i < n - 1 ; ++ i ) if ( arr [ i + 1 ] == 1 ) { stc [ top ++ ] = arr [ i ] ; } stc [ top ++ ] = arr [ i ] ; } cout << top << endl << stc [ 0 ] ; for ( int i = 1 ; i < top ; ++ i ) { cout << \"   \" << stc [ i ] ; } cout << endl ; int n ; } return 0; }"}}
{"translation": {"en": "read n [ENDL] nxt = integer = 1 [ENDL] ans = integer vector [ENDL] for i = 0 to n exclusive [ENDL] x = integer [ENDL] read x [ENDL] if x is not nxt , then push back the values of ans and insert a new element of nxt - 1 at the end of ans [ENDL] nxt = x + 1 [ENDL] push back the values of ans and insert a new element of nxt - 1 at the end of ans [ENDL] print size of ans in integer form [ENDL] for i = 0 to size of ans in integer form [ENDL] if i > 0 , then print a space [ENDL] print ans [ i ] [ENDL] print endline [ENDL] a = int array of length 1001 , n = int , s = int = 0", "c++": "int main() { cin >> n ; int nxt = 1 ; vector < int > ans ; for ( int i = 0 ; i < n ; i ++ ) int x ; cin >> x ; if ( x != nxt ) { ans . push_back ( nxt - 1 ) ; } nxt = x + 1 ; ans . push_back ( nxt - 1 ) ; } cout << ( int ) ans . size ( ) << endl ; for ( int i = 0 ; i < ( int ) ans . size ( ) ; i ++ ) if ( i > 0 ) cout << \"   \" ; cout << ans [ i ] ; cout << endl ; } int a [ 1001 ] , n , sum = 0 ; return 0; }"}}
{"translation": {"en": "read n [ENDL] read n values into array a [ENDL] for i = 1 to n inclusive [ENDL] if a at i is 1 increment sum [ENDL] print sum [ENDL] for i = 1 to n exclusive [ENDL] if a at i + 1 is 1 print a at i [ENDL] print a at n [ENDL] create integers n , c with c = 0 , create integer array arr with size 1001", "c++": "int main() { cin >> n ; for ( int i = 1 ; i <= n ; i ++ ) cin >> a [ i ] ; for ( int i = 1 ; i <= n ; i ++ ) if ( a [ i ] == 1 ) sum ++ ; cout << sum << endl ; for ( int i = 1 ; i < n ; i ++ ) if ( a [ i + 1 ] == 1 ) cout << a [ i ] << \"   \" ; cout << a [ n ] << endl ; int n , arr [ 1001 ] , c = 0 ; return 0; }"}}
{"translation": {"en": "read n [ENDL] for i = 0 to n exclusive [ENDL] read arr [ i ] [ENDL] if arr [ i ] is 1 increment c [ENDL] print c print newline [ENDL] for i = 1 to n exclusive [ENDL] if arr [ i ] is 1 , print arr [ i - 1 ] print \" \" [ENDL] print arr [ n - 1 ] print newline [ENDL] n = integer", "c++": "int main() { cin >> n ; for ( int i = 0 ; i < n ; i ++ ) cin >> arr [ i ] ; if ( arr [ i ] == 1 ) c ++ ; cout << c << endl ; } for ( int i = 1 ; i < n ; i ++ ) if ( arr [ i ] == 1 ) { cout << arr [ i - 1 ] << \"   \" ; } cout << arr [ n - 1 ] << endl ; } int n ; return 0; }"}}
{"translation": {"en": "val = integer [ENDL] Read n [ENDL] for i = 0 to n exclusive [ENDL] if i is greater than 0 , print \" \" [ENDL] Read val [ENDL] print val - ( val + 1 ) % 2 and a new line [ENDL] print a new line [ENDL] n = integer", "c++": "int main() { int val ; cin >> n ; for ( int i = 0 ; i < n ; ++ i ) if ( i > 0 ) { cout << \"   \" ; } cin >> val ; cout << ( val - ( ( val + 1 ) % 2 ) ) ; cout << endl ; } int n ; return 0; }"}}
{"translation": {"en": "Read n [ENDL] a = array of n + 10 integers [ENDL] for i = 0 to n exclusive [ENDL] Read n values into array a [ENDL] if a [ i ] modulo 2 is 0 , then set a [ i ] to a [ i ] - 1 [ENDL] print a [ j ] and a new line [ENDL] print a [ n - 1 ] and a new line [ENDL] create integer n", "c++": "cin >> n ; int main() { int a [ n + 10 ] ; for ( int i = 0 ; i < n ; i ++ ) cin >> a [ i ] ; if ( a [ i ] % 2 == 0 ) { a [ i ] -= 1 ; } for ( int j = 0 ; j < n - 1 ; j ++ ) { cout << a [ j ] << \"   \" ; } } cout << a [ n - 1 ] << endl ; int n ; return 0; }"}}
{"translation": {"en": "while read n is true [ENDL] create integer flag with flag = 1 [ENDL] for i = 0 to n exclusive [ENDL] create integer num [ENDL] read num [ENDL] if num is 0 [ENDL] if flag is true [ENDL] print num , set flag to 0 [ENDL] else [ENDL] print \" \" print num [ENDL] else if num % 2 is 0 [ENDL] if flag is true [ENDL] print num - 1 , set flag to 0 [ENDL] else [ENDL] print \" \" print num - 1 [ENDL] else [ENDL] if flag is true [ENDL] print num , flag with flag = 0 [ENDL] else [ENDL] print \" \" print num [ENDL] print newline [ENDL] array of 1000 = a", "c++": "int main() { while ( cin >> n ) int flag = 1 ; for ( int i = 0 ; i < n ; i ++ ) int num ; cin >> num ; if ( num == 0 ) if ( flag ) cout << num , flag = 0 ; else cout << \"   \" << num ; else if ( num % 2 == 0 ) if ( flag ) cout << num - 1 , flag = 0 ; else cout << \"   \" << num - 1 ; else if ( flag ) cout << num , flag = 0 ; else cout << \"   \" << num ; cout << endl ; } } int a [ 10000 ] ; } }"}}
{"translation": {"en": "integers = n [ENDL] read n [ENDL] read in a until i = n inclusive [ENDL] for i = 0 to n inclusive [ENDL] if a [ i ] modulo 2 is 0 then do the following a [ i ] - = 1 [ENDL] if i = n then do the following [ENDL] output a [ i ] [ENDL] else [ENDL] output a [ i ] , [ENDL] create integer n", "c++": "int n ; int main() { cin >> n ; for ( int i = 1 ; i <= n ; i ++ ) { cin >> a [ i ] ; } for ( int i = 1 ; i <= n ; i ++ ) if ( a [ i ] % 2 == 0 ) a [ i ] -= 1 ; if ( i == n ) cout << a [ i ] << endl ; else cout << a [ i ] << \"   \" ; int n ; } return 0; }"}}
{"translation": {"en": "read n [ENDL] create integer array a with size n + 10 [ENDL] for i = 0 to n exclusive [ENDL] read a [ i ] [ENDL] if a [ i ] % 2 is 0 , decrement a [ i ] by 1 [ENDL] for j = 0 to n - 1 exclusive , print a [ j ] print \" \" [ENDL] print a [ n - 1 ] print newline [ENDL] declare const int N = 1e5 + 50", "c++": "cin >> n ; int main() { int a [ n + 10 ] ; for ( int i = 0 ; i < n ; ++ i ) cin >> a [ i ] ; if ( a [ i ] % 2 == 0 ) { a [ i ] -= 1 ; } for ( int j = 0 ; j < n - 1 ; ++ j ) { cout << a [ j ] << \"   \" ; } } cout << a [ n - 1 ] << endl ; const int N = 1e5 + 50 ; return 0; }"}}
{"translation": {"en": "declare ints T , n , m , L and R [ENDL] declare long long array a with size 2 * N [ENDL] read input to n [ENDL] for i from 0 to n * 2 exclusive , read a [ i ] [ENDL] if n < = 1 [ENDL] print \" 0 \" [ENDL] sort a from the start to the position 2 * n [ENDL] declare long long ans = ( a [ n - 1 ] - a [ 0 ] ) * ( a [ 2 * n - 1 ] - a [ n ] ) [ENDL] declare long long C = a [ 2 * n - 1 ] - a [ 0 ] [ENDL] for i = 1 to n inclusive [ENDL] declare long long variable temp = C * ( a [ i + n - 1 ] - a [ i ] ) [ENDL] set ans to min of ans and temp [ENDL] print ans [ENDL] n = long long", "c++": "int T , n , m , L , R ; long long a [ 2 * N ] ; cin >> n ; int main() { for ( int i = 0 ; i < n * 2 ; i ++ ) { cin >> a [ i ] ; } if ( n <= 1 ) cout << \" 0 \" << endl ; sort ( a , a + 2 * n ) ; return 0; } long long ans = ( a [ n - 1 ] - a [ 0 ] ) * ( a [ 2 * n - 1 ] - a [ n ] ) ; long long C = a [ 2 * n - 1 ] - a [ 0 ] ; for ( int i = 1 ; i <= n ; i ++ ) long long temp = C * ( a [ i + n - 1 ] - a [ i ] ) ; ans = min ( ans , temp ) ; cout << ans << endl ; } long long n ; return 0; }"}}
{"translation": {"en": "while the loop reads n [ENDL] a = long long array of size 2 * n + 10 [ENDL] for i = 0 to 2 * n exclusive , read a [ i ] [ENDL] sort a in ascending order [ENDL] ans = long long = ( a [ n - 1 ] - a [ 0 ] ) * ( a [ 2 * n - 1 ] - a [ n ] ) [ENDL] for i = 1 to n exclusive , ans = the minimum value between ans and ( a [ 2 * n - 1 ] - a [ 0 ] ) * ( a [ i + n - 1 ] - a [ i ] ) [ENDL] print ans [ENDL] create constant integer sz with sz = 200010", "c++": "int main() { while ( cin >> n ) long long a [ 2 * n + 10 ] ; for ( int i = 0 ; i < 2 * n ; i ++ ) cin >> a [ i ] ; sort ( a , a + 2 * n ) ; long long ans = ( a [ n - 1 ] - a [ 0 ] ) * ( a [ 2 * n - 1 ] - a [ n ] ) ; for ( int i = 1 ; i < n ; i ++ ) ans = min ( ans , ( a [ 2 * n - 1 ] - a [ 0 ] ) * ( a [ i + n - 1 ] - a [ i ] ) ) ; cout << ans << endl ; const int sz = 200010 ; } return 0; }"}}
{"translation": {"en": "create long long integer array a with size sz [ENDL] create integer n [ENDL] read n [ENDL] for i = 0 to 2 * n exclusive , read [ i ] [ENDL] sort elements from a to a + 2 * n [ENDL] create long long integer ans with ans = ( a [ n - 1 ] - a [ 0 ] ) * ( a [ 2 * n - 1 ] - a [ n ] ) [ENDL] for i = n to 2 * 2 exclusive , set ans to minimum of ( ans and ( a [ 2 * n - 1 ] - a [ 0 ] ) * ( a [ i ] - a [ i - n + 1 ] ) ) [ENDL] print ans print newline [ENDL] set N to 2e6 + 5", "c++": "long long int a [ sz ] ; int n ; int main() { cin >> n ; for ( int i = 0 ; i < 2 * n ; i ++ ) { cin >> a [ i ] ; } sort ( a , a + 2 * n ) ; long long int ans = ( a [ n - 1 ] - a [ 0 ] ) * ( a [ 2 * n - 1 ] - a [ n ] ) ; for ( int i = n ; i < 2 * n ; i ++ ) { ans = min ( ans , ( a [ 2 * n - 1 ] - a [ 0 ] ) * ( a [ i ] - a [ i - n + 1 ] ) ) ; } cout << ans << endl ; const int N = 2e6 + 5 ; return 0; }"}}
{"translation": {"en": "create long long a [ N ] [ENDL] create int n [ENDL] read n [ENDL] for i = 0 to 2 * n , read a [ i ] [ENDL] sort elements between a and a + 2 * n [ENDL] set ans = ( a [ n - 1 ] - a [ 0 ] ) * ( a [ 2 * n - 1 ] - a [ n ] ) [ENDL] for i = 1 to n exclusive , set and to min ( ans , ( a [ i + n - 1 ] - a [ i ] ) * ( a [ 2 * n - 1 ] - a [ 0 ] ) ) [ENDL] print ans [ENDL] N = const integer with N = 2e5 + 50", "c++": "long long a [ N ] ; int n ; int main() { cin >> n ; for ( int i = 0 ; i < 2 * n ; i ++ ) cin >> a [ i ] ; sort ( a , a + 2 * n ) ; long long ans = ( a [ n - 1 ] - a [ 0 ] ) * ( a [ 2 * n - 1 ] - a [ n ] ) ; for ( int i = 1 ; i < n ; i ++ ) ans = min ( ans , ( a [ i + n - 1 ] - a [ i ] ) * ( a [ 2 * n - 1 ] - a [ 0 ] ) ) ; cout << ans << endl ; const int N = 2e5 + 50 ; return 0; }"}}
{"translation": {"en": "M = const integer with M = 1e6 [ENDL] oo = const long long with oo = 1e18 [ENDL] mod = const integer mod = 1e9 + 7 [ENDL] n = integer [ENDL] read n [ENDL] a ( 2 * n ) = vector of long long [ENDL] for i = 0 to n * 2 exclusive , read a [ i ] [ENDL] sort a . begin ( ) and a . end ( ) [ENDL] ans = long long with ans = ( a [ n - 1 ] - a [ 0 ] ) * ( a . back ( ) - a [ n ] ) [ENDL] for i = 1 to n exclusive , ans = min ( ans , ( a [ i + n - 1 ] - a [ i ] ) * ( a . back ( ) - a [ 0 ] ) ) [ENDL] print ans [ENDL] declare const int INF = 0x3f3f3f3f", "c++": "const int M = 1e6 ; const long long oo = 1e18 ; const int mod = 1e9 + 7 ; int n ; int main() { cin >> n ; vector < long long > a ( 2 * n ) ; for ( int i = 0 ; i < n * 2 ; i ++ ) cin >> a [ i ] ; sort ( a . begin ( ) , a . end ( ) ) ; long long ans = ( a [ n - 1 ] - a [ 0 ] ) * ( a . back ( ) - a [ n ] ) ; for ( int i = 1 ; i < n ; i ++ ) { ans = min ( ans , ( a [ i + n - 1 ] - a [ i ] ) * ( a . back ( ) - a [ 0 ] ) ) ; } cout << ans << endl ; const int INF = 0x3f3f3f3f ; }"}}
{"translation": {"en": "create const int maxa = 1e5 + 10 [ENDL] declare int array a with size maxa < < 1 [ENDL] declare integer variable n [ENDL] read n and loop further [ENDL] declare int variable i [ENDL] for i = 0 to 2 * n exclusive , read a [ i ] [ENDL] sort a [ENDL] declare long long x = a [ n - 1 ] - a [ 0 ] [ENDL] create long long y = a [ 2 * n - 1 ] - a [ n ] [ENDL] declare long long minsq = x * y [ENDL] set x to a [ 2 * n - 1 ] - a [ 0 ] [ENDL] for i from 1 to n exclusive [ENDL] set y to a [ i + n - 1 ] - a [ i ] [ENDL] change minsq to min of minsq and x * y [ENDL] print minsq [ENDL] create integer N", "c++": "const int maxa = 1e5 + 10 ; int a [ maxa << 1 ] ; int n ; int main() { while ( cin >> n ) int i ; for ( i = 0 ; i < 2 * n ; i ++ ) cin >> a [ i ] ; sort ( a , a + 2 * n ) ; long long x = a [ n - 1 ] - a [ 0 ] ; long long y = a [ 2 * n - 1 ] - a [ n ] ; long long minsq = x * y ; x = a [ 2 * n - 1 ] - a [ 0 ] ; for ( i = 1 ; i < n ; i ++ ) y = a [ i + n - 1 ] - a [ i ] ; minsq = min ( minsq , x * y ) ; cout << minsq << endl ; } int N ; } return 0; }"}}
{"translation": {"en": "create long long array A with size 200005 [ENDL] read N [ENDL] for i = 0 to 2 * N - 1 inclusive , read A [ i ] [ENDL] sort elements from A to A + 2 * N [ENDL] create long long Ans with Ans = ( A [ N - 1 ] - A [ 0 ] ) * ( A [ 2 * N - 1 ] - A [ N ] ) [ENDL] for i = 1 to N - 1 inclusive , set Ans to minimum of Ans and ( A [ 2 * N - 1 ] - A [ 0 ] ) * ( A [ i + N - 1 ] - A [ i ] ) [ENDL] print Ans print ' \\ n ' [ENDL] niz = array of integers of length 200005", "c++": "long long A [ 200005 ] ; cin >> N ; int main() { for ( int i = 0 ; i <= 2 * N - 1 ; i ++ ) cin >> A [ i ] ; sort ( A , A + 2 * N ) ; long long Ans = ( A [ N - 1 ] - A [ 0 ] ) * ( A [ 2 * N - 1 ] - A [ N ] ) ; for ( int i = 1 ; i <= N - 1 ; i ++ ) { Ans = min ( Ans , ( A [ 2 * N - 1 ] - A [ 0 ] ) * ( A [ i + N - 1 ] - A [ i ] ) ) ; } cout << Ans << ' \\n ' ; int niz [ 200005 ] ; return 0; }"}}
{"translation": {"en": "let n be a integer [ENDL] read n [ENDL] for i = 1 to 2 * n inclusive , read niz [ i ] [ENDL] sort the values niz + 1 and niz + 2 * n + 1 [ENDL] let dx be a integer with dx = niz [ n ] - niz [ 1 ] [ENDL] let dy be a integer with dy = niz [ 2 * n ] - niz [ n + 1 ] [ENDL] let p be a long integer with p = 0 [ENDL] the value ( long long int ) dx * dy is initialized to p [ENDL] set the long integer tren to 0 [ENDL] for i = n + 1 to 2 * n - 1 inclusive [ENDL] the long integer value of ( niz [ i ] - niz [ i - n + 1 ] ) * ( niz [ 2 * n ] - niz [ 1 ] ) is assigned to tren [ENDL] if tren is less than p , the value of p is equal to tren [ENDL] print p and newline [ENDL] declare long long n and long long array a with size 1000001", "c++": "int n ; int main() { cin >> n ; for ( int i = 1 ; i <= 2 * n ; i ++ ) { cin >> niz [ i ] ; } sort ( niz + 1 , niz + 2 * n + 1 ) ; int dx = niz [ n ] - niz [ 1 ] ; int dy = niz [ 2 * n ] - niz [ n + 1 ] ; long long int p = 0 ; p = ( long long int ) dx * dy ; long long int tren = 0 ; for ( int i = n + 1 ; i <= 2 * n - 1 ; i ++ ) tren = ( long long int ) ( niz [ i ] - niz [ i - n + 1 ] ) * ( niz [ 2 * n ] - niz [ 1 ] ) ; if ( tren < p ) p = tren ; cout << p << endl ; } long long n , a [ 1000001 ] ; return 0; }"}}
{"translation": {"en": "read n [ENDL] multiply n by 2 [ENDL] loop i from 1 to n inclusive , read a [ i ] [ENDL] sort a from element 1 to n + 1 [ENDL] create long long ans = ( a [ n / 2 ] - a [ 1 ] ) * ( a [ n ] - a [ n / 2 + 1 ] ) [ENDL] loop i from 2 to n / 2 + 1 inclusive , assign min of ans and ( a [ i + n / 2 - 1 ] - a [ i ] ) * ( a [ n ] - a [ 1 ] ) to ans [ENDL] print ans [ENDL] declare long long array a with size 202000", "c++": "cin >> n ; int main() { n *= 2 ; for ( int i = 1 ; i <= n ; i ++ ) cin >> a [ i ] ; sort ( a + 1 , a + n + 1 ) ; long long ans = ( a [ n / 2 ] - a [ 1 ] ) * ( a [ n ] - a [ n / 2 + 1 ] ) ; for ( int i = 2 ; i <= n / 2 + 1 ; i ++ ) ans = min ( ans , ( a [ i + n / 2 - 1 ] - a [ i ] ) * ( a [ n ] - a [ 1 ] ) ) ; cout << ans << endl ; long long a [ 202000 ] ; return 0; }"}}
{"translation": {"en": "declare integer n [ENDL] read input to n [ENDL] for i = 1 to n < < 1 inclusive , read a [ i ] [ENDL] sort a fron index 1 to 1 + n + n [ENDL] long long s = 1ll < < 62 [ENDL] set s to min of s and ( a [ n ] - a [ 1 ] ) * ( a [ n < < 1 ] - a [ n + 1 ] ) [ENDL] for i from 2 to n inclusive , change s to min of s and ( a [ n < < 1 ] - a [ 1 ] ) * ( a [ n + i - 1 ] - a [ i ] ) [ENDL] print s [ENDL] flag = int", "c++": "int n ; int main() { cin >> n ; for ( int i = 1 ; i <= ( n << 1 ) ; ++ i ) { cin >> a [ i ] ; } sort ( a + 1 , a + 1 + n + n ) ; long long s = 1ll << 62 ; s = min ( s , ( a [ n ] - a [ 1 ] ) * ( a [ n << 1 ] - a [ n + 1 ] ) ) ; for ( int i = 2 ; i <= n ; i ++ ) { s = min ( s , ( a [ n << 1 ] - a [ 1 ] ) * ( a [ n + i - 1 ] - a [ i ] ) ) ; } cout << s << endl ; int flag ; return 0; }"}}
{"translation": {"en": "n , m , len = int [ENDL] a = long long array of size 200005 [ENDL] ans , temp = long long [ENDL] loop while reading n [ENDL] read 2 * n values into a [ENDL] sort a [ENDL] set ans to ( a [ 2 * n - 1 ] - a [ n ] ) * ( a [ n - 1 ] - a [ 0 ] ) [ENDL] set temp to a [ 2 * n - 1 ] - a [ 0 ] [ENDL] for i = 1 to n set ans to min of ans and temp * ( a [ i + n - 1 ] - a [ i ] ) [ENDL] print ans [ENDL] create integer flag", "c++": "int n , m , len ; long long a [ 200005 ] ; long long ans , temp ; while ( cin >> n ) int main() { for ( int i = 0 ; i < 2 * n ; ++ i ) cin >> a [ i ] ; sort ( a , a + n + n ) ; ans = ( a [ 2 * n - 1 ] - a [ n ] ) * ( a [ n - 1 ] - a [ 0 ] ) ; temp = a [ 2 * n - 1 ] - a [ 0 ] ; for ( int i = 1 ; i < n ; ++ i ) { ans = min ( ans , temp * ( a [ i + n - 1 ] - a [ i ] ) ) ; } cout << ans << endl ; int flag ; } return 0; }"}}
{"translation": {"en": "create integers n , m , len [ENDL] create long long array a with size 200005 [ENDL] create long longs ans , temp [ENDL] while read n is true [ENDL] for i = 0 to 2 * n exclusive , read a [ i ] [ENDL] sort elements from a to a + n + n [ENDL] set ans to ( a [ 2 * n - 1 ] - a [ n ] ) * ( a [ n - 1 ] - a [ 0 ] ) [ENDL] set temp to a [ 2 * n - 1 ] - a [ 0 ] [ENDL] for i = 1 to n exclusive , set ans to minimum of ans and temp * ( a [ i + n - 1 ] - a [ i ] ) [ENDL] print ans print newline [ENDL] maxn = const integer with maxn = 2e5 + 10", "c++": "int n , m , len ; long long a [ 200005 ] ; long long ans , temp ; while ( cin >> n ) int main() { for ( int i = 0 ; i < 2 * n ; ++ i ) cin >> a [ i ] ; sort ( a , a + n + n ) ; ans = ( a [ 2 * n - 1 ] - a [ n ] ) * ( a [ n - 1 ] - a [ 0 ] ) ; temp = a [ 2 * n - 1 ] - a [ 0 ] ; for ( int i = 1 ; i < n ; ++ i ) { ans = min ( ans , temp * ( a [ i + n - 1 ] - a [ i ] ) ) ; } cout << ans << endl ; const int maxn = 2e5 + 10 ; } return 0; }"}}
{"translation": {"en": "a = array of size maxn long long [ENDL] n = integer [ENDL] read n [ENDL] ans = long long with ans = 0 [ENDL] for i = 0 to 2 * n exclusive , read a [ i ] [ENDL] sort a and a + 2 * n [ENDL] ans = ( a [ n - 1 ] - a [ 0 ] ) * ( a [ 2 * n - 1 ] - a [ n ] ) [ENDL] for i = 1 to n exclusive , ans = min ( ( a [ 2 * n - 1 ] - a [ 0 ] ) * ( a [ i + n - 1 ] - a [ i ] ) , ans ) [ENDL] print ans [ENDL] n = integer", "c++": "long long a [ maxn ] ; int n ; int main() { cin >> n ; long long ans = 0 ; for ( int i = 0 ; i < 2 * n ; i ++ ) { cin >> a [ i ] ; } sort ( a , a + 2 * n ) ; ans = ( a [ n - 1 ] - a [ 0 ] ) * ( a [ 2 * n - 1 ] - a [ n ] ) ; for ( int i = 1 ; i < n ; i ++ ) { ans = min ( ( a [ 2 * n - 1 ] - a [ 0 ] ) * ( a [ i + n - 1 ] - a [ i ] ) , ans ) ; } cout << ans << endl ; int n ; return 0; }"}}
{"translation": {"en": "a = long long array of size 200001 , ans = long long [ENDL] read n [ENDL] for i = 1 to ( left shift n 1 place ) , read a [ i ] [ENDL] sort a + 1 and a + ( n < < 1 ) + 1 [ENDL] ans = ( a [ n ] - a [ 1 ] ) * ( a [ shift n 1 place ] - a [ n + 1 ] ) [ENDL] for i = 1 to n exclusive , ans = min ( ( a [ left shift n 1 place ] - a [ 1 ] ) * ( a [ n + i ] - a [ i + 1 ] ) , ans ) [ENDL] print ans [ENDL] let in be long long array with size 200010", "c++": "long long a [ 200001 ] , ans ; cin >> n ; int main() { for ( int i = 1 ; i <= ( n << 1 ) ; i ++ ) cin >> a [ i ] ; sort ( a + 1 , a + ( n << 1 ) + 1 ) ; ans = ( a [ n ] - a [ 1 ] ) * ( a [ n << 1 ] - a [ n + 1 ] ) ; for ( int i = 1 ; i < n ; i ++ ) ans = min ( ( a [ n << 1 ] - a [ 1 ] ) * ( a [ n + i ] - a [ i + 1 ] ) , ans ) ; cout << ans << endl ; long long in [ 200010 ] ; return 0; }"}}
{"translation": {"en": "create ints n and n2 [ENDL] declare long long ans [ENDL] read n [ENDL] change n2 to n * 2 [ENDL] for integer i = 0 to n2 exclusive , read in [ i ] [ENDL] sort n2 elements of in [ENDL] assign ( in [ n - 1 ] - in [ 0 ] ) * ( in [ n2 - 1 ] - in [ n ] ) to ans [ENDL] for i from 1 to n exclusive , set ans to min of ans and in [ n - 1 + i ] - in [ i ] ) * ( in [ n2 - 1 ] - in [ 0 ] [ENDL] print ans and ' \\ n ' [ENDL] create long long array of length 200020", "c++": "int n , n2 ; long long ans ; cin >> n ; int main() { n2 = n * 2 ; for ( int i = 0 ; i < n2 ; i ++ ) cin >> in [ i ] ; sort ( in , in + n2 ) ; ans = ( in [ n - 1 ] - in [ 0 ] ) * ( in [ n2 - 1 ] - in [ n ] ) ; for ( int i = 1 ; i < n ; i ++ ) ans = min ( ans , ( in [ n - 1 + i ] - in [ i ] ) * ( in [ n2 - 1 ] - in [ 0 ] ) ) ; cout << ans << ' \\n ' ; long long a [ 200020 ] ; return 0; }"}}
{"translation": {"en": "create int n [ENDL] read n [ENDL] for i = 1 to 2 * n inclusive , read a [ i ] [ENDL] sort elements between a + 1 and a + 2 * n + 1 [ENDL] set min1 to ( a [ n ] - a [ 1 ] ) * ( a [ 2 * n ] - a [ n + 1 ] ) [ENDL] for i = 2 to n + 1 inclusive , assign min of min1 and ( a [ 2 * n ] - a [ 1 ] ) * ( a [ i + n - 1 ] - a [ i ] ) to min1 [ENDL] print min1 [ENDL] create long long array a with size 202000", "c++": "int n ; int main() { cin >> n ; for ( int i = 1 ; i <= 2 * n ; i ++ ) cin >> a [ i ] ; sort ( a + 1 , a + 2 * n + 1 ) ; long long min1 = ( a [ n ] - a [ 1 ] ) * ( a [ 2 * n ] - a [ n + 1 ] ) ; for ( int i = 2 ; i <= n + 1 ; i ++ ) { min1 = min ( min1 , ( a [ 2 * n ] - a [ 1 ] ) * ( a [ i + n - 1 ] - a [ i ] ) ) ; } cout << min1 << endl ; long long a [ 202000 ] ; return 0; }"}}
{"translation": {"en": "create integer n [ENDL] read n [ENDL] for i = 1 to i is less than or equal to ( n bitshift left 1 ) , incrementing i , read a [ i ] [ENDL] sort elements from a + 1 to a + 1 + n + n [ENDL] create long long s with s = ( s , ( a [ n ] - a [ 1 ] ) * ( a [ n bitshift left 1 ] - a [ n + 1 ] ) ) [ENDL] for i = 2 to n inclusive , set s to minimum of ( s and ( a [ n bitshift left 1 ] - a [ 1 ] ) * ( a [ n + i - 1 ] - a [ i ] ) [ENDL] print s print newline [ENDL] declare integer variable n", "c++": "int n ; int main() { cin >> n ; for ( int i = 1 ; i <= ( n << 1 ) ; ++ i ) { cin >> a [ i ] ; } sort ( a + 1 , a + 1 + n + n ) ; long long s = ( s , ( a [ n ] - a [ 1 ] ) * ( a [ n << 1 ] - a [ n + 1 ] ) ) ; for ( int i = 2 ; i <= n ; i ++ ) { s = min ( s , ( a [ n << 1 ] - a [ 1 ] ) * ( a [ n + i - 1 ] - a [ i ] ) ) ; } cout << s << endl ; int n ; return 0; }"}}
{"translation": {"en": "read n [ENDL] create long longs vector a with n * 2 elements [ENDL] for i = 0 to n * 2 exclusive , read a [ i ] [ENDL] sort a [ENDL] create long long ans = LLONG_MAX [ENDL] loop i from 0 to n exclusive [ENDL] if i = 0 [ENDL] assign min of ans and ( a [ n - 1 ] - a [ 0 ] ) * ( a [ n * 2 - 1 ] - a [ n ] ) to ans [ENDL] else [ENDL] assign min of ans and ( a [ i + n - 1 ] - a [ i ] ) * ( a [ n * 2 - 1 ] - a [ 0 ] ) to ans [ENDL] print ans [ENDL] create const int maxn = 1e5 + 2", "c++": "int main() { cin >> n ; vector < long long > a ( n * 2 ) ; for ( int i = 0 ; i < n * 2 ; i ++ ) { cin >> a [ i ] ; } sort ( a . begin ( ) , a . end ( ) ) ; long long ans = LLONG_MAX ; for ( int i = 0 ; i < n ; i ++ ) if ( i == 0 ) ans = min ( ans , ( a [ n - 1 ] - a [ 0 ] ) * ( a [ n * 2 - 1 ] - a [ n ] ) ) ; else ans = min ( ans , ( a [ i + n - 1 ] - a [ i ] ) * ( a [ n * 2 - 1 ] - a [ 0 ] ) ) ; cout << ans << endl ; } } const int maxn = 1e5 + 2 ; return 0; }"}}
{"translation": {"en": "let a be long long array with size maxn * 2 [ENDL] declare integer variable n [ENDL] read n [ENDL] create long long m = n * 2 [ENDL] for i from 1 to m inclusive , read input to a [ i ] [ENDL] sort a from index 1 to m + 1 [ENDL] create long long ans = 1e18 [ENDL] for i from 1 to n inclusive [ENDL] if i = 1 [ENDL] change ans to min of ans and ( a [ n ] - a [ 1 ] ) * ( a [ m ] - a [ n + 1 ] ) [ENDL] else [ENDL] change ans to min of ans and ( a [ m ] - a [ 1 ] ) * ( a [ n + i - 1 ] - a [ i ] ) [ENDL] print ans [ENDL] create constant integer MAXN with MAXN = integer casted ( 2 * 1e5 + 5 )", "c++": "long long a [ maxn * 2 ] ; int n ; int main() { cin >> n ; long long m = n * 2 ; for ( int i = 1 ; i <= m ; i ++ ) { cin >> a [ i ] ; } sort ( a + 1 , a + m + 1 ) ; long long ans = 1e18 ; for ( int i = 1 ; i <= n ; i ++ ) if ( i == 1 ) ans = min ( ans , ( a [ n ] - a [ 1 ] ) * ( a [ m ] - a [ n + 1 ] ) ) ; else ans = min ( ans , ( a [ m ] - a [ 1 ] ) * ( a [ n + i - 1 ] - a [ i ] ) ) ; cout << ans << endl ; } } const int MAXN = ( int ) ( 2 * 1e5 + 5 ) ; return 0; }"}}
{"translation": {"en": "create integer n [ENDL] create long long array a with size MAXN [ENDL] read n [ENDL] for i = 0 to n + n exclusive , read a [ i ] [ENDL] sort elements from a to a + n + n [ENDL] if n is less than or equal to 1 [ENDL] print \" 0 \" print newline [ENDL] else [ENDL] create long long ans with ans = a [ n - 1 ] - a [ 0 ] [ENDL] set ans to ans * ( a [ n + n - 1 ] - a [ n ] ) [ENDL] create long long l with l = a [ n + n - 1 ] - a [ 0 ] [ENDL] for i = 1 to n inclusive , set ans to minimum of ( ans and ( l * ( a [ i + n - 1 ] - a [ i ] ) ) ) [ENDL] print ans print newline [ENDL] n , x = integers", "c++": "int n ; long long a [ MAXN ] ; cin >> n ; int main() { for ( int i = 0 ; i < n + n ; i ++ ) { cin >> a [ i ] ; } sort ( a , a + n + n ) ; if ( n <= 1 ) cout << \" 0 \" << endl ; else long long ans = a [ n - 1 ] - a [ 0 ] ; ans *= a [ n + n - 1 ] - a [ n ] ; long long l = a [ n + n - 1 ] - a [ 0 ] ; for ( int i = 1 ; i <= n ; i ++ ) { ans = min ( ans , l * ( a [ i + n - 1 ] - a [ i ] ) ) ; } cout << ans << endl ; int n , x ; } }"}}
{"translation": {"en": "read n [ENDL] set cnt1 , cnt2 = 0 [ENDL] for i = 0 to n exclusive [ENDL] read x [ENDL] set cnt1 = cnt1 + x [ENDL] for i = 0 to n exclusive [ENDL] read x [ENDL] set cnt2 = cnt2 + x [ENDL] if cnt1 > = cnt2 [ENDL] print \" YES \" [ENDL] else [ENDL] print \" NO \" [ENDL] declare long long integer variables n , i and j", "c++": "int main() { cin >> n ; int cnt1 = 0 , cnt2 = 0 ; for ( int i = 0 ; i < n ; i ++ ) cin >> x ; cnt1 += x ; for ( int i = 0 ; i < n ; i ++ ) } cin >> x ; cnt2 += x ; if ( cnt1 >= cnt2 ) } cout << \" YES \" << endl ; else cout << \" NO \" << endl ; long long int n , i , j ; }"}}
{"translation": {"en": "read n [ENDL] declare long long integers s1 and s2 = 0 and long long integer arrays a and b with size n [ENDL] for i = 0 to n exclusive [ENDL] read a [ i ] [ENDL] increase s1 by a [ i ] [ENDL] for i = 0 to n exclusive [ENDL] read b [ i ] [ENDL] increase s2 by b [ i ] [ENDL] if s1 > = s2 [ENDL] print \" YES \" and ' \\ n ' [ENDL] else [ENDL] print \" NO \" and ' \\ n ' [ENDL] n = integer", "c++": "int main() { cin >> n ; long long int a [ n ] , b [ n ] , s1 = 0 , s2 = 0 ; for ( i = 0 ; i < n ; i ++ ) cin >> a [ i ] ; s1 += a [ i ] ; for ( i = 0 ; i < n ; i ++ ) } cin >> b [ i ] ; s2 += b [ i ] ; if ( s1 >= s2 ) } cout << \" YES \" << ' \\n ' ; else cout << \" NO \" << ' \\n ' ; int n ; } return 0; }"}}
{"translation": {"en": "Read n [ENDL] sumx = integer , set to 0 [ENDL] sumy = integer , set to 0 [ENDL] for i = 0 to n exclusive [ENDL] x = integer [ENDL] Read x [ENDL] set sumx to sumx + x [ENDL] for i = 0 to n exclusive [ENDL] y = integer [ENDL] Read y [ENDL] set sumy to sumy + y [ENDL] if sumy is less than or equal to sumx [ENDL] print YES and a new line [ENDL] else do the following [ENDL] print NO and a new line [ENDL] x , y , n = integers with x , y = 0", "c++": "int main() { cin >> n ; int sumx = 0 ; int sumy = 0 ; for ( int i = 0 ; i < n ; i ++ ) int x ; cin >> x ; sumx = sumx + x ; for ( int i = 0 ; i < n ; i ++ ) } int y ; cin >> y ; sumy = sumy + y ; if ( sumy <= sumx ) } cout << \" YES \" << endl ; else cout << \" NO \" << endl ; int x = 0 , y = 0 , n ; } return 0; }"}}
{"translation": {"en": "a = integer [ENDL] read n [ENDL] for i = 1 to n inclusive [ENDL] read a [ENDL] set x to x + a [ENDL] for i = 1 to n inclusive [ENDL] read a [ENDL] set y to y + a [ENDL] if x > = y [ENDL] print YES [ENDL] else [ENDL] print NO [ENDL] create integer arrays x , y , with x size 51 , y size 51", "c++": "int main() { int a ; cin >> n ; for ( int i = 1 ; i <= n ; i ++ ) cin >> a ; x += a ; for ( int i = 1 ; i <= n ; i ++ ) } cin >> a ; y += a ; if ( x >= y ) } cout << \" YES\\n \" ; else cout << \" NO\\n \" ; int x [ 51 ] , y [ 51 ] ; } return 0; }"}}
{"translation": {"en": "create integers n , sum_x , sum_y , with sum_x = 0 , sum_y = 0 [ENDL] read n [ENDL] for i = 0 to n exclusive , read x [ i ] , increment sum_x by x [ i ] [ENDL] for i = 0 to n exclusive , read y [ i ] , increment sum_y by y [ i ] [ENDL] if sum_x is greater than or equal than sum_y [ENDL] print \" YES \" print newline [ENDL] else [ENDL] print \" NO \" print newline [ENDL] create n , sum , s as int set sum and s to 0", "c++": "int n , sum_x = 0 , sum_y = 0 ; int main() { cin >> n ; for ( int i = 0 ; i < n ; i ++ ) cin >> x [ i ] , sum_x += x [ i ] ; for ( int i = 0 ; i < n ; i ++ ) cin >> y [ i ] , sum_y += y [ i ] ; if ( sum_x >= sum_y ) cout << \" YES \" << endl ; else cout << \" NO \" << endl ; int n , sum = 0 , s = 0 ; }"}}
{"translation": {"en": "read in to n [ENDL] create int array arr and ar both size n [ENDL] for i = 0 to n exclusive [ENDL] read in to arr [ i ] [ENDL] increase sum by arr [ i ] [ENDL] for i = 0 to n exclusive [ENDL] read in to ar [ i ] [ENDL] increase s by ar [ i ] [ENDL] if s < = sum [ENDL] print YES [ENDL] else [ENDL] print NO [ENDL] let is be integer array with size 105", "c++": "int main() { cin >> n ; int arr [ n ] , ar [ n ] ; for ( int i = 0 ; i < n ; i ++ ) cin >> arr [ i ] ; sum += arr [ i ] ; for ( int i = 0 ; i < n ; i ++ ) } cin >> ar [ i ] ; s += ar [ i ] ; if ( s <= sum ) } cout << \" YES \" << endl ; else cout << \" NO \" << endl ; int is [ 105 ] ; } }"}}
{"translation": {"en": "create integers n , m , a and b [ENDL] read n and m [ENDL] for integer i = 0 to n exclusive [ENDL] read a and b [ENDL] for j = a to b inclusive set is [ j ] to 1 [ENDL] declare integer vector ans [ENDL] for i = 1 to m inclusive [ENDL] if is [ i ] is 0 , push i into ans [ENDL] print length of ans and \" \\ n \" [ENDL] for i = 0 to length of ans exclusive [ENDL] if i ! = length of ans - 1 [ENDL] print ans [ i ] and \" \" [ENDL] else [ENDL] print ans [ i ] and \" \\ n \" [ENDL] a , tam , comeco , fim = int witha = 0 and tam = 0 and comeco = 0 and fim = 0", "c++": "int n , m , a , b ; int main() { cin >> n >> m ; for ( int i = 0 ; i < n ; i ++ ) cin >> a >> b ; for ( int j = a ; j <= b ; j ++ ) is [ j ] = 1 ; vector < int > ans ; } for ( int i = 1 ; i <= m ; i ++ ) if ( ! is [ i ] ) ans . push_back ( i ) ; cout << ans . size ( ) << \" \\n \" ; for ( int i = 0 ; i < ans . size ( ) ; i ++ ) if ( i != ans . size ( ) - 1 ) cout << ans [ i ] << \"   \" ; else cout << ans [ i ] << \" \\n \" ; int a = 0 , tam = 0 , comeco = 0 , fim = 0 ; return 0; }"}}
{"translation": {"en": "read a then tam [ENDL] isThere = bool array of size tam + 1 [ENDL] set all values of isThere to false [ENDL] for b = 0 to a [ENDL] read comeco then fim [ENDL] for c = comeco to fim inclusive set siThere [ c ] to true [ENDL] resp = int with resp = 0 [ENDL] presentes = int array of size tam + 1 [ENDL] ordem = string with ordem = \" \" [ENDL] for b = 1 to tam inclusive [ENDL] is isThere [ b ] is false [ENDL] set presentes [ resp ] to b [ENDL] increment resp [ENDL] print resp [ENDL] for b = 0 to resp [ENDL] print presentes [ b ] [ENDL] if b is resp - 1 [ENDL] print newline [ENDL] else [ENDL] print \" \" [ENDL] M = const int with M = 3010", "c++": "int main() { cin >> a >> tam ; bool isThere [ tam + 1 ] ; for ( int j = 0 ; j <= tam ; j ++ ) { isThere [ j ] = false ; } for ( int b = 0 ; b < a ; b ++ ) cin >> comeco >> fim ; for ( int c = comeco ; c <= fim ; c ++ ) { isThere [ c ] = true ; } int resp = 0 ; } int presentes [ tam + 1 ] ; string ordem = \"  \" ; for ( int b = 1 ; b <= tam ; b ++ ) if ( ! isThere [ b ] ) presentes [ resp ] = b ; resp ++ ; cout << resp << endl ; } } for ( int b = 0 ; b < resp ; b ++ ) cout << presentes [ b ] ; if ( b == resp - 1 ) cout << endl ; else cout << \"   \" ; const int M = 3010 ; } } return 0; }"}}
{"translation": {"en": "b = int vector and a = int vector array of size M [ENDL] n , m = int [ENDL] in function judge taking an int x and returning a bool [ENDL] num1 = int with num1 = size of a [ 1 ] [ENDL] for i = 2 to m inclusive [ENDL] if size of a [ i ] is greater than x [ENDL] increment num1 by size of a [ i ] - x [ENDL] else [ENDL] increment num1 by size of a [ i ] [ENDL] return true if num1 is greater than x else return false [ENDL] in function get_ans taking an int x and returning a long long [ENDL] ans = long long with ans = 0 [ENDL] num1 = int with num1 = size of a [ 1 ] [ENDL] clear b [ENDL] for i = 2 to m inclusive [ENDL] if size of a [ i ] is greater than x [ENDL] for j = x to size of a [ i ] [ENDL] increment num1 [ENDL] increment ans by a [ i ] [ j ] [ENDL] for j = 0 to x append a [ i ] [ j ] to b [ENDL] else [ENDL] for j = 0 to size of a [ i ] append a [ i ] [ j ] to b [ENDL] sort b [ENDL] if num1 is less than x and x - num1 + 1 is greater than size of b then return 10000000000000ll [ENDL] hh = int with hh = x - num1 + 1 [ENDL] for i = 0 to hh increment ans by b [ i ] [ENDL] return ans [ENDL] in function cmp taking two ints x and y and returning a bool [ENDL] return true if x is greater than y else return false [ENDL] read n then m [ENDL] for i = 1 to n inclusive [ENDL] x , y = int [ENDL] read x then y [ENDL] append y to a [ x ] [ENDL] for i = 1 to m inclusive sort a [ i ] using cmp [ENDL] ans = long long with ans = 10000000000000ll [ENDL] for i = 0 to n / 2 inclusive set ans to min of ans and get_ans of i [ENDL] print ans [ENDL] create long long integer pair p of 3007 size", "c++": "vector < int > a [ M ] , b ; int n , m ; bool judge ( int x ) int num1 = a [ 1 ] . size ( ) ; for ( int i = 2 ; i <= m ; i ++ ) if ( a [ i ] . size ( ) > x ) num1 += a [ i ] . size ( ) - x ; else num1 += a [ i ] . size ( ) ; return num1 > x ; } long long get_ans ( int x ) } long long ans = 0 ; int num1 = a [ 1 ] . size ( ) ; b . clear ( ) ; for ( int i = 2 ; i <= m ; i ++ ) if ( a [ i ] . size ( ) > x ) for ( int j = x ; j < a [ i ] . size ( ) ; j ++ ) num1 ++ ; ans += a [ i ] [ j ] ; for ( int j = 0 ; j < x ; j ++ ) b . push_back ( a [ i ] [ j ] ) ; } else for ( int j = 0 ; j < a [ i ] . size ( ) ; j ++ ) b . push_back ( a [ i ] [ j ] ) ; sort ( b . begin ( ) , b . end ( ) ) ; } if ( num1 < x && x - num1 + 1 > b . size ( ) ) return 10000000000000ll ; int hh = x - num1 + 1 ; for ( int i = 0 ; i < hh ; i ++ ) ans += b [ i ] ; return ans ; bool cmp ( int x , int y ) } return x > y ; cin >> n >> m ; } int main() { for ( int i = 1 ; i <= n ; i ++ ) int x , y ; cin >> x >> y ; a [ x ] . push_back ( y ) ; for ( int i = 1 ; i <= m ; i ++ ) sort ( a [ i ] . begin ( ) , a [ i ] . end ( ) , cmp ) ; } long long ans = 10000000000000ll ; for ( int i = 0 ; i <= n / 2 ; i ++ ) ans = min ( ans , get_ans ( i ) ) ; cout << ans << endl ; pair < long long int , long long int > p [ 3007 ] ; return 0; }"}}
{"translation": {"en": "c = long long integers array of length 3007 [ENDL] integer n , m = long long integers [ENDL] read n , m [ENDL] set long long integer mx to 0 [ENDL] for i = 0 to less than n do the following [ENDL] read p [ i ] . second , p [ i ] . first [ENDL] add one to c [ p [ i ] . second ] [ENDL] sort the values of p to p + n [ENDL] for i = 2 to less than or equal to m then make mx the maximum of mx or c [ i ] [ENDL] set long long integer ans to 21474836470000 [ENDL] set long long integer sum to 0 [ENDL] for i = mx to greater than or equal to 0 do the following [ENDL] for j = 0 to less than n do the following [ENDL] if p [ j ] . second is not equal to 1 and c [ p [ j ] . second ] > i then do the following [ENDL] minus 1from c [ p [ j ] . second ] [ENDL] set p [ j ] . second to 1 [ENDL] add 1 to c [ 1 ] [ENDL] sum equals sum plus p [ j ] . first [ENDL] set long long integer k to i - c [ 1 ] + 1 [ENDL] set long long integer t to sum [ENDL] for j = 0 to less than n do the following [ENDL] if k is greater than 0 then do the following [ENDL] if p [ j ] . second is not equal to 1 then do the following [ENDL] t equals t plus p [ j ] . first [ENDL] minus 1 from k - - [ENDL] set ans to min ( ans , t ) [ENDL] output ans , \\ n [ENDL] ax , ay , bx , by , cx , cy , n = integers", "c++": "long long int c [ 3007 ] ; long long int n , m ; int main() { cin >> n >> m ; long long int mx = 0 ; for ( long long int i = 0 ; i < n ; i ++ ) cin >> p [ i ] . second >> p [ i ] . first ; c [ p [ i ] . second ] ++ ; sort ( p , p + n ) ; } for ( long long int i = 2 ; i <= m ; i ++ ) mx = max ( mx , c [ i ] ) ; long long int ans = 21474836470000 ; long long int sum = 0 ; for ( long long int i = mx ; i >= 0 ; i -- ) for ( long long int j = 0 ; j < n ; j ++ ) if ( p [ j ] . second != 1 && c [ p [ j ] . second ] > i ) c [ p [ j ] . second ] -- ; p [ j ] . second = 1 ; c [ 1 ] ++ ; sum += p [ j ] . first ; long long int k = i - c [ 1 ] + 1 ; } } long long int t = sum ; for ( long long int j = 0 ; j < n ; j ++ ) if ( k > 0 ) if ( p [ j ] . second != 1 ) t += p [ j ] . first ; k -- ; ans = min ( ans , t ) ; } } } cout << ans << ' \\n ' ; } int ax , ay , bx , by , cx , cy , n ; }"}}
{"translation": {"en": "Read ax , ay , bx , by , cx , cy , n [ENDL] if cx is greater than bx [ENDL] if cy is greater than by [ENDL] if ( ax is less than cx and ax is greater than bx ) OR ( ay is less than cy and ay is greater than by ) [ENDL] print NO and a new line [ENDL] else do the following [ENDL] print YES and a new line [ENDL] else do the following [ENDL] if ( ax is less than cx and ax is greater than bx ) OR ( ay is greater than cy and ay is less than by ) [ENDL] print NO and a new line [ENDL] else do the following [ENDL] print YES and a new line [ENDL] else do the following [ENDL] if cy is greater than by [ENDL] if ( ax is greater than cx and ax is less than bx ) OR | ( ay is less than cy and ay is greater than by [ENDL] print NO and a new line [ENDL] else do the following [ENDL] print YES and a new line [ENDL] else do the following [ENDL] if ( ax is greater than cx and ax is less than bx ) OR | ( ay is greater than cy and ay is less than by ) [ENDL] print NO and a new line [ENDL] else do the following [ENDL] print YES and a new line [ENDL] create 2d integer array bio with size 1000 by 1000", "c++": "int main() { cin >> n >> ax >> ay >> bx >> by >> cx >> cy ; if ( cx > bx ) if ( cy > by ) if ( ( ax < cx && ax > bx ) || ( ay < cy && ay > by ) ) cout << \" NO\\n \" ; else cout << \" YES\\n \" ; else } if ( ( ax < cx && ax > bx ) || ( ay > cy && ay < by ) ) cout << \" NO\\n \" ; else cout << \" YES\\n \" ; else } } if ( cy > by ) if ( ( ax > cx && ax < bx ) || ( ay < cy && ay > by ) ) cout << \" NO\\n \" ; else cout << \" YES\\n \" ; else } if ( ( ax > cx && ax < bx ) || ( ay > cy && ay < by ) ) cout << \" NO\\n \" ; else cout << \" YES\\n \" ; int bio [ 1000 ] [ 1000 ] ; } } } return 0; }"}}
{"translation": {"en": "create constant integer array smjeroviX with size 8 with smjeroviX = { 0 , 0 , 1 , - 1 , 1 , 1 , - 1 , - 1 } [ENDL] create constant integer array smjeroviY with size 8 with smjeroviY = { 1 , - 1 , 0 , 0 , 1 , - 1 , 1 , - 1 } [ENDL] create integers n , aX , aY , bX , bY , cX , cY [ENDL] read n read aX read aY read bX read bY read cX read cY [ENDL] decrement aX [ENDL] decrement aY [ENDL] decrement bX [ENDL] decrement bY [ENDL] decrement cX [ENDL] decrement cY [ENDL] create integer queue q [ENDL] add element bX to end of q [ENDL] add element bY to end of q [ENDL] set bio [ bX ] [ bY ] to 1 [ENDL] while q is not empty [ENDL] create integer x with x = front of q [ENDL] remove next element from q [ENDL] set y to front of q [ENDL] remove next element from q [ENDL] if x is cX and y is cY [ENDL] print \" YES \\ n \" [ENDL] for i = 0 to 8 exclusive [ENDL] create integer X with X = x + smjeroviX [ i ] [ENDL] create integer Y with Y = y + smjeroviY [ i ] [ENDL] if X is less than 0 or X is n or Y is less than 0 or Y is n or bio [ X ] [ Y ] , break current loop iteration [ENDL] set bio [ X ] [ Y ] to 1 [ENDL] if X is not aX and Y is not aY and ( X + Y is not aX + aY ) and ( X - Y is not aX - aY ) [ENDL] add element X to end of q [ENDL] add element Y to end of q [ENDL] print \" NO \\ n \" [ENDL] integers = n , ax , ay , bx , by , cx , cy", "c++": "const int smjeroviX [ 8 ] = { 0 , 0 , 1 , - 1 , 1 , 1 , - 1 , - 1 } ; const int smjeroviY [ 8 ] = { 1 , - 1 , 0 , 0 , 1 , - 1 , 1 , - 1 } ; int n , aX , aY , bX , bY , cX , cY ; int main() { cin >> n >> aX >> aY >> bX >> bY >> cX >> cY ; aX -- ; aY -- ; bX -- ; bY -- ; cX -- ; cY -- ; queue < int > q ; q . push ( bX ) ; q . push ( bY ) ; bio [ bX ] [ bY ] = 1 ; while ( ! q . empty ( ) ) int x = q . front ( ) ; q . pop ( ) ; int y = q . front ( ) ; q . pop ( ) ; if ( x == cX && y == cY ) cout << \" YES\\n \" ; for ( int i = 0 ; i < 8 ; i ++ ) return 0; } int X = x + smjeroviX [ i ] ; int Y = y + smjeroviY [ i ] ; if ( X < 0 || X == n || Y < 0 || Y == n || bio [ X ] [ Y ] ) continue ; bio [ X ] [ Y ] = 1 ; if ( X != aX && Y != aY && ( X + Y != aX + aY ) && ( X - Y != aX - aY ) ) q . push ( X ) ; q . push ( Y ) ; cout << \" NO\\n \" ; } } } int n , ax , ay , bx , by , cx , cy ; return 0; }"}}
{"translation": {"en": "read n , ax , ay , bx , by , cx , cy [ENDL] if ( bx - ax ) * ( cx - ax ) is less than 0 or ( by - ay ) * ( cy - ay ) < 0 then do the following [ENDL] output NO [ENDL] else [ENDL] print YES [ENDL] declare integer variable n", "c++": "int main() { cin >> n >> ax >> ay >> bx >> by >> cx >> cy ; if ( ( bx - ax ) * ( cx - ax ) < 0 || ( by - ay ) * ( cy - ay ) < 0 ) cout << \" NO \" << endl ; else cout << \" YES \" << endl ; int n ; return 0; }"}}
{"translation": {"en": "read input to n [ENDL] create integers x1 and y1 [ENDL] read x1 and y1 [ENDL] declare ints x2 and y2 [ENDL] read x2 and y2 [ENDL] declare integers x3 and y3 [ENDL] read x3 and y3 [ENDL] if x2 < x1 and y2 < y1 and x3 < x1 and y3 < y1 [ENDL] print \" YES \" [ENDL] else if x2 > x1 & & y2 > y1 & & x3 > x1 & & y3 > y1 [ENDL] print \" YES \" [ENDL] else if x2 > x1 & & x3 > x1 & & y3 < y1 & & y2 < y1 [ENDL] print \" YES \" [ENDL] else if x2 < x1 & & x3 < x1 & & y2 > y1 & & y3 > y1 [ENDL] print \" YES \" [ENDL] else [ENDL] print \" NO \" [ENDL] n , qx , qy , kx , ky , tx , ty = integers", "c++": "int main() { cin >> n ; int x1 , y1 ; cin >> x1 >> y1 ; int x2 , y2 ; cin >> x2 >> y2 ; int x3 , y3 ; cin >> x3 >> y3 ; if ( x2 < x1 && y2 < y1 && x3 < x1 && y3 < y1 ) cout << \" YES \" << endl ; else if ( x2 > x1 && y2 > y1 && x3 > x1 && y3 > y1 ) cout << \" YES \" << endl ; else if ( x2 > x1 && x3 > x1 && y3 < y1 && y2 < y1 ) cout << \" YES \" << endl ; else if ( x2 < x1 && x3 < x1 && y2 > y1 && y3 > y1 ) cout << \" YES \" << endl ; else cout << \" NO \" << endl ; int n , qx , qy , kx , ky , tx , ty ; }"}}
{"translation": {"en": "Read n [ENDL] Read qx [ENDL] Read qy [ENDL] Read kx [ENDL] Read ky [ENDL] Read tx [ENDL] Read ty [ENDL] if kx is less than qx [ENDL] if ky is less than qy [ENDL] if tx is less than qx and ty is less than qy [ENDL] print YES and a new line [ENDL] else do the following [ENDL] print NO and a new line [ENDL] else do the following [ENDL] if tx is less than qx and ty is greater than qy [ENDL] print YES and a new line [ENDL] else do the following [ENDL] print NO and a new line [ENDL] else do the following [ENDL] if ky is less than qy [ENDL] if tx is greater than qx and ty is less than qy [ENDL] print YES and a new line [ENDL] else do the following [ENDL] print NO and a new line [ENDL] else do the following [ENDL] if tx is greater than qx and ty is greater than qy [ENDL] print YES and a new line [ENDL] else do the following [ENDL] print NO and a new line [ENDL] integers = n", "c++": "cin >> n ; int main() { cin >> qx ; cin >> qy ; cin >> kx ; cin >> ky ; cin >> tx ; cin >> ty ; if ( kx < qx ) if ( ky < qy ) if ( tx < qx && ty < qy ) cout << \" YES \" << endl ; else cout << \" NO \" << endl ; else if ( tx < qx && ty > qy ) cout << \" YES \" << endl ; else cout << \" NO \" << endl ; else } if ( ky < qy ) if ( tx > qx && ty < qy ) cout << \" YES \" << endl ; else cout << \" NO \" << endl ; else if ( tx > qx && ty > qy ) cout << \" YES \" << endl ; else cout << \" NO \" << endl ; int n ; } } }"}}
{"translation": {"en": "read n [ENDL] integers = x , y , x1 , y1 , x2 , y2 [ENDL] read input x , y , x1 , y1 , x2 , y2 [ENDL] integers = flag = 1 [ENDL] if x1 is x or y1 then do the following [ENDL] if abs is abs ( y - y1 then do the following or abs ( x - x2 [ENDL] set flag to 0 [ENDL] else if x1 is less than x and x2 > x then do the following [ENDL] set flag to 0 [ENDL] else if x1 > x and x2 is less than x then do the following [ENDL] set flag to 0 [ENDL] else if y1 is less than y and y2 > y then do the following [ENDL] set flag to 0 [ENDL] else if y1 > y and y2 is less than y then do the following [ENDL] set flag to 0 [ENDL] if flag is true [ENDL] output YES [ENDL] else [ENDL] output NO [ENDL] boolean function search with int arguments ax , ay , bx , by , cx and cy", "c++": "int main() { cin >> n ; int x , y , x1 , y1 , x2 , y2 ; cin >> x >> y >> x1 >> y1 >> x2 >> y2 ; int flag = 1 ; if ( x1 == x || y1 == y || x2 == x || y2 == y ) { flag = 0 ; } if ( abs ( x - x1 ) == abs ( y - y1 ) || abs ( x - x2 ) == abs ( y - y2 ) ) flag = 0 ; else if ( x1 < x && x2 > x ) flag = 0 ; else if ( x1 > x && x2 < x ) flag = 0 ; else if ( y1 < y && y2 > y ) flag = 0 ; else if ( y1 > y && y2 < y ) flag = 0 ; if ( flag ) } cout << \" YES \" << endl ; else cout << \" NO \" << endl ; bool search ( int ax , int ay , int bx , int by , int cx , int cy ) }"}}
{"translation": {"en": "if bx < ax and cx < ax and by < ay and cy < ay [ENDL] return true [ENDL] else if bx < ax and cx < ax and by > ay and cy > ay [ENDL] return true [ENDL] else if bx > ax and cx > ax and by < ay and cy < ay [ENDL] return true [ENDL] else if bx > ax and cx > ax and by > ay and cy > ay [ENDL] return true [ENDL] return false [ENDL] create ints n , ax , ay , bx , by , cx and cy [ENDL] read n , ax , ay , bx , by , cx and cy [ENDL] if search ( ax , ay , bx , by , cx , cy ) returns true [ENDL] print \" YES \" [ENDL] else [ENDL] print \" NO \" [ENDL] n , a , b , c = long long int", "c++": "if ( bx < ax && cx < ax && by < ay && cy < ay ) return true ; else if ( bx < ax && cx < ax && by > ay && cy > ay ) return true ; else if ( bx > ax && cx > ax && by < ay && cy < ay ) return true ; else if ( bx > ax && cx > ax && by > ay && cy > ay ) return true ; return false ; int n , ax , ay , bx , by , cx , cy ; } int main() { cin >> n >> ax >> ay >> bx >> by >> cx >> cy ; if ( search ( ax , ay , bx , by , cx , cy ) ) cout << \" YES \" << endl ; else cout << \" NO \" << endl ; long long int n , a , b , c ; return 0; }"}}
{"translation": {"en": "read n [ENDL] if n is a multiple of 3 or n mod 3 is 1 [ENDL] set a to n - 2 [ENDL] set b to 1 [ENDL] set c to 1 [ENDL] else if n mod 3 is 2 [ENDL] set a to n - 3 [ENDL] set b to 1 [ENDL] set c to 2 [ENDL] print a and b and c [ENDL] declare integer n", "c++": "int main() { cin >> n ; if ( n % 3 == 0 || n % 3 == 1 ) a = n - 2 ; b = 1 ; c = 1 ; else if ( n % 3 == 2 ) a = n - 3 ; b = 1 ; c = 2 ; cout << a << \"   \" << b << \"   \" << c << endl ; } int n ; }"}}
{"translation": {"en": "declare integer variable c8 = 0 [ENDL] read n [ENDL] read from the input input and ignore it [ENDL] let s be char array with size 101 [ENDL] read s [ENDL] if n > = 11 [ENDL] declare integer r = n / 11 [ENDL] loop i from 0 while s [ i ] ! = 0 , incrementing i [ENDL] if s [ i ] is equal to ' 8 ' , increment c8 [ENDL] if c8 is equal to r , break the loop [ENDL] print c8 [ENDL] print c8 [ENDL] create integers n , num8 , numn and num", "c++": "int main() { int c8 = 0 ; cin >> n ; cin . ignore ( ) ; char s [ 101 ] ; gets ( s ) ; if ( n >= 11 ) int r = n / 11 ; for ( int i = 0 ; s [ i ] ; i ++ ) if ( s [ i ] == ' 8 ' ) c8 ++ ; if ( c8 == r ) break ; cout << c8 << endl ; } cout << c8 << endl ; return 0; } int n , num8 , numn , num ; return 0; }"}}
{"translation": {"en": "create character array str with 101 element [ENDL] read n and loop further [ENDL] set num8 to 0 [ENDL] read input to str [ENDL] for i from 0 to n exclusive [ENDL] if str [ i ] = ' 8 ' , increment num8 by one [ENDL] assign n / 11 to numn [ENDL] if num8 is greater than numn [ENDL] change num to numn [ENDL] else [ENDL] change num to num8 [ENDL] print num [ENDL] st , s = string", "c++": "int main() { char str [ 101 ] ; while ( cin >> n ) num8 = 0 ; cin >> str ; for ( int i = 0 ; i < n ; i ++ ) if ( str [ i ] == ' 8 ' ) num8 ++ ; numn = n / 11 ; if ( num8 > numn ) num = numn ; else num = num8 ; cout << num << endl ; string st , s ; } return 0; }"}}
{"translation": {"en": "i , a , b , count = int with count = 0 [ENDL] read a then st [ENDL] set b to a / 11 [ENDL] for i = 0 to a [ENDL] if st [ i ] is ' 8 ' then increment count [ENDL] if count is less than b [ENDL] print count [ENDL] else [ENDL] print b [ENDL] s = character array of size 101", "c++": "int main() { int i , a , b , count = 0 ; cin >> a >> st ; b = a / 11 ; for ( i = 0 ; i < a ; i ++ ) if ( st [ i ] == ' 8 ' ) { count ++ ; } if ( count < b ) } cout << count << endl ; else cout << b << endl ; char s [ 101 ] ; } return 0; }"}}
{"translation": {"en": "n , i = integers , sum8 = integer = 0 , sum = integer = 0 , total = integer = 0 [ENDL] read n [ENDL] read s [ENDL] for i = 0 to n exclusive [ENDL] if s [ i ] is 8 , then increase sum8 by 1 [ENDL] increase sum by 1 [ENDL] if sum8 > = sum / 11 [ENDL] total = sum / 11 [ENDL] else [ENDL] total = sum8 [ENDL] print total [ENDL] create character array s with size 101", "c++": "int main() { int n , i , sum8 = 0 , sum = 0 , total = 0 ; cin >> n ; cin >> s ; for ( i = 0 ; i < n ; i ++ ) if ( s [ i ] == ' 8 ' ) sum8 ++ ; sum ++ ; if ( sum8 >= sum / 11 ) } total = sum / 11 ; else total = sum8 ; cout << total << endl ; char s [ 101 ] ; return 0; }"}}
{"translation": {"en": "create integers n , i , sum8 , sum , total , with sum8 = 0 , sum = 0 , total = 0 [ENDL] read n [ENDL] read s [ENDL] for i = 0 to n exclusive [ENDL] if s [ i ] is ' 8 ' , increment sum8 [ENDL] increment sum [ENDL] if sum8 is greater than or equal to sum / 11 [ENDL] set total to sum / 11 [ENDL] else [ENDL] set total to sum8 [ENDL] print total print newline [ENDL] create string s", "c++": "int main() { int n , i , sum8 = 0 , sum = 0 , total = 0 ; cin >> n ; cin >> s ; for ( i = 0 ; i < n ; i ++ ) if ( s [ i ] == ' 8 ' ) sum8 ++ ; sum ++ ; if ( sum8 >= sum / 11 ) } total = sum / 11 ; else total = sum8 ; cout << total << endl ; string s ; return 0; }"}}
{"translation": {"en": "create int n and sum , set to sum 0 [ENDL] read n [ENDL] read s [ENDL] for i = 0 to length of s exclusive [ENDL] if s [ i ] equal to 8 , increment sum [ENDL] if n / 11 greater than 11 [ENDL] print n / 11 [ENDL] else [ENDL] print sum and a newline [ENDL] set N to 1e6 + 10", "c++": "int main() { int n , sum = 0 ; cin >> n ; cin >> s ; for ( int i = 0 ; i < s . length ( ) ; i ++ ) if ( s [ i ] == ' 8 ' ) sum ++ ; if ( n / 11 < sum ) } cout << ( n / 11 ) << endl ; else cout << sum << endl ; const int N = 1e6 + 10 ; }"}}
{"translation": {"en": "mod = 998244353 [ENDL] create int n [ENDL] create string x [ENDL] create map m from int to int [ENDL] read n and x [ENDL] for i = 0 to n exclusive , increment m [ x [ i ] - 0 ] [ENDL] set s to size of x [ENDL] print min of m [ 8 ] and s / 11 [ENDL] n , k = integers with k = 0", "c++": "const int mod = 998244353 ; int n ; string x ; map < int , int > m ; cin >> n >> x ; int main() { for ( int i = 0 ; i < n ; i ++ ) m [ x [ i ] - ' 0 ' ] ++ ; int s = x . size ( ) ; cout << min ( m [ 8 ] , s / 11 ) << endl ; int n , k = 0 ; }"}}
{"translation": {"en": "Read n [ENDL] s = string [ENDL] Read s [ENDL] for i = 0 to n exclusive [ENDL] if s [ i ] is 8 , then increment k [ENDL] print minimum value of n / 11 and k and a new line [ENDL] MAX = const int with MAX = 100000", "c++": "int main() { cin >> n ; string s ; cin >> s ; for ( int i = 0 ; i < n ; i ++ ) if ( s [ i ] == ' 8 ' ) { k ++ ; } cout << min ( n / 11 , k ) << endl ; } const int MAX = 100000 ; return 0; }"}}
{"translation": {"en": "IN = const int with INF = 1000000001 [ENDL] a = int array of size MAX [ENDL] n , sum = int with sum = 0 [ENDL] s = string [ENDL] read n [ENDL] read s [ENDL] len = int with len = length of s [ENDL] for i = 0 to len increment sum if s [ i ] is ' 8 ' [ENDL] res = int with res = n / 11 [ENDL] if sum is less or equal to res [ENDL] print sum [ENDL] else [ENDL] print res [ENDL] n = integer", "c++": "const int INF = 1000000001 ; int a [ MAX ] ; int n , sum = 0 ; string s ; cin >> n ; int main() { cin >> s ; int len = s . length ( ) ; for ( int i = 0 ; i < len ; ++ i ) sum += ( s [ i ] == ' 8 ' ) ; int res = n / 11 ; if ( sum <= res ) cout << sum << endl ; else cout << res << endl ; int n ; return 0; }"}}
{"translation": {"en": "Read n [ENDL] number = string [ENDL] Read number [ENDL] has_eight = integer with 0 [ENDL] for i = 0 to length of string number exclusive [ENDL] if number [ i ] is 8 , then increment has_eight [ENDL] if n is less than 11 OR has_eight is 0 [ENDL] print 0 and a new line [ENDL] if ( n / 11 ) is greater than or equal to has_eight [ENDL] print has_eight and a new line [ENDL] else if ( n / 11 ) is less than has_eight [ENDL] print n / 11 and a new line [ENDL] declare integer variables n and count with count = 0", "c++": "int main() { cin >> n ; string number ; cin >> number ; int has_eight = 0 ; for ( int i = 0 ; i < number . length ( ) ; i ++ ) if ( number [ i ] == ' 8 ' ) has_eight ++ ; if ( n < 11 || has_eight == 0 ) cout << 0 << endl ; if ( ( n / 11 ) >= has_eight ) return 0; } cout << has_eight << endl ; else if ( ( n / 11 ) < has_eight ) cout << n / 11 << endl ; int n , count = 0 ; }"}}
{"translation": {"en": "read n [ENDL] create character c [ENDL] for integer i = 0 to n exclusive [ENDL] read c [ENDL] if c = ' 8 ' , increment count [ENDL] if n < 11 or count = 0 [ENDL] print 0 [ENDL] print min of count and n / 11 [ENDL] k , i , n , ans , m = integers", "c++": "int main() { cin >> n ; char c ; for ( int i = 0 ; i < n ; i ++ ) cin >> c ; if ( c == ' 8 ' ) count ++ ; if ( n < 11 || count == 0 ) } cout << 0 << endl ; cout << min ( count , n / 11 ) << endl ; return 0; ; } int k , i , n , ans , m ; return 0; ; }"}}
{"translation": {"en": "s = string [ENDL] read n , s [ENDL] for i = 0 to n exclusive [ENDL] if s [ i ] is 8 , increment k [ENDL] ans = min of k and n / 11 [ENDL] print ans [ENDL] n = int", "c++": "string s ; cin >> n >> s ; int main() { for ( i = 0 ; i < n ; i ++ ) if ( s [ i ] == ' 8 ' ) k ++ ; ans = min ( k , n / 11 ) ; } cout << ans << endl ; int n ; }"}}
{"translation": {"en": "read n [ENDL] s = string [ENDL] read s [ENDL] eight , other = int with eight = 0 and other = 0 [ENDL] for i = 0 to n [ENDL] if s [ i ] is ' 8 ' [ENDL] increment eight [ENDL] else [ENDL] increment other [ENDL] if eight is 0 [ENDL] print 0 [ENDL] else [ENDL] ans = int with ans = other / 10 [ENDL] if ans is greater than eight [ENDL] print eight [ENDL] if eight - ans is 0 [ENDL] print ans [ENDL] else [ENDL] print ( ( ( eight - ans ) + ( other mod 10 ) ) / 11 ) + ans [ENDL] create integers n , i and cnt where i and cnt = 0", "c++": "int main() { cin >> n ; string s ; cin >> s ; int eight = 0 , other = 0 ; for ( int i = 0 ; i < n ; i ++ ) if ( s [ i ] == ' 8 ' ) eight ++ ; else other ++ ; if ( eight == 0 ) } cout << 0 << endl ; else int ans = other / 10 ; if ( ans > eight ) cout << eight << endl ; if ( eight - ans == 0 ) return 0; } cout << ans << endl ; else cout << ( ( ( eight - ans ) + ( other % 10 ) ) / 11 ) + ans << endl ; int n , i = 0 , cnt = 0 ; } } }"}}
{"translation": {"en": "create string s [ENDL] read n and s [ENDL] while s [ i ] ! = ' \\ 0 ' [ENDL] if s [ i ] = ' 8 ' , increment cnt by one [ENDL] increment i [ENDL] if n > = 11 and n / 11 < = cnt and cnt ! = 0 [ENDL] print n / 11 and \" \\ n \" [ENDL] else if n > = 11 & & n / 11 > = cnt & & cnt ! = 0 [ENDL] print cnt and \" \\ n \" [ENDL] else [ENDL] print \" 0 \\ n \" [ENDL] create string s", "c++": "int main() { string s ; cin >> n >> s ; while ( s [ i ] != ' \\0 ' ) if ( s [ i ] == ' 8 ' ) cnt ++ ; i ++ ; if ( n >= 11 && n / 11 <= cnt && cnt != 0 ) } cout << n / 11 << \" \\n \" ; else if ( n >= 11 && n / 11 >= cnt && cnt != 0 ) cout << cnt << \" \\n \" ; else cout << \" 0\\n \" ; string s ; return 0; }"}}
{"translation": {"en": "declare integers n and sum with sum = 0 [ENDL] read n [ENDL] read s [ENDL] for i from 0 to length of s exclusive [ENDL] if s [ i ] = ' 8 ' , increment sum [ENDL] if n / 11 is less than sum [ENDL] print n / 11 [ENDL] else [ENDL] print sum [ENDL] declare int variable n", "c++": "int main() { int n , sum = 0 ; cin >> n ; cin >> s ; for ( int i = 0 ; i < s . length ( ) ; i ++ ) if ( s [ i ] == ' 8 ' ) sum ++ ; if ( n / 11 < sum ) } cout << ( n / 11 ) << endl ; else cout << sum << endl ; int n ; }"}}
{"translation": {"en": "declare string variable num [ENDL] read n and num [ENDL] declare int count = 0 [ENDL] for integer i = 0 to n exclusive [ENDL] if num [ i ] is equal to ' 8 ' , increment count by one [ENDL] print count if n / 11 > count and n / 11 otherwise [ENDL] n , i , no_of_8 , groups = integers with no_of_8 = 0", "c++": "int main() { string num ; cin >> n >> num ; int count = 0 ; for ( int i = 0 ; i < n ; i ++ ) if ( num [ i ] == ' 8 ' ) { count ++ ; } cout << ( n / 11 > count ? count : n / 11 ) << endl ; } int n , i , no_of_8 = 0 , groups ; }"}}
{"translation": {"en": "c = character [ENDL] Read n [ENDL] for i = 1 to n exclusive [ENDL] Read c [ENDL] f c is 8 , then increment no_of_8 [ENDL] set groups to n / 11 [ENDL] if no_of_8 is greater than or equal to groups [ENDL] print groups and a new line [ENDL] else do the following [ENDL] print no_of_8 and a new line [ENDL] create integer n", "c++": "int main() { char c ; cin >> n ; for ( i = 1 ; i <= n ; i ++ ) cin >> c ; if ( c == ' 8 ' ) no_of_8 ++ ; groups = n / 11 ; } if ( no_of_8 >= groups ) cout << groups << endl ; else cout << no_of_8 << endl ; int n ; return 0; }"}}
{"translation": {"en": "read n [ENDL] declare integer ans = 0 [ENDL] create char array s with 101 element [ENDL] read s [ENDL] for integer i = 0 to n exclusive [ENDL] if s [ i ] = ' 8 ' , increment ans by 1 [ENDL] if ans is equal to 0 or n / 11 is equal to 0 [ENDL] print 0 [ENDL] else if ans > n / 11 [ENDL] print n / 11 [ENDL] else [ENDL] print ans [ENDL] create int", "c++": "int main() { cin >> n ; int ans = 0 ; char s [ 101 ] ; cin >> s ; for ( int i = 0 ; i < n ; i ++ ) if ( s [ i ] == ' 8 ' ) ans ++ ; if ( ans == 0 || n / 11 == 0 ) } cout << 0 << endl ; else if ( ans > n / 11 ) cout << n / 11 << endl ; else cout << ans << endl ; int t ; return 0; }"}}
{"translation": {"en": "read t [ENDL] while decrement t [ENDL] n and k = int [ENDL] read n , k [ENDL] set flag = 0 [ENDL] for i = 0 to n / k exclusive [ENDL] for j = 0 to k exclusive [ENDL] print char ( 97 + j ) [ENDL] assign j to flag [ENDL] for i = 0 to n - ( n / k ) * k exclusive , print char ( 97 + flag ) [ENDL] print a newline [ENDL] create integer n", "c++": "int main() { cin >> t ; while ( t -- ) int n , k ; cin >> n >> k ; int flag = 0 ; for ( int i = 0 ; i < ( n / k ) ; i ++ ) for ( int j = 0 ; j < k ; j ++ ) cout << char ( 97 + j ) ; flag = j ; for ( int i = 0 ; i < n - ( n / k ) * k ; i ++ ) { cout << char ( 97 + flag ) ; } } } cout << endl ; int n ; } }"}}
{"translation": {"en": "create string s [ENDL] read n [ENDL] read s [ENDL] create string t with t = \" \" [ENDL] for i = 0 to n exclusive [ENDL] create integer k with k = ( i * ( i + 1 ) ) / 2 [ENDL] if k is greater than or equal to n , break loop [ENDL] set t to t + s [ k ] [ENDL] print t print newline [ENDL] create long longs x , y and z , with z = 1", "c++": "int main() { string s ; cin >> n ; cin >> s ; string t = \"  \" ; for ( int i = 0 ; i < n ; i ++ ) int k = ( i * ( i + 1 ) ) / 2 ; if ( k >= n ) { break ; } t = t + s [ k ] ; cout << t << endl ; } long long x , y , z = 1 ; return 0; }"}}
{"translation": {"en": "declare string variables s and ss [ENDL] read x and s [ENDL] for integer i = 0 to x exclusive [ENDL] increase ss by s [ i ] [ENDL] increase i by z [ENDL] increment z [ENDL] print ss and a new line [ENDL] v = vector of characters", "c++": "string s , ss ; cin >> x >> s ; int main() { for ( int i = 0 ; i < x ; ) ss += s [ i ] ; i += z ; z ++ ; cout << ss << endl ; } vector < char > v ; return 0; }"}}
{"translation": {"en": "s = vector of characters [ENDL] count and size are integers , with count = 1 [ENDL] declare character variable called c [ENDL] read size [ENDL] for integer i = 0 to size exclusive [ENDL] read c [ENDL] push c into v [ENDL] let in and i be integers , with i = 0 [ENDL] while i is less than size [ENDL] if i = 0 [ENDL] push v [ i ] into s [ENDL] increase i by one [ENDL] else [ENDL] set value of in to count [ENDL] for integer j = 0 to in exclusive [ENDL] if i is less than size push v [ i ] into s [ENDL] increase count [ENDL] for integer i = 0 to length of s exclusive , print s [ i ] [ENDL] print new line [ENDL] declare integer variable called n", "c++": "int main() { vector < char > s ; int count = 1 , size ; char c ; cin >> size ; for ( int i = 0 ; i < size ; i ++ ) cin >> c ; v . push_back ( c ) ; int in , i = 0 ; } while ( i < size ) if ( i == 0 ) s . push_back ( v [ i ] ) ; i ++ ; else in = count ; for ( int j = 0 ; j < in ; j ++ ) { i ++ ; } if ( i < size ) s . push_back ( v [ i ] ) ; count ++ ; for ( int i = 0 ; i < s . size ( ) ; i ++ ) { cout << s [ i ] ; } } } cout << endl ; int n ; return 0; }"}}
{"translation": {"en": "read n [ENDL] let a be string [ENDL] read a [ENDL] for integer i = 1 while i * ( i + 1 ) / 2 < n + 1 , print a [ ( i * ( i + 1 ) / 2 ) - 1 ] [ENDL] print new line [ENDL] create integers n , sum , index", "c++": "int main() { cin >> n ; string a ; cin >> a ; for ( int i = 1 ; i * ( i + 1 ) / 2 < n + 1 ; i ++ ) { cout << a [ ( i * ( i + 1 ) / 2 ) - 1 ] ; } cout << endl ; int n , sum , index ; return 0; }"}}
{"translation": {"en": "create character arrays s , a , with s size 55 , a size 55 [ENDL] read n read s [ENDL] set sum to index to 0 [ENDL] for i = 0 [ENDL] increment index by i [ENDL] if index is greater than or equal to n , break loop [ENDL] set a [ increment sum ] to s [ index ] [ENDL] set a [ sum ] to ' \\ 0 ' [ENDL] print a print newline [ENDL] define function compare with arguments p1 and p2 of type pair of string and int", "c++": "int main() { char s [ 55 ] , a [ 55 ] ; cin >> n >> s ; sum = index = 0 ; for ( int i = 0 ; ; i ++ ) index += i ; if ( index >= n ) break ; a [ sum ++ ] = s [ index ] ; a [ sum ] = ' \\0 ' ; } cout << a << endl ; int compare ( pair < string , int > p1 , pair < string , int > p2 ) return 0; }"}}
{"translation": {"en": "return true if p1 . second > p2 . second or false if it is not [ENDL] n is integer [ENDL] read n [ENDL] declare string called s [ENDL] read s [ENDL] declare string variable called ans = \" \" [ENDL] declare integer called h = 1 [ENDL] declare integer variable called c = 1 [ENDL] for integer i = 0 to length of s exclusive [ENDL] if c = h [ENDL] increase ans by s [ i ] [ENDL] increment h [ENDL] c = 1 [ENDL] else [ENDL] increase c by one [ENDL] print ans and a new line [ENDL] read n [ENDL] s , d = strings", "c++": "return ( p1 . second > p2 . second ) ; int n ; } int main() { cin >> n ; string s ; cin >> s ; string ans = \"  \" ; int h = 1 ; int c = 1 ; for ( int i = 0 ; i < int ( s . size ( ) ) ; i ++ ) if ( c == h ) ans += s [ i ] ; h ++ ; c = 1 ; else c ++ ; cout << ans << endl ; } cin >> n ; string s , sd ; }"}}
{"translation": {"en": "n , i , l = long long [ENDL] read n [ENDL] read s [ENDL] while n is not 0 [ENDL] increment l [ENDL] n = n - l [ENDL] for i = 1 to less or equal l [ENDL] sd = sd + s [ 0 ] [ENDL] Erases the portion of the string [ENDL] print sd and new line [ENDL] create string a", "c++": "long long n , i , l ; cin >> n ; int main() { cin >> s ; while ( n != 0 ) l ++ ; n -= l ; for ( i = 1 ; i <= l ; i ++ ) } sd = sd + s [ 0 ] ; s . erase ( 0 , i ) ; cout << sd << endl ; } string a ; return 0; }"}}
{"translation": {"en": "create integers n , num , l with num = 0 , l = 2 [ENDL] read n read a [ENDL] while true [ENDL] if num is less than n - 1 [ENDL] print a [ num ] [ENDL] increment num by l [ENDL] increment l [ENDL] else [ENDL] print a [ num ] print newline [ENDL] break loop [ENDL] create long long n", "c++": "int main() { int n , num = 0 , l = 2 ; cin >> n >> a ; while ( true ) if ( num < n - 1 ) cout << a [ num ] ; num += l ; l ++ ; else cout << a [ num ] << endl ; break ; long long n ; } } return 0; }"}}
{"translation": {"en": "read n [ENDL] create string palabra [ENDL] read palabra [ENDL] create string answer with answer = \" \" [ENDL] create long long aumento with aumento = 1 [ENDL] for i = 0 to n exclusive , setting i to i + aumento [ENDL] add element substring of palabra from i to 1 to end of answer [ENDL] increment aumento [ENDL] print answer print newline [ENDL] create integers n , sum , index", "c++": "int main() { cin >> n ; string palabra ; cin >> palabra ; string answer = \"  \" ; long long aumento = 1 ; for ( long long i = 0 ; i < n ; i = i + aumento ) answer . append ( palabra . substr ( i , 1 ) ) ; aumento ++ ; cout << answer << endl ; } int n , sum , index ; return 0; }"}}
{"translation": {"en": "create character arrays s , a , with s size 56 , a size 56 [ENDL] read n read s [ENDL] set sum to index to 0 [ENDL] for i = 0 [ENDL] increment index by i [ENDL] if index is greater than or equal to n , break loop [ENDL] set a [ increment sum ] to s [ index ] [ENDL] set a [ sum ] to ' \\ 0 ' [ENDL] print a print newline [ENDL] declare integer called n", "c++": "int main() { char s [ 56 ] , a [ 56 ] ; cin >> n >> s ; sum = index = 0 ; for ( int i = 0 ; ; i ++ ) index += i ; if ( index >= n ) break ; a [ sum ++ ] = s [ index ] ; a [ sum ] = ' \\0 ' ; } cout << a << endl ; int n ; return 0; }"}}
{"translation": {"en": "read n [ENDL] create string s [ENDL] read s [ENDL] let i be integer = 2 [ENDL] ans is an empty string [ENDL] ans = ans + s [ 0 ] [ENDL] j is integer = 3 [ENDL] while i < = n - 1 [ENDL] ans = ans + s [ i ] [ENDL] i = i + j [ENDL] increment j [ENDL] print ans and a new line [ENDL] declare string variable a", "c++": "int main() { cin >> n ; string s ; cin >> s ; int i = 2 ; string ans = \"  \" ; ans = ans + s [ 0 ] ; int j = 3 ; while ( i <= n - 1 ) ans = ans + s [ i ] ; i = i + j ; j ++ ; cout << ans << endl ; } string a ; return 0; }"}}
{"translation": {"en": "declare integer variables n and s with s = 0 [ENDL] read n and a [ENDL] for i = 1 to n inclusive [ENDL] increase s by i [ENDL] if s < = n print a [ s - i ] [ENDL] print new line [ENDL] n is integer", "c++": "int main() { int n , s = 0 ; cin >> n >> a ; for ( int i = 1 ; s <= n ; i ++ ) s += i ; if ( s <= n ) cout << a [ s - i ] ; cout << endl ; } int n ; return 0; }"}}
{"translation": {"en": "read n [ENDL] let a be an array of characters of length n [ENDL] for i = 0 to n exclusive put input to a [ i ] [ENDL] let incr be integer = 1 [ENDL] for integer i = 0 to n exclusive incrementing by incr [ENDL] print a [ i ] [ENDL] increase incr [ENDL] print new line [ENDL] create integer n", "c++": "int main() { cin >> n ; char a [ n ] ; for ( int i = 0 ; i < n ; i ++ ) cin >> a [ i ] ; int incr = 1 ; for ( int i = 0 ; i < n ; i = i + incr ) cout << a [ i ] ; incr ++ ; cout << endl ; } int n ; }"}}
{"translation": {"en": "let s be an array of characters of length 100 [ENDL] read n and s [ENDL] t is integer = 1 [ENDL] for i = 0 to n exclusive [ENDL] print s [ i ] [ENDL] increase t by one [ENDL] print new line [ENDL] create integers n and it ; it = 1", "c++": "int main() { char s [ 100 ] ; cin >> n >> s ; int t = 1 ; for ( int i = 0 ; i < n ; i += t ) cout << s [ i ] ; t ++ ; cout << endl ; } int n , it = 1 ; return 0; }"}}
{"translation": {"en": "create string s [ENDL] read n and s [ENDL] for i = 0 to n exclusive with step of it [ENDL] increase it by one [ENDL] print s [ i ] [ENDL] print new line [ENDL] a and b are char arrays with size 60", "c++": "int main() { string s ; cin >> n >> s ; for ( int i = 0 ; i < n ; i += it ) it ++ ; cout << s [ i ] ; cout << endl ; } char a [ 60 ] , b [ 60 ] ; }"}}
{"translation": {"en": "let n be integer [ENDL] read n in a loop [ENDL] call memset ( b , 0 and sizeof ( b ) ) [ENDL] read n elements into a starting from index 1 [ENDL] k and d are integers = 0 [ENDL] for i = 1 to n inclusive , incrementing by k [ENDL] set b [ d ] to a [ i ] [ENDL] increment d [ENDL] increase k [ENDL] print b and a new line [ENDL] declare integer variable called n", "c++": "int n ; int main() { while ( cin >> n ) memset ( b , 0 , sizeof ( b ) ) ; for ( int i = 1 ; i <= n ; i ++ ) { cin >> a [ i ] ; } int k = 0 , d = 0 ; for ( int i = 1 ; i <= n ; i = i + k ) b [ d ] = a [ i ] ; d ++ ; k ++ ; cout << b << endl ; } int n ; } }"}}
{"translation": {"en": "read n [ENDL] let a be an array of characters of size 60 [ENDL] read a [ENDL] j is integer = 1 [ENDL] for i = 0 to n exclusive , incrementing i by j [ENDL] print a [ i ] [ENDL] increase j by one [ENDL] print new line [ENDL] set s to character array of length 60", "c++": "int main() { cin >> n ; char a [ 60 ] ; cin >> a ; int j = 1 ; for ( int i = 0 ; i < n ; i = i + j ) cout << a [ i ] ; j ++ ; cout << endl ; } char s [ 60 ] ; return 0; }"}}
{"translation": {"en": "n , ans = integers with ans set to 0 [ENDL] read n [ENDL] read s [ENDL] for i to n inclusive incremented by ans [ENDL] increment ans by 1 [ENDL] print s [ i ] [ENDL] print new line [ENDL] create integer n", "c++": "int main() { int n , ans = 0 ; cin >> n ; cin >> s ; for ( int i = 0 ; i < n ; i += ans ) ans += 1 ; cout << s [ i ] ; cout << endl ; } int n ; return 0; }"}}
{"translation": {"en": "read n [ENDL] create string s [ENDL] read s [ENDL] create string ans [ENDL] create integers cnt , sum with cnt = 0 , sum = 0 [ENDL] for i = 0 to n exclusive , incrementing i by cnt [ENDL] add element s [ i ] to end of ans [ENDL] increment cnt [ENDL] print ans print newline [ENDL] create integers n , cnt , i with cnt = 1 , i = 0", "c++": "int main() { cin >> n ; string s ; cin >> s ; string ans ; int cnt = 0 , sum = 0 ; for ( int i = 0 ; i < n ; i += cnt ) ans . push_back ( s [ i ] ) ; cnt ++ ; cout << ans << endl ; } int n , cnt = 1 , i = 0 ; return 0; }"}}
{"translation": {"en": "create string s [ENDL] read n read s [ENDL] while true [ENDL] print s [ i ] [ENDL] increment i by cnt [ENDL] increment cnt [ENDL] if i + cnt is greater than n , break loop [ENDL] print newline [ENDL] declare integer variables l , r , n and k", "c++": "int main() { string s ; cin >> n >> s ; while ( true ) cout << s [ i ] ; i += cnt ; cnt ++ ; if ( i + cnt > n ) { break ; } cout << endl ; } int l , r , n , k ; return 0; }"}}
{"translation": {"en": "read k [ENDL] for i = 0 to k exclusive [ENDL] read l and r [ENDL] print l , ' ' and r - ( r modulo l ) [ENDL] n = int", "c++": "int main() { cin >> k ; for ( int i = 0 ; i < k ; i ++ ) cin >> l >> r ; cout << l << '   ' << r - ( r % l ) << endl ; int n ; } }"}}
{"translation": {"en": "read n [ENDL] l , r , R = long long arrays of size 1000 each [ENDL] for i = 0 to n [ENDL] read l [ i ] then r [ i ] [ENDL] set R [ i ] to r [ i ] / l [ i ] [ENDL] for i = 0 to n print l [ i ] then \" \" then l [ i ] * R [ i ] [ENDL] create integers t , n , l", "c++": "int main() { cin >> n ; long long l [ 1000 ] , r [ 1000 ] , R [ 1000 ] ; for ( int i = 0 ; i < n ; i ++ ) cin >> l [ i ] >> r [ i ] ; R [ i ] = r [ i ] / l [ i ] ; for ( int i = 0 ; i < n ; i ++ ) cout << l [ i ] << \"   \" << l [ i ] * R [ i ] << endl ; } int t , n , l ; return 0; }"}}
{"translation": {"en": "read t [ENDL] while decrement t is true [ENDL] read n read l [ENDL] print n print \" \" print ( l / n ) * n print newline [ENDL] create integers T , l , r", "c++": "int main() { cin >> t ; while ( t -- ) cin >> n >> l ; cout << n << \"   \" << ( l / n ) * n << endl ; int T , l , r ; } return 0; }"}}
{"translation": {"en": "read T [ENDL] for i = 1 to T inclusive [ENDL] read l read r [ENDL] print l print \" \" print l * ( r / l ) print newline [ENDL] create integer numberOfInputs", "c++": "int main() { cin >> T ; for ( int i = 1 ; i <= T ; i ++ ) cin >> l >> r ; cout << l << \"   \" << l * ( r / l ) << endl ; int numberOfInputs ; } }"}}
{"translation": {"en": "read numberOfInputs [ENDL] create long longs input1 and input2 [ENDL] while numberOfInputs > 0 , decrement it and keep looping [ENDL] read input1 and input2 [ENDL] create long long div = input2 / input1 [ENDL] create long long answer = input1 * div [ENDL] print input1 , \" \" and answer [ENDL] create integers T , l , r", "c++": "int main() { cin >> numberOfInputs ; long long input1 , input2 ; while ( numberOfInputs -- ) cin >> input1 >> input2 ; long long div = input2 / input1 ; long long answer = input1 * div ; cout << input1 << \"   \" << answer << endl ; int T , l , r ; } return 0; }"}}
{"translation": {"en": "create integers i , j [ENDL] read T [ENDL] for i = 1 to T inclusive [ENDL] read l read r [ENDL] print l print ' ' print ( r / l ) * l print ' \\ n ' [ENDL] t = int", "c++": "int i , j ; int main() { cin >> T ; for ( i = 1 ; i <= T ; i ++ ) cin >> l >> r ; cout << l << '   ' << ( r / l ) * l << ' \\n ' ; int t ; } return 0; }"}}
{"translation": {"en": "read t [ENDL] loop t times [ENDL] l , r = long int [ENDL] read l then r [ENDL] if l equals 1 [ENDL] print l and r [ENDL] else [ENDL] print l and \" \" [ENDL] mod = long int with mod = r modulo l [ENDL] print r - mod [ENDL] t = int", "c++": "int main() { cin >> t ; while ( t -- ) long int l , r ; cin >> l >> r ; if ( l == 1 ) cout << l << \"   \" << r << endl ; else cout << l << \"   \" ; long int mod = ( r % l ) ; cout << ( r - mod ) << endl ; int t ; } } return 0; }"}}
{"translation": {"en": "read t [ENDL] l , r , d = int [ENDL] while decremented t not equal 0 [ENDL] read l , r [ENDL] if r modulo l is zero [ENDL] print l , space , r [ENDL] else [ENDL] d = r modulo l [ENDL] d = r - d [ENDL] print l , space , d [ENDL] create long long n and m", "c++": "int main() { cin >> t ; int l , r , d ; while ( t -- ) cin >> l >> r ; if ( r % l == 0 ) cout << l << \"   \" << r << endl ; else d = r % l ; d = r - d ; cout << l << \"   \" << d << endl ; long long n , m ; } } }"}}
{"translation": {"en": "read n [ENDL] create long long l and r [ENDL] while decrement n [ENDL] read l and r [ENDL] if r mod l = 0 [ENDL] print l , \" \" , r [ENDL] else [ENDL] print l , \" \" , r - ( r mod l ) [ENDL] x , y = long long", "c++": "int main() { cin >> n ; long long l , r ; while ( n -- ) cin >> l >> r ; if ( r % l == 0 ) cout << l << \"   \" << r << endl ; else cout << l << \"   \" << r - ( r % l ) << endl ; long long x , y ; } } }"}}
{"translation": {"en": "T = int [ENDL] read T [ENDL] loop T times [ENDL] read x then y [ENDL] r = long long with r = y mod x [ENDL] print x then \" \" then y - r [ENDL] create int n , i and arrays p and s of length 100100", "c++": "int T ; int main() { cin >> T ; while ( T -- ) cin >> x >> y ; long long r = y % x ; cout << x << \"   \" << y - r << \" \\n \" ; int n , p [ 100100 ] , s [ 100100 ] , i ; } return 0; }"}}
{"translation": {"en": "read n [ENDL] for i = 2 to n inclusive , read p [ i ] [ENDL] for i = 1 to n inclusive , read s [ i ] [ENDL] for i = 2 to n inclusive [ENDL] if s [ i ] = - 1 , continue the loop [ENDL] s [ p [ i ] ] = - 1 [ENDL] set s [ p [ i ] ] = s [ i ] [ENDL] else [ENDL] s [ p [ i ] ] = min of s [ p [ i ] ] and s [ i ] [ENDL] for i = 2 to n inclusive [ENDL] if s [ i ] equal to - 1 , continue the loop [ENDL] if s [ p [ i ] ] greater than s [ i ] [ENDL] print - 1 [ENDL] set ans to s [ 1 ] [ENDL] for i = 2 to n inclusive [ENDL] if s [ i ] equal to - 1 , continue the loop [ENDL] assign ans + s [ i ] - s [ p [ i ] ] to ans [ENDL] print ans [ENDL] create integer n", "c++": "int main() { cin >> n ; for ( i = 2 ; i <= n ; i ++ ) cin >> p [ i ] ; for ( i = 1 ; i <= n ; i ++ ) cin >> s [ i ] ; for ( i = 2 ; i <= n ; i ++ ) if ( s [ i ] == - 1 ) continue ; if ( s [ p [ i ] ] == - 1 ) s [ p [ i ] ] = s [ i ] ; else s [ p [ i ] ] = min ( s [ p [ i ] ] , s [ i ] ) ; for ( i = 2 ; i <= n ; i ++ ) } if ( s [ i ] == - 1 ) continue ; if ( s [ p [ i ] ] > s [ i ] ) cout << - 1 << endl ; long long ans = s [ 1 ] ; return 0; } } for ( i = 2 ; i <= n ; i ++ ) if ( s [ i ] == - 1 ) continue ; ans += ( s [ i ] - s [ p [ i ] ] ) ; cout << ans << endl ; } int n ; return 0; }"}}
{"translation": {"en": "read n [ENDL] create long long integer arrays s , ms , p , v with s size n , ms size n , p size n , v size n [ENDL] set p [ 0 ] to 0 [ENDL] for i = 1 to n exclusive , decrementing p [ increment i ] , read p [ i ] [ENDL] for i = 0 to n exclusive [ENDL] read s [ i ] [ENDL] set ms [ i ] to s [ i ] [ENDL] for i = n - 1 to 0 exclusive , decrementing i [ENDL] if ms [ i ] is less than 0 , break current loop iteration [ENDL] if s [ p [ i ] ] is less than 0 and ( ms [ p [ i ] ] is less than 0 or ms [ p [ i ] ] is greater than ms [ i ] ) , set ms [ p [ i ] ] to ms [ i ] [ENDL] if ms [ 0 ] is less than 0 , set ms [ 0 ] to 0 [ENDL] create long long integer sum with sum = ms [ 0 ] [ENDL] for i = 1 to n exclusive [ENDL] if ms [ i ] is less than 0 [ENDL] set ms [ i ] to mms [ p [ i ] ] [ENDL] else if ms [ i ] is less than ms [ p [ i ] ] [ENDL] print - 1 print newline [ENDL] else [ENDL] increment sum by ms [ i ] - ms [ p [ i ] ] [ENDL] print sum print newline [ENDL] let N be a constant integer with value N is equal to 100001", "c++": "int main() { cin >> n ; long long int s [ n ] , ms [ n ] , p [ n ] , v [ n ] ; p [ 0 ] = 0 ; for ( int i = 1 ; i < n ; -- p [ i ++ ] ) cin >> p [ i ] ; for ( int i = 0 ; i < n ; ++ i ) cin >> s [ i ] ; ms [ i ] = s [ i ] ; for ( int i = n - 1 ; i > 0 ; -- i ) } if ( ms [ i ] < 0 ) continue ; if ( s [ p [ i ] ] < 0 && ( ms [ p [ i ] ] < 0 || ms [ p [ i ] ] > ms [ i ] ) ) ms [ p [ i ] ] = ms [ i ] ; if ( ms [ 0 ] < 0 ) ms [ 0 ] = 0 ; } long long int sum = ms [ 0 ] ; for ( int i = 1 ; i < n ; ++ i ) if ( ms [ i ] < 0 ) ms [ i ] = ms [ p [ i ] ] ; else if ( ms [ i ] < ms [ p [ i ] ] ) cout << - 1 << endl ; else return 0; sum += ms [ i ] - ms [ p [ i ] ] ; cout << sum << endl ; } const int N = 100001 ; return 0; }"}}
{"translation": {"en": "g = array of vector integers of size N [ENDL] let n , val be integers with val = array of integers of length N [ENDL] sum = array of long integers of length N [ENDL] let depth first search of int u and int p be a boolean type [ENDL] if length of g [ u ] is equal to 1 and p is not equal to - 1 [ENDL] if sum [ u ] is equal to - 1 [ENDL] set val [ u ] to 0 [ENDL] assign the value sum [ p ] to sum [ u ] [ENDL] else do the following [ENDL] assign the value of sum [ u ] - sum [ p ] to val [ u ] [ENDL] return the value as true [ENDL] if sum [ u ] is equal to - 1 [ENDL] let mn be a long integer with mn = 1e9 [ENDL] for i = 0 to length of g [ u ] exclusive [ENDL] let v be a integer with v = g [ u ] [ i ] [ENDL] if v is equal to p , proceed to next [ENDL] let diff be a long integer with diff = sum [ v ] - sum [ p ] [ENDL] if diff is less than 0 , return false [ENDL] mn = minimum of mn and diff [ENDL] the uth element of val = mn [ENDL] sum [ u ] is equal to sum [ p ] + val [ u ] [ENDL] else if ( p is not equal to - 1 ) [ENDL] the value of sum [ u ] - sum [ p ] is assigned to val [ u ] [ENDL] let check is a boolean type with check = 1 [ENDL] for i = 0 to length of g [ u ] exclusive ] [ENDL] let v be a integer with v = g [ u ] [ i ] [ENDL] if v is equal to p , proceed to next [ENDL] check = check and depth first search of v , u [ENDL] return the value of check [ENDL] read n [ENDL] for i = 0 to n - 1 exclusive [ENDL] let p be a integer [ENDL] read p [ENDL] decrease p value by 1 [ENDL] do g [ p ] . push_back ( i + 1 ) [ENDL] do g [ i + 1 ] . push_back ( p ) [ENDL] for i = 0 to n exclusive , read sum [ i ] [ENDL] let val [ 0 ] = sum [ 0 ] [ENDL] if not dfs of 0 and - 1 [ENDL] print - 1 and newline [ENDL] else do the following [ENDL] let long integer s = 0 [ENDL] for i = 0 to n exclusive , increase s by val [ i ] [ENDL] print s and newline [ENDL] create long long p with size 200000", "c++": "vector < int > g [ N ] ; int n , val [ N ] ; long long sum [ N ] ; bool dfs ( int u , int p ) if ( g [ u ] . size ( ) == 1 && p != - 1 ) if ( sum [ u ] == - 1 ) val [ u ] = 0 ; sum [ u ] = sum [ p ] ; else val [ u ] = sum [ u ] - sum [ p ] ; return true ; if ( sum [ u ] == - 1 ) } long long mn = 1e9 ; for ( int i = 0 ; i < g [ u ] . size ( ) ; ++ i ) int v = g [ u ] [ i ] ; if ( v == p ) continue ; long long diff = sum [ v ] - sum [ p ] ; if ( diff < 0 ) return false ; mn = min ( mn , diff ) ; val [ u ] = mn ; } sum [ u ] = sum [ p ] + val [ u ] ; else if ( p != - 1 ) val [ u ] = sum [ u ] - sum [ p ] ; bool check = 1 ; for ( int i = 0 ; i < g [ u ] . size ( ) ; ++ i ) int v = g [ u ] [ i ] ; if ( v == p ) continue ; check = check && dfs ( v , u ) ; return check ; } cin >> n ; } int main() { for ( int i = 0 ; i < n - 1 ; ++ i ) int p ; cin >> p ; -- p ; g [ p ] . push_back ( i + 1 ) ; g [ i + 1 ] . push_back ( p ) ; for ( int i = 0 ; i < n ; ++ i ) cin >> sum [ i ] ; } val [ 0 ] = sum [ 0 ] ; if ( ! dfs ( 0 , - 1 ) ) cout << - 1 << endl ; else long long s = 0 ; for ( int i = 0 ; i < n ; ++ i ) s += val [ i ] ; cout << s << endl ; long long p [ 200000 ] ; } return 0; }"}}
{"translation": {"en": "create long long s with size 200000 [ENDL] create long long num with num = 0 [ENDL] create long longs n , i , j [ENDL] read n [ENDL] for i = 2 to n inclusive , read p [ i ] [ENDL] for i = 1 to n inclusive [ENDL] read s [ i ] [ENDL] if s [ i ] is - 1 , set s [ i ] to 1e10 [ENDL] for i = 1 to n inclusive , set s [ p [ i ] ] to minimum of s [ p [ i ] ] and s [ i ] [ENDL] for i = 1 to n inclusive [ENDL] if s [ p [ i ] ] is greater than s [ i ] [ENDL] print - 1 print newline [ENDL] if s [ i ] is 1e10 , set s [ i ] to s [ p [ i ] ] [ENDL] increment num by s [ i ] - s [ p [ i ] ] [ENDL] print num print newline [ENDL] declare const int maxn = 1e5 + 5", "c++": "long long s [ 200000 ] ; long long num = 0 ; int main() { long long n , i , j ; cin >> n ; for ( i = 2 ; i <= n ; i ++ ) { cin >> p [ i ] ; } for ( i = 1 ; i <= n ; i ++ ) cin >> s [ i ] ; if ( s [ i ] == - 1 ) s [ i ] = 1e10 ; for ( i = 1 ; i <= n ; i ++ ) s [ p [ i ] ] = min ( s [ p [ i ] ] , s [ i ] ) ; } for ( i = 1 ; i <= n ; i ++ ) if ( s [ p [ i ] ] > s [ i ] ) cout << - 1 << endl ; if ( s [ i ] == 1e10 ) s [ i ] = s [ p [ i ] ] ; return 0; } num += s [ i ] - s [ p [ i ] ] ; cout << num << endl ; } const int maxn = 1e5 + 5 ; return 0; }"}}
{"translation": {"en": "declare const long long inf = 0x3f3f3f3f [ENDL] declare an array of integer vectors G with size maxn [ENDL] create long long arrays sum and a with maxn elements [ENDL] create integer array minson with maxn elements [ENDL] declare int variable n [ENDL] define function getson [ENDL] declare int minkey = inf [ENDL] for i = 0 to length of G [ v ] exclusive [ENDL] create int to = G [ v ] [ i ] [ENDL] if minkey is greater than getson ( to ) [ENDL] set minkey to sum [ to ] [ENDL] change minson [ v ] to to [ENDL] return sum [ v ] [ENDL] void function dfs with int arguments v and deep and long long argument fasum [ENDL] if deep & 1 is not 0 [ENDL] assign sum [ v ] - fasum to a [ v ] [ENDL] else if length of G [ v ] is not 0 [ENDL] change a [ v ] to 0 [ENDL] return [ENDL] else [ENDL] set a [ v ] to sum [ minson [ v ] ] - fasum [ENDL] for i = 0 to length of G [ v ] exclusive , call dfs ( G [ v ] [ i ] , fasum + a [ v ] , deep + 1 ) [ENDL] read n and loop further [ENDL] create int pa [ENDL] for i = 2 to n inclusive [ENDL] read pa [ENDL] push i to G [ pa ] [ENDL] for integer i = 1 to n inclusive , read sum [ i ] [ENDL] call function getson with argument 1 [ENDL] call function dfs with arguments 1 , 0 and 1 [ENDL] create long long maxsum = 0 [ENDL] create integer flag = 0 [ENDL] for integer i = 1 to n inclusive [ENDL] if a [ i ] > = 0 [ENDL] add a [ i ] to maxsum [ENDL] else [ENDL] set flag to 1 [ENDL] if flag is 0 [ENDL] print maxsum [ENDL] else [ENDL] print - 1 [ENDL] for i = 0 to n inclusive , clear G [ i ] [ENDL] create string x", "c++": "const long long inf = 0x3f3f3f3f ; vector < int > G [ maxn ] ; long long sum [ maxn ] , a [ maxn ] ; int minson [ maxn ] ; int n ; int getson ( int v ) int minkey = inf ; for ( int i = 0 ; i < G [ v ] . size ( ) ; ++ i ) int to = G [ v ] [ i ] ; if ( minkey > getson ( to ) ) minkey = sum [ to ] ; minson [ v ] = to ; return sum [ v ] ; } } void dfs ( int v , long long fasum , int deep ) } if ( deep & 1 ) a [ v ] = sum [ v ] - fasum ; else if ( ! G [ v ] . size ( ) ) a [ v ] = 0 ; return ; else a [ v ] = sum [ minson [ v ] ] - fasum ; for ( int i = 0 ; i < G [ v ] . size ( ) ; ++ i ) dfs ( G [ v ] [ i ] , fasum + a [ v ] , deep + 1 ) ; while ( cin >> n ) } int main() { int pa ; for ( int i = 2 ; i <= n ; ++ i ) cin >> pa ; G [ pa ] . push_back ( i ) ; for ( int i = 1 ; i <= n ; ++ i ) cin >> sum [ i ] ; } getson ( 1 ) ; dfs ( 1 , 0 , 1 ) ; long long maxsum = 0 ; int flag = 0 ; for ( int i = 1 ; i <= n ; ++ i ) if ( a [ i ] >= 0 ) maxsum += a [ i ] ; else flag = 1 ; if ( ! flag ) } cout << maxsum << endl ; else cout << - 1 << endl ; for ( int i = 0 ; i <= n ; ++ i ) G [ i ] . clear ( ) ; string x ; } return 0; }"}}
{"translation": {"en": "read x [ENDL] create integers v and h = 0 [ENDL] for i = 0 to length of x exclusive [ENDL] if x [ i ] is ' 0 ' [ENDL] if v is 0 [ENDL] print 1 , ' ' , 1 and a new line , then increment v [ENDL] else [ENDL] print 3 , ' ' , 1 and a new line , then set v to 0 [ENDL] else [ENDL] if h is 0 [ENDL] print 4 , ' ' , 3 and a new line , then increment h [ENDL] else [ENDL] print 4 , ' ' , 1 and a new line , then set h to 0 [ENDL] declare boolean variables l and r", "c++": "int main() { cin >> x ; int v = 0 , h = 0 ; for ( int i = 0 ; i < x . size ( ) ; i ++ ) if ( x [ i ] == ' 0 ' ) if ( ! v ) cout << 1 << '   ' << 1 << endl , v ++ ; else cout << 3 << '   ' << 1 << endl , v = 0 ; else if ( ! h ) cout << 4 << '   ' << 3 << endl , h ++ ; else cout << 4 << '   ' << 1 << endl , h = 0 ; bool l , r ; } } return 0; }"}}
{"translation": {"en": "let s be string [ENDL] read s [ENDL] for i = 0 to length of s exclusive [ENDL] if s [ i ] = ' 0 ' & & l is true [ENDL] print \" 3 1 \" and a new line [ENDL] set value of l to false [ENDL] else if s [ i ] = ' 0 ' [ENDL] print \" 1 1 \" and a new line [ENDL] l = true [ENDL] else if s [ i ] = ' 1 ' & & r is true [ENDL] print \" 4 1 \" and a new line [ENDL] assign value of false to r [ENDL] else [ENDL] print \" 4 3 \" and a new line [ENDL] r = true [ENDL] create constant integer MAXN with value 100000 + 5", "c++": "string s ; cin >> s ; int main() { for ( int i = 0 ; i < s . size ( ) ; i ++ ) if ( s [ i ] == ' 0 ' && l ) cout << \" 3 1 \" << endl ; l = false ; else if ( s [ i ] == ' 0 ' ) cout << \" 1 1 \" << endl ; l = true ; else if ( s [ i ] == ' 1 ' && r ) cout << \" 4 1 \" << endl ; r = false ; else cout << \" 4 3 \" << endl ; r = true ; const int MAXN = 100000 + 5 ; } } return 0; }"}}
{"translation": {"en": "create string s [ENDL] read s [ENDL] let cnt1 and cnt2 be integers = 0 [ENDL] for integer i = 0 to length of s exclusive [ENDL] if s [ i ] = ' 0 ' [ENDL] if cnt1 is even [ENDL] print 1 , \" \" and 1 [ENDL] else [ENDL] print 3 , \" \" and 1 [ENDL] increment cnt1 [ENDL] else [ENDL] if cnt2 is even [ENDL] print 4 , \" \" and 3 [ENDL] else [ENDL] print 4 , \" \" and 1 [ENDL] increase cnt2 [ENDL] print \" \\ n \" [ENDL] s is string", "c++": "string s ; int main() { cin >> s ; int cnt1 = 0 , cnt2 = 0 ; for ( int i = 0 ; i < s . size ( ) ; i ++ ) if ( s [ i ] == ' 0 ' ) if ( cnt1 % 2 == 0 ) cout << 1 << \"   \" << 1 ; else cout << 3 << \"   \" << 1 ; cnt1 ++ ; else if ( cnt2 % 2 == 0 ) cout << 4 << \"   \" << 3 ; else cout << 4 << \"   \" << 1 ; cnt2 ++ ; cout << \" \\n \" ; } string s ; } return 0; }"}}
{"translation": {"en": "read s [ENDL] l1 is integer = length of s [ENDL] create booleans vertikal and horizontal = 0 [ENDL] for integer i = 0 to l1 exclusive [ENDL] if s [ i ] = ' 0 ' [ENDL] if vertikal is not 0 [ENDL] assign value of 0 to vertikal [ENDL] print \" 3 1 \\ n \" [ENDL] else [ENDL] assign value of 1 to vertikal [ENDL] print \" 1 1 \\ n \" [ENDL] else [ENDL] if horizontal is not 0 [ENDL] assign value of 0 to horizontal [ENDL] print \" 4 1 \\ n \" [ENDL] else [ENDL] set value of horizontal to 1 [ENDL] print \" 4 3 \\ n \" [ENDL] create string s", "c++": "int main() { cin >> s ; int l1 = s . length ( ) ; bool vertikal = 0 , horizontal = 0 ; for ( int i = 0 ; i < l1 ; i ++ ) if ( s [ i ] == ' 0 ' ) if ( vertikal ) vertikal = 0 ; cout << \" 3 1\\n \" ; else vertikal = 1 ; cout << \" 1 1\\n \" ; else } if ( horizontal ) horizontal = 0 ; cout << \" 4 1\\n \" ; else horizontal = 1 ; cout << \" 4 3\\n \" ; string s ; } } } }"}}
{"translation": {"en": "read s [ENDL] create integers o , z , with o = 0 , z = 0 [ENDL] for i = 0 to size of s exclusive [ENDL] if s [ i ] is ' 0 ' [ENDL] increment o [ENDL] if o % 2 [ENDL] print 1 print \" \" print 1 print newline [ENDL] else [ENDL] print 3 print \" \" print 1 print newline [ENDL] else if s [ i ] is ' 1 ' [ENDL] increment z [ENDL] if z % 2 [ENDL] print 4 print \" \" print 3 print newline [ENDL] else [ENDL] print 4 print \" \" print 1 print newline [ENDL] create string str", "c++": "int main() { cin >> s ; int o = 0 , z = 0 ; for ( int i = 0 ; i < s . size ( ) ; i ++ ) if ( s [ i ] == ' 0 ' ) o ++ ; if ( o % 2 ) cout << 1 << \"   \" << 1 << endl ; else cout << 3 << \"   \" << 1 << endl ; else if ( s [ i ] == ' 1 ' ) z ++ ; if ( z % 2 ) cout << 4 << \"   \" << 3 << endl ; else cout << 4 << \"   \" << 1 << endl ; string str ; } } }"}}
{"translation": {"en": "read str [ENDL] create integer len with len = length of str [ENDL] create integers a , c , with a = 0 , c = 0 [ENDL] for i = 0 to len exclusive [ENDL] if str [ i ] is ' 0 ' [ENDL] if a is 0 [ENDL] set a to 1 [ENDL] print \" 1 1 \" [ENDL] else [ENDL] set a to 0 [ENDL] print \" 3 1 \" [ENDL] if str [ i ] is ' 1 ' [ENDL] if c is 0 [ENDL] set c to 1 [ENDL] print \" 4 3 \" [ENDL] else [ENDL] set c to 0 [ENDL] print \" 4 1 \" [ENDL] assign value 200005 to constant integer N", "c++": "int main() { cin >> str ; int len = str . length ( ) ; int a = 0 , c = 0 ; for ( int i = 0 ; i < len ; i ++ ) if ( str [ i ] == ' 0 ' ) if ( a == 0 ) a = 1 ; puts ( \" 1 1 \" ) ; else a = 0 ; puts ( \" 3 1 \" ) ; if ( str [ i ] == ' 1 ' ) } } if ( c == 0 ) c = 1 ; puts ( \" 4 3 \" ) ; else c = 0 ; puts ( \" 4 1 \" ) ; const int N = 200005 ; } } } return 0; }"}}
{"translation": {"en": "assign value 998244353 to constant integer MOD [ENDL] define function solve [ENDL] create string s [ENDL] create boolean v = false [ENDL] create boolean g = false [ENDL] read s [ENDL] declare integer n = length of s [ENDL] for i = 0 to length of s exclusive [ENDL] if s [ i ] = ' 0 ' [ENDL] if v is true [ENDL] print 3 , \" \" , 1 and a new line [ENDL] set v to false [ENDL] else [ENDL] print \" 1 1 \" and a new line [ENDL] set v to true [ENDL] else [ENDL] if g is true [ENDL] print 4 , \" \" , 1 and a new line [ENDL] set g to false [ENDL] else [ENDL] print 4 , \" \" , 3 and a new line [ENDL] set g to true [ENDL] declare integer variable t = 1 [ENDL] while t is not 0 , decrement it and call solve [ENDL] declare expo_fast with long long integers a , b as arguments , returning long long integer", "c++": "const long long MOD = 998244353 ; void solve ( ) string s ; bool v = false ; bool g = false ; cin >> s ; int n = s . length ( ) ; for ( int i = 0 ; i < ( s . length ( ) ) ; i ++ ) if ( s [ i ] == ' 0 ' ) if ( v ) cout << 3 << \"   \" << 1 << endl ; v = false ; else cout << \" 1 1 \" << endl ; v = true ; else } if ( g ) cout << 4 << \"   \" << 1 << endl ; g = false ; else cout << 4 << \"   \" << 3 << endl ; g = true ; int t = 1 ; } } } } int main() { while ( t -- ) { solve ( ) ; } long long int expo_fast ( long long int a , long long int b ) }"}}
{"translation": {"en": "set a to a [ENDL] create long long integer result with result = 1 [ENDL] while b is true [ENDL] if b bitwise and 1 , set result to result * a [ENDL] set b to b bitshift right 1 [ENDL] set a to a * a [ENDL] return result from function [ENDL] declare take_in with long long integer vector pointer arr as argument returning void [ENDL] for i = 0 to result of run size from arr exclusive , read value of arr [ i ] [ENDL] declare disp_arr with long long integer vector pointer as argument , returning void [ENDL] for i = 0 to result of run size from arr exclusive , print value of arr [ i ] print \" \" [ENDL] declare func with string s , integer n as arguments , returning string [ENDL] create string q [ENDL] resize q to size n [ENDL] set q [ 0 ] to s [ 0 ] [ENDL] set q [ 1 ] to s [ 1 ] [ENDL] set q [ 2 ] to s [ 2 ] [ENDL] for i = 3 to n exclusive [ENDL] if i % 3 is 0 [ENDL] set q [ i ] to q [ 0 ] [ENDL] else if i % 3 is 1 [ENDL] set q [ i ] to q [ 1 ] [ENDL] else [ENDL] set q [ i ] to q [ 2 ] [ENDL] return q from function [ENDL] create string s [ENDL] read s [ENDL] create character stack stk [ENDL] create long long integers ans with ans = 0 [ENDL] create booleans cond1 , cond2 with cond1 = true , cond2 = true [ENDL] for i = 0 to length of s exclusive [ENDL] if s [ i ] is ' 0 ' [ENDL] if cond1 is true [ENDL] set cond1 to false [ENDL] print \" 1 1 \\ n \" [ENDL] else [ENDL] set cond1 to true [ENDL] print \" 3 1 \\ n \" [ENDL] else [ENDL] if cond2 is true [ENDL] set cond2 to false [ENDL] print \" 4 3 \\ n \" [ENDL] else [ENDL] set cond2 to true [ENDL] print \" 4 1 \\ n \" [ENDL] create string s", "c++": "a = a ; long long int result = 1 ; while ( b ) if ( b & 1 ) result = ( result * a ) ; b >>= 1 ; a = ( a * a ) ; return ( result ) ; } void take_in ( vector < long long int > * arr ) } for ( int i = 0 ; i < arr -> size ( ) ; i ++ ) cin >> ( * ( arr ) ) [ i ] ; void disp_arr ( vector < long long int > * arr ) } for ( int i = 0 ; i < arr -> size ( ) ; i ++ ) cout << ( * ( arr ) ) [ i ] << \"   \" ; string func ( string s , int n ) } string q ; q . resize ( n ) ; q [ 0 ] = s [ 0 ] ; q [ 1 ] = s [ 1 ] ; q [ 2 ] = s [ 2 ] ; for ( int i = 3 ; i < n ; i ++ ) if ( i % 3 == 0 ) q [ i ] = q [ 0 ] ; else if ( i % 3 == 1 ) q [ i ] = q [ 1 ] ; else q [ i ] = q [ 2 ] ; return q ; } string s ; } int main() { cin >> s ; stack < char > stk ; long long int ans = 0 ; bool cond1 = true , cond2 = true ; for ( int i = 0 ; i < s . length ( ) ; i ++ ) if ( s [ i ] == ' 0 ' ) if ( cond1 ) cond1 = false ; cout << \" 1 1\\n \" ; else cond1 = true ; cout << \" 3 1\\n \" ; else } if ( cond2 ) cond2 = false ; cout << \" 4 3\\n \" ; else cond2 = true ; cout << \" 4 1\\n \" ; string s ; } } } }"}}
{"translation": {"en": "create integer array r with size 1001 [ENDL] create integer array c with size 1001 [ENDL] read s [ENDL] create integer n with n = length of s [ENDL] create boolean slot_0 with slot_0 = false [ENDL] create boolean slot_1 with slot_1 = false [ENDL] for i = 0 to n exclusive [ENDL] if s [ i ] is ' 0 ' [ENDL] if not slot_0 [ENDL] print \" 1 1 \\ n \" [ENDL] set slot_0 to true [ENDL] else [ENDL] print \" 3 1 \\ n \" [ENDL] set slot_0 to false [ENDL] else [ENDL] if not slot_1 [ENDL] print \" 4 3 \\ n \" [ENDL] set slot_1 to true [ENDL] else [ENDL] print \" 4 1 \\ n \" [ENDL] set slot_1 to false [ENDL] create llin with no arguments , returning long long integer", "c++": "int r [ 1001 ] ; int c [ 1001 ] ; cin >> s ; int main() { int n = s . length ( ) ; bool slot_0 = false ; bool slot_1 = false ; for ( int i = 0 ; i < n ; i ++ ) if ( s [ i ] == ' 0 ' ) if ( ! slot_0 ) cout << \" 1 1\\n \" ; slot_0 = true ; else cout << \" 3 1\\n \" ; slot_0 = false ; else } if ( ! slot_1 ) cout << \" 4 3\\n \" ; slot_1 = true ; else cout << \" 4 1\\n \" ; slot_1 = false ; long long int llin ( ) } } } }"}}
{"translation": {"en": "create long long integer tmp [ENDL] read tmp [ENDL] return tmp from function [ENDL] declare solve with no arguments , returning void [ENDL] create long long integer nsticks with nsticks = result of run llin [ENDL] create long long integer array lengths with size nsticks [ENDL] create long long integer min with min = 101 [ENDL] create long long integer max with max = 0 [ENDL] for i = 0 to nsticks exclusive [ENDL] create long long integer tmp with tmp = result of run llin [ENDL] set lengths [ i ] to tmp [ENDL] if tmp is greater than max , set max to tmp [ENDL] if tmp is less than min , set min to tmp [ENDL] create long long integer min_t with min_t to min [ENDL] create long long integer min_cost with min_cost = 1000005 [ENDL] for t = min to max + 1 exclusive [ENDL] create long long integer tmp_cost with tmp_cost = 0 [ENDL] for i = 0 to nsticks exclusive [ENDL] create long long integer tmp_length with tmp_length = lengths [ i ] [ENDL] if tmp_length is greater than t + 1 [ENDL] increment tmp_cost by tmp_length - ( t + 1 ) [ENDL] else if tmp_length is less than t - 1 [ENDL] increment tmp_cost by t - 1 - tmp_length [ENDL] if min_cost is greater than tmp_cost [ENDL] set min_t to t [ENDL] set min_cost to tmp_cost [ENDL] print min_t print \" \" print min_cost print ' \\ n ' [ENDL] return from function [ENDL] create integer TESTS with TESTS = 1 [ENDL] while decrement TESTS is true , run solve [ENDL] create integer n", "c++": "long long int tmp ; cin >> tmp ; return tmp ; void solve ( ) } long long int nsticks = llin ( ) ; long long int lengths [ nsticks ] ; long long int min = 101 ; long long int max = 0 ; for ( long long int i = 0 ; i < nsticks ; i ++ ) long long int tmp = llin ( ) ; lengths [ i ] = tmp ; if ( tmp > max ) max = tmp ; if ( tmp < min ) min = tmp ; long long int min_t = min ; } long long int min_cost = 1000005 ; for ( long long int t = min ; t < max + 1 ; t ++ ) long long int tmp_cost = 0 ; for ( long long int i = 0 ; i < nsticks ; i ++ ) long long int tmp_length = lengths [ i ] ; if ( tmp_length > t + 1 ) tmp_cost += tmp_length - ( t + 1 ) ; else if ( tmp_length < t - 1 ) tmp_cost += t - 1 - ( tmp_length ) ; if ( min_cost > tmp_cost ) } min_t = t ; min_cost = tmp_cost ; cout << min_t << \"   \" << min_cost << ' \\n ' ; } } return ; int TESTS = 1 ; } int main() { while ( TESTS -- ) { solve ( ) ; } int n ; return 0; }"}}
{"translation": {"en": "read n [ENDL] create integer a , b , i , cnt , max , set cnt = 0 , max = 0 [ENDL] for i = 0 to n execute [ENDL] print a , b [ENDL] set cnt = cnt + b - a [ENDL] if cnt > max set max = cnt [ENDL] print max [ENDL] create integers x , y , c , m with c = 0 , m = 0", "c++": "int main() { cin >> n ; int a , b , i , cnt = 0 , max = 0 ; for ( i = 0 ; i < n ; i ++ ) cin >> a >> b ; cnt = cnt + b - a ; if ( cnt > max ) max = cnt ; cout << max << endl ; } int x , y , c = 0 , m = 0 ; return 0; }"}}
{"translation": {"en": "create integer n [ENDL] read n [ENDL] while decrement n is true [ENDL] read x read y [ENDL] decrement c by x [ENDL] increment c by y [ENDL] if c is greater than m , set m to c [ENDL] print m print newline [ENDL] create string str", "c++": "int main() { int n ; cin >> n ; while ( n -- ) cin >> x >> y ; c -= x ; c += y ; if ( c > m ) { m = c ; } cout << m << endl ; } string str ; return 0; }"}}
{"translation": {"en": "let n , a , b , capacity , total be integers , set capacity = 0 , total = 0 [ENDL] read n [ENDL] for i = 0 to n exclusive [ENDL] read a and b [ENDL] total = total - a [ENDL] set total to total + b [ENDL] assign max of capacity and total to capacity [ENDL] print capacity [ENDL] create integer n", "c++": "int n , a , b , capacity = 0 , total = 0 ; cin >> n ; int main() { for ( int i = 0 ; i < n ; ++ i ) cin >> a >> b ; total -= a ; total += b ; capacity = max ( capacity , total ) ; cout << capacity << endl ; } int n ; return 0; }"}}
{"translation": {"en": "read n [ENDL] create integers on , off , count , c with count = 0 , c = 0 [ENDL] while decrement n is true [ENDL] read off read on [ENDL] increment c by on - off [ENDL] if c is greater than count , set count to c [ENDL] print count print newline [ENDL] integers = n", "c++": "int main() { cin >> n ; int on , off , count = 0 , c = 0 ; while ( n -- ) cin >> off >> on ; c += on - off ; if ( c > count ) count = c ; cout << count << endl ; } int n ; return 0; }"}}
{"translation": {"en": "read n [ENDL] integers = max , a , b , c [ENDL] read a , b [ENDL] set c to a + b [ENDL] set max to c [ENDL] for i = 1 to less than n do the following [ENDL] read a , b [ENDL] subtract a from c [ENDL] c equals c plus b [ENDL] if c is greater than max then do the following max = c [ENDL] output max [ENDL] n , i , j , k , max , cap = int", "c++": "int main() { cin >> n ; int max , a , b , c ; cin >> a >> b ; c = a + b ; max = c ; for ( int i = 1 ; i < n ; i ++ ) cin >> a >> b ; c -= a ; c += b ; if ( c > max ) max = c ; cout << max << endl ; } int n , i , j , k , max , cap ; return 0; }"}}
{"translation": {"en": "set max to - 1 [ENDL] set cap to 0 [ENDL] read n [ENDL] for i = 0 to n [ENDL] rad j then k [ENDL] set cap to cap - j + k [ENDL] if cap is greater than max set max to cap [ENDL] print max [ENDL] let n be an integer", "c++": "int main() { max = - 1 ; cap = 0 ; cin >> n ; for ( i = 0 ; i < n ; i ++ ) cin >> j >> k ; cap = cap - j + k ; if ( cap > max ) max = cap ; cout << max << endl ; } int n ; return 0; }"}}
{"translation": {"en": "read n [ENDL] max = int = 0 [ENDL] cp = 0 = int [ENDL] for i = 0 to n [ENDL] let a , b be ints [ENDL] read a and b [ENDL] increment cp by ( b - a ) [ENDL] if cp > = max then set max to cp [ENDL] print max [ENDL] create integers n , a , b , c , m with c = 0 , m = 0", "c++": "int main() { cin >> n ; int max = 0 ; int cp = 0 ; for ( int i = 0 ; i < n ; i ++ ) int a , b ; cin >> a >> b ; cp += ( b - a ) ; if ( cp >= max ) max = cp ; cout << max << endl ; } int n , a , b , c = 0 , m = 0 ; }"}}
{"translation": {"en": "read n [ENDL] for i = 0 to n exclusive [ENDL] read a read b [ENDL] set c to c + b - a [ENDL] if m is less than c , set m to c [ENDL] print m print newline [ENDL] create int n", "c++": "int main() { cin >> n ; for ( int i = 0 ; i < n ; i ++ ) cin >> a >> b ; c = c + b - a ; if ( m < c ) m = c ; cout << m << endl ; } int n ; return 0; }"}}
{"translation": {"en": "read n [ENDL] ans = 0 [ENDL] temp = 0 [ENDL] for i = 0 to n exclusive [ENDL] create int a and b [ENDL] read a and b [ENDL] set temp to temp - a [ENDL] assign temp + b to temp [ENDL] set ans = max of temp and ans [ENDL] print ans [ENDL] create long longs n , max , d , with max = 0 , d = 0", "c++": "int main() { cin >> n ; int ans = 0 ; int temp = 0 ; for ( int i = 0 ; i < n ; i ++ ) int a , b ; cin >> a >> b ; temp -= a ; temp += b ; ans = max ( temp , ans ) ; cout << ans << endl ; } long long n , max = 0 , d = 0 ; }"}}
{"translation": {"en": "read n [ENDL] create long long arrays a , b , with a size 100000 , with b size 100000 [ENDL] for i = 0 to n exclusive [ENDL] read a [ i ] read b [ i ] [ENDL] set d to d - a [ i ] [ENDL] set d to d + b [ i ] [ENDL] if d is greater than max , set max to d [ENDL] print max print newline [ENDL] create integer n", "c++": "int main() { cin >> n ; long long a [ 100000 ] , b [ 100000 ] ; for ( long long i = 0 ; i < n ; i ++ ) cin >> a [ i ] >> b [ i ] ; d = d - a [ i ] ; d = d + b [ i ] ; if ( d > max ) max = d ; cout << max << endl ; } int n ; return 0; }"}}
{"translation": {"en": "read n [ENDL] create integer arrays a , b with a size n , b size n [ENDL] for i = 0 to n exclusive , read a [ i ] read b [ i ] [ENDL] create integer curr with curr = 0 [ENDL] create integer req with req = 0 [ENDL] for i = 0 to n exclusive [ENDL] decrement curr by a [ i ] [ENDL] increment cur by b [ i ] [ENDL] if curr is greater than req , set req to curr [ENDL] print req print newline [ENDL] create integer n", "c++": "int main() { cin >> n ; int a [ n ] , b [ n ] ; for ( int i = 0 ; i < n ; i ++ ) { cin >> a [ i ] >> b [ i ] ; } int curr = 0 ; int req = 0 ; for ( int i = 0 ; i < n ; i ++ ) curr -= a [ i ] ; curr += b [ i ] ; if ( curr > req ) { req = curr ; } cout << req << endl ; } int n ; return 0; }"}}
{"translation": {"en": "create integer maxValue set maxValue = INT_MIN [ENDL] read n [ENDL] create Integer a , b [ENDL] create integer d set d = 0 [ENDL] create integer c set c = 0 [ENDL] for i = 0 to n execute [ENDL] print a , b [ENDL] set c = c + a [ENDL] set d = d + b [ENDL] if maxValue is less than the absolute value of c - d set maxValue = abs ( c - d ) [ENDL] print maxValue [ENDL] create integer n", "c++": "int main() { int maxValue = INT_MIN ; cin >> n ; int a , b ; int d = 0 ; int c = 0 ; for ( int i = 0 ; i < n ; i ++ ) cin >> a >> b ; c = c + a ; d = d + b ; if ( maxValue < abs ( c - d ) ) maxValue = abs ( c - d ) ; cout << maxValue << endl ; } int n ; return 0; }"}}
{"translation": {"en": "while read n is true [ENDL] create integers ans , temp with ans = 0 , temp = 0 [ENDL] for i = 0 to n exclusive [ENDL] create integers p , q [ENDL] read p read q [ENDL] increment temp by q [ENDL] decrement temp by p [ENDL] set ans to maximum of ans and temp [ENDL] print ans print newline [ENDL] n = int , Max and Count = 0", "c++": "int main() { while ( cin >> n ) int ans = 0 , temp = 0 ; for ( int i = 0 ; i < n ; i ++ ) int p , q ; cin >> p >> q ; temp += q ; temp -= p ; ans = max ( ans , temp ) ; cout << ans << endl ; } int n , Max = 0 , Count = 0 ; } return 0; }"}}
{"translation": {"en": "read n [ENDL] a and b = array of n int [ENDL] for i = 0 to n exclusive [ENDL] read a [ i ] , b [ i ] [ENDL] subtract a [ i ] from Count [ENDL] add b [ i ] to Count [ENDL] if Count > Max Max = Count [ENDL] print Max [ENDL] a , b , i , j , c , n , p , q = int with j = 0 and c = 0 and p = 0 and q = 0", "c++": "int main() { cin >> n ; int a [ n ] , b [ n ] ; for ( int i = 0 ; i < n ; i ++ ) cin >> a [ i ] >> b [ i ] ; Count -= a [ i ] ; Count += b [ i ] ; if ( Count > Max ) { Max = Count ; } cout << Max << endl ; } int a , b , i , j = 0 , c = 0 , n , p = 0 , q = 0 ; return 0; }"}}
{"translation": {"en": "read n [ENDL] for i = 1 to n inclusive [ENDL] read a then b [ENDL] set p to p + a [ENDL] set q to q + b [ENDL] set c to q - p [ENDL] if c > j set j to c [ENDL] print j [ENDL] create character array s with size 10001", "c++": "int main() { cin >> n ; for ( i = 1 ; i <= n ; i ++ ) cin >> a >> b ; p = p + a ; q = q + b ; c = q - p ; if ( c > j ) { j = c ; } cout << j << endl ; } char s [ 10001 ] ; return 0; }"}}
{"translation": {"en": "create integer t [ENDL] while read t is true [ENDL] create integers ns , sm with ns = - 1 , sm = 0 [ENDL] while decrement t is true [ENDL] create integers doll , puppet [ENDL] read doll read puppet [ENDL] set sm to sm - doll + puppet [ENDL] set ns to maximum of ns and sm [ENDL] print ns print newline [ENDL] n = integer", "c++": "int main() { int t ; while ( cin >> t ) int ns = - 1 , sm = 0 ; while ( t -- ) int doll , puppet ; cin >> doll >> puppet ; sm = sm - doll + puppet ; ns = max ( ns , sm ) ; cout << ns << endl ; } int n ; } }"}}
{"translation": {"en": "while n can be read as a valid integer [ENDL] a , b , total , max = integers , k = integer = 0 [ENDL] for i = 0 to n exclusive [ENDL] read a , b [ENDL] if k is 0 [ENDL] total = b [ENDL] k = 1 [ENDL] max = b [ENDL] else if k is 1 [ENDL] total = total - a + b [ENDL] if total > max , then max = total [ENDL] print max [ENDL] create integers a , b", "c++": "int main() { while ( cin >> n ) int a , b , total , k = 0 , max ; for ( int i = 0 ; i < n ; i ++ ) cin >> a >> b ; if ( k == 0 ) total = b ; k = 1 ; max = b ; else if ( k == 1 ) total = total - a + b ; if ( total > max ) max = total ; cout << max << endl ; } } int a , b ; } return 0; }"}}
{"translation": {"en": "create integer counter with counter = 0 [ENDL] create integer tranSize with tranSize = 0 [ENDL] create integer rep [ENDL] read rep [ENDL] while decrement rep is true [ENDL] read a read b [ENDL] decrement counter by a [ENDL] increment counter by b [ENDL] if counter is greater than tranSize , set tranSize to counter [ENDL] print tranSize print newline [ENDL] v = long long int vector", "c++": "int main() { int counter = 0 ; int tranSize = 0 ; int rep ; cin >> rep ; while ( rep -- ) cin >> a >> b ; counter -= a ; counter += b ; if ( counter > tranSize ) { tranSize = counter ; } cout << tranSize << endl ; } vector < long long int > v ; return 0; }"}}
{"translation": {"en": "n , out , in , sum = long long int with sum = 0 [ENDL] read n [ENDL] loop n times [ENDL] read out then in [ENDL] set sum to sum - out + in [ENDL] append sum to v [ENDL] sort v [ENDL] reverse v [ENDL] print v [ 0 ] [ENDL] n , x , y , i , max , a = long long integer with max , a = 0", "c++": "int main() { long long int n , out , in , sum = 0 ; cin >> n ; while ( n -- ) cin >> out >> in ; sum = sum - out + in ; v . push_back ( sum ) ; sort ( v . begin ( ) , v . end ( ) ) ; } reverse ( v . begin ( ) , v . end ( ) ) ; cout << v [ 0 ] << endl ; long long int n , x , y , i , max = 0 , a = 0 ; return 0; }"}}
{"translation": {"en": "read n [ENDL] for i = 0 to n exclusive [ENDL] read x , y [ENDL] a = a - x + y [ENDL] if max < a , max = a [ENDL] print max [ENDL] create integers minx , n , a , b and test with minx and test = 0", "c++": "int main() { cin >> n ; for ( i = 0 ; i < n ; i ++ ) cin >> x >> y ; a = a - x + y ; if ( max < a ) { max = a ; } cout << max << \" \\n \" ; } int minx = 0 , n , a , b , test = 0 ; }"}}
{"translation": {"en": "read variable n from the input [ENDL] for integer i = 0 to n exclusive [ENDL] read standard input to a and b [ENDL] change test to test - a [ENDL] change test to sum of test and b [ENDL] change minx to max of minx and test [ENDL] print minx to the standard output [ENDL] n = int", "c++": "int main() { cin >> n ; for ( int i = 0 ; i < n ; ++ i ) cin >> a >> b ; test -= a ; test += b ; minx = max ( minx , test ) ; cout << minx << endl ; } int n ; return 0; }"}}
{"translation": {"en": "read n [ENDL] a , b = int array of size n each [ENDL] cntr , ans = int with cntr = 0 and ans = 0 [ENDL] for i = 0 to n [ENDL] read a [ i ] then b [ i ] [ENDL] decrement cntr by a [ i ] [ENDL] increment cntr by b [ i ] [ENDL] set ans to max of ans and cntr [ENDL] print ans [ENDL] create integers n , a , b , s , t", "c++": "int main() { cin >> n ; int a [ n ] , b [ n ] ; int cntr = 0 , ans = 0 ; for ( int i = 0 ; i < n ; i ++ ) cin >> a [ i ] >> b [ i ] ; cntr -= a [ i ] ; cntr += b [ i ] ; ans = max ( ans , cntr ) ; cout << ans << endl ; } int n , a , b , s , t ; }"}}
{"translation": {"en": "while read n is true [ENDL] set t to 0 [ENDL] create integers r , z , with r = 0 , z = 0 [ENDL] for i = 0 to n exclusive [ENDL] read a read b [ENDL] increment r by a [ENDL] increment z by b [ENDL] set s to z - r [ENDL] set t to maximum of t ans s [ENDL] print t print newline [ENDL] s = integer", "c++": "int main() { while ( cin >> n ) t = 0 ; int r = 0 , z = 0 ; for ( int i = 0 ; i < n ; i ++ ) cin >> a >> b ; r += a ; z += b ; s = z - r ; t = max ( t , s ) ; cout << t << endl ; } int s ; } return 0; }"}}
{"translation": {"en": "create integers x , a [ 10001 ] , b [ 10001 ] , maxs , set maxs to 0 [ENDL] read x [ENDL] for i = 1 to x inclusive , read a [ i ] and b [ i ] [ENDL] for i = 1 to x inclusive [ENDL] set s to s - a [ i ] [ENDL] assign s + b [ i ] to s [ENDL] if s greater than maxs , set maxs to s [ENDL] print maxs [ENDL] create integers n , r , t , with r = 0 , t = 0", "c++": "int x , a [ 10001 ] , b [ 10001 ] , maxs = 0 ; int main() { cin >> x ; for ( int i = 1 ; i <= x ; i ++ ) cin >> a [ i ] >> b [ i ] ; for ( int i = 1 ; i <= x ; i ++ ) s -= a [ i ] ; s += b [ i ] ; if ( s > maxs ) maxs = s ; cout << maxs << endl ; } int n , r = 0 , t = 0 ; return 0; }"}}
{"translation": {"en": "read n [ENDL] for i = 0 to n exclusive [ENDL] create integers a , b [ENDL] read a read b [ENDL] set t to t = a + b [ENDL] if t is greater than r , set r to t [ENDL] print r print newline [ENDL] bool function lucky with integer argument n", "c++": "int main() { cin >> n ; for ( int i = 0 ; i < n ; i ++ ) int a , b ; cin >> a >> b ; t = t - a + b ; if ( t > r ) r = t ; cout << r << endl ; } bool lucky ( int n ) return 0; }"}}
{"translation": {"en": "while n ! = 0 [ENDL] if n % 10 ! = 4 & & n % 10 ! = 7 return false [ENDL] divide n by 10 [ENDL] return true [ENDL] almost_lucky is a boolean function with integer argument n [ENDL] if lucky ( n ) is true , return true [ENDL] for i = 2 while i * i < = n [ENDL] if n % i = 0 & & ( lucky ( i ) or lucky ( n / i ) is true ) [ENDL] return false [ENDL] declare integer n [ENDL] read n [ENDL] if almost_lucky ( n ) is true [ENDL] print \" YES \" [ENDL] else [ENDL] print \" NO \" [ENDL] function str ( get int n , return string )", "c++": "while ( n != 0 ) if ( n % 10 != 4 && n % 10 != 7 ) { return false ; } n /= 10 ; return true ; } bool almost_lucky ( int n ) } if ( lucky ( n ) ) { return true ; } for ( int i = 2 ; i * i <= n ; ++ i ) if ( n % i == 0 && ( lucky ( i ) || lucky ( n / i ) ) ) { return true ; } return false ; } int n ; } int main() { cin >> n ; if ( almost_lucky ( n ) ) cout << \" YES \" << endl ; else cout << \" NO \" << endl ; string str ( int n ) } return 0; }"}}
{"translation": {"en": "ss = stringstream [ENDL] push n into ss [ENDL] s = string [ENDL] s = ss [ENDL] return s [ENDL] sorte = array of 1001 int [ENDL] tam = 0 [ENDL] function lucky [ENDL] for i = 0 to 1001 exclusive [ENDL] s string = str ( i ) [ENDL] sorte2 = true [ENDL] for c = 0 to length of s exclusive [ENDL] if s [ c ] ! = ' 4 ' and ! = ' 7 ' [ENDL] sorte2 = false [ENDL] break [ENDL] if sorte2 [ENDL] sorte [ tam ] = i [ENDL] increment tam [ENDL] call lucky ( ) [ENDL] n = int [ENDL] read n [ENDL] pos = 0 [ENDL] divide = false [ENDL] while sorte [ pos ] < = n and pos < tam [ENDL] if n modulo sorte [ pos ] is zero [ENDL] divide = true [ENDL] break [ENDL] increment pos [ENDL] if divide [ENDL] print \" YES \" [ENDL] else [ENDL] print \" NO \" [ENDL] assign elements 4 , 7 , 44 , 77 , 47 , 74 , 444 , 447 , 474 , 477 , 777 , 744 , 747 , 774 to int array arr", "c++": "stringstream ss ; ss << n ; string s ; ss >> s ; return s ; int sorte [ 1001 ] ; } int tam = 0 ; void lucky ( ) for ( int i = 0 ; i < 1001 ; i ++ ) string s = str ( i ) ; bool sorte2 = true ; for ( int c = 0 ; c < s . length ( ) ; c ++ ) if ( s [ c ] != ' 4 ' && s [ c ] != ' 7 ' ) sorte2 = false ; break ; if ( sorte2 ) } } sorte [ tam ] = i ; tam ++ ; lucky ( ) ; } } } int main() { int n ; cin >> n ; int pos = 0 ; bool divide = false ; while ( sorte [ pos ] <= n && pos < tam ) if ( n % sorte [ pos ] == 0 ) divide = true ; break ; pos ++ ; } if ( divide ) } cout << \" YES\\n \" ; else cout << \" NO\\n \" ; int arr [ ] = { 4 , 7 , 44 , 77 , 47 , 74 , 444 , 447 , 474 , 477 , 777 , 744 , 747 , 774 } ; } return 0; }"}}
{"translation": {"en": "set bool s to false [ENDL] create int n [ENDL] read n [ENDL] for i = 0 to 14 exclusive [ENDL] if n mod arr [ i ] = 0 [ENDL] print YES [ENDL] s = true [ENDL] break [ENDL] else [ENDL] continue the loop [ENDL] if s is false , print NO and a newline [ENDL] create integers n , i , , a , j , h", "c++": "bool s = false ; int n ; int main() { cin >> n ; for ( int i = 0 ; i < 14 ; ++ i ) if ( n % arr [ i ] == 0 ) cout << \" YES \" << endl ; s = true ; break ; else continue ; if ( s == false ) cout << \" NO \" << endl ; } int n , i , k , a , j , h ; return 0; }"}}
{"translation": {"en": "read n [ENDL] for i = 1 to n inclusive [ENDL] set k to i [ENDL] if n % k is 0 [ENDL] set j to h to 0 [ENDL] while k is not 0 [ENDL] set a to k % 10 [ENDL] if a is 4 or a is 7 , increment h [ENDL] set k to k / 10 [ENDL] increment j [ENDL] if h is j [ENDL] print \" YES \" print newline [ENDL] print \" NO \" print newline [ENDL] num = integer", "c++": "int main() { cin >> n ; for ( i = 1 ; i <= n ; i ++ ) k = i ; if ( n % k == 0 ) j = h = 0 ; while ( k != 0 ) a = k % 10 ; if ( a == 4 || a == 7 ) { h ++ ; } k = k / 10 ; j ++ ; if ( h == j ) } cout << \" YES \" << endl ; cout << \" NO \" << endl ; return 0; } } } int num ; }"}}
{"translation": {"en": "arr = integer array of 14 strings with arr = { 4 , 7 , 44 , 47 , 74 , 77 , 444 , 447 , 474 , 477 , 744 , 747 , 774 , 777 } [ENDL] read num [ENDL] for i = 0 to 13 [ENDL] if num modulo arr [ i ] is 0 [ENDL] print YES [ENDL] print NO [ENDL] set int i , j , l , x , m , m1 , k to 0 , res = 0", "c++": "int main() { int arr [ 14 ] = { 4 , 7 , 44 , 47 , 74 , 77 , 444 , 447 , 474 , 477 , 744 , 747 , 774 , 777 } ; cin >> num ; for ( int i = 0 ; i < 14 ; i ++ ) if ( num % arr [ i ] == 0 ) cout << \" YES \" << endl ; cout << \" NO \" << endl ; return 0; } } int i , j , l , x , m , m1 , k = 0 , res = 0 ; return 0; }"}}
{"translation": {"en": "read x [ENDL] set int a as array of 1000 all to 0 [ENDL] for = 4 to less than or equal to 1000 do the following [ENDL] set i to j [ENDL] set m to 0 , m1 [ENDL] if i is greater than 0 then do [ENDL] set l to i modulo 10 [ENDL] if l is 4 or 7 then add one to m [ENDL] set i to i / 10 [ENDL] add one to m1 [ENDL] if m is m1 then do the following [ENDL] set a [ k ] to j [ENDL] add one to k [ENDL] for = 0 to less than k do the following [ENDL] if x modulo a [ i ] is 0 then do [ENDL] set res to 5 [ENDL] break [ENDL] if res is 5 then do the following commands [ENDL] output YES [ENDL] else [ENDL] output NO [ENDL] create integer n", "c++": "int main() { cin >> x ; int a [ 1000 ] = { 0 } ; for ( j = 4 ; j <= 1000 ; j ++ ) i = j ; m = 0 , m1 = 0 ; while ( i > 0 ) l = i % 10 ; if ( l == 4 || l == 7 ) m ++ ; i = i / 10 ; m1 ++ ; if ( m == m1 ) } a [ k ] = j ; k ++ ; for ( i = 0 ; i < k ; i ++ ) } } if ( x % a [ i ] == 0 ) res = 5 ; break ; if ( res == 5 ) } } cout << \" YES \" << endl ; else cout << \" NO \" << endl ; int n ; return 0; }"}}
{"translation": {"en": "create integer array arr with arr = { 4 , 7 , 44 , 47 , 74 , 77 , 444 , 447 , 474 , 477 } [ENDL] read n [ENDL] for i = 0 to size of arr / 4 exclusie [ENDL] if not ( n % arr [ i ] ) [ENDL] print \" YES \\ n \" [ENDL] exit from program with code 0 [ENDL] print \" NO \\ n \" [ENDL] int function getdigits with int argument n", "c++": "int arr [ ] = { 4 , 7 , 44 , 47 , 74 , 77 , 444 , 447 , 474 , 477 } ; cin >> n ; int main() { for ( int i = 0 ; i < sizeof ( arr ) / 4 ; i ++ ) if ( ! ( n % arr [ i ] ) ) cout << \" YES\\n \" ; exit ( 0 ) ; cout << \" NO\\n \" ; } int getdigits ( int n ) return 0; }"}}
{"translation": {"en": "declare int variable c = 0 [ENDL] while n is not 0 [ENDL] divide n by 10 [ENDL] increment c [ENDL] return c [ENDL] declare int variables n , d , i and flag where flag = 0 [ENDL] read input to n [ENDL] assign result of etdigits ( n ) to d [ENDL] if n % 4 = 0 [ENDL] set flag to 1 [ENDL] else if n % 7 = 0 [ENDL] assign 1 to flag [ENDL] else if n % 47 = 0 [ENDL] assign 1 to flag [ENDL] else if n % 477 = 0 [ENDL] change flag to 1 [ENDL] else if n % 447 = 0 [ENDL] assign 1 to flag [ENDL] else if n % 474 = 0 [ENDL] set flag to 1 [ENDL] else if n % 744 = 0 [ENDL] assign 1 to flag [ENDL] else if n % 747 = 0 [ENDL] set flag to 1 [ENDL] else if n % 774 = 0 [ENDL] set flag to 1 [ENDL] if flag is true [ENDL] print \" YES \" [ENDL] print \" \\ n \" [ENDL] else [ENDL] print \" NO \" [ENDL] print \" \\ n \" [ENDL] integers = a", "c++": "int c = 0 ; while ( n != 0 ) n /= 10 ; c ++ ; return c ; } int n , d , i , flag = 0 ; } int main() { cin >> n ; ; d = getdigits ( n ) ; if ( n % 4 == 0 ) flag = 1 ; else if ( n % 7 == 0 ) flag = 1 ; else if ( n % 47 == 0 ) flag = 1 ; else if ( n % 477 == 0 ) flag = 1 ; else if ( n % 447 == 0 ) flag = 1 ; else if ( n % 474 == 0 ) flag = 1 ; else if ( n % 744 == 0 ) flag = 1 ; else if ( n % 747 == 0 ) flag = 1 ; else if ( n % 774 == 0 ) flag = 1 ; if ( flag ) } cout << \" YES \" << \" \\n \" ; else cout << \" NO \" << \" \\n \" ; int a ; return 0; }"}}
{"translation": {"en": "read a [ENDL] set int l to 0 [ENDL] set int m to a [ENDL] for i = 0 to less than a do the following [ENDL] set m to m / 10 [ENDL] set l to l + 1 [ENDL] if m is 0 then do break [ENDL] for k = 1 to less than or equal to l do the following [ENDL] set int b [ k ] to [ENDL] for i = 1 to less than or equal to k do the following [ENDL] set int sum1 to 0 [ENDL] set b [ k - i ] to 4 [ENDL] for j = 0 to less than k then sum1 = 10 * sum1 + b [ j ] [ENDL] if a modulo sum1 is 0 then do [ENDL] output YES [ENDL] for i = 1 to less than or equal to k do the following [ENDL] set int sum1 to 0 [ENDL] set b [ k - i ] to 7 [ENDL] for j = 0 to less than k do the following [ENDL] if a modulo sum1 is 0 then do [ENDL] output YES [ENDL] for j = 0 to less than k do b [ j ] = 0 [ENDL] for i = 1 to less than or equal to k do the following [ENDL] set int sum1 to 0 [ENDL] set b [ k - i ] to 7 [ENDL] for j = 0 to less than k do the following [ENDL] if a modulo sum1 is 0 then do [ENDL] output YES [ENDL] for i = 1 to less than or equal to k do the following [ENDL] set int sum1 to 0 [ENDL] set b [ k - i ] to 4 [ENDL] for j = 0 to less than k do the following [ENDL] if a modulo sum1 is 0 then do [ENDL] output YES [ENDL] output NO [ENDL] set int n , arr [ ] to 4 , 7 , 44 , 47 , 74 , 77 , 444 , 447 , 474 , 477 , 744 , 747 , 774 , 777", "c++": "int main() { cin >> a ; int l = 0 ; int m = a ; for ( int i = 0 ; i < a ; i ++ ) m = m / 10 ; l = l + 1 ; if ( m == 0 ) { break ; } for ( int k = 1 ; k <= l ; k ++ ) } int b [ k ] = { } ; for ( int i = 1 ; i <= k ; i ++ ) int sum1 = 0 ; b [ k - i ] = 4 ; for ( int j = 0 ; j < k ; j ++ ) { sum1 = 10 * sum1 + b [ j ] ; } if ( a % sum1 == 0 ) cout << \" YES \" << endl ; for ( int i = 1 ; i <= k ; i ++ ) return 0; } } int sum1 = 0 ; b [ k - i ] = 7 ; for ( int j = 0 ; j < k ; j ++ ) { sum1 = 10 * sum1 + b [ j ] ; } if ( a % sum1 == 0 ) cout << \" YES \" << endl ; for ( int j = 0 ; j < k ; j ++ ) { b [ j ] = 0 ; } return 0; } } for ( int i = 1 ; i <= k ; i ++ ) int sum1 = 0 ; b [ k - i ] = 7 ; for ( int j = 0 ; j < k ; j ++ ) { sum1 = 10 * sum1 + b [ j ] ; } if ( a % sum1 == 0 ) cout << \" YES \" << endl ; for ( int i = 1 ; i <= k ; i ++ ) return 0; } } int sum1 = 0 ; b [ k - i ] = 4 ; for ( int j = 0 ; j < k ; j ++ ) { sum1 = 10 * sum1 + b [ j ] ; } if ( a % sum1 == 0 ) cout << \" YES \" << endl ; cout << \" NO \" << endl ; return 0; } } } int n , arr [ ] = { 4 , 7 , 44 , 47 , 74 , 77 , 444 , 447 , 474 , 477 , 744 , 747 , 774 , 777 } ; }"}}
{"translation": {"en": "read n [ENDL] for i = 0 to less than 10 do the following [ENDL] if n / arr [ i ] has no remainder then do the following [ENDL] output YES [ENDL] output NO [ENDL] n , k = integer", "c++": "cin >> n ; int main() { for ( int i = 0 ; i < 10 ; i ++ ) if ( ! ( n % arr [ i ] ) ) cout << \" YES \" << endl ; cout << \" NO \" << endl ; return 0; } } int n , k ; return 0; }"}}
{"translation": {"en": "read n , k [ENDL] x , y , x0 , y0 , total = double with total ( 0 . 0 ) [ENDL] read x0 , y0 [ENDL] while decrement n [ENDL] read x , y [ENDL] total = total + sqrt ( ( x - x0 ) * ( x - x0 ) + ( y - y0 ) * ( y - y0 ) ) [ENDL] x0 = x [ENDL] y0 = y [ENDL] print fixed , setprecision ( 6 ) , total * k / 50 [ENDL] n , k = int", "c++": "int main() { cin >> n >> k ; double x , y , x0 , y0 , total ( 0.0 ) ; cin >> x0 >> y0 ; while ( -- n ) cin >> x >> y ; total += sqrt ( ( x - x0 ) * ( x - x0 ) + ( y - y0 ) * ( y - y0 ) ) ; x0 = x ; y0 = y ; cout << fixed << setprecision ( 6 ) << total * k / 50 << endl ; } int n , k ; return 0; }"}}
{"translation": {"en": "read n then k [ENDL] x , y , x0 , y0 , total = double with total = 0 . 0 [ENDL] read x0 then y0 [ENDL] loop n times [ENDL] read x then y [ENDL] add sqrt ( ( x - x0 ) * ( x - x0 ) + ( y - y0 ) * ( y - y0 ) ) to total [ENDL] set x0 = x [ENDL] set y0 = y [ENDL] print total * k / 50 with 6 decimal digits [ENDL] create integers n , k", "c++": "int main() { cin >> n >> k ; double x , y , x0 , y0 , total ( 0.0 ) ; cin >> x0 >> y0 ; while ( -- n ) cin >> x >> y ; total += sqrt ( ( x - x0 ) * ( x - x0 ) + ( y - y0 ) * ( y - y0 ) ) ; x0 = x ; y0 = y ; cout << fixed << setprecision ( 6 ) << total * k / 50 << endl ; } int n , k ; return 0; }"}}
{"translation": {"en": "read n read k [ENDL] create doubles x , y , x0 , y0 , total with total initialized with 0 . 0 [ENDL] read x0 read y0 [ENDL] while decrement n is true [ENDL] read x read y [ENDL] increment total by square root of ( ( x - x0 ) * ( x - x0 ) + ( y - y0 ) * ( y - y0 ) ) [ENDL] set x0 to x [ENDL] set y0 to y [ENDL] print fixed , set cout decimal precision to 6 , print total * k / 50 print newline [ENDL] double function dist with integer arguments x1 , y1 , x2 and y2", "c++": "int main() { cin >> n >> k ; double x , y , x0 , y0 , total ( 0.0 ) ; cin >> x0 >> y0 ; while ( -- n ) cin >> x >> y ; total += sqrt ( ( x - x0 ) * ( x - x0 ) + ( y - y0 ) * ( y - y0 ) ) ; x0 = x ; y0 = y ; cout << fixed << setprecision ( 6 ) << total * k / 50 << endl ; } double dist ( int x1 , int y1 , int x2 , int y2 ) return 0; }"}}
{"translation": {"en": "return square root of ( pow ( ( x1 - x2 ) , 2 ) + pow ( ( y1 - y2 ) , 2 ) ) [ENDL] create integers n and k [ENDL] read n and k [ENDL] declare boolean f = true [ENDL] create integers x1 , y1 , x2 and y2 [ENDL] create double totDist [ENDL] decrement n in a loop while n > 0 [ENDL] if f is true [ENDL] read x1 and y1 [ENDL] set f to false [ENDL] else [ENDL] read x2 and y2 [ENDL] increase totDist by dist of ( x1 , y1 , x2 , y2 ) [ENDL] set x1 to x2 [ENDL] assign value of y2 to y1 [ENDL] create double r = totDist * k / 50 . 0 [ENDL] print fixed and r [ENDL] s = string", "c++": "return sqrt ( pow ( ( x1 - x2 ) , 2 ) + pow ( ( y1 - y2 ) , 2 ) ) ; int n , k ; } int main() { cin >> n >> k ; bool f = true ; int x1 , y1 , x2 , y2 ; double totDist ; while ( n -- ) if ( f ) cin >> x1 >> y1 ; f = false ; else cin >> x2 >> y2 ; totDist += dist ( x1 , y1 , x2 , y2 ) ; x1 = x2 ; y1 = y2 ; double r = totDist * k / 50.0 ; } } cout << fixed << r << endl ; string s ; return 0; }"}}
{"translation": {"en": "read s [ENDL] for i = 0 to s . length ( ) exclusive [ENDL] while ( s [ i - 1 ] is character ' ' and s [ i ] is character ' ' ) , erase ( s . begin ( ) + i - 1 ) from s [ENDL] if ( ( s [ i ] is . or s [ i ] is ! or s [ i ] is , or s [ i ] is ? ) ) [ENDL] if ( s [ i - 1 ] is character ' ' and s [ i + 1 ] is character ' ' ) [ENDL] erase ( s . begin ( ) + i - 1 ) from s [ENDL] else if ( s [ i + 1 ] is not character ' ' [ENDL] insert ( s . begin ( ) + i + 1 , character ' ' ) in s [ENDL] while ( s [ i - 1 ] is character ' ' ) erase ( s . begin ( ) + i - 1 ) from s [ENDL] print s [ENDL] create const ints N = 1e5 + 5 and OO = 0x3f3f3f3f", "c++": "int main() { getline ( cin , s ) ; for ( int i = 0 ; i < s . length ( ) ; i ++ ) while ( s [ i - 1 ] == '   ' && s [ i ] == '   ' ) s . erase ( s . begin ( ) + i - 1 ) ; if ( ( s [ i ] == ' . ' || s [ i ] == ' ! ' || s [ i ] == ' , ' || s [ i ] == ' ? ' ) ) if ( s [ i - 1 ] == '   ' && s [ i + 1 ] == '   ' ) s . erase ( s . begin ( ) + i - 1 ) ; else if ( s [ i + 1 ] != '   ' ) s . insert ( s . begin ( ) + i + 1 , '   ' ) ; while ( s [ i - 1 ] == '   ' ) s . erase ( s . begin ( ) + i - 1 ) ; cout << s << \" \\n \" ; } } const int N = 1e5 + 5 , OO = 0x3f3f3f3f ; return 0; }"}}
{"translation": {"en": "declare string variable str [ENDL] read input into str [ENDL] loop i from 0 to length of str exclusive [ENDL] if str [ i ] is equal to ' ' and str [ i + 1 ] is equal to ' ' [ENDL] remove element at position i from str [ENDL] decrement i by one [ENDL] if str [ i ] = ' , ' or str [ i ] = ' ! ' or str [ i ] = ' ? ' or str [ i ] = ' . ' [ENDL] if str [ i + 1 ] ! = ' ' and i < length of str - 1 [ENDL] declare string a = \" \" [ENDL] insert a to position i + 1 of str [ENDL] if str [ i - 1 ] is equal to ' ' [ENDL] remove element at position i - 1 from str [ENDL] decrement i by one [ENDL] print str [ENDL] s = string array", "c++": "string str ; int main() { getline ( cin , str ) ; for ( int i = 0 ; i < str . size ( ) ; i ++ ) if ( str [ i ] == '   ' && str [ i + 1 ] == '   ' ) str . erase ( str . begin ( ) + i ) ; i -- ; if ( str [ i ] == ' , ' || str [ i ] == ' ! ' || str [ i ] == ' ? ' || str [ i ] == ' . ' ) } if ( str [ i + 1 ] != '   ' && i < str . size ( ) - 1 ) string a = \"   \" ; str . insert ( i + 1 , a ) ; if ( str [ i - 1 ] == '   ' ) } str . erase ( str . begin ( ) + ( i - 1 ) ) ; i -- ; cout << str << endl ; } } } string s ; }"}}
{"translation": {"en": "set int sp to 0 , p = 0 [ENDL] get the line as variable s [ENDL] set string s2 to [ENDL] set int l to s . size ( ) [ENDL] for i = 0 to less than l do the following [ENDL] if s [ i ] is then do [ENDL] add one to sp [ENDL] else if ( s [ i ] equals , . ? or ! then do the following [ENDL] add one to p [ENDL] s2 equals s2 plus s [ i ] [ENDL] else [ENDL] if sp is 0 and p = 0 then do the following instructions [ENDL] s2 equals s2 plus s [ i ] [ENDL] else if sp and p = 0 the do the following [ENDL] s2 equals s2 plus space [ENDL] s2 equals s2 plus s [ i ] [ENDL] set sp to 0 [ENDL] else [ENDL] s2 equals s2 plus space [ENDL] s2 equals s2 plus s [ i ] [ENDL] set p to 0 [ENDL] set sp to 0 [ENDL] output s2 [ENDL] create character variable c with size of 10005", "c++": "int main() { int sp = 0 , p = 0 ; getline ( cin , s ) ; string s2 = \"  \" ; int l = s . size ( ) ; for ( int i = 0 ; i < l ; i ++ ) if ( s [ i ] == '   ' ) sp ++ ; else if ( s [ i ] == ' , ' || s [ i ] == ' . ' || s [ i ] == ' ? ' || s [ i ] == ' ! ' ) p ++ ; s2 += s [ i ] ; else if ( sp == 0 && p == 0 ) s2 += s [ i ] ; else if ( p == 0 && sp > 0 ) s2 += '   ' ; s2 += s [ i ] ; sp = 0 ; else s2 += '   ' ; s2 += s [ i ] ; p = 0 ; sp = 0 ; cout << s2 << endl ; } } } char c [ 10005 ] ; return 0; }"}}
{"translation": {"en": "s = string [ENDL] input line into array c of 10005 size [ENDL] set int i to 0 [ENDL] set int lg to strlen ( c ) [ENDL] set bool ok to 0 [ENDL] if i is less than lg then do [ENDL] if isalpha is true [ENDL] if ok = 0 and i is not equal to 0 and not isalpha ( c [ i - 1 ] then add a space character to s [ENDL] s equals s plus c [ i ] [ENDL] set ok to 0 [ENDL] else [ENDL] set if ( c [ i ] = ? or c [ i ] = ! or c [ i ] = , or c [ i ] = . ) s + = c [ i ] then add a c [ i ] to s and add a space to s , and make ok = 1 [ENDL] add one to i [ENDL] output s [ENDL] in function File", "c++": "string s ; cin . getline ( c , 10005 ) ; int main() { int i = 0 ; int lg = strlen ( c ) ; bool ok = 0 ; while ( i < lg ) if ( isalpha ( c [ i ] ) ) if ( ok == 0 && i != 0 && ! isalpha ( c [ i - 1 ] ) ) s += '   ' ; s += c [ i ] ; ok = 0 ; else if ( c [ i ] == ' ? ' || c [ i ] == ' ! ' || c [ i ] == ' , ' || c [ i ] == ' . ' ) s += c [ i ] , s += '   ' , ok = 1 ; ++ i ; } cout << s << ' \\n ' ; } void File ( ) return 0; }"}}
{"translation": {"en": "call freopen on \" output . txt \" , \" w \" and stdout [ENDL] call freopen on \" input . txt \" , \" r \" and stdin [ENDL] define empty function fast [ENDL] pi = const double with pi = 2 * acos of 0 . 0 [ENDL] nn = const int with nn = 1e5 + 4 [ENDL] oo = const int with oo = 0x3f3f3f3f [ENDL] in function nCr taking two long longs n and r and returning a long long [ENDL] if n is less than r then return 0 [ENDL] if r is 0 then return 1 [ENDL] return n * nCr of n - 1 and r - 1 / r [ENDL] in function gcd taking two long longs a and b and returning a long long [ENDL] if b is 0 return a [ENDL] return gcd of b and a mod b [ENDL] call fast [ENDL] s = string [ENDL] call getline on cin and s [ENDL] arr = char vector [ENDL] if s [ 0 ] is a lower case letter then append s [ 0 ] to arr [ENDL] for i = 1 to size of s [ENDL] if s [ i ] is a lower case letter [ENDL] if s [ i - 1 ] is a lower case letter [ENDL] append s [ i ] to arr [ENDL] else [ENDL] append ' ' then s [ i ] to arr [ENDL] else if s [ i ] is ' ' [ENDL] continue loop [ENDL] else [ENDL] append s [ i ] to arr [ENDL] print all values of arr [ENDL] print newline [ENDL] s = string", "c++": "freopen ( \" output.txt \" , \" w \" , stdout ) ; freopen ( \" input.txt \" , \" r \" , stdin ) ; void fast ( ) { } } const double pi = 2 * acos ( 0.0 ) ; const int nn = 1e5 + 4 ; const int oo = 0x3f3f3f3f ; long long nCr ( long long n , long long r ) if ( n < r ) return 0 ; if ( r == 0 ) return 1 ; return n * nCr ( n - 1 , r - 1 ) / r ; long long gcd ( long long a , long long b ) } if ( b == 0 ) return a ; return gcd ( b , a % b ) ; fast ( ) ; } int main() { string s ; getline ( cin , s ) ; vector < char > arr ; if ( s [ 0 ] >= ' a ' && s [ 0 ] <= ' z ' ) arr . push_back ( s [ 0 ] ) ; for ( int i = 1 ; i < ( ( int ) ( ( s ) . size ( ) ) ) ; i ++ ) if ( s [ i ] >= ' a ' && s [ i ] <= ' z ' ) if ( s [ i - 1 ] >= ' a ' && s [ i - 1 ] <= ' z ' ) arr . push_back ( s [ i ] ) ; else arr . push_back ( '   ' ) , arr . push_back ( s [ i ] ) ; else if ( s [ i ] == '   ' ) continue ; else arr . push_back ( s [ i ] ) ; for ( int i = 0 ; i < ( ( int ) ( ( arr ) . size ( ) ) ) ; i ++ ) cout << arr [ i ] ; } cout << endl ; string s ; return 0; }"}}
{"translation": {"en": "ans = string array of size 111111 [ENDL] call getline of cin and s [ENDL] n , p = int with n = size of s and p = 0 [ENDL] for i = 0 to n [ENDL] if s [ i ] equals ' , ' or ' . ' or ' ! ' or ' ? ' [ENDL] set ans [ p ] to \" \" then increment p [ENDL] set ans [ p - 1 ] [ 0 ] to s [ i ] [ENDL] else if s [ i ] is a lowercase character [ENDL] j = int with j = i [ENDL] loop while s [ j ] is a lowercase character and j is less than n increment j [ENDL] set ans [ p ] to result of s . substr of i and j - i then increment p [ENDL] set i to j - 1 [ENDL] l = int with l = 0 [ENDL] for i = 0 to p [ENDL] if ans [ i ] [ 0 ] is greater or equal to ' a ' [ENDL] if l equals 1 print ' ' [ENDL] print ans [ i ] [ENDL] set l to 1 [ENDL] else [ENDL] print ans [ i ] and ' ' [ENDL] set l to 0 [ENDL] print newline [ENDL] create string in", "c++": "string ans [ 111111 ] ; getline ( cin , s ) ; int main() { int n = s . size ( ) , p = 0 ; for ( int i = 0 ; i < n ; i ++ ) if ( s [ i ] == ' , ' || s [ i ] == ' . ' || s [ i ] == ' ! ' || s [ i ] == ' ? ' ) ans [ p ++ ] = \"   \" ; ans [ p - 1 ] [ 0 ] = s [ i ] ; else if ( s [ i ] >= ' a ' && s [ i ] <= ' z ' ) int j = i ; for ( ; s [ j ] >= ' a ' && s [ j ] <= ' z ' && j < n ; ) { j ++ ; } ans [ p ++ ] = s . substr ( i , j - i ) ; i = j - 1 ; int l = 0 ; } } for ( int i = 0 ; i < p ; i ++ ) if ( ans [ i ] [ 0 ] >= ' a ' ) if ( l == 1 ) { cout << '   ' ; } cout << ans [ i ] ; l = 1 ; else cout << ans [ i ] << '   ' ; l = 0 ; cout << endl ; } } string in ; return 0; }"}}
{"translation": {"en": "declare string n = \" \" [ENDL] read line and store it into in [ENDL] declare int m = length of in [ENDL] declare boolean se = false [ENDL] for i from 0 to m exclusive [ENDL] if in [ i ] > = ' a ' and in [ i ] < = ' z ' [ENDL] append n to in [ i ] [ENDL] else if in [ i ] = ' ' [ENDL] if n is equal to \" \" continue the loop from the start [ENDL] print n [ENDL] assign ' ' to n [ENDL] change se to true [ENDL] continue the loop from the start [ENDL] else [ENDL] if se is true and n = \" \" [ENDL] print in [ i ] [ENDL] set n to ' ' [ENDL] set se to false [ENDL] go to the start of the loop [ENDL] print n and in [ i ] [ENDL] change n to ' ' [ENDL] print n if if n ! = \" \" [ENDL] print a new line [ENDL] declare string variable s", "c++": "string n = \"  \" ; getline ( cin , in ) ; int main() { int m = in . size ( ) ; bool se = false ; for ( int i = 0 ; i < m ; i ++ ) if ( in [ i ] >= ' a ' && in [ i ] <= ' z ' ) n += in [ i ] ; else if ( in [ i ] == '   ' ) if ( n == \"   \" ) { continue ; } cout << n ; n = '   ' ; se = true ; continue ; else if ( se && n == \"   \" ) cout << in [ i ] ; n = '   ' ; se = false ; continue ; cout << n << in [ i ] ; } n = '   ' ; if ( n != \"   \" ) { cout << n ; } } } cout << endl ; string s ; return 0; }"}}
{"translation": {"en": "loop when read data from input into s [ENDL] declare string n = \" \" [ENDL] declare integer d = length of s [ENDL] for i = 0 to d exclusive incrementing i [ENDL] if s [ i ] is equal to ' ' [ENDL] if n [ n . length ( ) - 1 ] is not ' ' , incremen n by s [ i ] [ENDL] else if s [ i ] = ' . ' | | s [ i ] = ' , ' | | s [ i ] = ' ! ' | | s [ i ] = ' ? ' [ENDL] if n [ n . length ( ) - 1 ] is not ' ' [ENDL] append s [ i ] + ' ' to n [ENDL] else [ENDL] remove n . length ( ) - 1 elements from n [ENDL] append s [ i ] + ' ' to n [ENDL] else [ENDL] append s [ i ] to n [ENDL] print all elements of n sequentially [ENDL] print a new line [ENDL] declare isp with character c as argument , returning boolean", "c++": "int main() { while ( getline ( cin , s ) ) string n = \"  \" ; int d = s . length ( ) ; for ( int i = 0 ; i < d ; i ++ ) if ( s [ i ] == '   ' ) if ( n [ n . length ( ) - 1 ] != '   ' ) { n = n + s [ i ] ; } else if ( s [ i ] == ' . ' || s [ i ] == ' , ' || s [ i ] == ' ! ' || s [ i ] == ' ? ' ) if ( n [ n . length ( ) - 1 ] != '   ' ) n = n + s [ i ] + '   ' ; else n . erase ( n . length ( ) - 1 ) ; n = n + s [ i ] + '   ' ; else } n = n + s [ i ] ; for ( int i = 0 ; i < n . length ( ) ; i ++ ) cout << n [ i ] ; } } cout << endl ; bool isp ( char c ) } return 0; }"}}
{"translation": {"en": "if c is ' . ' or c is ' , ' or c is ' ! ' or c is ' ? ' , return true from function [ENDL] return false from function [ENDL] create string s [ENDL] read line from cin to s [ENDL] create integer len with len = size of s [ENDL] create string s2 [ENDL] create integer lenn with lenn = len - 1 [ENDL] for i = 0 to lenn exclusive [ENDL] if s [ i ] is ' ' and ( s [ i + 1 ] is ' ' or result of run isp with s [ i + 1 ] as argument is true ) , break current loop iteration [ENDL] increment s2 by s [ i ] [ENDL] if result of run isp with s [ i ] as argument is true and s [ i + 1 ] is not ' ' , increment s2 by ' ' [ENDL] increment s2 by s [ len - 1 ] [ENDL] print s2 print newline [ENDL] s = string", "c++": "if ( c == ' . ' or c == ' , ' or c == ' ! ' or c == ' ? ' ) return true ; return false ; string s ; } int main() { getline ( cin , s ) ; int len = s . size ( ) ; string s2 ; int lenn = len - 1 ; for ( int i = 0 ; i < lenn ; i ++ ) if ( s [ i ] == '   ' and ( s [ i + 1 ] == '   ' or isp ( s [ i + 1 ] ) ) ) continue ; s2 += s [ i ] ; if ( isp ( s [ i ] ) and s [ i + 1 ] != '   ' ) s2 += '   ' ; s2 += s [ len - 1 ] ; } cout << s2 << endl ; string s ; }"}}
{"translation": {"en": "p = integer [ENDL] ans = character array of size 111111 [ENDL] read s [ENDL] n = integer with n = s . size ( ) [ENDL] for i = 0 to n exclusive [ENDL] if s [ i ] > = a and s [ i ] < = z [ENDL] ans [ increment p ] = s [ i ] [ENDL] else if s [ i ] is , or s [ i ] is . or s [ i ] is ? or s [ i ] is ! [ENDL] for p and ans [ p - 1 ] is character ' ' , decrement p [ENDL] ans [ increment p ] = s [ i ] [ENDL] ans [ increment p ] = character ' ' [ENDL] else if ( s [ i ] is character ' ' [ENDL] if ans [ p - 1 ] is not character ' ' , ans [ increment p ] = s [ i ] [ENDL] print ans [ENDL] create const double PI = 3 . 1415926535897932384626433832795", "c++": "int p ; char ans [ 111111 ] ; getline ( cin , s ) ; int main() { int n = s . size ( ) ; for ( int i = 0 ; i < n ; i ++ ) if ( s [ i ] >= ' a ' && s [ i ] <= ' z ' ) ans [ p ++ ] = s [ i ] ; else if ( s [ i ] == ' , ' || s [ i ] == ' . ' || s [ i ] == ' ? ' || s [ i ] == ' ! ' ) for ( ; p && ans [ p - 1 ] == '   ' ; ) { p -- ; } ans [ p ++ ] = s [ i ] ; ans [ p ++ ] = '   ' ; else if ( s [ i ] == '   ' ) if ( ans [ p - 1 ] != '   ' ) { ans [ p ++ ] = s [ i ] ; } cout << ans << endl ; } } const double PI = 3.1415926535897932384626433832795 ; return 0; }"}}
{"translation": {"en": "declare long long mod = 1e9 + 7 [ENDL] function isp with char argument c that returns bool [ENDL] return true if c = ' . ' | | c = ' , ' | | c = ' ? ' | | c = ' ! ' and false otherwise [ENDL] change output decimal precision to 12 [ENDL] change output decimal format to fixed [ENDL] let s and ans be strings where ans = \" \" [ENDL] read s and loop further [ENDL] if length of s = 1 and isp of s [ 0 ] return true and size of ans > 0 [ENDL] assign s [ 0 ] to ans [ ans . size ( ) - 1 ] and append \" \" to ans [ENDL] else [ENDL] change ans to ans + s + \" \" [ENDL] create int sz = length of ans [ENDL] create integers last and i = 0 [ENDL] for i = 0 , last = 0 to sz - 1 exclusive [ENDL] if ans [ i ] = ' ' and isp ( ans [ i + 1 ] ) is true [ENDL] print ( substring of ans from position last to position i - last ) + ans [ i + 1 ] + \" \" , set value of last to i + 2 and increment i [ENDL] else if ans [ i ] = ' ' [ENDL] print substring of ans from position last with length of i - last + 1 , then change last to i + 1 [ENDL] else if isp ( ans [ i ] ) is true [ENDL] if ans [ i + 1 ] ! = ' ' [ENDL] print substring of ans from position last with length of i - last + 1 and \" \" , then change last to i + 1 [ENDL] else [ENDL] print substring of ans from position last with length of i - last + 1 and \" \" , then change last to i + 1 [ENDL] print substring of ans from position last to i and ' \\ n ' [ENDL] create integers n , dx", "c++": "long long mod = 1e9 + 7 ; bool isp ( char c ) return ( c == ' . ' || c == ' , ' || c == ' ? ' || c == ' ! ' ) ; cout . precision ( 12 ) ; } int main() { cout << fixed ; string s , ans = \"  \" ; while ( cin >> s ) if ( s . size ( ) == 1 && isp ( s [ 0 ] ) && ans . size ( ) ) ans [ ans . size ( ) - 1 ] = s [ 0 ] , ans += \"   \" ; else ans = ans + s + \"   \" ; int sz = ans . size ( ) ; } int last = 0 , i = 0 ; for ( i = 0 , last = 0 ; i < sz - 1 ; ++ i ) if ( ans [ i ] == '   ' && isp ( ans [ i + 1 ] ) ) cout << ans . substr ( last , i - last ) + ans [ i + 1 ] + \"   \" , last = i + 2 , i ++ ; else if ( ans [ i ] == '   ' ) cout << ans . substr ( last , i - last + 1 ) , last = i + 1 ; else if ( isp ( ans [ i ] ) ) if ( ans [ i + 1 ] != '   ' ) cout << ans . substr ( last , i - last + 1 ) + \"   \" , last = i + 1 ; else cout << ans . substr ( last , i - last + 1 ) , last = i + 1 ; cout << ans . substr ( last , i - last ) << ' \\n ' ; } int n , dx ; return 0; }"}}
{"translation": {"en": "read n read dx [ENDL] create string arrays a , b , c , d , with a size 1001 , b size 1001 , c size 1001 , d size 1001 [ENDL] create integer array t with size 1001 [ENDL] create integer sum with sum = 0 [ENDL] for i = 0 to n exclusive , read a [ i ] read b [ i ] read t [ i ] [ENDL] or i = 0 to n - 1 exclusive [ENDL] for j = i + 1 to n exclusive [ENDL] if t [ j ] - t [ i ] is greater than 0 and t [ j ] - t [ i ] is less than or equal to dx [ENDL] if a [ i ] is b [ j ] and b [ i ] is a [ j ] [ENDL] create integer flat with flat = 0 [ENDL] for k = 0 to sum exclusive [ENDL] if a [ i ] is c [ k ] and b [ i ] is d [ k ] or a [ i ] is d [ k ] and b [ i ] is c [ k ] [ENDL] set flat to 1 [ENDL] break loop [ENDL] if not flag [ENDL] set c [ sum ] to a [ i ] [ENDL] set d [ sum ] to b [ i ] [ENDL] increment sum [ENDL] print sum print newline [ENDL] for i = 0 to sum exclusive , print c [ i ] print \" \" print d [ i ] print newline [ENDL] let x and y be arrays of double of size 100000", "c++": "int main() { cin >> n >> dx ; string a [ 1001 ] , b [ 1001 ] , c [ 1001 ] , d [ 1001 ] ; int t [ 1001 ] ; int sum = 0 ; for ( int i = 0 ; i < n ; i ++ ) cin >> a [ i ] >> b [ i ] >> t [ i ] ; for ( int i = 0 ; i < n - 1 ; i ++ ) for ( int j = i + 1 ; j < n ; j ++ ) if ( t [ j ] - t [ i ] > 0 && t [ j ] - t [ i ] <= dx ) if ( a [ i ] == b [ j ] && b [ i ] == a [ j ] ) int flat = 0 ; for ( int k = 0 ; k < sum ; k ++ ) if ( a [ i ] == c [ k ] && b [ i ] == d [ k ] || a [ i ] == d [ k ] && b [ i ] == c [ k ] ) flat = 1 ; break ; if ( ! flat ) } c [ sum ] = a [ i ] ; d [ sum ] = b [ i ] ; sum ++ ; cout << sum << endl ; } } for ( int i = 0 ; i < sum ; i ++ ) { cout << c [ i ] << \"   \" << d [ i ] << endl ; } double x [ 100000 ] , y [ 100000 ] ; }"}}
{"translation": {"en": "n and t = integers [ENDL] define function sorty [ENDL] let i and k be integers [ENDL] for i = 0 to n exclusive [ENDL] create integer min with value x [ i ] [ENDL] set integer pos to i [ENDL] for k = i + 1 to n exclusive [ENDL] if x [ k ] is less than min [ENDL] set value of min to x [ k ] [ENDL] set value of pos to k [ENDL] invoke function swap with arguments x [ i ] and x [ pos ] [ENDL] invoke function swap with arguments y [ i ] and y [ pos ] [ENDL] read n and t [ENDL] let i be integer [ENDL] for i = 0 to n exclusive [ENDL] a and b = doubles [ENDL] read a and b [ENDL] x [ i ] = ( a - ( b / 2 . 0 ) ) [ENDL] y [ i ] = ( a + ( b / 2 . 0 ) ) [ENDL] call sorty [ENDL] create integer ct with value 2 [ENDL] for i = 0 to n - 1 exclusive [ENDL] create double h with value y [ i ] + t [ENDL] if x [ i + 1 ] > = h increment ct [ENDL] h = x [ i + 1 ] - t [ENDL] if y [ i ] is less than h increment ct [ENDL] print ct and a new line [ENDL] let a be an array of integers of length 10005", "c++": "int n , t ; void sorty ( ) int i , k ; for ( i = 0 ; i < n ; i ++ ) int min = x [ i ] ; int pos = i ; for ( k = i + 1 ; k < n ; k ++ ) if ( x [ k ] < min ) min = x [ k ] ; pos = k ; swap ( x [ i ] , x [ pos ] ) ; } } swap ( y [ i ] , y [ pos ] ) ; cin >> n >> t ; } } int main() { int i ; for ( i = 0 ; i < n ; i ++ ) double a , b ; cin >> a >> b ; x [ i ] = ( a - ( b / 2.0 ) ) ; y [ i ] = ( a + ( b / 2.0 ) ) ; sorty ( ) ; } int ct = 2 ; for ( i = 0 ; i < n - 1 ; i ++ ) double h = y [ i ] + t ; if ( x [ i + 1 ] >= h ) { ct ++ ; } h = x [ i + 1 ] - t ; if ( y [ i ] < h ) { ct ++ ; } cout << ct << endl ; } int a [ 10005 ] ; }"}}
{"translation": {"en": "create integers n and t [ENDL] read n and t [ENDL] multiply t by 2 [ENDL] mi and mx are integers with mi = 5000 and mx = 0 [ENDL] invoke function memset with arguments a , 0 and size of a [ENDL] while n - - [ENDL] let x and aa be integers [ENDL] read x and aa [ENDL] set integer ll to x * 2 + 4000 - aa ; [ENDL] set integer rr to x * 2 + 4000 + aa [ENDL] for i = ll to rr inclusive [ENDL] increase a [ i ] [ENDL] set mx to max of mx , i [ENDL] set value of mi to min of mi , i [ENDL] len and ans are integers with len = 0 and ans = 2 [ENDL] for integer i = mi to mx inclusive [ENDL] increase len [ENDL] if a [ i ] is true [ENDL] if len is greater than t [ENDL] increase ans by 2 [ENDL] else if len is equal to t [ENDL] increase ans by one [ENDL] len = 0 [ENDL] if len is greater than t [ENDL] increase ans by 2 [ENDL] else if len is equal to t [ENDL] increment ans [ENDL] print ans and a new line [ENDL] double constant PI is acos ( - 1 . 0 )", "c++": "int n , t ; int main() { cin >> n >> t ; t *= 2 ; int mi = 5000 , mx = 0 ; memset ( a , 0 , sizeof ( a ) ) ; while ( n -- ) int x , aa ; cin >> x >> aa ; int ll = x * 2 + 4000 - aa ; int rr = x * 2 + 4000 + aa ; for ( int i = ll ; i <= rr ; ++ i ) a [ i ] ++ ; mx = max ( mx , i ) ; mi = min ( mi , i ) ; int len = 0 , ans = 2 ; } } for ( int i = mi ; i <= mx ; ++ i ) len ++ ; if ( a [ i ] ) if ( len > t ) ans += 2 ; else if ( len == t ) ans ++ ; len = 0 ; if ( len > t ) } } ans += 2 ; else if ( len == t ) ans ++ ; cout << ans << endl ; const double Pi = acos ( - 1.0 ) ; return 0; }"}}
{"translation": {"en": "let n and s be integers [ENDL] read n and s [ENDL] create integers x and size [ENDL] create arrays of doubles start and end with size 1005 [ENDL] call memset with arguments start , 0 and sizeof ( start ) [ENDL] call memset with arguments end , 0 and sizeof ( end ) [ENDL] for integer i = 0 to n exclusive [ENDL] read x and size [ENDL] start [ i ] = x - size / 2 . 0 [ENDL] end [ i ] = x + size / 2 . 0 [ENDL] sort n elements of array start [ENDL] sort n elements of array end [ENDL] res is integer = 2 [ENDL] for integer i = 0 to n - 1 exclusive [ENDL] set double gap to start [ i + 1 ] - end [ i ] [ENDL] if s is less than gap increase res by 2 [ENDL] if s = gap increase res by 1 [ENDL] print res and \" \\ n \" [ENDL] let n , i and sum be integers with sum = 2", "c++": "int n , s ; int main() { cin >> n >> s ; int x , size ; double start [ 1005 ] , end [ 1005 ] ; memset ( start , 0 , sizeof ( start ) ) ; memset ( end , 0 , sizeof ( end ) ) ; for ( int i = 0 ; i < n ; i ++ ) cin >> x >> size ; start [ i ] = x - size / 2.0 ; end [ i ] = x + size / 2.0 ; sort ( start , start + n ) ; } sort ( end , end + n ) ; int res = 2 ; for ( int i = 0 ; i < n - 1 ; i ++ ) double gap = start [ i + 1 ] - end [ i ] ; if ( s < gap ) { res += 2 ; } if ( s == gap ) { res ++ ; } cout << res << \" \\n \" ; } int n , i , sum = 2 ; return 0; }"}}
{"translation": {"en": "let x , y and t be doubles [ENDL] a = array of doubles of length 2005 [ENDL] read n and t [ENDL] for i = 0 to n + n exclusive looping by steps of 2 [ENDL] read x and y [ENDL] a [ i ] = x - y * 0 . 5 [ENDL] a [ i + 1 ] = x + y * 0 . 5 [ENDL] sort a from the start to n + n [ENDL] b = array of doubles of length 2005 [ENDL] for i = 1 to n exclusive [ENDL] b [ i ] = a [ i * 2 ] - a [ i * 2 - 1 ] [ENDL] if b [ i ] is equal to t [ENDL] sum = sum + 1 [ENDL] else if b [ i ] is greater than t [ENDL] sum = sum + 2 [ENDL] print sum and a new line [ENDL] let x , d and c be doubles", "c++": "int main() { double x , y , t ; double a [ 2005 ] ; cin >> n >> t ; for ( i = 0 ; i < n + n ; i = i + 2 ) cin >> x >> y ; a [ i ] = x - y * 0.5 ; a [ i + 1 ] = x + y * 0.5 ; sort ( a , a + n + n ) ; } double b [ 2005 ] ; for ( i = 1 ; i < n ; i ++ ) b [ i ] = a [ i * 2 ] - a [ i * 2 - 1 ] ; if ( b [ i ] == t ) sum = sum + 1 ; else if ( b [ i ] > t ) sum = sum + 2 ; cout << sum << endl ; } double x , d , c ; return 0; }"}}
{"translation": {"en": "assign value 0 , n , t to the integer cnt [ENDL] arr is an array of double double pairs [ENDL] read n and t [ENDL] for i = 0 to n exclusive [ENDL] read x and d [ENDL] divide d by 2 [ENDL] arr [ i ] = make_pair ( x - d , x + d ) [ENDL] sort arr [ENDL] for integer i = 0 to n - 1 exclusive [ENDL] c = first element of arr [ i + 1 ] - second element [ENDL] decrease c by t [ENDL] if c = 0 [ENDL] increase cnt [ENDL] else if c is greater than 0 [ENDL] increase cnt by 2 [ENDL] print cnt + 2 and a new line [ENDL] create map mp from long long to long long", "c++": "int main() { int cnt = 0 , n , t ; pair < double , double > arr [ 1500 ] ; cin >> n >> t ; for ( int i = 0 ; i < n ; i ++ ) cin >> x >> d ; d /= 2 ; arr [ i ] = make_pair ( x - d , x + d ) ; sort ( arr , arr + n ) ; } for ( int i = 0 ; i < n - 1 ; i ++ ) c = arr [ i + 1 ] . first - arr [ i ] . second ; c -= t ; if ( c == 0 ) cnt ++ ; else if ( c > 0 ) cnt += 2 ; cout << cnt + 2 << endl ; } map < long long , long long > mp ; return 0; }"}}
{"translation": {"en": "create integers n , t , c with c = 2 [ENDL] read n read t [ENDL] create doubles x , y [ENDL] create pair array p with double , double , size n [ENDL] for i = 0 to n exclusive [ENDL] read x read y [ENDL] if x is greater than or equal to 0 [ENDL] set first element of p [ i ] to x - ( y / 2 ) [ENDL] set second element of p [ i ] to x + ( y / 2 ) [ENDL] else [ENDL] set first element of p [ i ] to x - ( y / 2 ) [ENDL] set second element of p [ i ] to x + ( y / 2 ) [ENDL] sort elements from p to p + n [ENDL] for i = 0 to n exclusive [ENDL] set x to first element of p [ i ] - second element of p [ i - 1 ] [ENDL] if x is t [ENDL] increment c [ENDL] else if x is greater than t [ENDL] increment c by 2 [ENDL] print c print newline [ENDL] let mp be a map from long long to long long", "c++": "int n , t , c = 2 ; int main() { cin >> n >> t ; double x , y ; pair < double , double > p [ n ] ; for ( int i = 0 ; i < n ; i ++ ) cin >> x >> y ; if ( x >= 0 ) p [ i ] . first = x - ( y / 2 ) ; p [ i ] . second = x + ( y / 2 ) ; else p [ i ] . first = x - ( y / 2 ) ; p [ i ] . second = x + ( y / 2 ) ; sort ( p , p + n ) ; } } for ( int i = 0 ; i < n ; i ++ ) x = p [ i ] . first - p [ i - 1 ] . second ; if ( x == t ) c ++ ; else if ( x > t ) c += 2 ; cout << c << endl ; } map < long long , long long > mp ; return 0; }"}}
{"translation": {"en": "integers n , t and c with c = 2 [ENDL] read n and t [ENDL] declare doubles called x and y [ENDL] p is array of pairs of double , double with size n [ENDL] for integer i = 0 to n exclusive [ENDL] read x and y [ENDL] if x > = 0 [ENDL] p [ i ] . first = x - ( y / 2 ) [ENDL] p [ i ] . second = x + ( y / 2 ) [ENDL] else [ENDL] p [ i ] . first = x - ( y / 2 ) [ENDL] p [ i ] . second = x + ( y / 2 ) [ENDL] sort array p [ENDL] for integer i = 0 to n exclusive [ENDL] x = p [ i ] . first - p [ i - 1 ] . second [ENDL] if x is equal to t [ENDL] increase c [ENDL] else if x is greater than t [ENDL] increase c by 2 [ENDL] print c and a new line [ENDL] create integers n , t", "c++": "int n , t , c = 2 ; int main() { cin >> n >> t ; double x , y ; pair < double , double > p [ n ] ; for ( int i = 0 ; i < n ; i ++ ) cin >> x >> y ; if ( x >= 0 ) p [ i ] . first = x - ( y / 2 ) ; p [ i ] . second = x + ( y / 2 ) ; else p [ i ] . first = x - ( y / 2 ) ; p [ i ] . second = x + ( y / 2 ) ; sort ( p , p + n ) ; } } for ( int i = 0 ; i < n ; i ++ ) x = p [ i ] . first - p [ i - 1 ] . second ; if ( x == t ) c ++ ; else if ( x > t ) c += 2 ; cout << c << endl ; } int n , t ; return 0; }"}}
{"translation": {"en": "create double vector coord [ENDL] read n read t [ENDL] for i = 0 to n exclusive [ENDL] create integers x , a [ENDL] read x read [ENDL] add element 1 . 0 * x - 1 . 0 * a / 2 to end of coord [ENDL] add element 1 . 0 * x + 1 . 0 * a / 2 to end of coord [ENDL] sort elements from beginning of coord to end of coord [ENDL] create integer ans with ans = 2 [ENDL] for i = 1 to size of coord - 1 exclusive , incrementing i by 2 [ENDL] create double x1 , x2 with x1 = coord [ i ] , x2 = coord [ i + 1 ] [ENDL] if x2 - x1 is less than t [ENDL] break current loop iteration [ENDL] else if x2 - x1 is t [ENDL] increment ans by 1 [ENDL] else [ENDL] increment ans by 2 [ENDL] print ans print \" \\ n \" [ENDL] create integers n and t", "c++": "vector < double > coord ; cin >> n >> t ; int main() { for ( int i = 0 ; i < n ; ++ i ) int x , a ; cin >> x >> a ; coord . push_back ( 1.0 * x - 1.0 * a / 2 ) ; coord . push_back ( 1.0 * x + 1.0 * a / 2 ) ; sort ( coord . begin ( ) , coord . end ( ) ) ; } int ans = 2 ; for ( int i = 1 ; i < coord . size ( ) - 1 ; i += 2 ) double x1 = coord [ i ] , x2 = coord [ i + 1 ] ; if ( x2 - x1 < t ) continue ; else if ( x2 - x1 == t ) ans += 1 ; else ans += 2 ; cout << ans << \" \\n \" ; } int n , t ; }"}}
{"translation": {"en": "coord = vector of doubles [ENDL] read n and t [ENDL] for integer i = 0 to n exclusive [ENDL] declare integers called x and a [ENDL] read x and a [ENDL] push 1 . 0 * x - 1 . 0 * a / 2 into coord [ENDL] push 1 . 0 * x + 1 . 0 * a / 2 into coord [ENDL] sort coord [ENDL] create integer ans with value 2 [ENDL] for i = 1 to the length of coord - 1 exclusive with increments of 2 [ENDL] let double x1 = coord [ i ] and double x2 = coord [ i + 1 ] [ENDL] if x2 - x1 is less than t [ENDL] go to the start of the loop [ENDL] else if x2 - x1 is equal to t [ENDL] increase ans by 1 [ENDL] else [ENDL] increase ans by 2 [ENDL] print ans and \" \\ n \" [ENDL] mod = int with mod = 1e9 + 7", "c++": "vector < double > coord ; cin >> n >> t ; int main() { for ( int i = 0 ; i < n ; ++ i ) int x , a ; cin >> x >> a ; coord . push_back ( 1.0 * x - 1.0 * a / 2 ) ; coord . push_back ( 1.0 * x + 1.0 * a / 2 ) ; sort ( coord . begin ( ) , coord . end ( ) ) ; } int ans = 2 ; for ( int i = 1 ; i < coord . size ( ) - 1 ; i += 2 ) double x1 = coord [ i ] , x2 = coord [ i + 1 ] ; if ( x2 - x1 < t ) continue ; else if ( x2 - x1 == t ) ans += 1 ; else ans += 2 ; cout << ans << \" \\n \" ; } int mod = ( 1e9 ) + 7 ; }"}}
{"translation": {"en": "n = int [ENDL] N = const int with N = 50 [ENDL] p , t = int array of size N each [ENDL] in function compare taking int a , int b and returning bool [ENDL] if p [ a ] > p [ b ] return 1 [ENDL] if p [ a ] is p [ b ] and t [ a ] < = t [ b ] return 1 [ENDL] in function eq taking int a , int b and returning bool [ENDL] if p [ a ] is p [ b ] and t [ a ] is t [ b ] return 1 [ENDL] k = int [ENDL] read n then k [ENDL] a = int array of size n [ENDL] for i = 0 to n [ENDL] read p [ i ] then t [ i ] [ENDL] set a [ i ] to i [ENDL] call stable_sort on a , a + n , compare [ENDL] c = int with c = 1 [ENDL] i = int with i = k - 2 [ENDL] loop while i > = 0 and eq of a [ k - 1 ] , a [ i ] [ENDL] increment c [ENDL] decrement i [ENDL] set to k [ENDL] loop while i < n and eq of a [ k - 1 ] , a [ i ] [ENDL] increment c [ENDL] increment i [ENDL] print c [ENDL] create ints n , i , p , t , and k and int array a of size 111111", "c++": "int n ; const int N = 50 ; int p [ N ] , t [ N ] ; bool compare ( int a , int b ) if ( p [ a ] > p [ b ] ) return 1 ; if ( p [ a ] == p [ b ] && t [ a ] <= t [ b ] ) return 1 ; bool eq ( int a , int b ) return 0; } if ( p [ a ] == p [ b ] && t [ a ] == t [ b ] ) return 1 ; int k ; return 0; } int main() { cin >> n >> k ; int a [ n ] ; for ( int i = 0 ; i < n ; i ++ ) cin >> p [ i ] >> t [ i ] ; a [ i ] = i ; stable_sort ( a , a + n , compare ) ; } int c = 1 ; int i = k - 2 ; while ( i >= 0 && eq ( a [ k - 1 ] , a [ i ] ) ) c ++ ; i -- ; i = k ; } while ( i < n && eq ( a [ k - 1 ] , a [ i ] ) ) c ++ ; i ++ ; cout << c << endl ; } int n , i , a [ 111111 ] , p , t , k ; }"}}
{"translation": {"en": "read n and k [ENDL] for i = 0 to n exclusive [ENDL] read p and t [ENDL] increment a [ p * 50 - t ] [ENDL] set t to 10000 [ENDL] while a [ t ] is less than k , set k to k - a [ t - - ] [ENDL] print a [ t ] [ENDL] i , j , n , a , k = int", "c++": "cin >> n >> k ; int main() { for ( i = 0 ; i < n ; i ++ ) cin >> p >> t ; a [ p * 50 - t ] ++ ; t = 10000 ; } while ( a [ t ] < k ) k -= a [ t -- ] ; cout << a [ t ] << endl ; int i , j , n , a , k ; return 0; }"}}
{"translation": {"en": "arr = two dimensional int array of sizes 55 and 2 [ENDL] read n then k [ENDL] for i = 0 to n [ENDL] for j = 0 to 2 read arr [ i ] [ j ] [ENDL] for i = 0 to n [ENDL] for j = 0 to n [ENDL] if arr [ i ] [ 0 ] > arr [ j ] [ 0 ] [ENDL] tmp = int with tmp = arr [ i ] [ 0 ] [ENDL] set arr [ i ] [ 0 ] to arr [ j ] [ 0 ] [ENDL] set arr [ j ] [ 0 ] to tmp [ENDL] set tmp to arr [ i ] [ 1 ] [ENDL] set arr [ i ] [ 1 ] to arr [ j ] [ 1 ] [ENDL] set arr [ j ] [ 1 ] to tmp [ENDL] for i = 0 to n [ENDL] for j = 0 to n [ENDL] if arr [ i ] [ 0 ] is arr [ j ] [ 0 ] [ENDL] if arr [ i ] [ 1 ] < arr [ j ] [ 1 ] [ENDL] tmp = int with tmp = arr [ i ] [ 1 ] [ENDL] set arr [ i ] [ 1 ] to arr [ j ] [ 1 ] [ENDL] set arr [ j ] [ 1 ] to tmp [ENDL] p = int with p = 0 and frr = int array of size 55 [ENDL] for i = 0 to n set frr [ i ] to 0 [ENDL] for i = 0 to n [ENDL] for j = 0 to n [ENDL] if arr [ i ] [ 0 ] is arr [ j ] [ 0 ] and arr [ i ] [ 1 ] is arr [ j ] [ 1 ] increment frr [ p ] [ENDL] increment p [ENDL] print frr [ k - 1 ] [ENDL] create new integers n and k", "c++": "int main() { int arr [ 55 ] [ 2 ] ; cin >> n >> k ; for ( i = 0 ; i < n ; i ++ ) for ( j = 0 ; j < 2 ; j ++ ) { cin >> arr [ i ] [ j ] ; } for ( i = 0 ; i < n ; i ++ ) } for ( j = 0 ; j < n ; j ++ ) if ( arr [ i ] [ 0 ] > arr [ j ] [ 0 ] ) int tmp = arr [ i ] [ 0 ] ; arr [ i ] [ 0 ] = arr [ j ] [ 0 ] ; arr [ j ] [ 0 ] = tmp ; tmp = arr [ i ] [ 1 ] ; arr [ i ] [ 1 ] = arr [ j ] [ 1 ] ; arr [ j ] [ 1 ] = tmp ; for ( i = 0 ; i < n ; i ++ ) } } } for ( j = 0 ; j < n ; j ++ ) if ( arr [ i ] [ 0 ] == arr [ j ] [ 0 ] ) if ( arr [ i ] [ 1 ] < arr [ j ] [ 1 ] ) int tmp = arr [ i ] [ 1 ] ; arr [ i ] [ 1 ] = arr [ j ] [ 1 ] ; arr [ j ] [ 1 ] = tmp ; int frr [ 55 ] , p = 0 ; } } } } for ( i = 0 ; i < n ; i ++ ) { frr [ i ] = 0 ; } for ( i = 0 ; i < n ; i ++ ) for ( j = 0 ; j < n ; j ++ ) if ( arr [ i ] [ 0 ] == arr [ j ] [ 0 ] && arr [ i ] [ 1 ] == arr [ j ] [ 1 ] ) { frr [ p ] ++ ; } p ++ ; } cout << frr [ k - 1 ] << endl ; } int n , k ; return 0; }"}}
{"translation": {"en": "read n and k [ENDL] create an array of int int pairs A witn n + 1 element [ENDL] for integer i = 1 to n inclusive [ENDL] read input to A [ i ] . first and A [ i ] . second [ENDL] invert the sign of A [ i ] . first [ENDL] sort A from position 1 to n + 1 [ENDL] create integer ans = 0 [ENDL] for i = 1 to n inclusive incrementing i [ENDL] if A [ i ] = A [ k ] , increment ans by one [ENDL] print ans and ' \\ n ' [ENDL] i , j , n , a , k = int", "c++": "int main() { cin >> n >> k ; pair < int , int > A [ n + 1 ] ; for ( int i = 1 ; i <= n ; i ++ ) cin >> A [ i ] . first >> A [ i ] . second ; A [ i ] . first *= - 1 ; sort ( A + 1 , A + n + 1 ) ; } int ans = 0 ; for ( int i = 1 ; i <= n ; i ++ ) if ( A [ i ] == A [ k ] ) ans ++ ; cout << ans << ' \\n ' ; int i , j , n , a , k ; return 0; }"}}
{"translation": {"en": "arr = two dimensional int array of sizes 55 and 2 [ENDL] read n then k [ENDL] for i = 0 to n [ENDL] for j = 0 to 2 read arr [ i ] [ j ] [ENDL] for i = 0 to n [ENDL] for j = 0 to n [ENDL] if arr [ i ] [ 0 ] is arr [ j ] [ 0 ] [ENDL] tmp = int with tmp = arr [ i ] [ 0 ] [ENDL] set arr [ i ] [ 0 ] to arr [ j ] [ 0 ] [ENDL] set arr [ j ] [ 0 ] to tmp [ENDL] set tmp to arr [ i ] [ 1 ] [ENDL] set arr [ i ] [ 1 ] to arr [ j ] [ 1 ] [ENDL] set arr [ j ] [ 1 ] to tmp [ENDL] for i = 0 to n [ENDL] for j = 0 to n [ENDL] if arr [ i ] [ 0 ] is arr [ j ] [ 0 ] [ENDL] if arr [ i ] [ 1 ] < arr [ j ] [ 1 ] [ENDL] tmp = int with tmp = arr [ i ] [ 1 ] [ENDL] set arr [ i ] [ 1 ] to arr [ j ] [ 1 ] [ENDL] set arr [ j ] [ 1 ] to tmp [ENDL] p = int with p = 0 and frr = int array of size 55 [ENDL] for i = 0 to n set frr [ i ] to 0 [ENDL] for i = 0 to n [ENDL] for j = 0 to n [ENDL] if arr [ i ] [ 0 ] is arr [ j ] [ 0 ] and arr [ i ] [ 1 ] is arr [ j ] [ 1 ] incrment frr [ p ] [ENDL] increment p [ENDL] print frr [ k - 1 ] [ENDL] create ints i , j , n , k , ans1 , ans2 , and c and int arrays a of size 10000 and b of size 10000", "c++": "int main() { int arr [ 55 ] [ 2 ] ; cin >> n >> k ; for ( i = 0 ; i < n ; i ++ ) for ( j = 0 ; j < 2 ; j ++ ) { cin >> arr [ i ] [ j ] ; } for ( i = 0 ; i < n ; i ++ ) } for ( j = 0 ; j < n ; j ++ ) if ( arr [ i ] [ 0 ] > arr [ j ] [ 0 ] ) int tmp = arr [ i ] [ 0 ] ; arr [ i ] [ 0 ] = arr [ j ] [ 0 ] ; arr [ j ] [ 0 ] = tmp ; tmp = arr [ i ] [ 1 ] ; arr [ i ] [ 1 ] = arr [ j ] [ 1 ] ; arr [ j ] [ 1 ] = tmp ; for ( i = 0 ; i < n ; i ++ ) } } } for ( j = 0 ; j < n ; j ++ ) if ( arr [ i ] [ 0 ] == arr [ j ] [ 0 ] ) if ( arr [ i ] [ 1 ] < arr [ j ] [ 1 ] ) int tmp = arr [ i ] [ 1 ] ; arr [ i ] [ 1 ] = arr [ j ] [ 1 ] ; arr [ j ] [ 1 ] = tmp ; int frr [ 55 ] , p = 0 ; } } } } for ( i = 0 ; i < n ; i ++ ) { frr [ i ] = 0 ; } for ( i = 0 ; i < n ; i ++ ) for ( j = 0 ; j < n ; j ++ ) if ( arr [ i ] [ 0 ] == arr [ j ] [ 0 ] && arr [ i ] [ 1 ] == arr [ j ] [ 1 ] ) { frr [ p ] ++ ; } p ++ ; } cout << frr [ k - 1 ] << endl ; } int a [ 10000 ] , b [ 10000 ] , i , j , n , k , ans1 , ans2 , c ; }"}}
{"translation": {"en": "read n and k [ENDL] Enter integers for every index of arrays a and b [ENDL] for i = 0 to n exclusive [ENDL] for j = n - 1 to i exclusive [ENDL] if a [ j ] is greater than a [ j - 1 ] [ENDL] swap the values of a [ j ] and a [ j - 1 ] [ENDL] swap the values of b [ j ] and b [ j - 1 ] [ENDL] if a [ j ] is equal to a [ j - 1 ] and b [ j ] is less than a [ j - 1 ] , swap the values of b [ j ] and b [ j - 1 ] [ENDL] set ans1 to a [ k - 1 ] [ENDL] set ans2 to b [ k - 1 ] [ENDL] for i = 0 and c = 0 to n exclusive [ENDL] if ans1 is equal to a [ i ] and ans2 is equal to b [ i ] , increment c + + [ENDL] print c [ENDL] declare const int N = 50 + 5", "c++": "int main() { cin >> n >> k ; for ( i = 0 ; i < n ; i ++ ) cin >> a [ i ] >> b [ i ] ; for ( i = 0 ; i < n ; i ++ ) for ( j = n - 1 ; j > i ; j -- ) if ( a [ j ] > a [ j - 1 ] ) swap ( a [ j ] , a [ j - 1 ] ) ; swap ( b [ j ] , b [ j - 1 ] ) ; if ( a [ j ] == a [ j - 1 ] && b [ j ] < b [ j - 1 ] ) swap ( b [ j ] , b [ j - 1 ] ) ; } ans1 = a [ k - 1 ] ; } } ans2 = b [ k - 1 ] ; for ( i = 0 , c = 0 ; i < n ; i ++ ) if ( ans1 == a [ i ] && ans2 == b [ i ] ) c ++ ; cout << c << endl ; } const int N = 50 + 5 ; }"}}
{"translation": {"en": "create integers n , k and res [ENDL] create an array of int - int pairs a with size N [ENDL] declare boolean function cmp that takes pairs of int - int a and b as an arguments [ENDL] if a . first is greater than b . first [ENDL] return true [ENDL] else if a . first is equal to b . first [ENDL] if a . second is less than b . second , return true [ENDL] return false [ENDL] else [ENDL] return false [ENDL] define function Input [ENDL] read n and k [ENDL] for i from 1 to n inclusive , read input to a [ i ] . first and a [ i ] . second [ENDL] sort a from position 1 to n + 1 using cmp as a comparator method [ENDL] function Solve [ENDL] declare int problems = a [ k ] . first and penalty = a [ k ] . second [ENDL] for i from 1 to n inclusive [ENDL] if a [ i ] . first = problems and a [ i ] . second is equal to penalty , increment res [ENDL] print res and ' \\ n ' [ENDL] call Input ( ) [ENDL] call Solve ( ) [ENDL] create int array a of size 100 containing array of size 100", "c++": "int n , k , res ; pair < int , int > a [ N ] ; bool cmp ( pair < int , int > a , pair < int , int > b ) if ( a . first > b . first ) return true ; else if ( a . first == b . first ) if ( a . second < b . second ) return true ; return false ; else return false ; void Input ( ) } cin >> n >> k ; for ( int i = 1 ; i <= n ; i ++ ) cin >> a [ i ] . first >> a [ i ] . second ; sort ( a + 1 , a + n + 1 , cmp ) ; void Solve ( ) } int problems = a [ k ] . first , penalty = a [ k ] . second ; for ( int i = 1 ; i <= n ; i ++ ) if ( a [ i ] . first == problems && a [ i ] . second == penalty ) res ++ ; cout << res << ' \\n ' ; } Input ( ) ; } int main() { Solve ( ) ; int a [ 100 ] [ 100 ] ; return 0; }"}}
{"translation": {"en": "declare margesort taking in ints l and r and int arrays p and t [ENDL] declare marge taking in int l , m , and r and int arrays p and t [ENDL] let ints n and k and int arrays p of size 100 and t of size 100 [ENDL] read n and k [ENDL] for i - 0 to n exclusive [ENDL] read p [ i ] and t [ i ] [ENDL] increment a [ p [ i ] ] [ t [ i ] ] [ENDL] call margesort with arguments p , t , 0 , and n - 1 [ENDL] print a [ p [ k - 1 ] ] [ t [ k - 1 ] ] [ENDL] decalre margesort taking in ints l and r and int arrays p and t [ENDL] if l is less than r [ENDL] let int m = ( l + r - 1 ) / 2 [ENDL] call margesort ( p , t , l , m ) [ENDL] call margesort ( p , t , m + 1 , r ) [ENDL] call margesort with arguments p , t , l , m , and r [ENDL] declare marge taking in ints l , m , and r and int arrays p and t [ENDL] let ints i , j , and k [ENDL] create integer n1 = m - l + 1 [ENDL] let integer n2 = r - m [ENDL] create int arrays L of size n1 , R of size n2 , ll of size n1 , and rr of size n2 [ENDL] for i = 0 to n1 exclusive [ENDL] set L [ i ] to p [ l + i ] [ENDL] set ll [ i ] to t [ l + i ] [ENDL] for j = 0 to n2 exclusive [ENDL] set R [ j ] to p [ m + 1 + j ] [ENDL] set rr [ j ] to t [ m + 1 + j ] [ENDL] set i to 0 [ENDL] set j to 0 [ENDL] set k to l [ENDL] while i is less than n1 and j is less than n2 [ENDL] if L [ i ] is greater than R [ j ] [ENDL] set p [ k ] to L [ i ] [ENDL] set t [ k ] to ll [ i ] [ENDL] increase i by 1 [ENDL] else if L [ i ] is equal to R [ j ] and ll [ i ] is less than or equal to rr [ j ] [ENDL] set p [ k ] to L [ i ] [ENDL] set t [ k ] to ll [ i ] [ENDL] increment i [ENDL] else [ENDL] set p [ k ] to R [ j ] [ENDL] set t [ k ] to rr [ j ] [ENDL] increment j [ENDL] increase k by 1 [ENDL] while i is less than n1 [ENDL] set p [ k ] to L [ i ] [ENDL] set t [ k ] to ll [ i ] [ENDL] increment i [ENDL] increment k [ENDL] while j is less than n2 [ENDL] set p [ k ] to R [ j ] [ENDL] set t [ k ] to rr [ j ] [ENDL] increment j [ENDL] add 1 to k [ENDL] declare integers n , k", "c++": "void margesort ( int p [ ] , int t [ ] , int l , int r ) ; void marge ( int p [ ] , int t [ ] , int l , int m , int r ) ; int n , k , p [ 100 ] , t [ 100 ] ; int main() { cin >> n >> k ; for ( int i = 0 ; i < n ; i ++ ) cin >> p [ i ] >> t [ i ] ; a [ p [ i ] ] [ t [ i ] ] ++ ; margesort ( p , t , 0 , n - 1 ) ; } cout << a [ p [ k - 1 ] ] [ t [ k - 1 ] ] << endl ; void margesort ( int p [ ] , int t [ ] , int l , int r ) return 0; } if ( l < r ) int m = ( l + r - 1 ) / 2 ; margesort ( p , t , l , m ) ; margesort ( p , t , m + 1 , r ) ; marge ( p , t , l , m , r ) ; void marge ( int p [ ] , int t [ ] , int l , int m , int r ) } } int i , j , k ; int n1 = m - l + 1 ; int n2 = r - m ; int L [ n1 ] , R [ n2 ] , ll [ n1 ] , rr [ n2 ] ; for ( i = 0 ; i < n1 ; i ++ ) L [ i ] = p [ l + i ] ; ll [ i ] = t [ l + i ] ; for ( j = 0 ; j < n2 ; j ++ ) } R [ j ] = p [ m + 1 + j ] ; rr [ j ] = t [ m + 1 + j ] ; i = 0 ; } j = 0 ; k = l ; while ( i < n1 && j < n2 ) if ( L [ i ] > R [ j ] ) p [ k ] = L [ i ] ; t [ k ] = ll [ i ] ; i ++ ; else if ( L [ i ] == R [ j ] && ll [ i ] <= rr [ j ] ) p [ k ] = L [ i ] ; t [ k ] = ll [ i ] ; i ++ ; else p [ k ] = R [ j ] ; t [ k ] = rr [ j ] ; j ++ ; k ++ ; } while ( i < n1 ) } p [ k ] = L [ i ] ; t [ k ] = ll [ i ] ; i ++ ; k ++ ; while ( j < n2 ) } p [ k ] = R [ j ] ; t [ k ] = rr [ j ] ; j ++ ; k ++ ; int n , k ; } }"}}
{"translation": {"en": "read n read k [ENDL] declare pair of integer , integer array a size 50 [ENDL] for i = 0 to n exclusive [ENDL] read first element for a [ i ] , second element of a [ i ] [ENDL] let first element of a [ i ] be first element of a [ i ] * - 1 [ENDL] sort elements from a to a + n [ENDL] print result of run count with a , a + n , a [ k - 1 ] as arguments , newline [ENDL] return 0 from function [ENDL] n , i , p , t , k = int and a = int array of size 111111", "c++": "int main() { cin >> n >> k ; pair < int , int > a [ 50 ] ; for ( int i = 0 ; i < n ; i ++ ) cin >> a [ i ] . first >> a [ i ] . second ; a [ i ] . first *= - 1 ; sort ( a , a + n ) ; } cout << count ( a , a + n , a [ k - 1 ] ) << endl ; return ( 0 ) ; int n , i , a [ 111111 ] , p , t , k ; }"}}
{"translation": {"en": "read n then k [ENDL] for i = 0 to n [ENDL] read p then t [ENDL] increment a [ p * 50 - t ] [ENDL] set t to 2500 [ENDL] loop while a [ t ] is less than k decrement k by a [ t ] then decrement t [ENDL] print a [ t ] [ENDL] create integers n , m , i , j , k , a , b , create integer array x with size 51", "c++": "cin >> n >> k ; int main() { for ( i = 0 ; i < n ; i ++ ) cin >> p >> t ; a [ p * 50 - t ] ++ ; t = 2500 ; } while ( a [ t ] < k ) k -= a [ t -- ] ; cout << a [ t ] << endl ; int n , m , x [ 51 ] , i , j , k , a , b ; return 0; }"}}
{"translation": {"en": "while read n read m [ENDL] set j to 0 [ENDL] for i = 0 to n exclusive [ENDL] read a read b [ENDL] set x [ i ] to a * 50 - b [ENDL] sort elements from x to x + n [ENDL] for i = 0 to n exclusive [ENDL] if x [ i ] is x [ n - m ] , increment j [ENDL] print j print newline [ENDL] declare int variables n and d", "c++": "int main() { while ( cin >> n >> m ) j = 0 ; for ( i = 0 ; i < n ; i ++ ) cin >> a >> b ; x [ i ] = a * 50 - b ; sort ( x , x + n ) ; } for ( i = 0 ; i < n ; i ++ ) if ( x [ i ] == x [ n - m ] ) { j ++ ; } cout << j << endl ; } int n , d ; } return 0; }"}}
{"translation": {"en": "declare double variable a [ENDL] read n , a and d [ENDL] create an arrays of long longs t and v with n elements [ENDL] loop i from 0 to n exclusive , read t [ i ] and v [ i ] [ENDL] declare long double T = 0 [ENDL] loop i from 0 to n exclusive [ENDL] if v [ i ] * v [ i ] > = 2 * a * d [ENDL] T = max of t [ i ] + sqrt ( ( 2 . 0 * d ) / a and T [ENDL] else [ENDL] create long double t1 = v [ i ] / a [ENDL] create long double s = ( v [ i ] * v [ i ] ) / ( 2 * a ) [ENDL] T = max of T and t [ i ] + t1 + ( ( d - s ) / v [ i ] ) [ENDL] set output decimal precision to 12 and print T [ENDL] maxn = const int with maxn = 2e5 + 10", "c++": "int main() { double a ; cin >> n >> a >> d ; long long t [ n ] , v [ n ] ; for ( int i = 0 ; i < n ; i ++ ) cin >> t [ i ] >> v [ i ] ; long double T = 0 ; for ( int i = 0 ; i < n ; i ++ ) if ( v [ i ] * v [ i ] >= 2 * a * d ) T = max ( ( long double ) t [ i ] + sqrt ( ( 2.0 * d ) / a ) , T ) ; else long double t1 = v [ i ] / a ; long double s = ( v [ i ] * v [ i ] ) / ( 2 * a ) ; T = max ( T , ( long double ) t [ i ] + t1 + ( ( d - s ) / v [ i ] ) ) ; cout << setprecision ( 12 ) << T << endl ; } const int maxn = 2e5 + 10 ; } }"}}
{"translation": {"en": "n , a , b = int and arr = int array of size maxn [ENDL] read n then a then b [ENDL] read n values into arr [ENDL] sort arr [ENDL] print arr [ b ] - arr [ b - 1 ] [ENDL] n = integer with 0", "c++": "int arr [ maxn ] , n , a , b ; cin >> n >> a >> b ; int main() { for ( int i = 0 ; i < n ; i ++ ) cin >> arr [ i ] ; sort ( arr , arr + n ) ; cout << arr [ b ] - arr [ b - 1 ] << endl ; int n = 0 ; }"}}
{"translation": {"en": "a = integer with 0 [ENDL] b = integer with 0 [ENDL] Read n [ENDL] Read a [ENDL] Read b [ENDL] h = array of 2000 integers [ENDL] Read n values into array h [ENDL] sort array elements of h in ascending order [ENDL] print h [ b ] - h [ b - 1 ] and a new line [ENDL] create integer array arr of length 2005", "c++": "int main() { int a = 0 ; int b = 0 ; cin >> n ; cin >> a ; cin >> b ; int h [ 2000 ] ; for ( int i = 0 ; i < n ; i ++ ) cin >> h [ i ] ; sort ( h , h + n ) ; cout << h [ b ] - h [ b - 1 ] << endl ; int arr [ 2005 ] ; return 0; }"}}
{"translation": {"en": "create integers a , b , and c [ENDL] read a , b , and c [ENDL] for i = 0 to a exclusive , read arr [ i ] [ENDL] sort array arr [ENDL] create integer mn = arr [ c - 1 ] [ENDL] create integer mx = arr [ c ] - 1 [ENDL] print the max of 0 and mx - mn + 1 [ENDL] n , a , b , i = long long int", "c++": "int a , b , c ; int main() { cin >> a >> b >> c ; for ( int i = 0 ; i < a ; i ++ ) { cin >> arr [ i ] ; } sort ( arr , arr + a ) ; int mn = arr [ c - 1 ] ; int mx = arr [ c ] - 1 ; cout << max ( 0 , mx - mn + 1 ) << endl ; long long int n , a , b , i ; }"}}
{"translation": {"en": "read n then a then b [ENDL] p = long long int array of size n [ENDL] read n values into p [ENDL] sort p [ENDL] x = long long int with x = p [ n - a ] - p [ b - 1 ] [ENDL] print x [ENDL] create ints n , a and b", "c++": "int main() { cin >> n >> a >> b ; long long int p [ n ] ; for ( i = 0 ; i < n ; i ++ ) cin >> p [ i ] ; sort ( p , p + n ) ; long long int x = p [ n - a ] - p [ b - 1 ] ; cout << x << endl ; int n , a , b ; }"}}
{"translation": {"en": "declare integer array x with 2005 elements [ENDL] read n , a and b [ENDL] for i from 0 to n exclusive , read input to x [ i ] [ENDL] sort x [ENDL] print x [ b ] - x [ b - 1 ] and ' \\ n ' [ENDL] create integers n , a , b", "c++": "int x [ 2005 ] ; cin >> n >> a >> b ; int main() { for ( int i = 0 ; i < n ; i ++ ) cin >> x [ i ] ; sort ( x , x + n ) ; cout << x [ b ] - x [ b - 1 ] << ' \\n ' ; int n , a , b ; }"}}
{"translation": {"en": "read n read a read b [ENDL] create integer array p with size n [ENDL] for i = 0 to n exclusive , read p [ i ] [ENDL] sort elements from p to p + n [ENDL] create long long count with count = 0 [ENDL] if p [ b - 1 ] is not p [ b ] [ENDL] increment count by p [ b ] - p [ b - 1 ] [ENDL] print count print newline [ENDL] else [ENDL] print \" 0 \" print newline [ENDL] create string T", "c++": "int main() { cin >> n >> a >> b ; int p [ n ] ; for ( int i = 0 ; i < n ; i ++ ) { cin >> p [ i ] ; } sort ( p , p + n ) ; long long count = 0 ; if ( p [ b - 1 ] != p [ b ] ) count += p [ b ] - p [ b - 1 ] ; cout << count << endl ; else cout << \" 0 \" << endl ; string T ; } return 0; }"}}
{"translation": {"en": "create long long N , K , M , A , B , C [ 2005 ] , D , sum [ENDL] read N , A and B [ENDL] for i = 1 to N inclusive , read C [ i ] [ENDL] sort elements between C + 1 and C + N + 1 [ENDL] print C [ B + 1 ] - C [ B ] and a newline [ENDL] create ints n , a , b and way", "c++": "long long N , K , M , A , B , C [ 2005 ] , D , sum ; cin >> N >> A >> B ; int main() { for ( int i = 1 ; i <= N ; i ++ ) { cin >> C [ i ] ; } sort ( C + 1 , C + N + 1 ) ; cout << C [ B + 1 ] - C [ B ] << ' \\n ' ; int n , a , b , way ; }"}}
{"translation": {"en": "read n , a and b [ENDL] create int pointer * chore to the new array of int with n elements [ENDL] loop i from 0 to n exclusive , read chore [ i ] [ENDL] sort chore [ENDL] declare int j = n - 1 [ENDL] decrement j while j > n - a [ENDL] if chore [ j ] = chore [ j - 1 ] [ENDL] print 0 and \" \\ n \" [ENDL] else [ENDL] print chore [ j ] - chore [ j - 1 ] and \" \\ n \" [ENDL] define int constant maxn , set to 5e3 + 5", "c++": "int main() { cin >> n >> a >> b ; int * chore = new int [ n ] ; for ( int i = 0 ; i < n ; i ++ ) cin >> chore [ i ] ; sort ( chore , chore + n ) ; int j = n - 1 ; while ( j > n - a ) { j -- ; } if ( chore [ j ] == chore [ j - 1 ] ) cout << 0 << \" \\n \" ; else cout << chore [ j ] - chore [ j - 1 ] << \" \\n \" ; const int maxn = 5e3 + 5 ; return 0; }"}}
{"translation": {"en": "define unsigned integer constant base , set to 311 [ENDL] define unsigned integer array A to be of maxn elements [ENDL] define integer N [ENDL] read N [ENDL] define integers a and b [ENDL] read a , b [ENDL] for int i from 1 to N by 1 , read A [ i ] [ENDL] sort ( A + 1 , A + N + 1 ) [ENDL] print A [ b + 1 ] - A [ b ] and a newline [ENDL] create int a , b , n , i , au , nx", "c++": "const unsigned long long base = 311 ; unsigned long long A [ maxn ] ; int N ; int main() { cin >> N ; int a , b ; cin >> a >> b ; for ( int i = ( 1 ) ; i <= ( N ) ; i += ( 1 ) ) cin >> A [ i ] ; sort ( A + 1 , A + N + 1 ) ; cout << A [ b + 1 ] - A [ b ] << \" \\n \" ; int a , b , n , i , au , nx ; return 0; }"}}
{"translation": {"en": "read n [ENDL] read a and b [ENDL] create vector int c [ENDL] for i = 0 to n exclusive [ENDL] read au [ENDL] put au at the end of c [ENDL] sort c [ENDL] set nx to c [ b ] - c [ b - 1 ] [ENDL] print nx and a newline [ENDL] n , a , b , i , ans = int", "c++": "int main() { cin >> n ; cin >> a >> b ; vector < int > c ; for ( i = 0 ; i < n ; i ++ ) cin >> au ; c . push_back ( au ) ; sort ( c . begin ( ) , c . end ( ) ) ; } nx = c [ b ] - c [ b - 1 ] ; cout << nx << \" \\n \" ; int n , a , b , i , ans ; return 0; }"}}
{"translation": {"en": "read n then a then b [ENDL] f = int vector of size n [ENDL] read n values into f [ENDL] sort f from rbegin to rend [ENDL] set ans to n , a , b , i , ans [ENDL] print ans [ENDL] n , a , b = int", "c++": "int main() { cin >> n >> a >> b ; vector < int > f ( n ) ; for ( i = 0 ; i < n ; i ++ ) cin >> f [ i ] ; sort ( f . rbegin ( ) , f . rend ( ) ) ; ans = - ( f [ a ] - f [ a - 1 ] ) ; cout << ans << \" \\n \" ; int n , a , b ; return 0; }"}}
{"translation": {"en": "read n then a then b [ENDL] V = int vector of size n [ENDL] read n values into V [ENDL] sort V [ENDL] print V [ b ] - V [ b - 1 ] [ENDL] N = 1000055", "c++": "int main() { cin >> n >> a >> b ; vector < int > V ( n ) ; for ( int i = 0 ; i < n ; ++ i ) cin >> V [ i ] ; sort ( V . begin ( ) , V . end ( ) ) ; cout << V [ b ] - V [ b - 1 ] << \" \\n \" ; const int N = 1e6 + 55 ; return 0; }"}}
{"translation": {"en": "M = 1000000007 [ENDL] n , a , b = int [ENDL] v = vector of int [ENDL] read n , a , b [ENDL] for i = 1 to n inclusive [ENDL] q = int [ENDL] read q [ENDL] add q to end of v [ENDL] sort v [ENDL] q = v [ n - 1 ] - v [ n - a - 1 ] [ENDL] if q < = 0 [ENDL] print 0 [ENDL] exit [ENDL] print q [ENDL] n = int", "c++": "const int M = 1e9 + 7 ; int n , a , b ; vector < int > v ; cin >> n >> a >> b ; int main() { for ( int i = 1 ; i <= n ; ++ i ) int q ; cin >> q ; v . push_back ( q ) ; sort ( v . begin ( ) , v . end ( ) ) ; } int q = v [ n - a ] - v [ n - a - 1 ] ; if ( q <= 0 ) cout << 0 << endl ; exit ( 0 ) ; cout << q << endl ; } int n ; return 0; }"}}
{"translation": {"en": "a = int [ENDL] b = int [ENDL] complexity = int vector [ENDL] read n then a then b [ENDL] i = int with i = 0 [ENDL] loop while i is less than n incrementing i each time [ENDL] tmp = int [ENDL] read tmp [ENDL] append tmp to complexity [ENDL] sort complexity [ENDL] cnt = int with cnt = 0 [ENDL] for i = complexity [ b - 1 ] to complexity [ b ] increment cnt [ENDL] print cnt [ENDL] let n , a , b , i be long integers", "c++": "int main() { int a ; int b ; vector < int > complexity ; cin >> n >> a >> b ; int i = 0 ; for ( ; i < n ; i ++ ) int tmp ; cin >> tmp ; complexity . push_back ( tmp ) ; sort ( complexity . begin ( ) , complexity . end ( ) ) ; } int cnt = 0 ; for ( i = complexity [ b - 1 ] ; i < complexity [ b ] ; i ++ ) { cnt ++ ; } cout << cnt << endl ; long long n , a , b , i ; }"}}
{"translation": {"en": "read n , a , b [ENDL] let c [ n ] be long integer [ENDL] for i = 0 to n exclusive , read ith element of c [ENDL] sort the values of c and c + n [ENDL] print c [ b ] - c [ b - 1 ] and newline [ENDL] create integers n , a , b", "c++": "int main() { cin >> n >> a >> b ; long long c [ n ] ; for ( i = 0 ; i < n ; i ++ ) { cin >> c [ i ] ; } sort ( c , c + n ) ; cout << c [ b ] - c [ b - 1 ] << endl ; int n , a , b ; return 0; }"}}
{"translation": {"en": "create integer vector h [ENDL] read n read a read b [ENDL] resize vector to size n [ENDL] for i = 0 to n exclusive , read h [ i ] [ENDL] sort elements from beginning of h to end of h using integer greater function to compare [ENDL] create integer min_petya with min_petya = h [ a - 1 ] [ENDL] create max_vasya with max_vasya = h [ a ] [ENDL] if min_petya is max_vasya [ENDL] print 0 print newline [ENDL] else [ENDL] print min_petya - max_vasya print newline [ENDL] N = const long long with N = 1e9 + 3", "c++": "int main() { vector < int > h ; cin >> n >> a >> b ; h . resize ( n ) ; for ( int i = 0 ; i < n ; i ++ ) { cin >> h [ i ] ; } sort ( h . begin ( ) , h . end ( ) , greater < int > ( ) ) ; int min_petya = h [ a - 1 ] ; int max_vasya = h [ a ] ; if ( min_petya == max_vasya ) cout << 0 << endl ; else cout << min_petya - max_vasya << endl ; const long long N = 1e9 + 3 ; } return 0; }"}}
{"translation": {"en": "MN = const long long with MN = 1e9 + 7 [ENDL] MX = const long long with MX = - 1e9 - 7 [ENDL] n , a , b , x , c1 , c2 , cnt = long long [ENDL] s , s1 = string [ENDL] bl = bool with bl = false [ENDL] c = long long [ENDL] pr = pair of long long and long long [ENDL] v = vector of long long [ENDL] mp = map from long long to long long [ENDL] st = set of long long [ENDL] iterator it = set of long long [ENDL] read n , a , b [ENDL] for i = 0 to n exclusive [ENDL] read x [ENDL] append x in v [ENDL] sort v . begin ( ) and v . end ( ) [ENDL] if v [ b - 1 ] is v [ b ] [ENDL] print 0 [ENDL] else [ENDL] print v [ b ] - v [ b - 1 ] [ENDL] print new line [ENDL] create integer vector h", "c++": "const long long MN = 1e9 + 7 ; const long long MX = - 1e9 - 7 ; long long n , a , b , x , c1 , c2 , cnt ; string s , s1 ; bool bl = false ; long long c ; pair < long long , long long > pr ; vector < long long > v ; map < long long , long long > mp ; set < long long > st ; set < long long > :: iterator it ; cin >> n >> a >> b ; int main() { for ( long long i = 0 ; i < n ; i ++ ) cin >> x ; v . push_back ( x ) ; sort ( v . begin ( ) , v . end ( ) ) ; } if ( v [ b - 1 ] == v [ b ] ) cout << 0 ; else cout << v [ b ] - v [ b - 1 ] ; cout << \" \\n \" ; } vector < int > h ; return 0; }"}}
{"translation": {"en": "create integers a , b , n , num [ENDL] read n read a read b [ENDL] for i = 0 to n exclusive [ENDL] read num [ENDL] add element num to end of h [ENDL] sort elements from beginning of h to end of h [ENDL] if h [ b - 1 ] is h [ b ] [ENDL] print 0 print newline [ENDL] else [ENDL] print h [ b ] - h [ b - 1 ] print newline [ENDL] create long long int n , a , b , kount , x , set kount = 0", "c++": "int main() { int a , b , n , num ; cin >> n >> a >> b ; for ( int i = 0 ; i < n ; i ++ ) cin >> num ; h . push_back ( num ) ; sort ( h . begin ( ) , h . end ( ) ) ; } if ( h [ b - 1 ] == h [ b ] ) cout << 0 << endl ; else cout << h [ b ] - h [ b - 1 ] << endl ; long long int n , a , b , kount = 0 , x ; return 0; }"}}
{"translation": {"en": "create vector long long int h [ENDL] read n , a and b [ENDL] for i = 0 to n exclusive [ENDL] read x [ENDL] add x to end of h [ENDL] sort h [ENDL] if h [ b - 1 ] different from h [ b ] , set kount to h [ b ] - h [ b - 1 ] [ENDL] print kount [ENDL] create int n , a and b", "c++": "int main() { vector < long long int > h ; cin >> n >> a >> b ; for ( int i = 0 ; i < n ; i ++ ) cin >> x ; h . push_back ( x ) ; sort ( h . begin ( ) , h . end ( ) ) ; } if ( h [ b - 1 ] != h [ b ] ) { kount = h [ b ] - h [ b - 1 ] ; } cout << kount << endl ; int n , a , b ; return 0; }"}}
{"translation": {"en": "read n , a and b [ENDL] create vector int h ( n ) [ENDL] for i = 0 to n exclusive , read h [ i ] [ENDL] sort vector h [ENDL] print h [ b ] - h [ b - 1 ] and a newline [ENDL] integer function selsort with an array of long long argument arr and int argument n", "c++": "int main() { cin >> n >> a >> b ; vector < int > h ( n ) ; for ( int i = 0 ; i < n ; i ++ ) { cin >> h [ i ] ; } sort ( h . begin ( ) , h . end ( ) ) ; cout << h [ b ] - h [ b - 1 ] << \" \\n \" ; int selsort ( long long arr [ ] , int n ) return 0; }"}}
{"translation": {"en": "loop i from 0 to n - 1 exclusive [ENDL] declare integer min = i [ENDL] for j = to n exclusive [ENDL] if arr [ j ] is less than arr [ min ] , set min to j [ENDL] create long long t with value arr [ i ] [ENDL] set arr [ i ] to arr [ min ] [ENDL] assign t to arr [ min ] [ENDL] declare integers n , a and b [ENDL] read n , a and b [ENDL] let arr be long long array with size n [ENDL] loop i from 0 to n exclusive , read input to arr [ i ] [ENDL] call selsort ( arr , n ) [ENDL] print arr [ n - a ] - arr [ n - a - 1 ] and \" \\ n \" [ENDL] create integer array h with size 2000", "c++": "for ( int i = 0 ; i < n - 1 ; i ++ ) int min = i ; for ( int j = i + 1 ; j < n ; j ++ ) if ( arr [ j ] < arr [ min ] ) { min = j ; } long long t = arr [ i ] ; } arr [ i ] = arr [ min ] ; arr [ min ] = t ; int n , a , b ; } } int main() { cin >> n >> a >> b ; long long arr [ n ] ; for ( int i = 0 ; i < n ; i ++ ) { cin >> arr [ i ] ; } selsort ( arr , n ) ; cout << arr [ n - a ] - arr [ n - a - 1 ] << \" \\n \" ; int h [ 2000 ] ; }"}}
{"translation": {"en": "create integers n , a , b [ENDL] read n read a read b [ENDL] for i = 0 to n exclusive , read h [ i ] [ENDL] sort elements from h to h + n [ENDL] create integer ans with ans = h [ b ] - h [ b - 1 ] [ENDL] print ans print newline [ENDL] a , b , n , i = integers", "c++": "int n , a , b ; int main() { cin >> n >> a >> b ; for ( int i = 0 ; i < n ; i ++ ) { cin >> h [ i ] ; } sort ( h , h + n ) ; int ans = h [ b ] - h [ b - 1 ] ; cout << ans << endl ; int a , b , n , i ; return 0; }"}}
{"translation": {"en": "Read a , b , n [ENDL] C = array of n integers [ENDL] Read n values into array C [ENDL] sort array elements of C in ascending order [ENDL] print C [ b ] - C [ b - 1 ] and a new line [ENDL] create integers n , a , and b", "c++": "int main() { cin >> n >> a >> b ; int C [ n ] ; for ( i = 0 ; i < n ; i ++ ) cin >> C [ i ] ; sort ( C , C + n ) ; cout << C [ b ] - C [ b - 1 ] << endl ; int n , a , b ; }"}}
{"translation": {"en": "let chores be an array of integers of length 2000 [ENDL] read n , a , and b [ENDL] for i to n exclusive , read chores [ i ] [ENDL] sort arrary chores [ENDL] output chores [ b ] - chores [ b - 1 ] and new line [ENDL] n , a , b , m = integers and c = array of 2555 integers", "c++": "int chores [ 2000 ] ; cin >> n >> a >> b ; int main() { for ( int i = 0 ; i < n ; i ++ ) { cin >> chores [ i ] ; } sort ( chores , chores + n ) ; cout << chores [ b ] - chores [ b - 1 ] << ' \\n ' ; long long int n , a , b , c [ 2555 ] , m ; }"}}
{"translation": {"en": "Read n , a , b [ENDL] Read n values into array c [ENDL] sort array elements of c in ascending order [ENDL] set m to c [ b ] - c [ b - 1 ] [ENDL] print m and a new line [ENDL] n and b = integers", "c++": "int main() { cin >> n >> a >> b ; for ( int i = 0 ; i < n ; i ++ ) cin >> c [ i ] ; sort ( c , c + n ) ; m = c [ b ] - c [ b - 1 ] ; cout << m << endl ; int n , b ; }"}}
{"translation": {"en": "read n and b [ENDL] create vector of integers V with n elements [ENDL] read n elements into V [ENDL] assign value b to the integer total [ENDL] for integer i = 0 to n exclusive , add V [ i ] to the total [ENDL] double t = total / n [ENDL] create vector of doubles ans with n elements [ENDL] for integer i = 0 to n exclusive [ENDL] if V [ i ] is greater than t [ENDL] print \" - 1 \\ n \" [ENDL] assign value of t - V [ i ] to the ans [ i ] [ENDL] print fixed and set decimal precision to 10 [ENDL] for integer i = 0 to n exclusive print ans [ i ] [ENDL] create integer arrays p of size 101 within an array of size 101 , ai of size 1000 , bi of size 1000", "c++": "int main() { cin >> n >> b ; vector < int > V ( n ) ; for ( int i = 0 ; i < n ; ++ i ) cin >> V [ i ] ; int total = b ; for ( int i = 0 ; i < n ; ++ i ) total += V [ i ] ; double t = ( double ) total / n ; vector < double > ans ( n ) ; for ( int i = 0 ; i < n ; ++ i ) if ( V [ i ] > t ) cout << \" -1\\n \" ; ans [ i ] = t - V [ i ] ; return 0; } cout << fixed << setprecision ( 10 ) ; } for ( int i = 0 ; i < n ; ++ i ) cout << ans [ i ] << \" \\n \" ; int p [ 101 ] [ 101 ] , ai [ 1000 ] , bi [ 1000 ] ; return 0; }"}}
{"translation": {"en": "create unsigned integer array ci of size 1000 [ENDL] created unsigned integers n , m , and k [ENDL] read n , m , and k [ENDL] create string u [ENDL] create unsigned integer o = 0 [ENDL] for i = 0 to n exclusive [ENDL] read u [ENDL] for j = 0 to m exclusive [ENDL] create unsigned integer ix = o + j [ENDL] read ai [ ix ] , bi [ ix ] , ci [ ix ] [ENDL] set o to the result of o + m [ENDL] created unsigned integer e = n * m [ENDL] create integer ma = 0 [ENDL] for u = 0 to e exclusive in increments of m [ENDL] for v = 0 to e exclusive in increments of m [ENDL] if u is equal to v , continue to next loop iteration [ENDL] for i = 1 to m inclusive [ENDL] created unsigned integer ix = u + i - 1 [ENDL] for j = 1 to k inclusive [ENDL] create integer mx = p [ j ] [ i - 1 ] [ENDL] for x = 1 to ci [ ix ] inclusive and j inclusive [ENDL] create integer mm = p [ j - x ] [ i - 1 ] + ( bi [ v + i - 1 ] - ai [ ix ] ) * x [ENDL] if mm is greater than mx , set mx to mm [ENDL] set p [ j ] [ i ] to mx [ENDL] if p [ k ] [ m ] is greater than ma , set ma to p [ k ] [ m ] [ENDL] print ma [ENDL] create 2d array of integers a with size 15 by 105", "c++": "unsigned int ci [ 1000 ] ; unsigned int n , m , k ; int main() { cin >> n >> m >> k ; string u ; unsigned int o = 0 ; for ( unsigned int i = 0 ; i < n ; ++ i ) cin >> u ; for ( unsigned int j = 0 ; j < m ; ++ j ) unsigned int ix = o + j ; cin >> ai [ ix ] >> bi [ ix ] >> ci [ ix ] ; o += m ; } unsigned int e = n * m ; } int ma = 0 ; for ( unsigned int u = 0 ; u < e ; u += m ) for ( unsigned int v = 0 ; v < e ; v += m ) if ( u == v ) continue ; for ( unsigned int i = 1 ; i <= m ; ++ i ) unsigned int ix = u + i - 1 ; for ( unsigned int j = 1 ; j <= k ; ++ j ) int mx = p [ j ] [ i - 1 ] ; for ( unsigned int x = 1 ; x <= ci [ ix ] && x <= j ; ++ x ) int mm = p [ j - x ] [ i - 1 ] + ( bi [ v + i - 1 ] - ai [ ix ] ) * x ; if ( mm > mx ) mx = mm ; p [ j ] [ i ] = mx ; } if ( p [ k ] [ m ] > ma ) ma = p [ k ] [ m ] ; } } cout << ma << endl ; } } int a [ 15 ] [ 105 ] ; return 0; }"}}
{"translation": {"en": "create 2d array of integers b with size 15 by 105 [ENDL] create 2d array of integers c with size 15 by 105 [ENDL] declare boolean array vis with 105 elements [ENDL] declare ints n , m and k [ENDL] function Cal with int arguments x and y that returns int [ENDL] set first sizeof vis bytes at the pointer vis to 0 [ENDL] if x = y , return - 1 [ENDL] declare int variable cost = k [ENDL] create int ans = 0 [ENDL] while cost ! = 0 [ENDL] create integer flag [ENDL] declare integer maxgas = 0 [ENDL] declare integer variable dp = 1 [ENDL] for integer i = 1 to m inclusive [ENDL] if vis [ i ] is true , skip the rest of the loop [ENDL] if b [ y ] [ i ] - a [ x ] [ i ] is greater than maxgas [ENDL] assign 0 to dp [ENDL] assign b [ y ] [ i ] - a [ x ] [ i ] to maxgas [ENDL] change flag to i [ENDL] if dp is true , break the loop [ENDL] set vis [ flag ] to 1 [ENDL] add min of cost and c [ x ] [ flag ] * maxgas to ans [ENDL] decrease cost by min of cost and c [ x ] [ flag ] [ENDL] return ans [ENDL] set first sizeof vis bytes at the pointer vis to 0 [ENDL] read n , m and k [ENDL] for i = 1 to n inclusive [ENDL] create string s [ENDL] read input to s [ENDL] for j from 1 to m inclusive , read a [ i ] [ j ] , b [ i ] [ j ] and c [ i ] [ j ] [ENDL] declare int variable ans = 0 [ENDL] change i from 1 to n inclusive in a loop [ENDL] change j from 1 to n inclusive in a loop , setting ans to max of ans and Cal ( i , j ) [ENDL] print ans [ENDL] n , m , k = int", "c++": "int b [ 15 ] [ 105 ] ; int c [ 15 ] [ 105 ] ; bool vis [ 105 ] ; int n , m , k ; int Cal ( int x , int y ) memset ( vis , 0 , sizeof vis ) ; if ( x == y ) return - 1 ; int cost = k ; int ans = 0 ; while ( cost ) int flag ; int maxgas = 0 ; int dp = 1 ; for ( int i = 1 ; i <= m ; i ++ ) if ( vis [ i ] ) continue ; if ( b [ y ] [ i ] - a [ x ] [ i ] > maxgas ) dp = 0 ; maxgas = b [ y ] [ i ] - a [ x ] [ i ] ; flag = i ; if ( dp ) break ; } } vis [ flag ] = 1 ; ans += min ( cost , c [ x ] [ flag ] ) * maxgas ; cost -= min ( cost , c [ x ] [ flag ] ) ; return ans ; } memset ( vis , 0 , sizeof vis ) ; } int main() { cin >> n >> m >> k ; for ( int i = 1 ; i <= n ; i ++ ) string s ; cin >> s ; for ( int j = 1 ; j <= m ; j ++ ) { cin >> a [ i ] [ j ] >> b [ i ] [ j ] >> c [ i ] [ j ] ; } int ans = 0 ; } for ( int i = 1 ; i <= n ; i ++ ) for ( int j = 1 ; j <= n ; j ++ ) { ans = max ( ans , Cal ( i , j ) ) ; } cout << ans << endl ; } int n , m , k ; }"}}
{"translation": {"en": "a , b , c = array of 11 by 111 int [ENDL] f = array of 111 int [ENDL] read n , m , k [ENDL] for i = 0 to n exclusive [ENDL] name = string [ENDL] read name [ENDL] for j = 0 to m exclusive read a [ i ] [ j ] , b [ i ] [ j ] , c [ i ] [ j ] [ENDL] ans = 0 [ENDL] for st = 0 to n exclusive [ENDL] for fn = 0 to n exclusive [ENDL] if st is not fn [ENDL] cst and num = array of 111 int [ENDL] for j = 0 to m exclusive [ENDL] cst [ j ] = b [ fn ] [ j ] - a [ st ] [ j ] [ENDL] num [ j ] = c [ st ] [ j ] [ENDL] fill f with - 1 [ENDL] f [ 0 ] = 0 [ENDL] for j = 0 to m exclusive [ENDL] for cnt = 0 to num [ j ] exclusive [ENDL] for pos = k - 1 down to 0 inclusive [ENDL] if f [ pos ] > = 0 f [ pos + 1 ] = max ( f [ pos + 1 ] , f [ pos ] + cst [ j ] ) [ENDL] ans = max ( ans , element pointed by max_element ( f , f + k + 1 ) ) [ENDL] pritn ans [ENDL] let a , b , c be int matrices of size 11x101 , and d , e int arrays of length 101", "c++": "int a [ 11 ] [ 111 ] , b [ 11 ] [ 111 ] , c [ 11 ] [ 111 ] ; int f [ 111 ] ; cin >> n >> m >> k ; int main() { for ( int i = 0 ; i < n ; ++ i ) string name ; cin >> name ; for ( int j = 0 ; j < m ; ++ j ) { cin >> a [ i ] [ j ] >> b [ i ] [ j ] >> c [ i ] [ j ] ; } int ans = 0 ; } for ( int st = 0 ; st < n ; ++ st ) for ( int fn = 0 ; fn < n ; ++ fn ) if ( st != fn ) int cst [ 111 ] , num [ 111 ] ; for ( int j = 0 ; j < m ; ++ j ) cst [ j ] = b [ fn ] [ j ] - a [ st ] [ j ] ; num [ j ] = c [ st ] [ j ] ; memset ( f , - 1 , sizeof ( f ) ) ; } f [ 0 ] = 0 ; for ( int j = 0 ; j < m ; ++ j ) for ( int cnt = 0 ; cnt < num [ j ] ; ++ cnt ) for ( int pos = k - 1 ; pos >= 0 ; -- pos ) if ( f [ pos ] >= 0 ) f [ pos + 1 ] = max ( f [ pos + 1 ] , f [ pos ] + cst [ j ] ) ; ans = max ( ans , * max_element ( f , f + k + 1 ) ) ; cout << ans << endl ; } int a [ 11 ] [ 101 ] , b [ 11 ] [ 101 ] , c [ 11 ] [ 101 ] , d [ 101 ] , e [ 101 ] ; }"}}
{"translation": {"en": "let x , y be ints [ENDL] let n , m , kkk , maxn be ints [ENDL] in boolean function cmp that takes int x , int y [ENDL] return d [ x ] > d [ y ] [ENDL] read n , m , kkk [ENDL] for i = 0 to n exclusive [ENDL] cc = string [ENDL] read cc [ENDL] for j = 0 to m exclusive , read a [ i ] [ j ] , b [ i ] [ j ] , c [ i ] [ j ] [ENDL] for i = 0 to n exclusive [ENDL] let ans be an int [ENDL] for j = 0 to n exclusive [ENDL] set ans to 0 [ENDL] if i is different from j [ENDL] reset d to all 0 [ENDL] for k = 0 to m exclusive set e [ k ] to k [ENDL] for k = 0 to m exclusive , set d [ k ] to b [ j ] [ k ] - a [ i ] [ k ] [ENDL] sort the first m elements of e using cmp [ENDL] let kk = kkk be an int [ENDL] let p be an integer [ENDL] set p = 0 [ENDL] while p < m and kk is positive [ENDL] if d [ e [ p ] ] is negative or zero [ENDL] set kk to 0 [ENDL] exit loop [ENDL] if c [ i ] [ e [ p ] ] < = kk [ENDL] increment ans by c [ i ] [ e [ p ] ] * d [ e [ p ] ] [ENDL] decrement kk by c [ i ] [ e [ p ] ] [ENDL] increment p [ENDL] else [ENDL] increment ans by kk * d [ e [ p ] ] [ENDL] set kk to 0 [ENDL] if ans > maxn [ENDL] set maxn to ans [ENDL] set x = i [ENDL] set y = j [ENDL] print maxn [ENDL] declare const int MOD = 1e9 + 7", "c++": "int x , y ; int n , m , kkk , maxn ; bool cmp ( int x , int y ) return d [ x ] > d [ y ] ; cin >> n >> m >> kkk ; } int main() { for ( int i = 0 ; i < n ; i ++ ) string cc ; cin >> cc ; for ( int j = 0 ; j < m ; j ++ ) cin >> a [ i ] [ j ] >> b [ i ] [ j ] >> c [ i ] [ j ] ; for ( int i = 0 ; i < n ; i ++ ) } int ans ; for ( int j = 0 ; j < n ; j ++ ) ans = 0 ; if ( i != j ) memset ( d , 0 , sizeof ( d ) ) ; for ( int k = 0 ; k < m ; k ++ ) e [ k ] = k ; for ( int k = 0 ; k < m ; k ++ ) { d [ k ] = b [ j ] [ k ] - a [ i ] [ k ] ; } sort ( e , e + m , cmp ) ; int kk = kkk ; int p ; p = 0 ; while ( ( p < m ) && ( kk > 0 ) ) if ( d [ e [ p ] ] <= 0 ) kk = 0 ; break ; if ( c [ i ] [ e [ p ] ] <= kk ) } ans = ans + c [ i ] [ e [ p ] ] * d [ e [ p ] ] ; kk = kk - c [ i ] [ e [ p ] ] ; p = p + 1 ; else ans = ans + kk * d [ e [ p ] ] ; kk = 0 ; if ( ans > maxn ) } } maxn = ans ; x = i ; y = j ; cout << maxn << endl ; } } } } const int MOD = 1e9 + 7 ; }"}}
{"translation": {"en": "create integers n , m and k [ENDL] create 2d arrays of integers a , b and c with size 10 by 100 [ENDL] integer function solve with int arguments u and v [ENDL] create vector of integers profits [ENDL] for i = 0 to m exclusive [ENDL] loop j from 0 to c [ u ] [ i ] exclusive , push max of 0 and b [ v ] [ i ] - a [ u ] [ i ] into profits [ENDL] sort profits [ENDL] declare integer variable ans = 0 [ENDL] for i = 0 to min of k and length of profits exclusive , increase ans by profits [ i ] [ENDL] return ans [ENDL] read n , m and k [ENDL] for i = 0 to n exclusive [ENDL] declare string variable name [ENDL] read name [ENDL] loop j from 0 to m exclusive , read a [ i ] [ j ] , b [ i ] [ j ] and c [ i ] [ j ] [ENDL] create integer ans = 0 [ENDL] for i from 0 to n exclusive [ENDL] for j from 0 to n exclusive , assign max of ans and solve ( i , j ) to ans [ENDL] print ans and ' \\ n ' [ENDL] declare arrays of integers a , b and c with size 105 by 105 and integer variables n , m and k", "c++": "int n , m , k ; int a [ 10 ] [ 100 ] , b [ 10 ] [ 100 ] , c [ 10 ] [ 100 ] ; int solve ( int u , int v ) vector < int > profits ; for ( int i = 0 ; i < m ; ++ i ) for ( int j = 0 ; j < c [ u ] [ i ] ; ++ j ) profits . push_back ( max ( 0 , b [ v ] [ i ] - a [ u ] [ i ] ) ) ; sort ( profits . rbegin ( ) , profits . rend ( ) ) ; int ans = 0 ; for ( int i = 0 ; i < min ( k , ( int ) profits . size ( ) ) ; ++ i ) ans += profits [ i ] ; return ans ; cin >> n >> m >> k ; } int main() { for ( int i = 0 ; i < n ; ++ i ) string name ; cin >> name ; for ( int j = 0 ; j < m ; ++ j ) cin >> a [ i ] [ j ] >> b [ i ] [ j ] >> c [ i ] [ j ] ; int ans = 0 ; } for ( int i = 0 ; i < n ; ++ i ) for ( int j = 0 ; j < n ; ++ j ) ans = max ( ans , solve ( i , j ) ) ; cout << ans << ' \\n ' ; int a [ 105 ] [ 105 ] , b [ 105 ] [ 105 ] , c [ 105 ] [ 105 ] , n , m , k ; }"}}
{"translation": {"en": "function buy with int arguments x and y that returns int [ENDL] create an array of integers v with size 105 [ENDL] let ans and i be integers with ans = 0 [ENDL] declare integer variable last = k [ENDL] while last is not 0 [ENDL] declare integer variable maxn = 0 [ENDL] declare int maxi [ENDL] declare integer variable num [ENDL] for i from 1 to m inclusive [ENDL] if v [ i ] is true , skip the rest of the loop [ENDL] if b [ y ] [ i ] - a [ x ] [ i ] is greater than maxn [ENDL] assign i to maxi [ENDL] set maxn to b [ y ] [ i ] - a [ x ] [ i ] [ENDL] if maxn = 0 , stop the loop [ENDL] change num to min of last and c [ x ] [ maxi ] [ENDL] add num * maxn to ans [ENDL] assign 1 to v [ maxi ] [ENDL] decrease last by num [ENDL] return ans [ENDL] declare ints i and j [ENDL] declare string variable s [ENDL] read n , m and k [ENDL] loop i from 1 to n inclusive [ENDL] read input to s [ENDL] read a [ i ] [ j ] , b [ i ] [ j ] and c [ i ] [ j ] m times [ENDL] create int ans = 0 [ENDL] for i = 1 to n inclusive [ENDL] loop j from 1 to n inclusive , change ans to max of ans and buy ( i , j ) [ENDL] print ans [ENDL] create constant integers Maxn , Maxm with Maxn = 15 , Maxm = 100 + 5", "c++": "int buy ( int x , int y ) int v [ 105 ] = { 0 } ; int ans = 0 , i ; int last = k ; while ( last ) int maxn = 0 ; int maxi ; int num ; for ( i = 1 ; i <= m ; i ++ ) if ( v [ i ] ) continue ; if ( b [ y ] [ i ] - a [ x ] [ i ] > maxn ) maxi = i ; maxn = b [ y ] [ i ] - a [ x ] [ i ] ; if ( maxn == 0 ) break ; } } num = min ( last , c [ x ] [ maxi ] ) ; ans += num * maxn ; v [ maxi ] = 1 ; last -= num ; return ans ; } int i , j ; } int main() { string s ; cin >> n >> m >> k ; for ( i = 1 ; i <= n ; i ++ ) cin >> s ; for ( j = 1 ; j <= m ; j ++ ) { cin >> a [ i ] [ j ] >> b [ i ] [ j ] >> c [ i ] [ j ] ; } int ans = 0 ; } for ( i = 1 ; i <= n ; i ++ ) for ( j = 1 ; j <= n ; j ++ ) { ans = max ( ans , buy ( i , j ) ) ; } cout << ans << endl ; } const int Maxn = 15 , Maxm = 100 + 5 ; return 0; }"}}
{"translation": {"en": "create integers n , m , k , ans create 2d integer arrays a , b , c , with a size Maxn by Maxm , b size Maxn by Maxm , c size Maxn by Maxm [ENDL] read n read m read k [ENDL] create string s [ENDL] for i = 0 to n exclusive [ENDL] read s [ENDL] for j = 0 to m exclusive , read a [ i ] [ j ] read b [ i ] [ j ] read c [ i ] [ j ] [ENDL] create pair of integer , integer array d with size Maxm [ENDL] for i = 0 to n exclusive [ENDL] for j = 0 to n exclusive [ENDL] for l = 0 to m exclusive , set d [ l ] to make pair from ( b [ j ] [ l ] - a [ i ] [ l ] and c [ i ] [ l ] ) [ENDL] sort elements from d to d + m [ENDL] reverse sort elements from d to d + m [ENDL] create integers num , p , cnt with num = 0 , p = 0 , cnt = 0 [ENDL] while p is less than m and cnt + second element of d [ p ] is less than or equal to k [ENDL] if first element of d [ p ] is less than 0 , break loop [ENDL] increment cnt by second element of d [ p ] [ENDL] increment num by first element of d [ p ] * second eleement of d [ p ] [ENDL] increment p [ENDL] if first element of d [ p ] is greater than 0 , increment num by first element of d [ p ] * ( k - cnt ) [ENDL] set ans to maximum of ans and num [ENDL] print ans print newline [ENDL] create 2d long long array a with size 11 by 105", "c++": "int n , m , k , a [ Maxn ] [ Maxm ] , b [ Maxn ] [ Maxm ] , c [ Maxn ] [ Maxm ] , ans ; cin >> n >> m >> k ; int main() { string s ; for ( int i = 0 ; i < n ; i ++ ) cin >> s ; for ( int j = 0 ; j < m ; j ++ ) cin >> a [ i ] [ j ] >> b [ i ] [ j ] >> c [ i ] [ j ] ; pair < int , int > d [ Maxm ] ; } for ( int i = 0 ; i < n ; i ++ ) for ( int j = 0 ; j < n ; j ++ ) for ( int l = 0 ; l < m ; l ++ ) d [ l ] = make_pair ( b [ j ] [ l ] - a [ i ] [ l ] , c [ i ] [ l ] ) ; sort ( d , d + m ) ; reverse ( d , d + m ) ; int num = 0 , p = 0 , cnt = 0 ; while ( p < m && cnt + d [ p ] . second <= k ) if ( d [ p ] . first < 0 ) break ; cnt += d [ p ] . second ; num += d [ p ] . first * d [ p ] . second ; p ++ ; if ( d [ p ] . first > 0 ) num += d [ p ] . first * ( k - cnt ) ; } ans = max ( ans , num ) ; cout << ans << endl ; } } long long a [ 11 ] [ 105 ] ; return 0; }"}}
{"translation": {"en": "create 2d long long array b with size 11 by 105 [ENDL] create 2d long long array c with size 11 by 105 [ENDL] declare boolean array vis with 105 elements [ENDL] declare long longs n , m and k [ENDL] cal is a long long function with int arguments x and y [ENDL] create long long last = k [ENDL] create long long ans = 0 [ENDL] set sizeof ( vis ) bytes at the pointer vis to 0 [ENDL] while last ! = 0 [ENDL] declare long long v = 0 [ENDL] declare long long p [ENDL] declare long long flag = 0 [ENDL] for integer i = 1 to m inclusive [ENDL] if vis [ i ] is false [ENDL] if b [ y ] [ i ] - a [ x ] [ i ] is greater than v [ENDL] assign b [ y ] [ i ] - a [ x ] [ i ] to v [ENDL] set p to i [ENDL] assign 1 to flag [ENDL] if flag = 0 , break [ENDL] set vis [ p ] to 1 [ENDL] if last > = c [ x ] [ p ] [ENDL] increase ans by c [ x ] [ p ] * v [ENDL] decrease last by c [ x ] [ p ] [ENDL] else [ENDL] increase ans by last * v [ENDL] change last to 0 [ENDL] return ans [ENDL] read n , m and k [ENDL] for i from 1 to n inclusive [ENDL] declare string s [ENDL] read input to s [ENDL] for j from 1 to m inclusive , read input to a [ i ] [ j ] , b [ i ] [ j ] and c [ i ] [ j ] [ENDL] declare long long variable ans = 0 [ENDL] loop i from 1 to n inclusive [ENDL] for int j = 1 to n inclusive , change ans to max of ans and cal ( i , j ) [ENDL] print ans and \" \\ n \" [ENDL] declare n as long long , a as long long array with size 100100", "c++": "long long b [ 11 ] [ 105 ] ; long long c [ 11 ] [ 105 ] ; bool vis [ 105 ] ; long long n , m , k ; long long cal ( int x , int y ) long long last = k ; long long ans = 0 ; memset ( vis , 0 , sizeof ( vis ) ) ; while ( last ) long long v = 0 ; long long p ; long long flag = 0 ; for ( int i = 1 ; i <= m ; i ++ ) if ( ! vis [ i ] ) if ( b [ y ] [ i ] - a [ x ] [ i ] > v ) v = b [ y ] [ i ] - a [ x ] [ i ] ; p = i ; flag = 1 ; if ( flag == 0 ) break ; } } } vis [ p ] = 1 ; if ( last >= c [ x ] [ p ] ) ans += c [ x ] [ p ] * v ; last -= c [ x ] [ p ] ; else ans += last * v ; last = 0 ; return ans ; } } cin >> n >> m >> k ; } int main() { for ( int i = 1 ; i <= n ; i ++ ) string s ; cin >> s ; for ( int j = 1 ; j <= m ; j ++ ) cin >> a [ i ] [ j ] >> b [ i ] [ j ] >> c [ i ] [ j ] ; long long ans = 0 ; } for ( int i = 1 ; i <= n ; i ++ ) for ( int j = 1 ; j <= n ; j ++ ) { ans = max ( ans , cal ( i , j ) ) ; } cout << ans << \" \\n \" ; long long n , a [ 100100 ] ; }"}}
{"translation": {"en": "read n [ENDL] for i = 0 to n exclusive , read a [ i ] [ENDL] declare s as long long = 0 [ENDL] for k = 0 to n - 1 exclusive [ENDL] declare integer t = 0 [ENDL] while k + ( 1 bitshift left t + 1 ) is less than n , increment i [ENDL] increment s by a [ k ] , a [ k + ( 1 < < t ) ] by a [ k ] [ENDL] print s , newline [ENDL] MaxN = const int with MaxN = 1E5 + 10", "c++": "int main() { cin >> n ; for ( int i = 0 ; i < n ; ++ i ) cin >> a [ i ] ; long long s = 0 ; for ( int k = 0 ; k < n - 1 ; ++ k ) int t = 0 ; while ( k + ( 1 << t + 1 ) < n ) ++ t ; s += a [ k ] , a [ k + ( 1 << t ) ] += a [ k ] ; cout << s << endl ; const int MaxN = 1E5 + 10 ; } return 0; }"}}
{"translation": {"en": "a = int array of size MaxN [ENDL] n = int [ENDL] read n [ENDL] read n values into a [ENDL] ans = int with ans = 0 [ENDL] for i = 0 to n - 1 [ENDL] lg = int with lg = log2 of n - i - 1 [ENDL] increment ans by a [ i ] [ENDL] increment a [ i + ( 1 bitshift left by lg ) ] by a [ i ] [ENDL] print ans [ENDL] n , i , a , ans , d = integers with ans = 0 , a , d = integer array of size 1111111", "c++": "int a [ MaxN ] ; int n ; int main() { cin >> n ; for ( int i = 0 ; i < n ; ++ i ) cin >> a [ i ] ; int ans = 0 ; for ( int i = 0 ; i < n - 1 ; ++ i ) int lg = log2 ( n - i - 1 ) ; ans += a [ i ] ; a [ i + ( 1 << lg ) ] += a [ i ] ; cout << ans << endl ; int n , i , a [ 1111111 ] , ans = 0 , d [ 1111111 ] ; } }"}}
{"translation": {"en": "read n [ENDL] for i = 0 to n exclusive , read a [ i ] [ENDL] d [ 1 ] = 1 [ENDL] for i = 2 to n exclusive , d [ i ] = d [ i / 2 ] * 2 [ENDL] for i = 0 to i + 1 < n [ENDL] a [ i + d [ n - i - 1 ] ] = a [ i + d [ n - i - 1 ] ] + a [ i ] [ENDL] ans = ans + a [ i ] [ENDL] print ans [ENDL] create int n", "c++": "cin >> n ; int main() { for ( i = 0 ; i < n ; i ++ ) cin >> a [ i ] ; d [ 1 ] = 1 ; for ( i = 2 ; i < n ; i ++ ) d [ i ] = d [ i / 2 ] * 2 ; for ( i = 0 ; i + 1 < n ; i ++ ) a [ i + d [ n - i - 1 ] ] += a [ i ] ; ans += a [ i ] ; cout << ans << endl ; int n ; } return 0; }"}}
{"translation": {"en": "read n [ENDL] create long long int array arr [ n ] [ENDL] read every index of arr [ENDL] create long long N = 0 [ENDL] for i = 0 to n - 1 exclusive [ENDL] let integer t = floor ( log2 ( n - i - 1 ) ) [ENDL] set N to N + arr [ i ] [ENDL] create int j = i + pow ( 2 , t ) [ENDL] set arr [ j ] to arr [ j ] + arr [ i ] [ENDL] set arr [ i ] to 0 [ENDL] print N [ENDL] a = integer array of size 100001", "c++": "int main() { cin >> n ; long long arr [ n ] ; for ( int i = 0 ; i < n ; i ++ ) cin >> arr [ i ] ; long long N = 0 ; for ( int i = 0 ; i < n - 1 ; i ++ ) int t = floor ( log2 ( n - i - 1 ) ) ; N = N + arr [ i ] ; int j = i + pow ( 2 , t ) ; arr [ j ] += arr [ i ] ; arr [ i ] = 0 ; cout << N << endl ; int a [ 100001 ] ; } return 0; }"}}
{"translation": {"en": "n = integer [ENDL] read n [ENDL] for i = 1 to n + 1 exclusive , read a [ i ] [ENDL] res = long long with res = 0 [ENDL] t = integer [ENDL] for i = 1 to n exclusive [ENDL] for t = 1 , i + t < = n , t = t * 2 [ENDL] ; [ENDL] t = right shift t 1 place [ENDL] res = res + a [ i ] [ENDL] a [ i + t ] = a [ i + t ] + a [ i ] [ENDL] print res [ENDL] create long long int n", "c++": "int n ; int main() { cin >> n ; for ( int i = 1 ; i < n + 1 ; i ++ ) cin >> a [ i ] ; long long res = 0 ; int t ; for ( int i = 1 ; i < n ; i ++ ) for ( t = 1 ; i + t <= n ; t *= 2 ) ; t >>= 1 ; res += a [ i ] ; a [ i + t ] += a [ i ] ; cout << res << endl ; long long int n ; } return 0; }"}}
{"translation": {"en": "read n [ENDL] create long long int a [ n + 5 ] [ENDL] for i = 0 to n inclusive , read a [ i ] [ENDL] set c to 0 [ENDL] for i = 0 to n exclusive [ENDL] set c to c + a [ i ] [ENDL] print c and a newline [ENDL] j = 1 [ENDL] while ( - 1 + j * 2 < n , set j to j * 2 [ENDL] set a [ i + j ] to a [ i + j ] + a [ i ] [ENDL] power2 is a long long function with long long arguments pow and mod", "c++": "int main() { cin >> n ; long long int a [ n + 5 ] ; for ( int i = 1 ; i <= n ; i ++ ) cin >> a [ i ] ; long long int c = 0 ; for ( int i = 1 ; i < n ; i ++ ) c += a [ i ] ; cout << c << \" \\n \" ; long long int j = 1 ; while ( ( i - 1 ) + j * 2 < n ) j *= 2 ; a [ i + j ] += a [ i ] ; long long power2 ( long long pow , long long mod ) } }"}}
{"translation": {"en": "declare long longs res = 1ll and x = 2ll [ENDL] while pow > 0 [ENDL] if pow & 1 is true , set res to ( res * x ) modulo mod [ENDL] pow > > = 1 [ENDL] assign ( x * x ) modulo mod to x [ENDL] return res [ENDL] create long long n [ENDL] read n [ENDL] if n is true [ENDL] declare long long M = 1 * 1000 * 1000 * 1000 + 7 [ENDL] declare long long variable sol [ENDL] assign power2 ( 2 * n - 1 , M ) to sol [ENDL] increase sol by power2 ( n - 1 , M ) [ENDL] sol = sol modulo M [ENDL] print sol [ENDL] else [ENDL] print 1 [ENDL] declare int variables a , n and p where p = 1000000007", "c++": "long long res = 1ll , x = 2ll ; while ( pow > 0 ) if ( pow & 1 ) res = ( res * x ) % mod ; pow >>= 1 ; x = ( x * x ) % mod ; return res ; } long long n ; } int main() { cin >> n ; if ( n ) long long M = 1 * 1000 * 1000 * 1000 + 7 ; long long sol ; sol = power2 ( 2 * n - 1 , M ) ; sol += power2 ( n - 1 , M ) ; sol %= M ; cout << sol << endl ; else cout << 1 << endl ; int a , n , p = 1000000007 ; } return 0; }"}}
{"translation": {"en": "long long function fastmod with long long arguments a and n [ENDL] if n is equal to 1 , return a [ENDL] declare long long variable ans = fastmod ( a , n / 2 ) modulo p [ENDL] if n is even [ENDL] return ans % p * ans % p [ENDL] else { [ENDL] return ans % p * ans % p * a % p [ENDL] declare long long variable k [ENDL] read k [ENDL] if k > = 2 [ENDL] declare long long variable t = fastmod ( 2 , k - 1 ) [ENDL] print ( t + 2 * t * t % p ) % p [ENDL] else if k = 1 [ENDL] print 3 [ENDL] else [ENDL] print 1 [ENDL] mod = constant long long with value of 1e9 + 7", "c++": "long long fastmod ( long long a , long long n ) if ( n == 1 ) { return a ; } long long ans = fastmod ( a , n / 2 ) % p ; if ( n % 2 == 0 ) return ans % p * ans % p ; else return ans % p * ans % p * a % p ; long long k ; } } int main() { cin >> k ; if ( k >= 2 ) long long t = fastmod ( 2 , k - 1 ) ; cout << ( t + 2 * t * t % p ) % p << endl ; else if ( k == 1 ) cout << 3 << endl ; else cout << 1 << endl ; const long long mod = 1e9 + 7 ; } return 0; }"}}
{"translation": {"en": "in function qpow2 that returns a long long and takes argument p = long long [ENDL] a = long long with value of 2 [ENDL] res = long long with value of 1 [ENDL] while p [ENDL] if p bitwise and 1 [ENDL] set res to res * a [ENDL] set res to res modulo mod [ENDL] set a to a * a [ENDL] set a to a modulo mod [ENDL] set p to right shift p by 1 [ENDL] return res [ENDL] n = long long [ENDL] read n [ENDL] if n equals 0 [ENDL] print 1 [ENDL] else [ENDL] print ( call qpow2 with argument n - 1 plus call qpow2 with argument 2 * n - 1 ) modulo mod [ENDL] oo = 1000000000 , MD = 1000000007", "c++": "long long qpow2 ( long long p ) long long a = 2 ; long long res = 1 ; while ( p ) if ( p & 1 ) res *= a ; res %= mod ; a *= a ; } a %= mod ; p >>= 1 ; return res ; } long long n ; } int main() { cin >> n ; if ( n == 0 ) cout << 1 << endl ; else cout << ( qpow2 ( n - 1 ) + qpow2 ( 2 * n - 1 ) ) % mod << endl ; const int oo = 1e9 , MD = 1e9 + 7 ; } return 0; }"}}
{"translation": {"en": "function fastExp ( get long long b and e , return long long ) [ENDL] ans = 1 [ENDL] while e > 0 [ENDL] if e and 1 ans = ( ans * b ) modulo MD [ENDL] b = ( b * b ) modulo MD [ENDL] right shift e [ENDL] return ans [ENDL] n = long long [ENDL] read n [ENDL] ans = ( fastExp ( 4 , n ) + fastExp ( 2 , n ) ) modulo MD [ENDL] ans = ( ans * fastExp ( 2 , MD - 2 ) ) modulo MD [ENDL] print ans [ENDL] mul is a long long function with long long arguments x and p", "c++": "long long fastExp ( long long b , long long e ) long long ans = 1 ; while ( e > 0 ) if ( e & 1 ) ans = ( ans * b ) % MD ; b = ( b * b ) % MD ; e >>= 1 ; return ans ; } long long n ; } int main() { cin >> n ; long long ans = ( fastExp ( 4 , n ) + fastExp ( 2 , n ) ) % MD ; ans = ( ans * fastExp ( 2 , MD - 2 ) ) % MD ; cout << ans << ' \\n ' ; long long mul ( long long x , long long p ) return 0; }"}}
{"translation": {"en": "declare long long ans = 1 [ENDL] while p is not 0 [ENDL] if p & 1 ! = 0 , assign ans * x % 1000000007 to ans [ENDL] set x to x * x % 1000000007 [ENDL] assign p > > 1 to p [ENDL] return ans [ENDL] declare long long variable n [ENDL] read n [ENDL] if n is equal to 0 [ENDL] print 1 [ENDL] else [ENDL] declare long long variable w = mul ( 2 , n - 1 ) % 1000000007 [ENDL] print ( w + w * w % 1000000007 * 2 % 1000000007 ) % 1000000007 [ENDL] MOD = 1000000007", "c++": "long long ans = 1 ; while ( p ) if ( p & 1 ) ans = ans * x % 1000000007 ; x = x * x % 1000000007 ; p = p >> 1 ; return ans ; } long long n ; } int main() { cin >> n ; if ( n == 0 ) cout << 1 << endl ; else long long w = mul ( 2 , n - 1 ) % 1000000007 ; cout << ( w + w * w % 1000000007 * 2 % 1000000007 ) % 1000000007 << endl ; long long MOD = 1e9 + 7 ; } return 0; }"}}
{"translation": {"en": "mod = 1000000007 [ENDL] N = 100005 [ENDL] inv = array of 100005 long long [ENDL] function powmod ( get long long a and b , return long long ) [ENDL] res = 1 [ENDL] a = a modulo mod [ENDL] while b = b > > 1 [ENDL] if b and 1 multiply res by a modulo mod [ENDL] multiply a by a modulo mod [ENDL] return res [ENDL] n = long long [ENDL] read n [ENDL] inv [ 1 ] = 1 [ENDL] for i = 2 to N exclusive inv [ i ] = ( MOD - MOD / i ) * inv [ MOD modulo i ] modulo MOD [ENDL] d = powmod ( 2 , n ) [ENDL] ans = d * ( d + 1 ) modulo mod * inv [ 2 ] modulo mod [ENDL] print ans [ENDL] create constant long long INF with INF = ( 1ll bitshift left 62 ) - 1", "c++": "long long mod = 1e9 + 7 ; const int N = 100005 ; long long inv [ 100005 ] ; long long powmod ( long long a , long long b ) long long res = 1 ; a %= mod ; for ( ; b ; b >>= 1 ) if ( b & 1 ) res = res * a % mod ; a = a * a % mod ; return res ; } long long n ; } int main() { cin >> n ; inv [ 1 ] = 1 ; for ( int i = 2 ; i < N ; i ++ ) { inv [ i ] = ( MOD - MOD / i ) * inv [ MOD % i ] % MOD ; } long long d = powmod ( 2 , n ) ; long long ans = d * ( d + 1 ) % mod * inv [ 2 ] % mod ; cout << ans << endl ; const long long INF = ( 1ll << 62 ) - 1 ; }"}}
{"translation": {"en": "create constant long long M with M = 1e9 + 7 [ENDL] declare modularExponentiation with long longs x , y as arguments , returning long long [ENDL] create integer res with res = 1 [ENDL] while y is greater than 0 [ENDL] if y bitwise and 1 , set res to ( res * x ) % M [ENDL] set y to y bitshift right 1 [ENDL] set x to ( x * x ) % M [ENDL] return res from function [ENDL] create long long n [ENDL] read n [ENDL] create long long ans with ans = result of run modularExponentiation with 2 , n as arguments [ENDL] set ans to ( ans + ( ans * ans ) ) / 2 [ENDL] print ans % M print newline [ENDL] n , a , b , c = int", "c++": "const long long M = 1e9 + 7 ; long long modularExponentiation ( long long x , long long y ) int res = 1 ; while ( y > 0 ) if ( y & 1 ) res = ( res * x ) % M ; y = y >> 1 ; x = ( x * x ) % M ; return res ; } long long n ; } int main() { cin >> n ; long long ans = modularExponentiation ( 2 , n ) ; ans = ( ans + ( ans * ans ) ) / 2 ; cout << ans % M << endl ; int n , a , b , c ; }"}}
{"translation": {"en": "read n then a then b then c [ENDL] ans = int with ans = 0 [ENDL] for i = 0 to 4000 inclusive [ENDL] for k = 0 to 4000 inclusive [ENDL] sum = int with sum = a * i + b * k [ENDL] if sum is greater than n then continue inner loop [ENDL] if ( n - sum ) mod c equals 0 then set ans to max of ans and ( i + k + ( n - sum ) / c ) [ENDL] print ans [ENDL] a = int array of size 3 with all values set to 0", "c++": "int main() { cin >> n >> a >> b >> c ; int ans = 0 ; for ( int i = 0 ; i <= 4000 ; i ++ ) for ( int k = 0 ; k <= 4000 ; k ++ ) int sum = a * i + b * k ; if ( sum > n ) continue ; if ( ( n - sum ) % c == 0 ) { ans = max ( ans , ( i + k + ( n - sum ) / c ) ) ; } cout << ans << ' \\n ' ; } } int a [ 3 ] = { 0 } ; }"}}
{"translation": {"en": "dp = int array of size 10000 [ENDL] n = int [ENDL] read n then a [ 0 ] then a [ 1 ] then a [ 2 ] [ENDL] set all values of dp to - 100 [ENDL] set dp [ 0 ] to 0 [ENDL] for i = 0 to 3 [ENDL] for j = a [ i ] to n inclusive set dp [ j ] to max of dp [ j ] and dp [ j - a [ i ] ] + 1 [ENDL] print dp [ n ] [ENDL] create ints n , a , b and c", "c++": "int dp [ 10000 ] ; int n ; int main() { cin >> n >> a [ 0 ] >> a [ 1 ] >> a [ 2 ] ; memset ( dp , - 100 , sizeof ( dp ) ) ; dp [ 0 ] = 0 ; for ( int i = 0 ; i < 3 ; i ++ ) for ( int j = a [ i ] ; j <= n ; j ++ ) { dp [ j ] = max ( dp [ j ] , dp [ j - a [ i ] ] + 1 ) ; } cout << dp [ n ] << endl ; } int n , a , b , c ; return 0; }"}}
{"translation": {"en": "read n [ENDL] declare integer array w with size 5 [ENDL] loop i from 1 to 3 inclusive , read input to w [ i ] [ENDL] let e be int array with size 5000 [ENDL] set sizeof ( e ) bytes at the pointer e to - 40 [ENDL] assign 0 to e [ 0 ] [ENDL] loop i from 1 to 3 inclusive [ENDL] for j = w [ i ] to n inclusive , assign max of e [ j - w [ i ] ] + 1 and e [ j ] to e [ j ] [ENDL] print e [ n ] [ENDL] integers = a array that is size 4", "c++": "cin >> n ; int main() { int w [ 5 ] ; for ( int i = 1 ; i <= 3 ; i ++ ) cin >> w [ i ] ; int e [ 5000 ] ; memset ( e , - 40 , sizeof ( e ) ) ; e [ 0 ] = 0 ; for ( int i = 1 ; i <= 3 ; i ++ ) for ( int j = w [ i ] ; j <= n ; j ++ ) { e [ j ] = max ( e [ j - w [ i ] ] + 1 , e [ j ] ) ; } cout << e [ n ] << endl ; } int a [ 4 ] ; }"}}
{"translation": {"en": "integers = dp array size 4001 [ENDL] integers = n [ENDL] read n , a [ 1 ] , a [ 2 ] , a [ 3 ] [ENDL] create memset dp with a size of dp [ENDL] set dp [ 0 ] to 0 [ENDL] for i = 1 to less than or equal to 3 do the following [ENDL] for j = a [ i ] to less than or equal to n then dp [ j ] = the maximum out of dp [ j ] and dp [ j - a [ i ] + 1 [ENDL] output dp [ n ] [ENDL] let a be int array with size 3 fileld with 0", "c++": "int dp [ 4001 ] ; int n ; int main() { cin >> n >> a [ 1 ] >> a [ 2 ] >> a [ 3 ] ; memset ( dp , - 42 , sizeof ( dp ) ) ; dp [ 0 ] = 0 ; for ( int i = 1 ; i <= 3 ; i ++ ) for ( int j = a [ i ] ; j <= n ; j ++ ) { dp [ j ] = max ( dp [ j ] , dp [ j - a [ i ] ] + 1 ) ; } cout << dp [ n ] << endl ; } int a [ 3 ] = { 0 } ; }"}}
{"translation": {"en": "declare integer array dp with size 10000 [ENDL] declare integer variable n [ENDL] read input to n , a [ 0 ] , a [ 1 ] and a [ 2 ] [ENDL] set sizeof ( dp ) bytes at the pointer dp to - 9999 [ENDL] set dp [ 0 ] to 0 [ENDL] loop i from 0 to 3 exclusive [ENDL] loop j from a [ i ] to n inclusive incrementing j , change dp [ j ] to max of dp [ j ] and dp [ j - a [ i ] ] + 1 [ENDL] print dp [ n ] [ENDL] n , a , b , c = integers", "c++": "int dp [ 10000 ] ; int n ; int main() { cin >> n >> a [ 0 ] >> a [ 1 ] >> a [ 2 ] ; memset ( dp , - 9999 , sizeof ( dp ) ) ; dp [ 0 ] = 0 ; for ( int i = 0 ; i < 3 ; i ++ ) for ( int j = a [ i ] ; j <= n ; j ++ ) { dp [ j ] = max ( dp [ j ] , dp [ j - a [ i ] ] + 1 ) ; } cout << dp [ n ] << endl ; } int n , a , b , c ; return 0; }"}}
{"translation": {"en": "read n , a , b , c [ENDL] mx = integer with mx = - 1 [ENDL] for i = n / a down to 0 [ENDL] for j = n / b down to 0 [ENDL] x = integer with x = n - ( i * a + j * b ) [ENDL] if x modulo c is 0 and x > = 0 , mx = max of mx and i + j + x / c [ENDL] print mx [ENDL] n , a , b , c = integers", "c++": "int main() { cin >> n >> a >> b >> c ; int mx = - 1 ; for ( int i = n / a ; i >= 0 ; -- i ) for ( int j = n / b ; j >= 0 ; -- j ) int x = n - ( i * a + j * b ) ; if ( x % c == 0 and x >= 0 ) { mx = max ( mx , i + j + x / c ) ; } cout << mx << endl ; } } int n , a , b , c ; }"}}
{"translation": {"en": "Read n , a , b , c [ENDL] res = integer with 0 [ENDL] for i = 0 to n / a exclusive [ENDL] for i = 0 to n / b exclusive [ENDL] set k to n - i * a - j * b [ENDL] if k is greater than 0 and k modulo c is 0 , then set res to maximum value of res and i + j + k / c [ENDL] print res and a new line [ENDL] create integers n , a , b , c , max with max = 0", "c++": "int main() { cin >> n >> a >> b >> c ; int res = 0 ; for ( int i = 0 ; i <= n / a ; i ++ ) for ( int j = 0 ; j <= n / b ; j ++ ) int k = n - i * a - j * b ; if ( k >= 0 && k % c == 0 ) res = max ( res , i + j + k / c ) ; cout << res << \" \\n \" ; } } int n , a , b , c , max = 0 ; }"}}
{"translation": {"en": "read n read a read b read c [ENDL] for x = 0 to a * x is less than or equal to n , incrementing x [ENDL] for y = 0 to ( y * b ) + ( a * x ) is less than or equal to n , incrementing y [ENDL] create integer z with z = ( n - a * x - b * y ) / c [ENDL] if a * x + b * y + z * c is n [ENDL] if x + y + z is greater than max , set max to x + y + z [ENDL] print max print newline [ENDL] let n , a , b , c be integers", "c++": "int main() { cin >> n >> a >> b >> c ; for ( int x = 0 ; a * x <= n ; x ++ ) for ( int y = 0 ; ( y * b ) + ( a * x ) <= n ; y ++ ) int z = ( n - a * x - b * y ) / c ; if ( a * x + b * y + z * c == n ) if ( x + y + z > max ) max = x + y + z ; cout << max << endl ; } } } int n , a , b , c ; return 0; }"}}
{"translation": {"en": "read n , a , b , c [ENDL] let x , y , z , p , i be integers with p = 0 [ENDL] i is equal to minimum of a , minimum of b and c [ENDL] i is equal to n / i [ENDL] for x is equal to i , x > = 0 , decrease x by 1 [ENDL] for y = 0 to i inclusive [ENDL] z is equal to absolute value of ( n - ( a * x + b * y ) ) / c [ENDL] if a * x + b * y + c * z is equal to n , p = maximum of p and x + y + z [ENDL] print p and newline [ENDL] arr = integer array of size 5 , n = integer", "c++": "int main() { cin >> n >> a >> b >> c ; int x , y , z , p = 0 , i ; i = min ( a , min ( b , c ) ) ; i = n / i ; for ( x = i ; x >= 0 ; x -- ) for ( y = 0 ; y <= i ; y ++ ) z = abs ( ( n - ( a * x + b * y ) ) / c ) ; if ( ( a * x + b * y + c * z ) == n ) { p = max ( p , x + y + z ) ; } cout << p << endl ; } } int arr [ 5 ] , n ; }"}}
{"translation": {"en": "dp = integer array of size 4004 , mn = integer [ENDL] in the function fun that takes integer rem and returns integer [ENDL] if rem is 0 , return 0 [ENDL] if rem < mn , return - 11111111 [ENDL] if dp [ rem ] is not - 1 , return dp [ rem ] [ENDL] ret = integer with ret = - 11111111 [ENDL] for i = 0 to 3 , ret = max ( ret , 1 + fun ( rem - arr [ i ] ) ) [ENDL] return dp [ rem ] = ret [ENDL] set all contents of dp to - 1 [ENDL] read n [ENDL] mn = 100000000 [ENDL] for i = 0 to 2 [ENDL] read arr [ i ] [ENDL] mn = min of arr [ i ] and mn [ENDL] print fun ( n ) [ENDL] create long longs n , a , b and c", "c++": "int dp [ 4004 ] , mn ; int fun ( int rem ) if ( rem == 0 ) return 0 ; if ( rem < mn ) return - 11111111 ; if ( dp [ rem ] != - 1 ) return dp [ rem ] ; int ret = - 11111111 ; for ( int i = 0 ; i < 3 ; i ++ ) { ret = max ( ret , 1 + fun ( rem - arr [ i ] ) ) ; } return dp [ rem ] = ret ; memset ( dp , - 1 , sizeof dp ) ; } int main() { cin >> n ; mn = 100000000 ; for ( int i = 0 ; i < 3 ; i ++ ) cin >> arr [ i ] ; mn = min ( arr [ i ] , mn ) ; cout << fun ( n ) << endl ; } long long n , a , b , c ; }"}}
{"translation": {"en": "let dp be 2d long long array with size 5006 by 5005 [ENDL] long long function result with long long arguments total and cnt [ENDL] if total = 0 return cnt [ENDL] declare long long variables d , e and f = 0 [ENDL] if dp [ total ] [ cnt ] is not - 1m return dp [ total ] [ cnt ] [ENDL] if a < = total , assign result ( total - a , cnt + 1 ) to d [ENDL] if b < = total , assign result ( total - b , cnt + 1 ) to e [ENDL] if c < = total , assign result ( total - c , cnt + 1 ) to f [ENDL] return dp [ total ] [ cnt ] = max of d and max ( e , f ) [ENDL] set value of sizeofdp bytes at the pointer dp to - 1 [ENDL] read input to n , a , b and c [ENDL] declare long long variable ans = result ( n , 0 ) [ENDL] print ans [ENDL] create integer n , create integer array a with size 3", "c++": "long long dp [ 5006 ] [ 5005 ] ; long long result ( long long total , long long cnt ) if ( total == 0 ) return cnt ; long long d = 0 , e = 0 , f = 0 ; if ( dp [ total ] [ cnt ] != - 1 ) return dp [ total ] [ cnt ] ; if ( a <= total ) d = result ( total - a , cnt + 1 ) ; if ( b <= total ) e = result ( total - b , cnt + 1 ) ; if ( c <= total ) f = result ( total - c , cnt + 1 ) ; return dp [ total ] [ cnt ] = max ( d , max ( e , f ) ) ; memset ( dp , - 1 , sizeof dp ) ; } int main() { cin >> n >> a >> b >> c ; long long ans = result ( n , 0 ) ; cout << ans << endl ; int n , a [ 3 ] ; }"}}
{"translation": {"en": "read n read a [ 0 ] read a [ 1 ] read a [ 2 ] [ENDL] sort elements from a to a + 3 [ENDL] create integers i , j , k , ans with i = 0 , j = 0 , k = 0 , ans = - 1 [ENDL] for i = 0 to a * a [ 2 ] is less than n + 1 , incrementing i [ENDL] for j = 0 to i * a [ 2 ] + j * a [ 1 ] is less than n + 1 , incrementing j [ENDL] if ( n - i * a [ 2 ] - j * a [ 1 ] ) % a [ 0 ] is 0 , set ans to maximum of ans and i + j + ( n - i * a [ 2 ] - j * a [ 1 ] ) / a [ 0 ] ) [ENDL] print ans print newline [ENDL] declare const int N = 4005", "c++": "int main() { cin >> n >> a [ 0 ] >> a [ 1 ] >> a [ 2 ] ; sort ( a , a + 3 ) ; int i = 0 , j = 0 , k = 0 , ans = - 1 ; for ( i = 0 ; i * a [ 2 ] < n + 1 ; i ++ ) for ( j = 0 ; i * a [ 2 ] + j * a [ 1 ] < n + 1 ; j ++ ) if ( ( n - i * a [ 2 ] - j * a [ 1 ] ) % a [ 0 ] == 0 ) { ans = max ( ans , i + j + ( n - i * a [ 2 ] - j * a [ 1 ] ) / a [ 0 ] ) ; } cout << ans << endl ; } } const int N = 4005 ; }"}}
{"translation": {"en": "declare const int inf = 1e9 [ENDL] create const long long INF = 1e18 [ENDL] declare const double PI = acos ( - 1 . 0 ) [ENDL] declare const double EPS = 1e - 8 [ENDL] create const int MOD = 1000000007 [ENDL] declare integer variables n , a , b and c [ENDL] declare int array dp with size N [ENDL] read n , a , b and c [ENDL] loop i from 0 to n inclusive , assign - inf to dp [ i ] [ENDL] assign 0 to dp [ 0 ] [ENDL] for i = 1 to n inclusive [ENDL] if a < = i , set dp [ i ] to max of dp [ i ] and dp [ i - a ] + 1 [ENDL] if b < = i , assign max of dp [ i ] and dp [ i - b ] + 1 to dp [ i ] [ENDL] if c < = i , change dp [ i ] to max of dp [ i ] and dp [ i - c ] + 1 [ENDL] print dp [ n ] and \" \\ n \" [ENDL] N = constant integer with N = 1e5 + 7", "c++": "const int inf = 1e9 ; const long long INF = 1e18 ; const double PI = acos ( - 1.0 ) ; const double EPS = 1e-8 ; const int MOD = 1000000007 ; int n , a , b , c ; int dp [ N ] ; cin >> n >> a >> b >> c ; int main() { for ( int i = 0 ; i <= n ; i ++ ) dp [ i ] = - inf ; dp [ 0 ] = 0 ; for ( int i = 1 ; i <= n ; i ++ ) if ( a <= i ) dp [ i ] = max ( dp [ i ] , dp [ i - a ] + 1 ) ; if ( b <= i ) dp [ i ] = max ( dp [ i ] , dp [ i - b ] + 1 ) ; if ( c <= i ) dp [ i ] = max ( dp [ i ] , dp [ i - c ] + 1 ) ; cout << dp [ n ] << \" \\n \" ; } const int N = 1e5 + 7 ; return 0; }"}}
{"translation": {"en": "arr = array of size N [ENDL] n , a , b , c = integers [ENDL] read n , a , b , c [ENDL] set all contents of arr to 0 after casting to integer [ENDL] arr [ a ] = arr [ b ] = arr [ c ] = 1 [ENDL] for i = ( cast to integer ) ( 1 ) to ( cast to integer ) ( n ) [ENDL] if i > = a and arr [ i - a ] , arr [ i ] = max ( arr [ i ] , arr [ i - a ] + 1 ) [ENDL] if i > = b and arr [ i - b ] , arr [ i ] = max ( arr [ i ] , arr [ i - b ] + 1 ) [ENDL] if i > = c and arr [ i - c ] , arr [ i ] = max ( arr [ i ] , arr [ i - c ] + 1 ) [ENDL] print arr [ n ] [ENDL] p = array of 3 integers", "c++": "int arr [ N ] ; int n , a , b , c ; int main() { cin >> n >> a >> b >> c ; memset ( arr , ( int ) ( 0 ) , sizeof ( arr ) ) ; arr [ a ] = arr [ b ] = arr [ c ] = 1 ; for ( int i = ( int ) ( 1 ) ; i <= ( int ) ( n ) ; i ++ ) if ( i >= a and arr [ i - a ] ) arr [ i ] = max ( arr [ i ] , arr [ i - a ] + 1 ) ; if ( i >= b and arr [ i - b ] ) arr [ i ] = max ( arr [ i ] , arr [ i - b ] + 1 ) ; if ( i >= c and arr [ i - c ] ) arr [ i ] = max ( arr [ i ] , arr [ i - c ] + 1 ) ; cout << arr [ n ] << endl ; } int p [ 3 ] ; }"}}
{"translation": {"en": "dp = 2d array of size [ 4010 ] [ 4010 ] [ENDL] n = integer [ENDL] read n [ENDL] for i = 0 to 2 , read p [ i ] [ENDL] minp , maxp = integers with minp = min ( min ( p [ 0 ] , p [ 1 ] ) , p [ 2 ] ) , maxp = max ( max ( p [ 0 ] , p [ 1 ] ) , p [ 2 ] ) [ENDL] dp [ 0 ] [ 0 ] = true [ENDL] for i = minp to n [ENDL] for k = 1 to i / minp [ENDL] for j = 0 to 2 [ENDL] if i > = p [ j ] , dp [ i ] [ k ] = dp [ i ] [ k ] binary or dp [ i - p [ j ] ] [ k - 1 ] [ENDL] for i = n / minp down to 1 [ENDL] if dp [ n ] [ i ] [ENDL] print i [ENDL] break loop [ENDL] create integers a , b and c", "c++": "bool dp [ 4000 + 10 ] [ 4000 + 10 ] ; int n ; int main() { cin >> n ; for ( int i = 0 ; i < 3 ; i ++ ) cin >> p [ i ] ; int minp = min ( min ( p [ 0 ] , p [ 1 ] ) , p [ 2 ] ) , maxp = max ( max ( p [ 0 ] , p [ 1 ] ) , p [ 2 ] ) ; dp [ 0 ] [ 0 ] = true ; for ( int i = minp ; i <= n ; i ++ ) for ( int k = 1 ; k <= i / minp ; k ++ ) for ( int j = 0 ; j < 3 ; j ++ ) if ( i >= p [ j ] ) dp [ i ] [ k ] |= dp [ i - p [ j ] ] [ k - 1 ] ; for ( int i = n / minp ; i >= 1 ; i -- ) if ( dp [ n ] [ i ] ) cout << i << endl ; break ; int a , b , c ; } }"}}
{"translation": {"en": "declare int array memo with size 4001 [ENDL] function solve with int argument i that returns integer [ENDL] if i = 0 , return 0 [ENDL] if memo [ i ] ! = - 1 , return memo [ i ] [ENDL] create integers opt1 , opt2 and opt3 = - 1e9 [ENDL] if i > = a , change opt1 to solve ( i - a ) + 1 [ENDL] if i > = b , change opt2 to solve ( i - b ) + 1 [ENDL] if i > = c , change opt3 to solve ( i - c ) + 1 [ENDL] return memo [ i ] = max of opt1 and ( max of opt2 and opt3 ) [ENDL] set first sizeof memo bytes at the pointer memo to - 1 [ENDL] declare integer variable n [ENDL] read n , a , b and c [ENDL] print result of solve ( n ) [ENDL] declare cut_ribbon with integers n , a , b , c as arguments", "c++": "int memo [ 4001 ] ; int solve ( int i ) if ( i == 0 ) return 0 ; if ( memo [ i ] != - 1 ) return memo [ i ] ; int opt1 = - 1e9 , opt2 = - 1e9 , opt3 = - 1e9 ; if ( i >= a ) { opt1 = solve ( i - a ) + 1 ; } if ( i >= b ) { opt2 = solve ( i - b ) + 1 ; } if ( i >= c ) { opt3 = solve ( i - c ) + 1 ; } return memo [ i ] = max ( opt1 , max ( opt2 , opt3 ) ) ; memset ( memo , - 1 , sizeof memo ) ; } int main() { int n ; cin >> n >> a >> b >> c ; cout << solve ( n ) << endl ; int cut_ribbon ( int n , int a , int b , int c ) return 0; }"}}
{"translation": {"en": "create integer array arr with size n + 1 [ENDL] set bytes from arr to size of arr to value 0 [ENDL] if a is less than or equal to n , set arr [ a ] to 1 [ENDL] if b is less than or equal to n , set arr [ b ] to 1 [ENDL] if c is less than or equal to n , set arr [ c ] to 1 [ENDL] for i = 0 to n inclusive [ENDL] if i is greater than a and arr [ i - a ] is not 0 , set arr [ i ] to maximum of arr [ i ] and arr [ i - a ] + 1 [ENDL] if i is greater than b and arr [ i - b ] is not 0 , set arr [ i ] to maximum of arr [ i ] and arr [ i - b ] + 1 [ENDL] if i is greater than c and arr [ i - c ] is not 0 , set arr [ i ] to maximum of arr [ i ] and arr [ i - c ] + 1 [ENDL] return arr [ n ] from function [ENDL] create integers n , a , b , c [ENDL] read n read a read b read c [ENDL] print result of run cut_ribbon with n , a , b , c as arguments , print newline [ENDL] x , y , r , ans = integers", "c++": "int arr [ n + 1 ] ; memset ( arr , 0 , sizeof ( arr ) ) ; if ( a <= n ) { arr [ a ] = 1 ; } if ( b <= n ) { arr [ b ] = 1 ; } if ( c <= n ) { arr [ c ] = 1 ; } for ( int i = 0 ; i <= n ; i ++ ) if ( i > a && arr [ i - a ] != 0 ) { arr [ i ] = max ( arr [ i ] , arr [ i - a ] + 1 ) ; } if ( i > b && arr [ i - b ] != 0 ) { arr [ i ] = max ( arr [ i ] , arr [ i - b ] + 1 ) ; } if ( i > c && arr [ i - c ] != 0 ) { arr [ i ] = max ( arr [ i ] , arr [ i - c ] + 1 ) ; } return arr [ n ] ; } int n , a , b , c ; } int main() { cin >> n >> a >> b >> c ; cout << cut_ribbon ( n , a , b , c ) << endl ; int x , y , r , ans ; return 0; }"}}
{"translation": {"en": "read x , y , r [ENDL] if 2 * r > min ( x , y ) [ENDL] print Second [ENDL] else [ENDL] print First [ENDL] l , b , r = integers", "c++": "int main() { cin >> x >> y >> r ; if ( 2 * r > min ( x , y ) ) cout << \" Second \" << endl ; else cout << \" First \" << endl ; int l , b , r ; return 0; }"}}
{"translation": {"en": "read l , b , r [ENDL] d , plates = integers with d = 2 * r , plates = 0 [ENDL] if min ( l , b ) < d [ENDL] print Second [ENDL] else [ENDL] print First [ENDL] a , b , c = int", "c++": "int main() { cin >> l >> b >> r ; int d = 2 * r , plates = 0 ; if ( min ( l , b ) < d ) cout << \" Second \" << endl ; else cout << \" First \" << endl ; int a , b , c ; }"}}
{"translation": {"en": "read a then b then c [ENDL] if a and b are both greater or equal to 2 * c [ENDL] print \" First \" [ENDL] else [ENDL] print \" Second \" [ENDL] print newline [ENDL] create constant integer MAXN with MAXN = 100000 + 7", "c++": "int main() { cin >> a >> b >> c ; if ( a >= 2 * c && b >= 2 * c ) cout << \" First \" ; else cout << \" Second \" ; cout << endl ; const int MAXN = 100000 + 7 ; return 0; }"}}
{"translation": {"en": "create constant integer mod with mod = 23333333 [ENDL] create integers a , b , r [ENDL] read a read b read r [ENDL] if a is less than 2 * r or b is less than 2 * r [ENDL] print \" Second \" print newline [ENDL] else [ENDL] print \" First \" print newline [ENDL] str = array of 30100 strings", "c++": "const int mod = 23333333 ; int a , b , r ; cin >> a >> b >> r ; int main() { if ( a < 2 * r || b < 2 * r ) cout << \" Second \" << endl ; else cout << \" First \" << endl ; string str [ 30100 ] ; return 0; }"}}
{"translation": {"en": "a , b , r = int [ENDL] read a , b , r [ENDL] multiply r by 2 [ENDL] if r < = a and r < = b [ENDL] print \" First \" [ENDL] else [ENDL] print \" Second \" [ENDL] integers = t integer pi = 3 . 14", "c++": "int a , b , r ; cin >> a >> b >> r ; int main() { r *= 2 ; if ( r <= a && r <= b ) puts ( \" First \" ) ; else puts ( \" Second \" ) ; const int pi = 3.14 ; }"}}
{"translation": {"en": "integers = a , b , r [ENDL] read a , b , r [ENDL] if 2 * r is greater than min ( a , b then do the following [ENDL] output Second [ENDL] else [ENDL] integers = cnt = 0 [ENDL] integers = ans = max ( a , b ) [ENDL] integers = res = min ( a , b ) [ENDL] if 1 is true do the following [ENDL] set ans to maximum of ans and res [ENDL] set res to minimum and ans and res [ENDL] cnt equals cnt plus res / ( 2 * r ) [ENDL] subtract ( res / ( 2 * r ) ) * 2 * r from ans [ENDL] integers = minn = minimum of ans or res [ENDL] if minn is less than 2 * r then do the following break [ENDL] if cnt is greater than or equal to 1 then do the following [ENDL] output First [ENDL] else [ENDL] output Second [ENDL] n , k , l = long long integers", "c++": "int a , b , r ; int main() { cin >> a >> b >> r ; if ( 2 * r > min ( a , b ) ) cout << \" Second \" << endl ; else int cnt = 0 ; int ans = max ( a , b ) ; int res = min ( a , b ) ; while ( 1 ) ans = max ( ans , res ) ; res = min ( ans , res ) ; cnt += res / ( 2 * r ) ; ans -= ( res / ( 2 * r ) ) * 2 * r ; int minn = min ( ans , res ) ; if ( minn < 2 * r ) break ; if ( cnt >= 1 ) } cout << \" First \" << endl ; else cout << \" Second \" << endl ; long long int n , k , l ; } return 0; }"}}
{"translation": {"en": "input n , k , l [ENDL] if 2 * l is less than or equal to minimum of n and k then do the following [ENDL] output First [ENDL] else [ENDL] output Second [ENDL] a , b , r = integers", "c++": "int main() { cin >> n >> k >> l ; if ( 2 * l <= min ( n , k ) ) cout << \" First \" << endl ; else cout << \" Second \" << endl ; int a , b , r ; return 0; }"}}
{"translation": {"en": "Read a , b , r [ENDL] if a is less than 2 * r OR b is less than 2 * r [ENDL] print Second and a new line [ENDL] else do the following [ENDL] print First and a new line [ENDL] create integers n1 , n2 , r", "c++": "cin >> a >> b >> r ; int main() { if ( a < 2 * r || b < 2 * r ) cout << \" Second\\n \" ; else cout << \" First\\n \" ; int n1 , n2 , r ; return 0; }"}}
{"translation": {"en": "read n1 read n2 read r [ENDL] create integer r2 with r2 = r + r [ENDL] if n1 is greater than or equal to r2 and n2 is greater than or equal to r2 [ENDL] print \" First \\ n \" [ENDL] else [ENDL] print \" Second \\ n \" [ENDL] a , b , r = int", "c++": "int main() { cin >> n1 >> n2 >> r ; int r2 = r + r ; if ( n1 >= r2 && n2 >= r2 ) cout << \" First\\n \" ; else cout << \" Second\\n \" ; int a , b , r ; return 0; }"}}
{"translation": {"en": "read a then b then r [ENDL] set r to r * 2 [ENDL] if a or b is less than r [ENDL] print \" Second \" [ENDL] else [ENDL] print \" First \" [ENDL] create integers a , b , r , m", "c++": "int main() { cin >> a >> b >> r ; r *= 2 ; if ( a < r || b < r ) cout << \" Second \" << endl ; else cout << \" First \" << endl ; int a , b , r , m ; } return 0; }"}}
{"translation": {"en": "read a read b read r [ENDL] if a is greater than b [ENDL] set m to b [ENDL] else [ENDL] set m to a [ENDL] if m is greater than or equal to 2 * r [ENDL] print \" First \" print newline [ENDL] else [ENDL] print \" Second \" print newline [ENDL] a , b , r = integers", "c++": "int main() { cin >> a >> b >> r ; if ( a > b ) m = b ; else m = a ; if ( m >= 2 * r ) cout << \" First \" << endl ; else cout << \" Second \" << endl ; int a , b , r ; return 0; }"}}
{"translation": {"en": "Read a , b , r [ENDL] if minimum value of a and b is greater than or equal to 2 * r [ENDL] print First and a new line [ENDL] else do the following [ENDL] print Second and a new line [ENDL] create int min , height , width , radius", "c++": "int main() { cin >> a >> b >> r ; if ( min ( a , b ) >= 2 * r ) cout << \" First \" << endl ; else cout << \" Second \" << endl ; int min , height , width , radius ; return 0; }"}}
{"translation": {"en": "while read height , width , radius [ENDL] if heigth less than width [ENDL] set min to height [ENDL] else [ENDL] min = width [ENDL] assign radius * 2 to radius [ENDL] if min > = radius [ENDL] print First [ENDL] else [ENDL] print Second [ENDL] define ints a , b , and r", "c++": "int main() { while ( cin >> height >> width >> radius ) if ( height < width ) min = height ; else min = width ; radius = radius * 2 ; if ( min >= radius ) cout << \" First \" << endl ; else cout << \" Second \" << endl ; int a , b , r ; } return 0; }"}}
{"translation": {"en": "read a , b , r [ENDL] if 2 r < = a and 2 r < = b [ENDL] print First and newline [ENDL] else . . . [ENDL] print Second followed by newline [ENDL] integers = a , b , r", "c++": "int main() { cin >> a >> b >> r ; if ( 2 * r <= a && 2 * r <= b ) cout << \" First\\n \" ; else cout << \" Second\\n \" ; int a , b , r ; return 0; }"}}
{"translation": {"en": "read a , b , r [ENDL] multiply r by 2 [ENDL] if r is greater than minimum of a or b then proceed with the following [ENDL] output Second [ENDL] else [ENDL] output First [ENDL] define ints n , a , b , c", "c++": "int main() { cin >> a >> b >> r ; r *= 2 ; if ( r > min ( a , b ) ) cout << \" Second \" << ' \\n ' ; else cout << \" First \" << ' \\n ' ; int n , a , b , c ; }"}}
{"translation": {"en": "read a , b , c [ENDL] if a < c * 2 or b < c * 2 [ENDL] print \" Second \" and newline [ENDL] otherwise [ENDL] print \" First \" and a newline [ENDL] n , m , r = integers", "c++": "int main() { cin >> a >> b >> c ; if ( a < c * 2 || b < c * 2 ) cout << \" Second \" << endl ; else cout << \" First \" << endl ; int n , m , r ; }"}}
{"translation": {"en": "while read n , m , r [ENDL] if r * 2 < = n and r * 2 < = m [ENDL] print First [ENDL] else [ENDL] print Second [ENDL] a , b , r = integers", "c++": "int main() { while ( cin >> n >> m >> r ) if ( r * 2 <= n && r * 2 <= m ) cout << \" First \" << endl ; else cout << \" Second \" << endl ; int a , b , r ; } }"}}
{"translation": {"en": "Read a , b , r [ENDL] if a is less than r * 2 OR b is less than r * 2 [ENDL] print Second and a new line [ENDL] else do the following [ENDL] print First and a new line [ENDL] create integers a , b , r", "c++": "cin >> a >> b >> r ; int main() { if ( a < r * 2 || b < r * 2 ) cout << \" Second \" << endl ; else cout << \" First \" << endl ; int a , b , r ; return 0; }"}}
{"translation": {"en": "read a read b read r [ENDL] if a is greater than or equal to b [ENDL] if ( 2 * r is less than or equal to b ) [ENDL] print \" First \\ n \" [ENDL] else [ENDL] print \" Second \\ n \" [ENDL] else [ENDL] if ( 2 * r is less than or equal to a ) [ENDL] print \" First \\ n \" [ENDL] else [ENDL] print \" Second \\ n \" [ENDL] x , y , r = integers", "c++": "int main() { cin >> a >> b >> r ; if ( a >= b ) if ( 2 * r <= b ) cout << \" First\\n \" ; else cout << \" Second\\n \" ; else if ( 2 * r <= a ) cout << \" First\\n \" ; else cout << \" Second\\n \" ; int x , y , r ; } return 0; }"}}
{"translation": {"en": "read x , y , r [ENDL] if x < r * 2 or y < r * 2 [ENDL] print Second [ENDL] else [ENDL] print First [ENDL] create long long int mod = 1000000007", "c++": "int main() { cin >> x >> y >> r ; if ( x < r * 2 || y < r * 2 ) cout << \" Second\\n \" ; else cout << \" First\\n \" ; long long int mod = 1000000007 ; return 0; }"}}
{"translation": {"en": "let a , b and r be integers [ENDL] read a , b and r [ENDL] if 2 * r is greater than min ( a , b ) [ENDL] print Second [ENDL] else [ENDL] print First [ENDL] a , b , r = integers", "c++": "int a , b , r ; int main() { cin >> a >> b >> r ; if ( 2 * r > min ( a , b ) ) cout << \" Second \" << endl ; else cout << \" First \" << endl ; int a , b , r ; } return 0; }"}}
{"translation": {"en": "read a , b , r [ENDL] if 2 * r < = min ( a , b ) [ENDL] print First [ENDL] else [ENDL] print Second [ENDL] let k , b , n , t be long integers", "c++": "int main() { cin >> a >> b >> r ; if ( 2 * r <= min ( a , b ) ) cout << \" First \" << endl ; else cout << \" Second \" << endl ; long long k , b , n , t ; return 0; }"}}
{"translation": {"en": "read k , b , n , t [ENDL] let the value of long integer z is equal to k + b [ENDL] let g be a integer with value g is equal to n [ENDL] while ( z is less than t and g is greater than 0 ) [ENDL] decrease g by 1 [ENDL] let the value of z is equal to z * k + b [ENDL] if ( z is equal to t ) , decrease g by 1 [ENDL] print g and newline [ENDL] create long long u = 1", "c++": "int main() { cin >> k >> b >> n >> t ; long long z = k + b ; int g = n ; while ( z < t && g > 0 ) g -- ; z = z * k + b ; if ( z == t ) { g -- ; } } cout << g << endl ; long long u = 1 ; }"}}
{"translation": {"en": "create long long k , b , n and t [ENDL] read k , b , n and t [ENDL] if k = 1 [ENDL] create long long x = 1 [ENDL] for i = 1 to n inclusive [ENDL] create long long variable r = t [ENDL] create long long variable ans = 0 [ENDL] while r is less than x [ENDL] increase ans by one [ENDL] increase r by b [ENDL] print ans [ENDL] create long long r = 0 [ENDL] while u * ( k - 1 + b ) < = ( k * t - t + b ) [ENDL] multiply u by k [ENDL] increase r by one [ENDL] print max of n - r + 1 and 0LL [ENDL] l , b , n , t = long long", "c++": "int main() { long long k , b , n , t ; cin >> k >> b >> n >> t ; if ( k == 1 ) long long x = 1 ; for ( long long i = 1 ; i <= n ; i ++ ) x += b ; long long r = t ; long long ans = 0 ; while ( r < x ) ans ++ ; r += b ; cout << ans << endl ; } long long r = 0 ; return 0; } while ( u * ( k - 1 + b ) <= ( k * t - t + b ) ) u *= k ; r ++ ; cout << max ( n - r + 1 , 0LL ) << endl ; } long long k , b , n , t ; }"}}
{"translation": {"en": "read k , b , n , t [ENDL] set x = 1 and cnt = - 1 [ENDL] for i = 1 to n inclusive [ENDL] set x = k * x + b [ENDL] if x is greater than t [ENDL] set cnt = i - 1 [ENDL] stop the loop [ENDL] if cnt is equal to - 1 [ENDL] print 0 [ENDL] otherwise [ENDL] print n - cnt [ENDL] create long long k , b , n , z", "c++": "int main() { cin >> k >> b >> n >> t ; long long x = 1 , cnt = - 1 ; for ( long long i = 1 ; i <= n ; ++ i ) x = k * x + b ; if ( x > t ) cnt = i - 1 ; break ; if ( cnt == - 1 ) } } cout << 0 << endl ; else cout << n - cnt << endl ; long long k , b , n , z ; return 0; }"}}
{"translation": {"en": "read k , b , n and z [ENDL] set x = 1 [ENDL] while n and k * x + b equal to or greater than z [ENDL] assign k * x + b to x [ENDL] decrement n [ENDL] print n and a new line [ENDL] k , b , n , t , ans = integers", "c++": "int main() { cin >> k >> b >> n >> z ; int x = 1 ; while ( n && k * x + b <= z ) x = k * x + b ; n -- ; cout << n << endl ; } int k , b , n , t , ans ; return 0; }"}}
{"translation": {"en": "assign 1 to m [ENDL] read k , b , n , t [ENDL] while m equal to or greater than t , assign m * k + b to m , increment ans [ENDL] if n > = ans [ENDL] print n - ans + 1 [ENDL] otherwise [ENDL] print 0 and a new line [ENDL] declare double variables k , b , n and t", "c++": "long long m = 1 ; cin >> k >> b >> n >> t ; int main() { while ( m <= t ) m = m * k + b , ans ++ ; if ( n >= ans ) cout << n - ans + 1 << endl ; else cout << 0 << endl ; double k , b , n , t ; return 0; }"}}
{"translation": {"en": "read k , b , n and t [ENDL] declare integer x = 0 [ENDL] declare double variable dub = ( t * ( k - 1 ) + b ) / ( b + k - 1 ) [ENDL] if k = 1 [ENDL] dub = ( t - 1 ) / b [ENDL] set value of x to dub casted to integer [ENDL] if x is greater than n [ENDL] else [ENDL] for i = 1 to n + 1 inclusive [ENDL] if pow ( k , i ) > = dub + 1 [ENDL] set value of x to i - 1 [ENDL] stop the loop [ENDL] if i = n + 1 , assign value of n to x [ENDL] create integer ans = n - x [ENDL] print ans [ENDL] let c1 , c2 , x , k , i , b , n , t , cnt be long long with cnt = 0", "c++": "int main() { cin >> k >> b >> n >> t ; int x = 0 ; double dub = ( t * ( k - 1 ) + b ) / ( b + k - 1 ) ; if ( k == 1 ) dub = ( t - 1 ) / b ; x = ( int ) dub ; if ( x > n ) { x = n ; } else for ( int i = 1 ; i <= n + 1 ; i ++ ) if ( pow ( k , i ) >= ( int ) dub + 1 ) x = i - 1 ; break ; if ( i == n + 1 ) { x = n ; } } int ans = n - x ; } } cout << ans << endl ; long long c1 , c2 , x , k , i , b , n , t , cnt = 0 ; return 0; }"}}
{"translation": {"en": "read k , b , n , t [ENDL] set c1 = b + t * ( k - 1 ) [ENDL] set c2 = b + k - 1 [ENDL] set cnt = 1 [ENDL] set x = n [ENDL] if k not equal to 1 do the following [ENDL] for i = n iterate while i is less than or equal to 0 having i decrease by 1 after each iteration [ENDL] if c1 is greater or equal to cnt * c2 do the following [ENDL] set x = i [ENDL] else do the following [ENDL] break out of the iteration loop [ENDL] set cnt = cnt * k [ENDL] print x and one newline [ENDL] else do the following [ENDL] for i = 0 to n inclusive [ENDL] if i * b is greater or equal to 1 + n * b - t break out of the iteration loop [ENDL] print i and one newline [ENDL] in the function solve that takes long long k , b , n , t and returns long long", "c++": "int main() { cin >> k >> b >> n >> t ; c1 = b + t * ( k - 1 ) ; c2 = b + k - 1 ; cnt = 1 ; x = n ; if ( k != 1 ) for ( i = n ; i >= 0 ; i -- ) if ( c1 >= cnt * c2 ) x = i ; else break ; cnt *= k ; cout << x << endl ; } else for ( i = 0 ; i <= n ; i ++ ) if ( i * b >= 1 + n * b - t ) break ; cout << i << endl ; } long long solve ( long long k , long long b , long long n , long long t ) } return 0; }"}}
{"translation": {"en": "if k is 1 [ENDL] low , high = long long with low = - 1 , high = n [ENDL] while high - low > 1 [ENDL] mid = long long with mid = ( low + high ) / 2 [ENDL] if 1 - t + b * ( n - mid ) < = 0 [ENDL] high = mid [ENDL] else [ENDL] low = mid [ENDL] return high [ENDL] answ = long long with answ = n [ENDL] pow = __float128 with pow = 1 [ENDL] while answ > 0 and ( k - 1 ) * ( pow * k - t ) + b * ( pow * k - 1 ) < = 0 [ENDL] pow = pow * k [ENDL] decrement answ [ENDL] return answ [ENDL] k , b , n , t = long long [ENDL] while read k , b , n , t , print solve ( k , b , n , t ) [ENDL] k , b , n , t , i , j , m , ans , r , x , xx = long long int with m = 0 , x = 1 , xx = 0", "c++": "if ( k == 1 ) long long low = - 1 , high = n ; while ( high - low > 1 ) long long mid = ( low + high ) / 2 ; if ( 1 - t + b * ( n - mid ) <= 0 ) high = mid ; else low = mid ; return high ; } } long long answ = n ; } __float128 pow = 1 ; while ( answ > 0 && ( k - 1 ) * ( pow * k - t ) + b * ( pow * k - 1 ) <= 0 ) pow *= k ; answ -- ; return answ ; } long long k , b , n , t ; } int main() { while ( cin >> k >> b >> n >> t ) { cout << solve ( k , b , n , t ) << endl ; } long long int k , b , n , t , i , j , m = 0 , ans , r , x = 1 , xx = 0 ; return 0; }"}}
{"translation": {"en": "read k , b , n , t [ENDL] for i = 1 increment i [ENDL] r = ( x * k ) + b [ENDL] if r < = t [ENDL] increment m [ENDL] else [ENDL] break loop [ENDL] x = r [ENDL] ans = n - m [ENDL] ans = max of xx and ans [ENDL] print ans [ENDL] create long long integers k , b , n and t", "c++": "int main() { cin >> k >> b >> n >> t ; for ( i = 1 ; ; i ++ ) r = ( x * k ) + b ; if ( r <= t ) m ++ ; else break ; x = r ; ans = n - m ; } ans = max ( xx , ans ) ; cout << ans << endl ; long long int k , b , n , t ; }"}}
{"translation": {"en": "read k , b , n and t [ENDL] declare long long integer variable num = 1 [ENDL] declare long long integer variable index = 0 [ENDL] while num < = t [ENDL] num = k * num + b [ENDL] increment index [ENDL] decrease index [ENDL] print max of 0ll and n - index and ' \\ n ' [ENDL] set constant integer M = 100 + 10", "c++": "int main() { cin >> k >> b >> n >> t ; long long int num = 1 ; long long int index = 0 ; while ( num <= t ) num = k * num + b ; index ++ ; index -- ; } cout << max ( 0ll , n - index ) << ' \\n ' ; const int M = 100 + 10 ; }"}}
{"translation": {"en": "create long long integer k , b , n , t [ENDL] read k , b , n , t [ENDL] if k = 1 [ENDL] set z = 1 + n * b [ENDL] if z is equal to or less than t [ENDL] print 0 [ENDL] otherwise [ENDL] set res = z - t [ENDL] ans = res / b + ( res modulo b different from 0 ) [ENDL] print and and a new line [ENDL] otherwise [ENDL] set long long integer num1 = t * ( k - 1 ) + b [ENDL] num2 = k - 1 + b [ENDL] set num3 = num1 / num2 [ENDL] set num1 equal to 1 [ENDL] set integer tm = 0 [ENDL] while num * k is equal to or less than num3 [ENDL] set num = num * k [ENDL] increment tm [ENDL] set m = n - tm [ENDL] m = max between m and 0 [ENDL] print m [ENDL] create long long ans , set k , b , n , t , x to 1", "c++": "long long int k , b , n , t ; int main() { cin >> k >> b >> n >> t ; if ( k == 1 ) long long int z = 1 + n * b ; if ( z <= t ) cout << \" 0 \" << endl ; else long long int res = z - t ; long long int ans = res / b + ( res % b != 0 ) ; cout << ans << endl ; else } long long int num1 = t * ( k - 1 ) + b ; long long int num2 = k - 1 + b ; long long int num3 = num1 / num2 ; long long int num = 1 ; int tm = 0 ; while ( num * k <= num3 ) num = num * k ; tm ++ ; int m = n - tm ; } m = max ( m , 0 ) ; cout << m << endl ; long long k , b , n , t , x = 1 , ans ; } return 0; }"}}
{"translation": {"en": "read k , b , n and t [ENDL] while x < = t , set x = x * k + b , increment ans [ENDL] print max between 011 and n - ans + 1 [ENDL] k , b , n , t = long longs", "c++": "cin >> k >> b >> n >> t ; int main() { while ( x <= t ) x = x * k + b , ans ++ ; cout << max ( 0ll , n - ans + 1 ) << endl ; long long k , b , n , t ; return 0; }"}}
{"translation": {"en": "read k , b , n and t [ENDL] declare cnt as long long set to 1 [ENDL] while c less than or equal to t [ENDL] set cnt to cnt * k + b [ENDL] decrement n [ENDL] print max ( 0LL , n + 1 ) [ENDL] long long function bigmod with long long arguments a , b and m", "c++": "int main() { cin >> k >> b >> n >> t ; long long cnt = 1 ; while ( cnt <= t ) cnt = cnt * k + b ; n -- ; cout << max ( 0LL , n + 1 ) << endl ; } long long bigmod ( long long a , long long b , long long m ) return 0; }"}}
{"translation": {"en": "if b = 0 [ENDL] x = bigmod of a , b / 2 and m [ENDL] x = ( x % m * x % m ) % m [ENDL] if b % 2 ) x = ( x % m * a % m [ENDL] return x % m [ENDL] long long function po with long long arguments a and b [ENDL] return 1 if a = 1 [ENDL] declare long long r = 1 [ENDL] decrement b and loop , while b > 0 ; multiply r by a in that loop [ENDL] return r [ENDL] declare long long variables k , b , n , t and s where s = 0 [ENDL] read k , b , n and t [ENDL] for i = 0 to n inclusive [ENDL] assign value of s + po ( k , i ) to new long long v [ENDL] if v > = t [ENDL] if v is greater than t [ENDL] print n - i + 1 [ENDL] else [ENDL] print n - i [ENDL] increase s by b * po ( k , i ) [ENDL] print \" 0 \" [ENDL] k , b , n , t = integers", "c++": "if ( b == 0 ) return 1 % m ; long long x = bigmod ( a , b / 2 , m ) ; x = ( x % m * x % m ) % m ; if ( b % 2 ) x = ( x % m * a % m ) % m ; return x % m ; long long po ( long long a , long long b ) } if ( a == 1 ) return 1 ; long long r = 1 ; while ( b -- ) r *= a ; return r ; long long k , b , n , t , s = 0 ; } int main() { cin >> k >> b >> n >> t ; for ( int i = 0 ; i <= n ; i ++ ) long long v = s + po ( k , i ) ; if ( v >= t ) if ( v > t ) cout << n - i + 1 << endl ; else cout << n - i << endl ; s += b * po ( k , i ) ; return 0; } puts ( \" 0 \" ) ; } long long k , b , n , t ; }"}}
{"translation": {"en": "Read k , b , n , t [ENDL] sum = integer with 1 [ENDL] cnt = integer with 0 [ENDL] while sum is less than or equal to t [ENDL] set sum to sum * k + b [ENDL] increment cnt [ENDL] if cnt is greater than n [ENDL] print 0 and a new line [ENDL] else do the following [ENDL] print n - cnt + 1 and a new line [ENDL] long long function solve with long long arguments k , b , n and t", "c++": "int main() { cin >> k >> b >> n >> t ; long long sum = 1 ; int cnt = 0 ; while ( sum <= t ) sum = sum * k + b ; cnt ++ ; if ( cnt > n ) } cout << 0 << endl ; else cout << n - cnt + 1 << endl ; long long solve ( long long k , long long b , long long n , long long t ) return 0; }"}}
{"translation": {"en": "if k = 1 [ENDL] declare long longs low = - 1 and high = n [ENDL] while high - low is greater than 1 [ENDL] declare long long variable mid = ( low + high ) / 2 [ENDL] if 1 - t + b * ( n - mid ) < = 0 [ENDL] assign value of mid to high [ENDL] else [ENDL] assign value of mid to low [ENDL] return high [ENDL] declare long long variable answ = n [ENDL] declare __float128 variable pow = 1 [ENDL] while answ > 0 & & ( k - 1 ) * ( pow * k - t ) + b * ( pow * k - 1 ) < = 0 [ENDL] multiply pow by k [ENDL] decrease answ [ENDL] return answ [ENDL] declare long long variables k , b , n and t [ENDL] while car read k , b , n and t , print solve ( k , b , n , t ) [ENDL] point , num_diff and num are maps from string to int", "c++": "if ( k == 1 ) long long low = - 1 , high = n ; while ( high - low > 1 ) long long mid = ( low + high ) / 2 ; if ( 1 - t + b * ( n - mid ) <= 0 ) high = mid ; else low = mid ; return high ; } } long long answ = n ; } __float128 pow = 1 ; while ( answ > 0 && ( k - 1 ) * ( pow * k - t ) + b * ( pow * k - 1 ) <= 0 ) pow *= k ; answ -- ; return answ ; } long long k , b , n , t ; } int main() { while ( cin >> k >> b >> n >> t ) { cout << solve ( k , b , n , t ) << endl ; } map < string , int > point , num_diff , num ; return 0; }"}}
{"translation": {"en": "declare string variable s [ENDL] name is an array of strings with size 56 [ENDL] boolean function cmp with string arguments s1 and s2 [ENDL] if point [ s1 ] ! = point [ s2 ] return point [ s1 ] > point [ s2 ] [ENDL] if num_diff [ s1 ] ! = num_diff [ s2 ] return num_diff [ s1 ] > num_diff [ s2 ] [ENDL] return num [ s1 ] > num [ s2 ] [ENDL] let s1 and s2 be strings [ENDL] declare integer variable n [ENDL] num1 and num2 are integers [ENDL] c = character [ENDL] read n [ENDL] for i = 1 to n inclusive read name [ i ] [ENDL] for integer i = 1 to ( n * ( n - 1 ) ) > > 1 inclusive [ENDL] read s , num1 , c and num2 [ENDL] s1 = substring of s from the start to the first character ' - ' [ENDL] s2 = substring of s from the first character ' - ' to the end [ENDL] if num1 is greater than num2 , add 3 to point [ s1 ] [ENDL] if num1 is less than num2 , add 3 to point [ s2 ] [ENDL] if num1 = num2 [ENDL] increase point [ s1 ] [ENDL] increase point [ s2 ] [ENDL] increase num [ s1 ] by num1 [ENDL] increase num [ s2 ] by num2 [ENDL] increase num_diff [ s1 ] by num1 - num2 [ENDL] increase num_diff [ s2 ] by num2 - num1 [ENDL] sort name from name + 1 to name + n + 1 using comparator cmp [ENDL] sort name from name + 1 to name + ( n / 2 + 1 ) using comparator cmp [ENDL] for integer i = 1 to ( n > > 1 ) inclusive print name [ i ] and a new line [ENDL] scored , conceed , points are maps of string to int", "c++": "string s ; string name [ 56 ] ; bool cmp ( string s1 , string s2 ) if ( point [ s1 ] != point [ s2 ] ) return point [ s1 ] > point [ s2 ] ; if ( num_diff [ s1 ] != num_diff [ s2 ] ) return num_diff [ s1 ] > num_diff [ s2 ] ; return num [ s1 ] > num [ s2 ] ; string s1 , s2 ; } int n ; int num1 , num2 ; char c ; cin >> n ; int main() { for ( int i = 1 ; i <= n ; i ++ ) { cin >> name [ i ] ; } for ( int i = 1 ; i <= ( n * ( n - 1 ) ) >> 1 ; i ++ ) cin >> s >> num1 >> c >> num2 ; s1 = s . substr ( 0 , s . find ( \" - \" ) ) ; s2 = s . substr ( s . find ( \" - \" ) + 1 ) ; if ( num1 > num2 ) { point [ s1 ] += 3 ; } if ( num1 < num2 ) { point [ s2 ] += 3 ; } if ( num1 == num2 ) point [ s1 ] ++ ; point [ s2 ] ++ ; num [ s1 ] += num1 ; } num [ s2 ] += num2 ; num_diff [ s1 ] += num1 - num2 ; num_diff [ s2 ] += num2 - num1 ; sort ( name + 1 , name + n + 1 , cmp ) ; } sort ( name + 1 , name + ( n / 2 + 1 ) ) ; for ( int i = 1 ; i <= ( n >> 1 ) ; i ++ ) { cout << name [ i ] << endl ; } map < string , int > scored , conceed , points ; return 0; }"}}
{"translation": {"en": "vec and a are vectors of strings [ENDL] boolean function cmp with string arguments a and b [ENDL] if points [ b ] is greater than points [ a ] [ENDL] return 1 [ENDL] else if points [ b ] is less than points [ a ] [ENDL] else [ENDL] dif1 is an integer = scored [ a ] - conceed [ a ] [ENDL] dif2 is an integer = scored [ b ] - conceed [ b ] [ENDL] if dif1 is less than dif2 [ENDL] return 1 [ENDL] else if dif1 is greater than dif2 [ENDL] else [ENDL] if scored [ a ] is greater than scored [ b ] [ENDL] else if scored [ a ] is less than scored [ b ] [ENDL] return 1 [ENDL] set integer n to 0 [ENDL] st = string [ENDL] read n [ENDL] m and k are integers with m = n and k = n / 2 [ENDL] while m - - [ENDL] read st [ENDL] push st into vec [ENDL] n = ( n * n - 1 ) / 2 [ENDL] st = \" \" [ENDL] read character from the input [ENDL] while n - - [ENDL] let i be integer [ENDL] team1 and team2 are empty strings [ENDL] read line from input into st [ENDL] for i = 0 to length of st exclusive [ENDL] if st [ i ] is equal to ' - ' [ENDL] increase i by one [ENDL] break the loop [ENDL] increase team1 by st [ i ] [ENDL] loop through i while i < length of st , incrementing i [ENDL] if st [ i ] is equal to ' ' [ENDL] increase i [ENDL] stop the loop [ENDL] increase team2 by st [ i ] [ENDL] let j and sum1 be integers with j = 1 and sum1 = 0 [ENDL] loop through i while i < length of st , incrementing i [ENDL] if st [ i ] is equal to ' : ' [ENDL] increase i by one [ENDL] break the loop [ENDL] create integer c with value st [ i ] - 48 [ENDL] sum1 = ( sum1 * j ) + c [ENDL] multiply j by 10 [ENDL] increase scored [ team1 ] by sum1 [ENDL] increase conceed [ team2 ] by sum1 [ENDL] create integer sum2 with value 0 [ENDL] set value of j to 1 [ENDL] loop through i while i < length of st , incrementing i [ENDL] create integer c with value st [ i ] - 48 [ENDL] sum2 = ( sum2 * j ) + c [ENDL] multiply j by 10 [ENDL] increase scored [ team2 ] by sum2 [ENDL] increase conceed [ team1 ] by sum2 [ENDL] if sum1 is greater than sum2 [ENDL] increase points [ team1 ] by 3 [ENDL] else if sum1 is less than sum2 [ENDL] increase points [ team2 ] by 3 [ENDL] else [ENDL] increment points [ team1 ] [ENDL] increment points [ team2 ] [ENDL] sort vec using cmp as comparator function [ENDL] for i = length of vec - 1 to k inclusive , decrementing i , push i into vec [ENDL] sort a [ENDL] for i = 0 to length of a exclusive print a [ i ] [ENDL] create maps pt , sc , mi from string to integer", "c++": "vector < string > vec , a ; bool cmp ( string a , string b ) if ( points [ b ] > points [ a ] ) return 1 ; else if ( points [ b ] < points [ a ] ) else return 0; int dif1 = scored [ a ] - conceed [ a ] ; int dif2 = scored [ b ] - conceed [ b ] ; if ( dif1 < dif2 ) return 1 ; else if ( dif1 > dif2 ) else return 0; if ( scored [ a ] > scored [ b ] ) else if ( scored [ a ] < scored [ b ] ) return 0; return 1 ; int n = 0 ; } } } int main() { string st ; cin >> n ; int m = n , k = n / 2 ; while ( m -- ) cin >> st ; vec . push_back ( st ) ; n = ( n * n - 1 ) / 2 ; } st = \"  \" ; getchar ( ) ; while ( n -- ) int i ; string team1 = \"  \" , team2 = \"  \" ; getline ( cin , st ) ; for ( i = 0 ; i < st . size ( ) ; i ++ ) if ( st [ i ] == ' - ' ) i ++ ; break ; team1 += st [ i ] ; } for ( ; i < st . size ( ) ; i ++ ) } if ( st [ i ] == '   ' ) i ++ ; break ; team2 += st [ i ] ; } int j = 1 , sum1 = 0 ; } for ( ; i < st . size ( ) ; i ++ ) if ( st [ i ] == ' : ' ) i ++ ; break ; int c = st [ i ] - 48 ; } sum1 = ( sum1 * j ) + c ; j *= 10 ; scored [ team1 ] += sum1 ; } conceed [ team2 ] += sum1 ; int sum2 = 0 ; j = 1 ; for ( ; i < st . size ( ) ; i ++ ) int c = st [ i ] - 48 ; sum2 = ( sum2 * j ) + c ; j *= 10 ; scored [ team2 ] += sum2 ; } conceed [ team1 ] += sum2 ; if ( sum1 > sum2 ) points [ team1 ] += 3 ; else if ( sum1 < sum2 ) points [ team2 ] += 3 ; else points [ team1 ] ++ ; points [ team2 ] ++ ; sort ( vec . begin ( ) , vec . end ( ) , cmp ) ; } } for ( int i = vec . size ( ) - 1 ; i >= k ; i -- ) a . push_back ( vec [ i ] ) ; sort ( a . begin ( ) , a . end ( ) ) ; for ( int i = 0 ; i < a . size ( ) ; i ++ ) cout << a [ i ] << endl ; map < string , int > pt , sc , mi ; }"}}
{"translation": {"en": "create string array name with size 50 [ENDL] declare cmp with strings s1 , s2 as arguments , returning boolean [ENDL] if pt [ s1 ] is not pt [ s2 ] , return pt [ s1 ] is greater than pt [ s2 ] from function [ENDL] if mi [ s1 ] is not mi [ s2 ] [ENDL] return mi [ s1 ] is greater than mi [ s2 ] from function [ENDL] else [ENDL] return sc [ s1 ] is greater than sc [ s2 ] from function [ENDL] create integer n [ENDL] read n [ENDL] for i = 0 to n exclusive , read name [ i ] [ENDL] discard characters from stdin [ENDL] for i = 0 to n * ( n - 1 ) / 2 exclusive [ENDL] create strings A , B [ENDL] read line from cin to A with ' - ' as delimiter [ENDL] read line from cin to B with ' ' as delimiter [ENDL] create character ch [ENDL] create integers pA , pB [ENDL] read pA read ch read pB [ENDL] discard characters from stdin [ENDL] if pA is less than pB , increment pt [ B ] by 3 [ENDL] if pA is greater than pB , increment pt [ A ] by 3 [ENDL] if pA is pB , increment pt [ A ] , increment pt [ B ] [ENDL] increment sc [ A ] by pA [ENDL] increment mi [ A ] by pA - pB [ENDL] increment sc [ B ] by pB [ENDL] increment mi [ B ] by pB - pA [ENDL] sort elements from name to name + n using cmp function to compare [ENDL] sort elements from name to name + n / 2 [ENDL] for i = 0 to n / 2 exclusive , print name [ i ] print newline [ENDL] n = int , wp , dg and sg = array of 55 int", "c++": "string name [ 50 ] ; bool cmp ( string s1 , string s2 ) if ( pt [ s1 ] != pt [ s2 ] ) return pt [ s1 ] > pt [ s2 ] ; if ( mi [ s1 ] != mi [ s2 ] ) return mi [ s1 ] > mi [ s2 ] ; else return sc [ s1 ] > sc [ s2 ] ; int n ; } int main() { cin >> n ; for ( int i = 0 ; i < n ; i ++ ) cin >> name [ i ] ; cin . ignore ( ) ; for ( int i = 0 ; i < n * ( n - 1 ) / 2 ; i ++ ) string A , B ; getline ( cin , A , ' - ' ) ; getline ( cin , B , '   ' ) ; char ch ; int pA , pB ; cin >> pA >> ch >> pB ; cin . ignore ( ) ; if ( pA < pB ) pt [ B ] += 3 ; if ( pA > pB ) pt [ A ] += 3 ; if ( pA == pB ) pt [ A ] ++ , pt [ B ] ++ ; sc [ A ] += pA ; mi [ A ] += pA - pB ; sc [ B ] += pB ; mi [ B ] += pB - pA ; sort ( name , name + n , cmp ) ; } sort ( name , name + n / 2 ) ; for ( int i = 0 ; i < n / 2 ; i ++ ) cout << name [ i ] << endl ; int n , wp [ 55 ] , dg [ 55 ] , sg [ 55 ] ; return 0; }"}}
{"translation": {"en": "name = array of 55 string [ENDL] function cmp ( get int a and b , return bool ) [ENDL] if wp [ a ] is not wp [ b ] return wp [ a ] > wp [ b ] [ENDL] if dg [ a ] is not dg [ b ] return dg [ a ] > dg [ b ] [ENDL] return sg [ a ] > sg [ b ] [ENDL] read n [ENDL] for i = 0 to n exclusive read name [ i ] [ENDL] for i = 0 to n * ( n - 1 ) / 2 exclusive [ENDL] s , a , b = string [ENDL] p , q = int [ENDL] c = char [ENDL] read s , p , c , q [ENDL] a = left portion of s before ' - ' [ENDL] b = right portion of s after ' - ' [ENDL] a1 = find ( name , name + n , a ) - name , b1 = find ( name , name + n , b ) - name [ENDL] if p > q [ENDL] add 3 to wp [ a1 ] [ENDL] else if q is p [ENDL] increment wp [ a1 ] [ENDL] increment wp [ b1 ] [ENDL] else [ENDL] add 3 to wp [ b1 ] [ENDL] add p - q to dg [ a1 ] [ENDL] add p to sg [ a1 ] [ENDL] add q - p to dg [ b1 ] [ENDL] add q to sg [ b1 ] [ENDL] a = array of 55 int [ENDL] for i = 0 to n exclusive a [ i ] = i [ENDL] sort first n items of a using function cmp [ENDL] ans = array of 55 string [ENDL] for i = 0 to n / 2 exclusive ans [ i ] = name [ a [ i ] ] [ENDL] sort first n / 2 items of ans [ENDL] for i = 0 to n / 2 exclusive print ans [ i ] [ENDL] create string array nam of size 50", "c++": "string name [ 55 ] ; bool cmp ( int a , int b ) if ( wp [ a ] != wp [ b ] ) { return wp [ a ] > wp [ b ] ; } if ( dg [ a ] != dg [ b ] ) { return dg [ a ] > dg [ b ] ; } return sg [ a ] > sg [ b ] ; cin >> n ; } int main() { for ( int i = 0 ; i < n ; i ++ ) { cin >> name [ i ] ; } for ( int i = 0 ; i < n * ( n - 1 ) / 2 ; i ++ ) string s , a , b ; int p , q ; char c ; cin >> s >> p >> c >> q ; a = s . substr ( 0 , s . find ( ' - ' ) ) ; b = s . substr ( s . find ( ' - ' ) + 1 ) ; int a1 = find ( name , name + n , a ) - name , b1 = find ( name , name + n , b ) - name ; if ( p > q ) wp [ a1 ] += 3 ; else if ( q == p ) wp [ a1 ] ++ ; wp [ b1 ] ++ ; else wp [ b1 ] += 3 ; dg [ a1 ] += p - q ; } sg [ a1 ] += p ; dg [ b1 ] += q - p ; sg [ b1 ] += q ; int a [ 55 ] ; } for ( int i = 0 ; i < n ; i ++ ) { a [ i ] = i ; } sort ( a , a + n , cmp ) ; string ans [ 55 ] ; for ( int i = 0 ; i < n / 2 ; i ++ ) { ans [ i ] = name [ a [ i ] ] ; } sort ( ans , ans + n / 2 ) ; for ( int i = 0 ; i < n / 2 ; i ++ ) { cout << ans [ i ] << endl ; } string nam [ 50 ] ; return 0; }"}}
{"translation": {"en": "let int n and int arrays wp of size 50 , dg of size 50 , and sg of size 50 [ENDL] declare comp taking in ints a and b and returning bool [ENDL] if wp [ a ] is not equal to wp [ b ] [ENDL] return wp [ a ] > wp [ b ] [ENDL] else if dg [ a ] is not equal to dg [ b ] [ENDL] return the result of dg [ a ] > dg [ b ] [ENDL] else do [ENDL] return sg [ a ] > sg [ b ] [ENDL] read n [ENDL] for i = 0 to n exclusive , read nam [ i ] [ENDL] for i = 0 to n * ( n - 1 ) / 2 exclusive [ENDL] create strings tmp , a , and b [ENDL] make ints p and q [ENDL] create char c [ENDL] read tmp , p , c , and q [ENDL] set a to tmp . substr ( 0 , tmp . find ( ' - ' ) ) [ENDL] set b to tmp . substr ( tmp . find ( ' - ' ) + 1 ) [ENDL] create ints ai = find ( nam , nam + n , a ) - nam and bi = find ( nam , nam + n , b ) - nam [ENDL] if p is more than q [ENDL] set wp [ ai ] to wp [ ai ] + 3 [ENDL] else if p is less than q [ENDL] set wp [ bi ] to wp [ bi ] + 3 [ENDL] else [ENDL] add 1 to wp [ ai ] and ap [ bi ] [ENDL] set dg [ ai ] to ad [ ai ] + p - q , add p to sg [ ai ] , add q - p to dg [ bi ] , and add q to sg [ bi ] [ENDL] create integer array a of size 50 [ENDL] for i = 0 to n exclusive , set a [ i ] to i [ENDL] sort a using a + n and comp [ENDL] create string array names of size 50 [ENDL] for i = 0 to n / 2 exclusive , set names [ i ] to nam [ a [ i ] ] [ENDL] sort names using names + n / 2 [ENDL] for i = 0 to n / 2 exclusive , print names [ i ] [ENDL] declare integers n , m , a , b and 2d array of integers v of size 2100 by 2100", "c++": "int n , wp [ 50 ] , dg [ 50 ] , sg [ 50 ] ; bool comp ( int a , int b ) if ( wp [ a ] != wp [ b ] ) return wp [ a ] > wp [ b ] ; else if ( dg [ a ] != dg [ b ] ) return dg [ a ] > dg [ b ] ; else return sg [ a ] > sg [ b ] ; cin >> n ; } int main() { for ( int i = 0 ; i < ( int ) ( n ) ; i ++ ) cin >> nam [ i ] ; for ( int i = 0 ; i < ( int ) ( n * ( n - 1 ) / 2 ) ; i ++ ) string tmp , a , b ; int p , q ; char c ; cin >> tmp >> p >> c >> q ; a = tmp . substr ( 0 , tmp . find ( ' - ' ) ) ; b = tmp . substr ( tmp . find ( ' - ' ) + 1 ) ; int ai = find ( nam , nam + n , a ) - nam , bi = find ( nam , nam + n , b ) - nam ; if ( p > q ) wp [ ai ] += 3 ; else if ( p < q ) wp [ bi ] += 3 ; else wp [ ai ] ++ , wp [ bi ] ++ ; dg [ ai ] += p - q , sg [ ai ] += p , dg [ bi ] += q - p , sg [ bi ] += q ; int a [ 50 ] ; } for ( int i = 0 ; i < ( int ) ( n ) ; i ++ ) a [ i ] = i ; sort ( a , a + n , comp ) ; string names [ 50 ] ; for ( int i = 0 ; i < ( int ) ( n / 2 ) ; i ++ ) names [ i ] = nam [ a [ i ] ] ; sort ( names , names + n / 2 ) ; for ( int i = 0 ; i < ( int ) ( n / 2 ) ; i ++ ) cout << names [ i ] << endl ; int n , m , a , b , v [ 2100 ] [ 2100 ] ; return 0; }"}}
{"translation": {"en": "declare integers k , x , y and 2d array of integers d of size 2100 by 2100 [ENDL] boolean function solve with integer arguments x , y and k [ENDL] create ingteger variables t , l = max of 1 and x - k ; r = min of x + k and n [ENDL] for integer i = l to r inclusive [ENDL] set t to k - abs ( i - x ) [ENDL] if y - t is greater than 0 & & ! v [ i ] [ y - t ] [ENDL] set a to i [ENDL] set value of b to y - t [ENDL] return 1 [ENDL] if y + t < = m & & ! v [ i ] [ y + t ] [ENDL] a = i [ENDL] b = y + t [ENDL] return 1 [ENDL] read n , m and k [ENDL] for i = 0 to k exclusive [ENDL] read x and y [ENDL] for integer j = - 2 to 2 inclusive [ENDL] for integer k = - 2 to 2 inclusive [ENDL] if x + j < 1 | | x + j > n | | y + k < 1 | | y + k is greater than m , continue the loop [ENDL] d [ x ] [ y ] = max ( d [ x ] [ y ] , d [ x + j ] [ y + k ] - abs ( j ) - abs ( k ) ) [ENDL] while solve ( x , y , d [ x ] [ y ] ) is false , increment d [ x ] [ y ] [ENDL] v [ a ] [ b ] = 1 [ENDL] print a , \" \" , b and a new line [ENDL] create integers n , m , a , b , create 2d integer array v with size 2100 by 2100", "c++": "int k , d [ 2100 ] [ 2100 ] , x , y ; bool solve ( int x , int y , int k ) int l = max ( 1 , x - k ) , r = min ( x + k , n ) , t ; for ( int i = l ; i <= r ; i ++ ) t = k - abs ( i - x ) ; if ( y - t > 0 && ! v [ i ] [ y - t ] ) a = i ; b = y - t ; return 1 ; if ( y + t <= m && ! v [ i ] [ y + t ] ) } a = i ; b = y + t ; return 1 ; cin >> n >> m >> k ; } } return 0; } int main() { for ( int i = 0 ; i < k ; i ++ ) cin >> x >> y ; for ( int j = - 2 ; j <= 2 ; j ++ ) for ( int k = - 2 ; k <= 2 ; k ++ ) if ( x + j < 1 || x + j > n || y + k < 1 || y + k > m ) continue ; d [ x ] [ y ] = max ( d [ x ] [ y ] , d [ x + j ] [ y + k ] - abs ( j ) - abs ( k ) ) ; while ( ! solve ( x , y , d [ x ] [ y ] ) ) d [ x ] [ y ] ++ ; } v [ a ] [ b ] = 1 ; cout << a << \"   \" << b << endl ; int n , m , a , b , v [ 2100 ] [ 2100 ] ; } }"}}
{"translation": {"en": "create integers k , x , y , create 2d integer array d with size 2100 by 2100 [ENDL] declare solve with integers x , y , k as arguments , returning boolean [ENDL] create integers l , r , t with l = maximum of ( 1 and x - k ) , r = minimum of ( x + k and n ) [ENDL] for i = l to r inclusive [ENDL] set t to k - absolute value of ( i - x ) [ENDL] if y - t is greater than 0 and v [ i ] [ y - t ] is false [ENDL] set a to i [ENDL] set b to y - t [ENDL] return 1 from function [ENDL] if y + t is less than or equal to m and v [ i ] [ y + t ] is false [ENDL] set a to i [ENDL] set b to y + t [ENDL] return 1 [ENDL] read n read m read k [ENDL] for i = 0 to k exclusive [ENDL] read x read y [ENDL] for j = - 2 to 2 inclusive [ENDL] for k = - 2 to 2 inclusive [ENDL] if x + j is less than 1 or x + j is greater than n or y + k is less than 1 or y + k is greater than m , break current loop iteration [ENDL] set d [ x ] [ y ] to maximum of ( d [ x ] [ y ] and d [ x + j ] [ y + k ] - absolute value of j - absolute value of k ) [ENDL] while result of run solve with x , y , d [ x ] [ y ] as arguments is false , increment d [ x ] [ y ] [ENDL] set v [ a ] [ b ] to 1 [ENDL] print a print \" \" print b print newline [ENDL] create integers n , m , a and b , and 2d array of integers v 2100 by 2100", "c++": "int k , d [ 2100 ] [ 2100 ] , x , y ; bool solve ( int x , int y , int k ) int l = max ( 1 , x - k ) , r = min ( x + k , n ) , t ; for ( int i = l ; i <= r ; i ++ ) t = k - abs ( i - x ) ; if ( y - t > 0 && ! v [ i ] [ y - t ] ) a = i ; b = y - t ; return 1 ; if ( y + t <= m && ! v [ i ] [ y + t ] ) } a = i ; b = y + t ; return 1 ; cin >> n >> m >> k ; } } return 0; } int main() { for ( int i = 0 ; i < k ; i ++ ) cin >> x >> y ; for ( int j = - 2 ; j <= 2 ; j ++ ) for ( int k = - 2 ; k <= 2 ; k ++ ) if ( x + j < 1 || x + j > n || y + k < 1 || y + k > m ) continue ; d [ x ] [ y ] = max ( d [ x ] [ y ] , d [ x + j ] [ y + k ] - abs ( j ) - abs ( k ) ) ; while ( ! solve ( x , y , d [ x ] [ y ] ) ) d [ x ] [ y ] ++ ; } v [ a ] [ b ] = 1 ; cout << a << \"   \" << b << endl ; int n , m , a , b , v [ 2100 ] [ 2100 ] ; } }"}}
{"translation": {"en": "create integers k , x and y , and 2d array of integers d 2100 by 2100 [ENDL] boolean method solve with integer arguments x , y and k [ENDL] declare integers t , l = max of 1 and x - k and r = min of x + k and n [ENDL] for integer i = l to r inclusive [ENDL] set value of t to k - abs ( i - x ) [ENDL] if y - t is greater than 0 and ! v [ i ] [ y - t ] [ENDL] set a to i [ENDL] set value of b to y - t [ENDL] return 1 [ENDL] if y + t < = m and ! v [ i ] [ y + t ] [ENDL] assign value of i to the a [ENDL] set b to y + t [ENDL] return 1 [ENDL] read n , m and k [ENDL] for i = 0 to k exclusive [ENDL] read x and y [ENDL] for integer j = - 2 to 2 inclusive [ENDL] for integer k = - 2 to 2 inclusive [ENDL] if x + j < 1 or x + j > n or y + k < 1 or y + k > m , continue the loop [ENDL] set d [ x ] [ y ] = max of d [ x ] [ y ] and d [ x + j ] [ y + k ] - abs ( j ) - abs ( k ) ) [ENDL] while solve ( x , y , d [ x ] [ y ] ) is 0 , increment d [ x ] [ y ] [ENDL] set value of v [ a ] [ b ] to 1 [ENDL] print a , \" \" , b and a new line [ENDL] a = array of pair of size 200020 of int and int", "c++": "int k , d [ 2100 ] [ 2100 ] , x , y ; bool solve ( int x , int y , int k ) int l = max ( 1 , x - k ) , r = min ( x + k , n ) , t ; for ( int i = l ; i <= r ; i ++ ) t = k - abs ( i - x ) ; if ( y - t > 0 && ! v [ i ] [ y - t ] ) a = i ; b = y - t ; return 1 ; if ( y + t <= m && ! v [ i ] [ y + t ] ) } a = i ; b = y + t ; return 1 ; cin >> n >> m >> k ; } } return 0; } int main() { for ( int i = 0 ; i < k ; i ++ ) cin >> x >> y ; for ( int j = - 2 ; j <= 2 ; j ++ ) for ( int k = - 2 ; k <= 2 ; k ++ ) if ( x + j < 1 || x + j > n || y + k < 1 || y + k > m ) continue ; d [ x ] [ y ] = max ( d [ x ] [ y ] , d [ x + j ] [ y + k ] - abs ( j ) - abs ( k ) ) ; while ( ! solve ( x , y , d [ x ] [ y ] ) ) d [ x ] [ y ] ++ ; } v [ a ] [ b ] = 1 ; cout << a << \"   \" << b << endl ; pair < pair < int , int > , int > a [ 200020 ] ; } }"}}
{"translation": {"en": "n , k , c , x , y , m , z , ac , t , b , i = long long [ENDL] for ( read n , increment i , decrement n [ENDL] for read k , c , x , y , m and t = 0 , decrement k , z = max ( z , t ) [ENDL] if ac < = 200000 , a [ increment ac ] = make_pair ( pair of int to int ( t , c ) , i ) [ENDL] b = ( c * x + y ) modulo m [ENDL] if b < c and k , increment t [ENDL] c = b [ENDL] print z [ENDL] if ac < 200001 [ENDL] sort a and a + ac [ENDL] for i = 0 to ac , print first . second of a [ i ] , \" \" , second of a [ i ] + 1 [ENDL] a1 , a2 , n , k , second , ans , ans1 = long long with second = 0 and ans = 0", "c++": "long long n , k , c , x , y , m , z , ac , t , b , i ; for ( cin >> n ; n -- ; i ++ ) int main() { for ( cin >> k >> c >> x >> y >> m , t = 0 ; k -- ; z = max ( z , t ) ) if ( ac <= 200000 ) a [ ac ++ ] = make_pair ( pair < int , int > ( t , c ) , i ) ; b = ( c * x + y ) % m ; if ( b < c && k ) t ++ ; c = b ; cout << z << endl ; } if ( ac < 200001 ) sort ( a , a + ac ) ; for ( int i = 0 ; i < ac ; i ++ ) cout << a [ i ] . first . second << \"   \" << a [ i ] . second + 1 << endl ; long long a1 , a2 , n , k , second = 0 , ans = 0 , ans1 ; } }"}}
{"translation": {"en": "h = pair of long long and pair of long long and long long vector [ENDL] in function read [ENDL] read n [ENDL] x , y , m = int then for i = 0 to n [ENDL] read k [ENDL] add k to second [ENDL] read a1 [ENDL] t = long long with t = a1 [ENDL] read x then y then m [ENDL] append make_pair of 0 and make_pair of a1 and i + 1 to h [ENDL] set ans1 to 0 [ENDL] for j = 1 to k [ENDL] set a2 to ( a1 * x + y ) mod m [ENDL] if a2 is less than a1 then increment ans1 [ENDL] set a1 to a2 [ENDL] set t to max of t and a1 [ENDL] if size of h is less or equal to 200000 then append make_pair of ans1 and make_pair of a1 and i + 1 to h [ENDL] set ans to max of ans and ans1 [ENDL] sort vector h [ENDL] print ans [ENDL] if second is less or equal to 200000 [ENDL] for i = 0 to second print h [ i ] . second . first and h [ i ] . second . second [ENDL] call read [ENDL] a = pair of pair of int and int and int of size 200020", "c++": "vector < pair < long long , pair < long long , long long >> > h ; void read ( void ) cin >> n ; for ( int i = 0 , x , y , m ; i < n ; ++ i ) cin >> k ; second += k ; cin >> a1 ; long long t = a1 ; cin >> x >> y >> m ; h . push_back ( make_pair ( 0 , make_pair ( a1 , i + 1 ) ) ) ; ans1 = 0 ; for ( int j = 1 ; j < k ; ++ j ) a2 = ( a1 * x + y ) % m ; if ( a2 < a1 ) ans1 ++ ; a1 = a2 ; t = max ( t , a1 ) ; if ( h . size ( ) <= 200000 ) h . push_back ( make_pair ( ans1 , make_pair ( a1 , i + 1 ) ) ) ; ans = max ( ans , ans1 ) ; } sort ( h . begin ( ) , h . end ( ) ) ; } cout << ans << \" \\n \" ; if ( second <= 200000 ) for ( int i = 0 ; i < second ; ++ i ) cout << h [ i ] . second . first << \"   \" << h [ i ] . second . second << \" \\n \" ; read ( ) ; } int main() { pair < pair < int , int > , int > a [ 200020 ] ; return 0; }"}}
{"translation": {"en": "n , k , c , x , y , m , z , ac , t , b , i = long long [ENDL] read n then loop n times decrementing n and incrementing i each time [ENDL] read k then c then x then y then m and set t to 0 then loop k times decrementing k and setting z to max of z and t each time [ENDL] if ac is less or equal to 200000 then set a [ ac ] to value of make_pair of pair of int and int of t and c and i then increment ac [ENDL] set b to ( c * x + y ) mod m [ENDL] if b is less than c and k is not 0 then increment t [ENDL] set c to b [ENDL] print z [ENDL] if ac is less than 200001 [ENDL] call sort on a and a + ac [ENDL] for i = 0 to ac print a [ i ] . first . second and a [ i ] . second + 1 [ENDL] let a = array of integers of length 200020 , pair of integets", "c++": "long long n , k , c , x , y , m , z , ac , t , b , i ; for ( cin >> n ; n -- ; i ++ ) int main() { for ( cin >> k >> c >> x >> y >> m , t = 0 ; k -- ; z = max ( z , t ) ) if ( ac <= 200000 ) a [ ac ++ ] = make_pair ( pair < int , int > ( t , c ) , i ) ; b = ( c * x + y ) % m ; if ( b < c && k ) t ++ ; c = b ; cout << z << endl ; } if ( ac < 200001 ) sort ( a , a + ac ) ; for ( int i = 0 ; i < ac ; i ++ ) cout << a [ i ] . first . second << \"   \" << a [ i ] . second + 1 << endl ; pair < pair < int , int > , int > a [ 200020 ] ; } }"}}
{"translation": {"en": "let n , k , c , x , y , m , z , ac , t , b , i be long integers [ENDL] for read n , n is decreased by 1 , i is increased by 1 [ENDL] for read the values k , c , x , y , m , t , t = 0 , k value is decreased by 1 , z = maximum of z and t [ENDL] if ac < = 200000 , a [ ac + + ] = make_pair ( pair < int , int > ( t , c ) , i [ENDL] let the value of b is equal to c * x + y modulo m [ENDL] if b is less than c and k , increase t by 1 [ENDL] the value of b is assigned to c [ENDL] print z and newline [ENDL] if ac is less than 200001 [ENDL] sort the values a and a + ac [ENDL] for i = 0 to ac exclusive , print a [ i ] . first . second and a [ i ] . second + 1 and newline [ENDL] create pair array a with size 200020 with pair of ( pair of ( integer and integer ) and integer )", "c++": "long long n , k , c , x , y , m , z , ac , t , b , i ; for ( cin >> n ; n -- ; i ++ ) int main() { for ( cin >> k >> c >> x >> y >> m , t = 0 ; k -- ; z = max ( z , t ) ) if ( ac <= 200000 ) a [ ac ++ ] = make_pair ( pair < int , int > ( t , c ) , i ) ; b = ( c * x + y ) % m ; if ( b < c && k ) t ++ ; c = b ; cout << z << endl ; } if ( ac < 200001 ) sort ( a , a + ac ) ; for ( int i = 0 ; i < ac ; i ++ ) cout << a [ i ] . first . second << \"   \" << a [ i ] . second + 1 << endl ; pair < pair < int , int > , int > a [ 200020 ] ; } }"}}
{"translation": {"en": "create long longs n , k , c , x , y , m , z , ac , t , b , i [ENDL] for read n , decrement n , incrementing i [ENDL] for read k read c read x read y read m , t = 0 , deecrement k , setting z to maximum of z and t [ENDL] if ac is less than or equal to 200000 , set a [ increment ac ] to make pair from ( pair of ( integer and integer ) initialized with ( t , c ) , and integer ) [ENDL] set b to ( c * x + y ) % m [ENDL] if b is less than c and k , increment t [ENDL] set c to b [ENDL] print z print newline [ENDL] if ac is less than 200001 [ENDL] sort elements from a to a + ac [ENDL] for i = 0 to ac exclusive , print second element of first element of a [ i ] print \" \" print second element of a [ i ] + 1 print newline [ENDL] create long longs n , count with count = 0", "c++": "long long n , k , c , x , y , m , z , ac , t , b , i ; for ( cin >> n ; n -- ; i ++ ) int main() { for ( cin >> k >> c >> x >> y >> m , t = 0 ; k -- ; z = max ( z , t ) ) if ( ac <= 200000 ) a [ ac ++ ] = make_pair ( pair < int , int > ( t , c ) , i ) ; b = ( c * x + y ) % m ; if ( b < c && k ) t ++ ; c = b ; cout << z << endl ; } if ( ac < 200001 ) sort ( a , a + ac ) ; for ( int i = 0 ; i < ac ; i ++ ) cout << a [ i ] . first . second << \"   \" << a [ i ] . second + 1 << endl ; long long n , count = 0 ; } }"}}
{"translation": {"en": "read n [ENDL] create constant integer max_i with max_i = 2e5 [ENDL] create integer counter with counter = 0 [ENDL] create tuple array data with integer , integer , integer , with size max_i + 9 [ENDL] for i = 0 to n exclusive [ENDL] create long longs k , a0 , x , y , m , t , a , with t = 0 , a = 0 [ENDL] read k read a0 read x read y read m [ENDL] for j = 0 to k exclusive [ENDL] if counter is less than or equal to max_i , set data [ increment counter ] to make tuple from t , a0 , i [ENDL] set a to ( a0 * x + y ) % m [ENDL] if a is less than a0 and j is not k - 1 , increment t [ENDL] set a0 to a [ENDL] set count to maximum of count and t [ENDL] print count print newline [ENDL] if counter is less than or equal to max_i [ENDL] sort elements from data to data + counter [ENDL] for i = 0 to counter exclusive , print get element 1 from data [ i ] print \" \" print get element 2 from data [ i ] + 1 print newline [ENDL] MAX = const int with MAX = 2e5", "c++": "int main() { cin >> n ; const int max_i = 2e5 ; int counter = 0 ; tuple < int , int , int > data [ max_i + 9 ] ; for ( int i = 0 ; i < n ; i ++ ) long long k , a0 , x , y , m , t = 0 , a = 0 ; cin >> k >> a0 >> x >> y >> m ; for ( int j = 0 ; j < k ; j ++ ) if ( counter <= max_i ) { data [ counter ++ ] = make_tuple ( t , a0 , i ) ; } a = ( a0 * x + y ) % m ; if ( a < a0 && j != k - 1 ) { t ++ ; } a0 = a ; count = max ( count , t ) ; } cout << count << endl ; } if ( counter <= max_i ) sort ( data , data + counter ) ; for ( int i = 0 ; i < counter ; i ++ ) { cout << get < 1 > ( data [ i ] ) << \"   \" << get < 2 > ( data [ i ] ) + 1 << endl ; } const int MAX = 2e5 ; } }"}}
{"translation": {"en": "a = pair of pair of long long and long long and long long array of size MAX + 9 [ENDL] n , k , a0 , x , y , m , ans , cnt , t , tmp = long long [ENDL] read n [ENDL] for i = 0 to n [ENDL] read k then a0 then x then y then m then set t to 0 [ENDL] for j = 0 to k [ENDL] if cnt is less or equal to MAX then set a [ cnt ] to { { t , a0 } , i } then increment cnt [ENDL] set tmp to ( a0 * x + y ) mod m [ENDL] if tmp is less than a0 and j is not k - 1 increment t [ENDL] set a0 to tmp [ENDL] set ans to max of ans and t [ENDL] print ans [ENDL] if cnt is less than MAX [ENDL] call sort on a and a + cnt [ENDL] for i = 0 to cnt print a [ i ] . first . second and a [ i ] . second + 1 [ENDL] create pair a with pair of ( integer , integer ) , integer , with size 200020", "c++": "pair < pair < long long , long long > , long long > a [ MAX + 9 ] ; long long n , k , a0 , x , y , m , ans , cnt , t , tmp ; cin >> n ; int main() { for ( int i = 0 ; i < n ; i ++ ) cin >> k >> a0 >> x >> y >> m , t = 0 ; for ( int j = 0 ; j < k ; j ++ ) if ( cnt <= MAX ) a [ cnt ++ ] = { { t , a0 } , i } ; tmp = ( a0 * x + y ) % m ; if ( tmp < a0 && j != k - 1 ) t ++ ; a0 = tmp ; ans = max ( ans , t ) ; } cout << ans << ' \\n ' ; } if ( cnt <= MAX ) sort ( a , a + cnt ) ; for ( int i = 0 ; i < cnt ; i ++ ) cout << a [ i ] . first . second << \"   \" << a [ i ] . second + 1 << ' \\n ' ; pair < pair < int , int > , int > a [ 200020 ] ; } }"}}
{"translation": {"en": "create long longs n , k , c , x , y , m , z , ac , t , b , i [ENDL] for read n to decrement n , incrementing i [ENDL] for read k read c read x read y read m , t = 0 to decrement k , setting z to maximum of z and t [ENDL] if ac is less than or equal to 200000 , set a [ increment ac ] to create pair from ( pair of integer and integer initialized with ( t , c ) and i [ENDL] set b to ( c * x + y ) % m [ENDL] if b is less than c and k , increment t [ENDL] set c to b [ENDL] print z print newline [ENDL] if ac is less than 200001 [ENDL] sort elements from a to a + ac [ENDL] for i = 0 to ac exclusive , print second element of first element of a [ i ] print \" \" print second element of a [ i ] + 1 print newline [ENDL] create pair of ( pair of ( integer and integer ) and integer ) array a with size 200020", "c++": "long long n , k , c , x , y , m , z , ac , t , b , i ; for ( cin >> n ; n -- ; i ++ ) int main() { for ( cin >> k >> c >> x >> y >> m , t = 0 ; k -- ; z = max ( z , t ) ) if ( ac <= 200000 ) a [ ac ++ ] = make_pair ( pair < int , int > ( t , c ) , i ) ; b = ( c * x + y ) % m ; if ( b < c && k ) t ++ ; c = b ; cout << z << endl ; } if ( ac < 200001 ) sort ( a , a + ac ) ; for ( int i = 0 ; i < ac ; i ++ ) cout << a [ i ] . first . second << \"   \" << a [ i ] . second + 1 << endl ; pair < pair < int , int > , int > a [ 200020 ] ; } }"}}
{"translation": {"en": "create long longs n , k , c , x , y , m , z , ac , t , b , i [ENDL] for read n to decrement n , incrementing i [ENDL] for read k read c read x read y read m , t = 0 to decrement k , setting z to maximum of z and t [ENDL] if ac is less than or equal to 200000 , set a [ increment ac ] to make pair of ( pair of ( integer and integer ) initialized with ( t , c ) and i ) [ENDL] set b to ( c * x + y ) % m [ENDL] if b is less than c and k , increment t [ENDL] set c to b [ENDL] print z print newline [ENDL] if ac is less than 200001 [ENDL] sort elements from a to a + ac [ENDL] for i = 0 to ac exclusive , print second element of first element of a [ i ] print \" \" print second element of a [ i ] + 1 print newline [ENDL] create pair of ( pair of ( integer , integer ) , integer ) array a with size 200020", "c++": "long long n , k , c , x , y , m , z , ac , t , b , i ; for ( cin >> n ; n -- ; i ++ ) int main() { for ( cin >> k >> c >> x >> y >> m , t = 0 ; k -- ; z = max ( z , t ) ) if ( ac <= 200000 ) a [ ac ++ ] = make_pair ( pair < int , int > ( t , c ) , i ) ; b = ( c * x + y ) % m ; if ( b < c && k ) t ++ ; c = b ; cout << z << endl ; } if ( ac < 200001 ) sort ( a , a + ac ) ; for ( int i = 0 ; i < ac ; i ++ ) cout << a [ i ] . first . second << \"   \" << a [ i ] . second + 1 << endl ; pair < pair < int , int > , int > a [ 200020 ] ; } }"}}
{"translation": {"en": "create long longs n , k , c , x , y , m , z , ac , t , b , i [ENDL] for read n to derement n , incrementing i [ENDL] for read k read c read x read y read m , t = 0 to decrement k , setting z to maximum of z and t [ENDL] if ac is less than or equal to 200000 set a [ increment ac ] to make pair from ( pair of ( integer , integer ) initialized with ( t , c ) , i ) [ENDL] set b to ( c * x + y ) % m [ENDL] if b is less than c and k , increment t [ENDL] set c to b [ENDL] print z print newline [ENDL] if ac is less than 200001 [ENDL] sort elements from a to a + ac [ENDL] for i = 0 to ac exclusive , print second element of first element of a [ i ] print \" \" print second element of a [ i ] + 1 print newline [ENDL] create pair array of pair of ( pair of ( integer , integer ) , integer ) a with size 200020", "c++": "long long n , k , c , x , y , m , z , ac , t , b , i ; for ( cin >> n ; n -- ; i ++ ) int main() { for ( cin >> k >> c >> x >> y >> m , t = 0 ; k -- ; z = max ( z , t ) ) if ( ac <= 200000 ) a [ ac ++ ] = make_pair ( pair < int , int > ( t , c ) , i ) ; b = ( c * x + y ) % m ; if ( b < c && k ) t ++ ; c = b ; cout << z << endl ; } if ( ac < 200001 ) sort ( a , a + ac ) ; for ( int i = 0 ; i < ac ; i ++ ) cout << a [ i ] . first . second << \"   \" << a [ i ] . second + 1 << endl ; pair < pair < int , int > , int > a [ 200020 ] ; } }"}}
{"translation": {"en": "create long longs n , k , c , x , y , m , z , ac , t , b , i [ENDL] for read n , decrement n , incrementing i [ENDL] for read k read c read x read y read m , t = 0 , to decrement k , setting z to maximum of z and t [ENDL] if ac is less than or equal to 200000 , set a [ increment ac ] to make pair with ( ( pair of integer , integer initialized with ( t , c ) ) , i [ENDL] set b to ( c * x + y ) % m [ENDL] if b is less than c and k , increment t [ENDL] set c to b [ENDL] print z print newline [ENDL] if ac is less than 200001 [ENDL] sort elements from a to a + ac [ENDL] for i = 0 to ac exclusive , print second element of first element of a [ i ] print \" \" print second element of a [ i ] + 1 print newline [ENDL] create pair array a with size 200020 with pair of ( pair of ( integer and integer ) and integer )", "c++": "long long n , k , c , x , y , m , z , ac , t , b , i ; for ( cin >> n ; n -- ; i ++ ) int main() { for ( cin >> k >> c >> x >> y >> m , t = 0 ; k -- ; z = max ( z , t ) ) if ( ac <= 200000 ) a [ ac ++ ] = make_pair ( pair < int , int > ( t , c ) , i ) ; b = ( c * x + y ) % m ; if ( b < c && k ) t ++ ; c = b ; cout << z << endl ; } if ( ac < 200001 ) sort ( a , a + ac ) ; for ( int i = 0 ; i < ac ; i ++ ) cout << a [ i ] . first . second << \"   \" << a [ i ] . second + 1 << endl ; pair < pair < int , int > , int > a [ 200020 ] ; } }"}}
{"translation": {"en": "create long longs n , k , c , x , y , m , z , ac , t , b , i [ENDL] for read n , decrement n , incrementing i [ENDL] for read k read c read x read y read m , t = 0 , decrement k , setting z to maximum of z and t [ENDL] if ac is less than or equal to 200000 , set a [ increment ac ] to new pair from ( pair of ( integer and integer ) initialized with ( t , c ) and i ) [ENDL] set b to ( c * x + y ) % m [ENDL] if b is less than c and k , increment t [ENDL] set c to b [ENDL] print z print newline [ENDL] if ac is less than 200001 [ENDL] sort elements from a to a + ac [ENDL] for i = 0 to ac exclusive , print second element of first element of a [ i ] print \" \" print second element of a [ i ] + 1 print newline [ENDL] create integers a , b and c", "c++": "long long n , k , c , x , y , m , z , ac , t , b , i ; for ( cin >> n ; n -- ; i ++ ) int main() { for ( cin >> k >> c >> x >> y >> m , t = 0 ; k -- ; z = max ( z , t ) ) if ( ac <= 200000 ) a [ ac ++ ] = make_pair ( pair < int , int > ( t , c ) , i ) ; b = ( c * x + y ) % m ; if ( b < c && k ) t ++ ; c = b ; cout << z << endl ; } if ( ac < 200001 ) sort ( a , a + ac ) ; for ( int i = 0 ; i < ac ; i ++ ) cout << a [ i ] . first . second << \"   \" << a [ i ] . second + 1 << endl ; int a , b , c ; } }"}}
{"translation": {"en": "read input to a , b and c [ENDL] if b is greater than c , swap b and c [ENDL] print ( 2 * a + b - 1 ) * b + ( c - b - 1 ) * ( a + b - 1 ) [ENDL] oo = constant integer = 1e9", "c++": "int main() { cin >> a >> b >> c ; if ( b > c ) { swap ( b , c ) ; } cout << ( 2 * a + b - 1 ) * b + ( c - b - 1 ) * ( a + b - 1 ) << endl ; const int oo = 1e9 ; return 0; }"}}
{"translation": {"en": "a , b , c = integer [ENDL] read a , b , c [ENDL] ans = integer = b * c + ( a - 1 ) * ( b + c - 1 ) [ENDL] print ans [ENDL] a , b , c = integers", "c++": "int a , b , c ; int main() { cin >> a >> b >> c ; int ans = b * c + ( a - 1 ) * ( b + c - 1 ) ; cout << ans << ' \\n ' ; int a , b , c ; return 0; }"}}
{"translation": {"en": "Read a , b , c [ENDL] print a * b + b * c + c * a - ( a + b + c ) + 1 and a new line [ENDL] declare long longs x , y and z", "c++": "int main() { cin >> a >> b >> c ; cout << a * b + b * c + c * a - ( a + b + c ) + 1 << endl ; long long x , y , z ; return 0; }"}}
{"translation": {"en": "read x , y and z [ENDL] print x * y + y * z + x * z - x - z - y + 1 [ENDL] let gcd be a function which accepts integers a and b", "c++": "cin >> x >> y >> z ; int main() { cout << x * y + y * z + x * z - x - z - y + 1 << endl ; int gcd ( int a , int b ) return 0; }"}}
{"translation": {"en": "return gcd ( b , a modulo b ) if b else a [ENDL] let n , m , c be integers [ENDL] read n , m , c [ENDL] print n * m * c - ( n - 1 ) * ( m - 1 ) * ( c - 1 ) and newline [ENDL] create integers a , b , c", "c++": "return b ? gcd ( b , a % b ) : a ; int n , m , c ; } int main() { cin >> n >> m >> c ; cout << n * m * c - ( n - 1 ) * ( m - 1 ) * ( c - 1 ) << endl ; int a , b , c ; }"}}
{"translation": {"en": "read a read b read c [ENDL] print a * b + b * c + a * c - a - b - c + 1 print newline [ENDL] create integers a , b , c", "c++": "int main() { cin >> a >> b >> c ; cout << a * b + b * c + a * c - a - b - c + 1 << endl ; int a , b , c ; return 0; }"}}
{"translation": {"en": "read a read b read c [ENDL] print a * b + b * c + c * a - a - b - c + 1 print newline [ENDL] let a , b , c be int", "c++": "int main() { cin >> a >> b >> c ; cout << a * b + b * c + c * a - a - b - c + 1 << endl ; int a , b , c ; return 0; }"}}
{"translation": {"en": "read a and b and c [ENDL] print a * b + b * c + c * a - a - b - c + 1 [ENDL] create integers a , b , c", "c++": "int main() { cin >> a >> b >> c ; cout << a * b + b * c + c * a - a - b - c + 1 << endl ; int a , b , c ; return 0; }"}}
{"translation": {"en": "read a read b read c [ENDL] print a * b + b * c + c * a - a - b - c + 1 print newline [ENDL] create long longs a , b , c", "c++": "cin >> a >> b >> c ; int main() { cout << a * b + b * c + c * a - a - b - c + 1 << endl ; long long a , b , c ; }"}}
{"translation": {"en": "read a read b read c [ENDL] create long long ans with ans = ( c + a - 1 ) * ( b + a - 1 ) - a * ( a - 1 ) [ENDL] print ans print newline [ENDL] create constant long long OO with OO = 1e5 + 555", "c++": "int main() { cin >> a >> b >> c ; long long ans = ( c + a - 1 ) * ( b + a - 1 ) - a * ( a - 1 ) ; cout << ans << endl ; const long long OO = 1e5 + 555 ; return 0; }"}}
{"translation": {"en": "declare rakm with character x as argument , returning long long [ENDL] return x - 48 from function [ENDL] declare _7rf with long long x as argument , returning character [ENDL] return x + 48 from function [ENDL] declare odd with long long x as argument , returning boolean [ENDL] return x % 2 [ENDL] declare even with long long x as argument , returning boolean [ENDL] return 1 - x % 2 [ENDL] declare factorial with long long x as argument , returning long long [ENDL] if x is 0 or x is 1 [ENDL] return 1 from function [ENDL] else [ENDL] return x * result of run factorial with x - 1 as argument [ENDL] declare ss with long long x as argument , returning long long [ENDL] create long long sum with sum = 0 [ENDL] while x is greater than 0 [ENDL] increment sum by x % 10 [ENDL] set x to x / 10 [ENDL] return sum from function [ENDL] declare a3ks with long long x as argument , returning long long [ENDL] create long longs b , u , with b = 0 , u = x [ENDL] while u is greater than 0 [ENDL] set b to ( b * 10 ) + u % 10 [ENDL] set u to u / 10 [ENDL] return b from function [ENDL] declare prime with long long x as argument , returning boolean [ENDL] for i = 2 to x exclusive [ENDL] if x % i is 0 , return 0 from function [ENDL] return 1 from function [ENDL] create integers a , b , c [ENDL] read a read b read c [ENDL] print ( a * b * c ) - ( ( a - 1 ) * ( b - 1 ) * ( c - 1 ) ) print newline [ENDL] declare integer variables a , b and c", "c++": "long long rakm ( char x ) return x - 48 ; char _7rf ( long long x ) } return x + 48 ; bool odd ( long long x ) } return x % 2 ; bool even ( long long x ) } return 1 - x % 2 ; long long factorial ( long long x ) } if ( x == 0 || x == 1 ) return 1 ; else return x * factorial ( x - 1 ) ; long long ss ( long long x ) } } long long sum = 0 ; while ( x > 0 ) sum += x % 10 ; x /= 10 ; return sum ; } long long a3ks ( long long x ) } long long b = 0 , u = x ; while ( u > 0 ) b = ( b * 10 ) + u % 10 ; u /= 10 ; return b ; } bool prime ( long long x ) } for ( int i = 2 ; i < x ; i ++ ) if ( x % i == 0 ) { return 0 ; } return 1 ; } int a , b , c ; } int main() { cin >> a >> b >> c ; cout << ( a * b * c ) - ( ( a - 1 ) * ( b - 1 ) * ( c - 1 ) ) << endl ; int a , b , c ; }"}}
{"translation": {"en": "read a , b and c [ENDL] print ( a * b ) + ( b * c ) + ( c * a ) - a - b - c + 1 [ENDL] declare constant int N = 1e5 + 100", "c++": "int main() { cin >> a >> b >> c ; cout << ( a * b ) + ( b * c ) + ( c * a ) - a - b - c + 1 << endl ; const int N = 1e5 + 100 ; return 0; }"}}
{"translation": {"en": "create ints a , b and c [ENDL] declare vector of integers called v [ENDL] read input to a , b and c [ENDL] print ( a * b * c ) - ( a - 1 ) * ( b - 1 ) * ( c - 1 ) [ENDL] create constant integer MAX with MAX = 5e4 + 5", "c++": "int a , b , c ; vector < int > v ; cin >> a >> b >> c ; int main() { cout << ( a * b * c ) - ( a - 1 ) * ( b - 1 ) * ( c - 1 ) << endl ; const int MAX = 5e4 + 5 ; return 0; }"}}
{"translation": {"en": "create constant long long MAX2 with MAX2 = 11 [ENDL] create constant integer MOD with MOD = 1000000000 + 7 [ENDL] create constant long long INF with INF = 20000 [ENDL] create constant integer array dr with dr = { 1 , 0 , - 1 , 0 , 1 , 1 , - 1 , - 1 } [ENDL] create constant integer array dc with dc = { 0 , 1 , 0 , - 1 , 1 , - 1 , 1 , - 1 } [ENDL] create constant double pi with pi = acosign of - 1 [ENDL] create integer a , b , c [ENDL] read a read b read c [ENDL] print a * b + ( a + b - 1 ) * ( c - 1 ) print \" \\ n \" [ENDL] N = 100100", "c++": "const long long MAX2 = 11 ; const int MOD = 1000000000 + 7 ; const long long INF = 20000 ; const int dr [ ] = { 1 , 0 , - 1 , 0 , 1 , 1 , - 1 , - 1 } ; const int dc [ ] = { 0 , 1 , 0 , - 1 , 1 , - 1 , 1 , - 1 } ; const double pi = acos ( - 1 ) ; int a , b , c ; cin >> a >> b >> c ; int main() { cout << a * b + ( a + b - 1 ) * ( c - 1 ) << \" \\n \" ; const int N = 1e5 + 100 ; return 0; }"}}
{"translation": {"en": "a , b , c = int [ENDL] v = vector of int [ENDL] read a , b , c [ENDL] print ( b * c ) + ( a - 1 ) * ( b + c - 1 ) [ENDL] a , b , c = integers", "c++": "int a , b , c ; vector < int > v ; cin >> a >> b >> c ; int main() { cout << ( b * c ) + ( a - 1 ) * ( b + c - 1 ) << endl ; long long a , b , c ; return 0; }"}}
{"translation": {"en": "Read a , b , c [ENDL] ans = integer , set to ( c + a - 1 ) * ( b + a - 1 ) - a * ( a - 1 ) [ENDL] print ans and a new line [ENDL] create long long a , b , c", "c++": "int main() { cin >> a >> b >> c ; long long ans = ( c + a - 1 ) * ( b + a - 1 ) - a * ( a - 1 ) ; cout << ans << endl ; long long a , b , c ; return 0; }"}}
{"translation": {"en": "read a , b , c [ENDL] print ( a * b * c ) - ( ( a - 1 ) * ( b - 1 ) * ( c - 1 ) ) [ENDL] a , b , c = integer", "c++": "int main() { cin >> a >> b >> c ; cout << ( a * b * c ) - ( ( a - 1 ) * ( b - 1 ) * ( c - 1 ) ) << endl ; int a , b , c ; return 0; }"}}
{"translation": {"en": "read a , b , c [ENDL] print the result of b * c + ( a - 1 ) * ( b + c - 1 ) [ENDL] create constant integer INF with INF = 0x3f3f3f3f", "c++": "int main() { cin >> a >> b >> c ; cout << b * c + ( a - 1 ) * ( b + c - 1 ) << endl ; const int INF = 0x3f3f3f3f ; }"}}
{"translation": {"en": "create constant long long INFLL with INFLL = 0x3f3f3f3f3f3f3f3fLL [ENDL] create long longs a , b , c [ENDL] read a read b read c [ENDL] create long long ans with ans = ( c + a - 1 ) * ( b + a - 1 ) - a * ( a - 1 ) [ENDL] print ans print newline [ENDL] declare string variables str , str2 and s", "c++": "const long long INFLL = 0x3f3f3f3f3f3f3f3fLL ; long long a , b , c ; int main() { cin >> a >> b >> c ; long long ans = ( c + a - 1 ) * ( b + a - 1 ) - a * ( a - 1 ) ; cout << ans << endl ; string str , str2 , s ; return 0; }"}}
{"translation": {"en": "declare integer variables num and i [ENDL] read num and str and loop further [ENDL] sort str [ENDL] for i from 0 to length of str exclusive adding num to i , append str [ i ] to str2 [ENDL] for i = 0 to num exclusive , append str2 to s [ENDL] assign s to str2 [ENDL] sort str2 [ENDL] if str2 ! = str [ENDL] print - 1 [ENDL] else [ENDL] print s [ENDL] create constant double PI with PI = acosign of - 1", "c++": "int main() { int num , i ; while ( cin >> num >> str ) sort ( str . begin ( ) , str . end ( ) ) ; for ( i = 0 ; i < str . size ( ) ; i += num ) { str2 += str [ i ] ; } for ( i = 0 ; i < num ; i ++ ) { s += str2 ; } str2 = s ; sort ( str2 . begin ( ) , str2 . end ( ) ) ; if ( str2 != str ) cout << - 1 << endl ; else ; cout << s << endl ; const double PI = acos ( - 1 ) ; } } return 0; }"}}
{"translation": {"en": "create constant integer MAX with MAX = 2e9 + 7 [ENDL] create constant long long MOD with MOD = 1e9 + 7 [ENDL] create map m from character to integer [ENDL] declare solve with no arguments , returning void [ENDL] create integer k [ENDL] read k [ENDL] create string s [ENDL] read s [ENDL] create integer n with n = size of s [ENDL] if n % k is not 0 [ENDL] print - 1 print newline [ENDL] return false from function [ENDL] create integer need with need = n / k [ENDL] for i = 0 to n exclusive , increment m [ s [ i ] ] [ENDL] create string t with t = \" \" [ENDL] for i = 97 to 123 exclusive [ENDL] if m [ character casted i ] % k is 0 [ENDL] for j = 0 to m [ character casted i ] / k exclusive , increment by character casted i [ENDL] else [ENDL] print - 1 print newline [ENDL] return false from function [ENDL] for i = 0 to k exclusive , print t [ENDL] print newline [ENDL] run solve [ENDL] k = int", "c++": "const int MAX = 2e9 + 7 ; const long long MOD = 1e9 + 7 ; map < char , int > m ; void solve ( ) int k ; cin >> k ; string s ; cin >> s ; int n = s . size ( ) ; if ( n % k != 0 ) cout << - 1 << endl ; return ; int need = n / k ; } for ( int i = 0 ; i < n ; i ++ ) { m [ s [ i ] ] ++ ; } string t = \"  \" ; for ( int i = 97 ; i < 123 ; i ++ ) if ( m [ char ( i ) ] % k == 0 ) for ( int j = 0 ; j < m [ char ( i ) ] / k ; j ++ ) { t += char ( i ) ; } else cout << - 1 << endl ; return ; for ( int i = 0 ; i < k ; i ++ ) { cout << t ; } } } cout << endl ; solve ( ) ; } int main() { int k ; return 0; }"}}
{"translation": {"en": "s = string [ENDL] c = int array of size 26 with all values set to 0 [ENDL] read k then s [ENDL] if size of s is not a multiple of k [ENDL] print - 1 [ENDL] for i = 0 to size of s increment c [ s [ i ] - ' a ' ] [ENDL] for i = 0 to 26 [ENDL] if c [ i ] is not a multiple of k [ENDL] print - 1 [ENDL] res = string [ENDL] for i = 0 to 26 [ENDL] for j = 0 to c [ i ] / k increment res by ( ' a ' + i ) as char [ENDL] for i = 0 to k print res [ENDL] print newline [ENDL] k = int", "c++": "int main() { string s ; int c [ 26 ] = { 0 } ; cin >> k >> s ; if ( s . size ( ) % k != 0 ) cout << - 1 << endl ; for ( int i = 0 ; i < s . size ( ) ; ++ i ) { ++ c [ s [ i ] - ' a ' ] ; } return 0; } for ( int i = 0 ; i < 26 ; ++ i ) if ( c [ i ] % k != 0 ) cout << - 1 << endl ; string res ; return 0; } } for ( int i = 0 ; i < 26 ; ++ i ) for ( int j = 0 ; j < c [ i ] / k ; ++ j ) { res += char ( ' a ' + i ) ; } for ( int i = 0 ; i < k ; ++ i ) { cout << res ; } } cout << endl ; int k ; return 0; }"}}
{"translation": {"en": "s = string [ENDL] read k , s [ENDL] count = array of 26 int filled with 0 [ENDL] for i = 0 to length of s exclusive increment count [ s [ i ] - ' a ' ] [ENDL] s1 = string [ENDL] c = 0 [ENDL] increment c while c < 26 [ENDL] if count [ c ] modulo k not equal 0 [ENDL] break [ENDL] else [ENDL] append count [ c ] / k copies of ' a ' + c to s1 [ENDL] if c is 26 [ENDL] while decremented value of k not equal 0 print s1 [ENDL] print newline [ENDL] else [ENDL] print - 1 [ENDL] declare count as integer", "c++": "int main() { string s ; cin >> k >> s ; int count [ 26 ] = { 0 } ; for ( int i = 0 ; i < s . length ( ) ; ++ i ) { count [ s [ i ] - ' a ' ] += 1 ; } string s1 ; int c = 0 ; for ( ; c < 26 ; ++ c ) if ( count [ c ] % k != 0 ) break ; else s1 . append ( count [ c ] / k , ' a ' + c ) ; if ( c == 26 ) } } while ( k -- ) { cout << s1 ; } cout << endl ; else cout << - 1 << endl ; int count ; } return 0; }"}}
{"translation": {"en": "read count [ENDL] declare s as string [ENDL] read s [ENDL] declare n as integer = length of s [ENDL] declare integer array a size 26 = { 0 } [ENDL] for i = 0 to n exclusive , increment a [ s [ i ] - ' a ' ] [ENDL] for i = 0 to 26 exclusive [ENDL] if a [ i ] % count is not 0 [ENDL] print \" - 1 \" print newline [ENDL] declare string ans = \" \" [ENDL] for i = 0 to 26 exclusive [ENDL] if a [ i ] is true [ENDL] for j = 0 to a [ i ] / count exclusive [ENDL] declare temp with temp = i + ' a ' [ENDL] let ans be ans + temp [ENDL] for i = 0 to count exclusive , print ans [ENDL] print newline [ENDL] create integers k", "c++": "int main() { cin >> count ; string s ; cin >> s ; int n = s . length ( ) ; int a [ 26 ] = { 0 } ; for ( int i = 0 ; i < n ; i ++ ) { a [ s [ i ] - ' a ' ] ++ ; } for ( int i = 0 ; i < 26 ; i ++ ) if ( a [ i ] % count != 0 ) cout << \" -1 \" << endl ; string ans = \"  \" ; return 0; } } for ( int i = 0 ; i < 26 ; i ++ ) if ( a [ i ] ) for ( int j = 0 ; j < a [ i ] / count ; j ++ ) char temp = i + ' a ' ; ans = ans + temp ; for ( int i = 0 ; i < count ; i ++ ) { cout << ans ; } } } } cout << endl ; int k ; }"}}
{"translation": {"en": "read k [ENDL] create string str [ENDL] read str [ENDL] create integer n with n = length of str [ENDL] create map characters from character to integer [ENDL] create map iterator itr from character to integer [ENDL] for i = 0 to n exclusive [ENDL] if first index of str [ i ] in characters is not end of characters [ENDL] increment characters [ str [ i ] ] by 1 [ENDL] else [ENDL] set characters [ str [ i ] ] to 1 [ENDL] for itr = beginning of characters to itr is not end of characters , incrementing itr [ENDL] if second element of itr is less than k [ENDL] print - 1 print newline [ENDL] exit program with code 0 [ENDL] create string new_str with new_str = \" \" [ENDL] for itr = beginning of characters to itr is not end of characters , incrementing itr [ENDL] create integer repeat with repeat = second element of itr / k [ENDL] for i = 0 to repeat exclusive , set new_str to new_str + first element of itr [ENDL] if length of new_str * k is less than n [ENDL] print - 1 print newline [ENDL] exit program with code 0 [ENDL] for i = 0 to k exclusive , print new_str [ENDL] print newline [ENDL] declare an array of chars inPutStr with size 1001", "c++": "int main() { cin >> k ; string str ; cin >> str ; int n = str . length ( ) ; map < char , int > characters ; map < char , int > :: iterator itr ; for ( int i = 0 ; i < n ; i ++ ) if ( characters . find ( str [ i ] ) != characters . end ( ) ) characters [ str [ i ] ] += 1 ; else characters [ str [ i ] ] = 1 ; for ( itr = characters . begin ( ) ; itr != characters . end ( ) ; itr ++ ) } } if ( itr -> second < k ) cout << - 1 << endl ; exit ( 0 ) ; string new_str = \"  \" ; } } for ( itr = characters . begin ( ) ; itr != characters . end ( ) ; itr ++ ) int repeat = itr -> second / k ; for ( int i = 0 ; i < repeat ; i ++ ) { new_str = new_str + itr -> first ; } if ( new_str . length ( ) * k < n ) } cout << - 1 << endl ; exit ( 0 ) ; for ( int i = 0 ; i < k ; i ++ ) { cout << new_str ; } } cout << endl ; char inPutStr [ 1001 ] ; return 0; }"}}
{"translation": {"en": "declare int k and an array of ints strArr with 26 elements [ENDL] create char array subStr with 1001 elements [ENDL] makeAString is a void function [ENDL] create integer idx = 0 [ENDL] for j from 0 to 26 exclusive [ENDL] while strArr [ j ] ! = 0 [ENDL] change subStr [ idx ] to j + ' a ' [ENDL] increment idx by one [ENDL] assign strArr [ j ] - k to strArr [ j ] [ENDL] for i from 0 to k exclusive [ENDL] for j = 0 to idx exclusive , print subStr [ j ] [ENDL] print new line [ENDL] for i = 0 to 26 exclusive , set strArr [ i ] to 0 [ENDL] read k [ENDL] read inPutStr [ENDL] for i = 0 while inPutStr [ i ] ! = 0 [ENDL] create integer id = inPutStr [ i ] - ' a ' [ENDL] set strArr [ id ] to strArr [ id ] + 1 [ENDL] declare bool Result = true [ENDL] for i from 0 to 26 exclusive [ENDL] if strArr [ i ] % k ! = 0 [ENDL] assign false to Result [ENDL] break the loop [ENDL] if Result is true [ENDL] call makeAString ( ) [ENDL] else [ENDL] print \" - 1 \" [ENDL] let T , i , j , count , d and m be integers with count = 1 and m = 0", "c++": "int strArr [ 26 ] , k ; char subStr [ 1001 ] ; void makeAString ( ) int idx = 0 ; for ( int j = 0 ; j < 26 ; j ++ ) while ( strArr [ j ] != 0 ) subStr [ idx ] = j + ' a ' ; idx ++ ; strArr [ j ] = strArr [ j ] - k ; for ( int i = 0 ; i < k ; i ++ ) } } for ( int j = 0 ; j < idx ; j ++ ) { cout << subStr [ j ] ; } cout << endl ; } for ( int i = 0 ; i < 26 ; i ++ ) { strArr [ i ] = 0 ; } } int main() { cin >> k ; cin >> inPutStr ; for ( int i = 0 ; inPutStr [ i ] ; i ++ ) int id = inPutStr [ i ] - ' a ' ; strArr [ id ] = strArr [ id ] + 1 ; bool Result = true ; } for ( int i = 0 ; i < 26 ; i ++ ) if ( strArr [ i ] % k != 0 ) Result = false ; break ; if ( Result ) } } makeAString ( ) ; else cout << \" -1 \" << endl ; int T , i , j , count = 1 , d , m = 0 ; return 0; }"}}
{"translation": {"en": "create an arrays of characters s and k with size 1000 [ENDL] read T and s [ENDL] set j to length of s [ENDL] sort s [ENDL] for i = 0 to j exclusive [ENDL] if s [ i ] = s [ i + 1 ] [ENDL] add 1 to count [ENDL] else [ENDL] if count % T = 0 [ENDL] assign count / T to d [ENDL] loop , decrementing d , while it is not 0 [ENDL] set k [ m ] to s [ i ] [ENDL] increment m [ENDL] set count to 1 [ENDL] else [ENDL] print \" - 1 \" [ENDL] set k [ m ] to ' \\ 0 ' [ENDL] decrement T and loop further , while T is not 0 [ENDL] for i from 0 while k [ i ] ! = ' \\ 0 ' incrementing i , print k [ i ] in a loop [ENDL] print new line [ENDL] let solve be a void function which accepts string str , integer k", "c++": "int main() { char s [ 1000 ] , k [ 1000 ] ; cin >> T >> s ; j = strlen ( s ) ; sort ( s , s + j ) ; for ( i = 0 ; i < j ; i ++ ) if ( s [ i ] == s [ i + 1 ] ) count += 1 ; else if ( count % T == 0 ) d = count / T ; while ( d -- ) k [ m ] = s [ i ] ; m ++ ; count = 1 ; } else cout << \" -1 \" << endl ; k [ m ] = ' \\0 ' ; return 0; } } } while ( T -- ) for ( i = 0 ; k [ i ] != ' \\0 ' ; i ++ ) { cout << k [ i ] ; } cout << endl ; } void solve ( string str , int k ) return 0; }"}}
{"translation": {"en": "cnt = array of integers of length 26 [ENDL] memset of cnt , 0 , length of cnt [ENDL] for i = 0 to length of str exclusive , increment cnt [ str [ i ] - a ] by 1 [ENDL] let s1 be a string [ENDL] initialize integer i to 0 [ENDL] for i is less than 26 , increment i by 1 [ENDL] if cnt [ i ] modulo k is not equal to 0 [ENDL] stop [ENDL] else do the following [ENDL] It extends the string s1 by appending cnt [ i ] / k , ' a ' + i [ENDL] if i is equal to 26 [ENDL] while k is decremented by 1 , print s1 [ENDL] print newline [ENDL] else do the following [ENDL] print - 1 and newline [ENDL] let k be a integer [ENDL] read k [ENDL] let str be a string [ENDL] read str [ENDL] solve the values str , k [ENDL] declare long longs i , j , k , n , m , ans , sz , c1 , c2 , x , f , z , declare long long arrays a with size 100009 , ch with size 26", "c++": "int cnt [ 26 ] ; memset ( cnt , 0 , sizeof ( cnt ) ) ; for ( int i = 0 ; i < str . length ( ) ; i ++ ) cnt [ str [ i ] - ' a ' ] ++ ; string s1 ; int i = 0 ; for ( ; i < 26 ; i ++ ) if ( cnt [ i ] % k != 0 ) break ; else s1 . append ( cnt [ i ] / k , ' a ' + i ) ; if ( i == 26 ) } } while ( k -- ) { cout << s1 ; } cout << endl ; else cout << \" -1 \" << endl ; int k ; } } int main() { cin >> k ; string str ; cin >> str ; solve ( str , k ) ; long long i , j , k , n , m , a [ 100009 ] , ans , sz , c1 , c2 , x , ch [ 26 ] , f , z ; return 0; }"}}
{"translation": {"en": "declare string s [ENDL] read k , s [ENDL] let sz be size of s [ENDL] declare character set st [ENDL] declare it as character set iterator [ENDL] for i = 0 to sz exclusive [ENDL] insert s [ i ] into st [ENDL] increment ch [ s [ i ] - ' a ' ] [ENDL] declare long long vector v [ENDL] for it = beginning of st to it is not end of st , incrementing it [ENDL] create character c [ENDL] set c to value of it [ENDL] add ch [ c - ' a ' ] to end of v [ENDL] let sz be size of v [ENDL] for i = 0 to sz exclusive [ENDL] if v [ i ] % k is not 0 [ENDL] let f be 1 [ENDL] break loop [ENDL] if f is true [ENDL] print \" - 1 \" print newline [ENDL] else [ENDL] declare ss as string [ENDL] for it = beginning of st to it is not end of st , incrementing it [ENDL] declare character c [ENDL] let c be value of it [ENDL] let z be ch [ c - ' a ' ] / k [ENDL] for i = 0 to z exclusive , increment ss by c [ENDL] for i = 0 to k exclusive , print ss [ENDL] print newline [ENDL] create integer vector v", "c++": "string s ; int main() { cin >> k >> s ; sz = s . size ( ) ; set < char > st ; set < char > :: iterator it ; for ( i = 0 ; i < sz ; i ++ ) st . insert ( s [ i ] ) ; ch [ s [ i ] - ' a ' ] ++ ; vector < long long > v ; } for ( it = st . begin ( ) ; it != st . end ( ) ; it ++ ) char c ; c = * it ; v . push_back ( ch [ c - ' a ' ] ) ; sz = v . size ( ) ; } for ( i = 0 ; i < sz ; i ++ ) if ( v [ i ] % k != 0 ) f = 1 ; break ; if ( f ) } } cout << \" -1 \" << endl ; else return 0; string ss ; for ( it = st . begin ( ) ; it != st . end ( ) ; it ++ ) char c ; c = * it ; z = ch [ c - ' a ' ] / k ; for ( i = 0 ; i < z ; i ++ ) ss += c ; for ( i = 0 ; i < k ; i ++ ) cout << ss ; } cout << endl ; vector < int > v ; } return 0; }"}}
{"translation": {"en": "create integer vector v1 [ENDL] create character vector v2 [ENDL] create integers k , c , temp , gh with c = 0 , gh = 0 [ENDL] read k [ENDL] create character ch [ENDL] create strings s , ans [ENDL] read s [ENDL] create string s1 with s1 = s [ENDL] sort elements from beginning of s1 to end of s1 [ENDL] for i = 0 to size of s1 exclusive [ENDL] set c to 0 [ENDL] if s1 [ i ] is not s1 [ i + 1 ] [ENDL] set ch to s1 [ i ] [ENDL] add character ch to end of v2 [ENDL] for j = 0 to size of s exclusive [ENDL] if s [ j ] is ch , increment c [ENDL] create integer temp with temp = c [ENDL] add element temp to end of v [ENDL] for i = 0 to size of v exclusive [ENDL] if v [ i ] % k is 0 [ENDL] create integer f with f = v [ i ] / k [ENDL] add element f to end of v1 [ENDL] else [ENDL] set gh to - 1 [ENDL] break loop [ENDL] for i = 0 to size of v1 exclusive [ENDL] create integer m with m = v1 [ i ] [ENDL] create character g with g = v2 [ i ] [ENDL] while m is greater than 0 [ENDL] increment ans by g [ENDL] decrement m [ENDL] create string sum with sum = \" \" [ENDL] create integer our with our = k - 1 [ENDL] while our is greater than or equal to 0 [ENDL] increment sum by ans [ENDL] decrement our [ENDL] if gh is - 1 [ENDL] print - 1 print newline [ENDL] else [ENDL] print sum print newline [ENDL] create integers i , Len , k , create integer array Arr with size 26 with Arr = { 0 }", "c++": "int main() { vector < int > v1 ; vector < char > v2 ; int k , c = 0 , temp , gh = 0 ; cin >> k ; char ch ; string s , ans ; cin >> s ; string s1 = s ; sort ( s1 . begin ( ) , s1 . end ( ) ) ; for ( int i = 0 ; i < s1 . size ( ) ; i ++ ) c = 0 ; if ( s1 [ i ] != s1 [ i + 1 ] ) ch = s1 [ i ] ; v2 . push_back ( ch ) ; for ( int j = 0 ; j < s . size ( ) ; j ++ ) if ( s [ j ] == ch ) { c ++ ; } int temp = c ; } v . push_back ( temp ) ; for ( int i = 0 ; i < v . size ( ) ; i ++ ) } } if ( v [ i ] % k == 0 ) int f = v [ i ] / k ; v1 . push_back ( f ) ; else gh = - 1 ; break ; for ( int i = 0 ; i < v1 . size ( ) ; i ++ ) } } int m = v1 [ i ] ; char g = v2 [ i ] ; while ( m > 0 ) ans += g ; m -- ; string sum = \"  \" ; } } int our = k - 1 ; while ( our >= 0 ) sum += ans ; our -- ; if ( gh == - 1 ) } cout << - 1 << endl ; else cout << sum << endl ; int i , Len , k , Arr [ 26 ] = { 0 } ; } return 0; }"}}
{"translation": {"en": "create strings s , kString [ENDL] read k read s [ENDL] for i = 0 to length of s exclusive , increment Arr [ s [ i ] - ' a ' ] [ENDL] for i = 0 to 26 exclusive [ENDL] if Arr [ i ] % k is not 0 [ENDL] break loop [ENDL] else [ENDL] append ' a ' + i to kString ( Arr [ i ] / k ) times [ENDL] if i is 26 [ENDL] while decrement k is true , print kString [ENDL] print newline [ENDL] else [ENDL] print - 1 print newline [ENDL] create constant double PI = acos ( - 1 )", "c++": "int main() { string s , kString ; cin >> k >> s ; for ( i = 0 ; i < s . length ( ) ; i ++ ) { Arr [ s [ i ] - ' a ' ] ++ ; } for ( i = 0 ; i < 26 ; i ++ ) if ( Arr [ i ] % k != 0 ) break ; { else kString . append ( Arr [ i ] / k , ' a ' + i ) ; if ( i == 26 ) } } while ( k -- ) { cout << kString ; } cout << endl ; else cout << - 1 << endl ; const double PI = acos ( - 1 ) ; } return 0; }"}}
{"translation": {"en": "let const integer MAX = 2e9 + 7 [ENDL] let const long long MOD = 1e9 + 7 [ENDL] create map m of chars to ints [ENDL] declare solve [ENDL] let int k [ENDL] read k [ENDL] let string s [ENDL] read s [ENDL] create int n = s . size ( ) [ENDL] if n modulo k is not equal to 0 [ENDL] print - 1 [ENDL] terminate function [ENDL] create int need = n / k [ENDL] increment all contents of m [ s ] [ENDL] let string t = \" \" [ENDL] for i = 97 to 123 exclusive [ENDL] if m [ char ( i ) ] modulo k is 0 [ENDL] for j = 0 to m [ char ( i ) ] / k exclusive , set t to t + char ( i ) [ENDL] otherwise do [ENDL] print - 1 [ENDL] end function [ENDL] for i = 0 to k exclusive , print t [ENDL] print new line [ENDL] call solve [ENDL] ctn = int array of length 30", "c++": "const int MAX = 2e9 + 7 ; const long long MOD = 1e9 + 7 ; map < char , int > m ; void solve ( ) int k ; cin >> k ; string s ; cin >> s ; int n = s . size ( ) ; if ( n % k != 0 ) cout << - 1 << endl ; return ; int need = n / k ; } for ( int i = 0 ; i < n ; i ++ ) { m [ s [ i ] ] ++ ; } string t = \"  \" ; for ( int i = 97 ; i < 123 ; i ++ ) if ( m [ char ( i ) ] % k == 0 ) for ( int j = 0 ; j < m [ char ( i ) ] / k ; j ++ ) { t += char ( i ) ; } else cout << - 1 << endl ; return ; for ( int i = 0 ; i < k ; i ++ ) { cout << t ; } } } cout << endl ; solve ( ) ; } int main() { int cnt [ 30 ] ; return 0; }"}}
{"translation": {"en": "let n , k be int [ENDL] let s be a string [ENDL] read k and s [ENDL] set n to the lenght of s [ENDL] for i = 0 to n exclusive increment cnt at s [ i ] - ' a ' [ENDL] let can = true be a boolean [ENDL] let ss be a blank string [ENDL] for x = ' a ' to ' z ' inclusive [ENDL] if cnt [ x - ' a ' ] mod k is not 0 [ENDL] can is false [ENDL] else [ENDL] for j = 0 to cnt [ x - ' a ' ] / k increment ss by x [ENDL] if can [ENDL] print ss for k times [ENDL] print new line [ENDL] else [ENDL] print - 1 and new line [ENDL] create integers k , i and j", "c++": "int n , k ; int main() { string s ; cin >> k >> s ; n = s . length ( ) ; for ( int i = 0 ; i < n ; i ++ ) { cnt [ s [ i ] - ' a ' ] ++ ; } bool can = true ; string ss = \"  \" ; for ( char x = ' a ' ; x <= ' z ' ; x ++ ) if ( cnt [ x - ' a ' ] % k != 0 ) can = false ; else for ( int j = 0 ; j < cnt [ x - ' a ' ] / k ; j ++ ) { ss += x ; } if ( can ) } } for ( int i = 0 ; i < k ; i ++ ) { cout << ss ; } cout << endl ; else cout << - 1 << endl ; int k , i , j ; } }"}}
{"translation": {"en": "declare string s [ENDL] create integer array c with size 26 [ENDL] read input to k and s [ENDL] if length of s % k ! = 0 [ENDL] print - 1 to the standart output [ENDL] for i = 0 to length of s exclusive , [ENDL] for i = 0 to 26 exclusive [ENDL] if c [ i ] % k ! = 0 [ENDL] print - 1 to the standart output [ENDL] create string result [ENDL] for i = 0 to 26 exclusive [ENDL] for j from 0 to c [ i ] / k exclusive , append char ( ' a ' + i ) to result [ENDL] for i from 0 to k exclusive , print result to the standart output [ENDL] print new line [ENDL] create constant integer N with N = 100 + 5", "c++": "int main() { string s ; int c [ 26 ] = { 0 } ; cin >> k >> s ; if ( s . size ( ) % k != 0 ) cout << - 1 << endl ; for ( i = 0 ; i < s . size ( ) ; i ++ ) { c [ s [ i ] - ' a ' ] ++ ; } return 0; } for ( i = 0 ; i < 26 ; i ++ ) if ( c [ i ] % k != 0 ) cout << - 1 << endl ; string result ; return 0; } } for ( i = 0 ; i < 26 ; i ++ ) for ( j = 0 ; j < c [ i ] / k ; j ++ ) { result = result + char ( ' a ' + i ) ; } for ( i = 0 ; i < k ; i ++ ) { cout << result ; } } cout << endl ; const int N = 100 + 5 ; return 0; }"}}
{"translation": {"en": "create contant integer mod with mod = 1000000000 + 7 [ENDL] declare boolean ok with character a as argument , returning boolean [ENDL] if a is greater than or equal to ' a ' and a is less than or equal to ' z ' , return 1 from function [ENDL] if a is greater than or equal to ' A ' and a is less than or equal to ' Z ' , return 1 from function [ENDL] if a is greater than or equal to ' 0 ' and a is less than or equal to ' 9 ' , return 1 from function [ENDL] if a is ' _ ' , return 1 from function [ENDL] create character array a with size N [ENDL] read a + 1 [ENDL] create integer len with len = string length of ( a + 1 ) [ENDL] create integer op with op = 1 [ENDL] create boolean flag with flag = 1 [ENDL] create integers cnt1 , cnt2 , ccnt , cnt3 , with cnt1 = 0 , cnt2 = 0 , ccnt = 0 , cnt3 = 0 [ENDL] for i = 1 to len and flag inclusive [ENDL] if op is 1 [ENDL] increment cnt1 [ENDL] if a [ i ] is ' @ ' [ENDL] decrement cnt1 [ENDL] set op to 2 [ENDL] break current loop iteration [ENDL] if result of run ok with a [ i ] as argument is false , set flag to 0 [ENDL] if cnt1 is greater than 16 , set flag to 0 [ENDL] else if op is 2 [ENDL] increment ccnt [ENDL] if cnt is 0 or cnt1 is greater than 16 , set flag to 0 [ENDL] if a [ i ] is ' . ' [ENDL] if cnt2 is 0 or cnt2 is greater than 16 , set flag to 0 [ENDL] set cnt2 to 0 [ENDL] break current loop iteration [ENDL] if a [ i ] is ' / ' [ENDL] decrement ccnt [ENDL] set op to 3 [ENDL] break current loop iteration [ENDL] if result of run ok with a [ i ] as argument is false , set flag to 0 [ENDL] increment cnt2 [ENDL] if cnt2 is greater than 16 , set flag to 0 [ENDL] else [ENDL] if cnt2 is 0 or cnt2 is greater than 16 , set flag to 0 [ENDL] if ccnt is 0 or ccnt is greater than 32 , set flag to 0 [ENDL] if result of run ok with a [ i ] as argument is false , set flag to 0 [ENDL] increment cnt3 [ENDL] if cnt3 is greater than 16 , set flag to 0 [ENDL] if op is 1 , set flag to 0 [ENDL] if op is 2 and ( cnt2 is 0 or cnt2 is greater than 16 ) , set flag to 0 [ENDL] if op is 3 and ( cnt3 is 0 or cnt3 is greater than 16 ) , set flag to 0 [ENDL] if flag is true [ENDL] print \" YES \" print newline [ENDL] else [ENDL] print \" NO \" print newline [ENDL] create constant integer N = 100 + 5", "c++": "const int mod = 1000000000 + 7 ; bool ok ( char a ) if ( a >= ' a ' && a <= ' z ' ) return 1 ; if ( a >= ' A ' && a <= ' Z ' ) return 1 ; if ( a >= ' 0 ' && a <= ' 9 ' ) return 1 ; if ( a == ' _ ' ) return 1 ; char a [ N ] ; return 0; } int main() { cin >> a + 1 ; int len = strlen ( a + 1 ) ; int op = 1 ; bool flag = 1 ; int cnt1 = 0 , cnt2 = 0 , ccnt = 0 , cnt3 = 0 ; for ( int i = 1 ; i <= len && flag ; i ++ ) if ( op == 1 ) cnt1 ++ ; if ( a [ i ] == ' @ ' ) cnt1 -- ; op = 2 ; continue ; if ( ! ok ( a [ i ] ) ) { flag = 0 ; } } if ( cnt1 > 16 ) flag = 0 ; else if ( op == 2 ) ccnt ++ ; if ( cnt1 == 0 || cnt1 > 16 ) flag = 0 ; if ( a [ i ] == ' . ' ) if ( cnt2 == 0 || cnt2 > 16 ) flag = 0 ; cnt2 = 0 ; continue ; if ( a [ i ] == ' / ' ) } ccnt -- ; op = 3 ; continue ; if ( ! ok ( a [ i ] ) ) { flag = 0 ; } } cnt2 ++ ; if ( cnt2 > 16 ) flag = 0 ; else if ( cnt2 == 0 || cnt2 > 16 ) flag = 0 ; if ( ccnt == 0 || ccnt > 32 ) flag = 0 ; if ( ! ok ( a [ i ] ) ) flag = 0 ; cnt3 ++ ; if ( cnt3 > 16 ) flag = 0 ; if ( op == 1 ) flag = 0 ; } } if ( op == 2 && ( cnt2 == 0 || cnt2 > 16 ) ) flag = 0 ; if ( op == 3 && ( cnt3 == 0 || cnt3 > 16 ) ) flag = 0 ; if ( flag ) cout << \" YES \" << endl ; else cout << \" NO \" << endl ; const int N = 100 + 5 ; return 0; }"}}
{"translation": {"en": "create constant integer mod = 1000000000 + 7 [ENDL] bool function ok with char argument a [ENDL] if a is a letter character return 1 [ENDL] if a is a capital letter character return 1 [ENDL] if a is a digit return 1 [ENDL] if a is ' _ ' return 1 [ENDL] declare array of characters of size N [ENDL] read a + 1 [ENDL] create integer len with value = length of ( a + 1 ) [ENDL] set integer op to 1 [ENDL] set boolean flag to 1 [ENDL] integers cnt1 = 0 , cnt2 = 0 , ccnt = 0 and cnt3 = 0 [ENDL] for integer i = 1 to len and flag inclusive [ENDL] if op is equal to 1 [ENDL] increase cnt1 [ENDL] if a [ i ] is ' @ ' [ENDL] decrement cnt1 [ENDL] set value of op to 2 [ENDL] go to the start of the loop [ENDL] if ok ( a [ i ] ) is false , set flag to 0 [ENDL] if cnt1 is greater than 16 , set flag to 0 [ENDL] else if op is equal to 2 [ENDL] increment ccnt [ENDL] if cnt1 = 0 or cnt1 > 16 , set flag to 0 [ENDL] if a [ i ] is ' . ' [ENDL] if cnt2 = 0 or cnt2 > 16 , set flag to 0 [ENDL] set cnt2 to 0 [ENDL] go to the start of the loop [ENDL] if a [ i ] is ' / ' [ENDL] decrement ccnt [ENDL] op = 3 [ENDL] continue the loop [ENDL] if ok ( a [ i ] ) is false , set flag to 0 [ENDL] increase cnt2 [ENDL] if cnt2 is greater than 16 , set flag to 0 [ENDL] else [ENDL] if cnt2 = 0 or cnt2 is greater than 16 , set flag to 0 [ENDL] if ccnt = 0 or ccnt is greater than 32 , set flag to 0 [ENDL] if ok ( a [ i ] ) is false , set flag to 0 [ENDL] increase cnt3 [ENDL] if cnt3 is greater than 16 , set flag to 0 [ENDL] if op is equal to 1 , set flag to 0 [ENDL] if op = 2 and ( cnt2 = 0 or cnt2 is greater than 16 ) , set flag to 0 [ENDL] if op = 3 and ( cnt3 = 0 or cnt3 is greater than 16 ) , set flag to 0 [ENDL] if flag is true [ENDL] print \" YES \" and a new line [ENDL] else [ENDL] print \" NO \" and a new line [ENDL] declare myCompare with constant pair address ' s i , j , from string to integer", "c++": "const int mod = 1000000000 + 7 ; bool ok ( char a ) if ( a >= ' a ' && a <= ' z ' ) return 1 ; if ( a >= ' A ' && a <= ' Z ' ) return 1 ; if ( a >= ' 0 ' && a <= ' 9 ' ) return 1 ; if ( a == ' _ ' ) return 1 ; char a [ N ] ; return 0; } int main() { cin >> a + 1 ; int len = strlen ( a + 1 ) ; int op = 1 ; bool flag = 1 ; int cnt1 = 0 , cnt2 = 0 , ccnt = 0 , cnt3 = 0 ; for ( int i = 1 ; i <= len && flag ; i ++ ) if ( op == 1 ) cnt1 ++ ; if ( a [ i ] == ' @ ' ) cnt1 -- ; op = 2 ; continue ; if ( ! ok ( a [ i ] ) ) { flag = 0 ; } } if ( cnt1 > 16 ) flag = 0 ; else if ( op == 2 ) ccnt ++ ; if ( cnt1 == 0 || cnt1 > 16 ) flag = 0 ; if ( a [ i ] == ' . ' ) if ( cnt2 == 0 || cnt2 > 16 ) flag = 0 ; cnt2 = 0 ; continue ; if ( a [ i ] == ' / ' ) } ccnt -- ; op = 3 ; continue ; if ( ! ok ( a [ i ] ) ) { flag = 0 ; } } cnt2 ++ ; if ( cnt2 > 16 ) flag = 0 ; else if ( cnt2 == 0 || cnt2 > 16 ) flag = 0 ; if ( ccnt == 0 || ccnt > 32 ) flag = 0 ; if ( ! ok ( a [ i ] ) ) flag = 0 ; cnt3 ++ ; if ( cnt3 > 16 ) flag = 0 ; if ( op == 1 ) flag = 0 ; } } if ( op == 2 && ( cnt2 == 0 || cnt2 > 16 ) ) flag = 0 ; if ( op == 3 && ( cnt3 == 0 || cnt3 > 16 ) ) flag = 0 ; if ( flag ) cout << \" YES \" << endl ; else cout << \" NO \" << endl ; bool myCompare ( const pair < string , int > & i , const pair < string , int > & j ) return 0; }"}}
{"translation": {"en": "return second element of i is less than second element of j [ENDL] create string s [ENDL] declare check with no arguments , returning integer [ENDL] create integers x , y , 0 , with x = 0 , y = 0 , flag = 0 [ENDL] for i = 0 to size of s [ENDL] if flag is 0 [ENDL] if s [ i ] is ' @ ' [ENDL] if i - x is greater than 16 or i - x is less than 1 or i + 1 is size of s , return 0 from function [ENDL] set x to i + 1 [ENDL] set y to i + 1 [ENDL] set flag to 1 [ENDL] else if s [ i ] is alphanumeric or s [ i ] is digit or s [ i ] is ' _ ' [ENDL] break current loop iteration [ENDL] else if s [ i ] is not alphanumeric or s [ i ] is not digit or s [ i ] is not ' _ ' [ENDL] else if flag is 1 [ENDL] if s [ i ] is ' / ' [ENDL] if i - x is greater than 32 or i - x is less than 1 or i + 1 is size of s or s [ i - 1 ] is ' . ' , return 0 from function [ENDL] set x to i + 1 [ENDL] set flag to 2 [ENDL] else if s [ i ] is ' . ' [ENDL] if i - y is greater than 16 or i - y is less than 1 or i + 1 is size of s , return 0 from function [ENDL] set y to i + 1 [ENDL] else if s [ i ] is alphanumeric or s [ i ] is digit or s [ i ] is ' . ' or s [ i ] is ' _ ' [ENDL] if i + 1 is size of s [ENDL] if i - x + 1 is greater than 32 or i - x + 1 is less than 1 , return 0 from function [ENDL] if i - y + 1 is greater than 16 or i - y + 1 is less than 1 , return 0 from function [ENDL] break current loop iteration [ENDL] else if s [ i ] is not alphanumeric or s [ i ] is not digit or s [ i ] is not ' . ' or s [ i ] is not ' _ ' [ENDL] else [ENDL] if s [ i ] is ' _ ' and i + 1 is size of s , return 0 from function [ENDL] if s [ i ] is alphanumeric or s [ i ] is digit or s [ i ] is ' _ ' [ENDL] if i + 1 is size of s [ENDL] if i - x + 1 is greater than 16 or i - x + 1 is less than 1 , return 0 from function [ENDL] break current loop iteration [ENDL] if s [ i ] is not alphanumeric or s [ i ] is not digit or s [ i ] is not ' _ ' , return 0 from function [ENDL] if flag is greater than 0 [ENDL] return 1 from function [ENDL] else [ENDL] read s [ENDL] print \" YES \" if result of run check is true , else \" NO \" print newline [ENDL] boolean function l that takes character c as argument", "c++": "return i . second < j . second ; string s ; } int check ( ) int x = 0 , y = 0 , flag = 0 ; for ( int i = 0 ; i < s . size ( ) ; i ++ ) if ( flag == 0 ) if ( s [ i ] == ' @ ' ) if ( ( i - x ) > 16 || ( i - x ) < 1 || ( i + 1 == s . size ( ) ) ) return 0 ; x = i + 1 ; y = i + 1 ; flag = 1 ; else if ( isalpha ( s [ i ] ) || isdigit ( s [ i ] ) || s [ i ] == ' _ ' ) continue ; else if ( ! isalpha ( s [ i ] ) || ! isdigit ( s [ i ] ) || s [ i ] != ' _ ' ) else if ( flag == 1 ) return 0; } if ( s [ i ] == ' / ' ) if ( ( i - x ) > 32 || ( i - x ) < 1 || ( i + 1 == s . size ( ) ) || s [ i - 1 ] == ' . ' ) return 0 ; x = i + 1 ; flag = 2 ; else if ( s [ i ] == ' . ' ) if ( ( i - y ) > 16 || ( i - y ) < 1 || ( i + 1 == s . size ( ) ) ) return 0 ; y = i + 1 ; else if ( isalpha ( s [ i ] ) || isdigit ( s [ i ] ) || s [ i ] == ' . ' || s [ i ] == ' _ ' ) if ( i + 1 == s . size ( ) ) if ( ( i - x + 1 ) > 32 || ( i - x + 1 ) < 1 ) return 0 ; if ( ( i - y + 1 ) > 16 || ( i - y + 1 ) < 1 ) return 0 ; continue ; } else if ( ! isalpha ( s [ i ] ) || ! isdigit ( s [ i ] ) || s [ i ] != ' . ' || s [ i ] != ' _ ' ) else return 0; } if ( s [ i ] == ' _ ' && i + 1 == s . size ( ) ) return 0 ; if ( isalpha ( s [ i ] ) || isdigit ( s [ i ] ) || s [ i ] == ' _ ' ) if ( i + 1 == s . size ( ) ) if ( ( i - x + 1 ) > 16 || ( i - x + 1 ) < 1 ) return 0 ; continue ; } if ( ! isalpha ( s [ i ] ) || ! isdigit ( s [ i ] ) || s [ i ] != ' _ ' ) { return 0 ; } } if ( flag > 0 ) } } return 1 ; else cin >> s ; return 0; } int main() { cout << ( check ( ) ? \" YES \" : \" NO \" ) << endl ; bool l ( char c ) return 0; }"}}
{"translation": {"en": "return true if c is a letter [ENDL] return true if c is a capital letter [ENDL] return true if c is a digit [ENDL] return true if c is an underscore [ENDL] return false [ENDL] function un with string argument s [ENDL] set value of int n to length s [ENDL] if n is 0 or n > 16 return false [ENDL] for i = 0 to n exclusive [ENDL] if l ( s at index i ) is false return false [ENDL] return true [ENDL] function hn with string argument s [ENDL] declare integers n = size of s , i , nw = 0 [ENDL] if n is 0 or n > 32 return false [ENDL] appen character ' . ' to s [ENDL] for i = 0 to n + 1 exclusive [ENDL] if s [ i ] is character \" . \" [ENDL] if nw is equal to 0 or nw is greater than 16 return false [ENDL] nw = 0 [ENDL] else [ENDL] if l ( s at index i ) is false return false [ENDL] increase nw [ENDL] return true [ENDL] boolean function r with string argument s [ENDL] return un ( s ) [ENDL] boolean function f with string argument s [ENDL] int n = length of s , i , j [ENDL] for i = 0 to n exclusive [ENDL] if s at index i is \" @ \" break the loop [ENDL] if i is equal to n return false [ENDL] if un ( substring of s from 0 to i ) is false return false [ENDL] for j = from i + 1 to n exclusive [ENDL] if s [ j ] is \" / \" break the loop [ENDL] if hn ( substring of s from i + 1 to j - i - 1 ) is false return false [ENDL] if j is not equal to n and r ( substring of s from 0 to j + 1 ) is false return false [ENDL] return true [ENDL] let s be string [ENDL] read s [ENDL] if f ( s ) [ENDL] print \" YES \" and a new line [ENDL] else [ENDL] print \" NO \" and a new line [ENDL] create ints i , j , flag = 1 , and dot = 0", "c++": "if ( c >= ' a ' && c <= ' z ' ) { return true ; } if ( c >= ' A ' && c <= ' Z ' ) { return true ; } if ( c >= ' 0 ' && c <= ' 9 ' ) { return true ; } if ( c == ' _ ' ) { return true ; } return false ; bool un ( string s ) } int n = s . size ( ) ; if ( n == 0 || n > 16 ) { return false ; } for ( int i = 0 ; i < n ; i ++ ) if ( ! l ( s [ i ] ) ) { return false ; } return true ; } bool hn ( string s ) } int n = s . size ( ) , i , nw = 0 ; if ( n == 0 || n > 32 ) { return false ; } s += ' . ' ; for ( i = 0 ; i < n + 1 ; i ++ ) if ( s [ i ] == ' . ' ) if ( nw == 0 || nw > 16 ) { return false ; } nw = 0 ; else if ( ! l ( s [ i ] ) ) { return false ; } nw ++ ; return true ; } } bool r ( string s ) } return un ( s ) ; bool f ( string s ) } int n = s . size ( ) , i , j ; for ( i = 0 ; i < n ; i ++ ) if ( s [ i ] == ' @ ' ) { break ; } if ( i == n ) { return false ; } } if ( ! un ( s . substr ( 0 , i ) ) ) { return false ; } for ( j = i + 1 ; j < n ; j ++ ) if ( s [ j ] == ' / ' ) { break ; } if ( ! hn ( s . substr ( i + 1 , j - i - 1 ) ) ) { return false ; } } if ( j != n && ! r ( s . substr ( j + 1 ) ) ) { return false ; } return true ; string s ; } cin >> s ; int main() { if ( f ( s ) ) cout << \" YES \" << endl ; else cout << \" NO \" << endl ; int i , j , flag = 1 , dot = 0 ; } return 0; }"}}
{"translation": {"en": "let string ch [ENDL] read ch [ENDL] for i = 0 to length of ch exclusive [ENDL] if ch [ i ] is equal to ' @ ' [ENDL] if i is greater than 16 or i is less than 1 [ENDL] set flag to 0 [ENDL] move to print [ENDL] break loop [ENDL] else if ch [ i ] is greater than or equal to ' a ' and ch [ i ] is less than or equal to ' z ' or if ch [ i ] is greater than or equal to ' A ' and ch [ i ] is less than or equal to ' Z ' [ENDL] continue to next loop [ENDL] else if ch [ i ] is greater than or equal to ' 0 ' and ch [ i ] is less than or equal to ' 9 ' and if ch [ i ] is equal to ' _ ' [ENDL] continue to next loop iteration [ENDL] else [ENDL] set flag to 0 [ENDL] go to print [ENDL] identify dot [ENDL] for j = i + 1 to length of ch exclusive [ENDL] if ch [ j ] is equal to ' . ' [ENDL] if j - 1 is greater than 17 or j - i is less than 2 [ENDL] set flag to 0 [ENDL] go to print [ENDL] set i to j [ENDL] else if ch [ j ] is greater than or equal to ' a ' and ch [ j ] is less than or equal to ' z ' or if ch [ j ] is greater than or equal to ' A ' and ch [ j ] is less than or equal to ' Z ' [ENDL] continue to next loop [ENDL] else if ch [ j ] is greater than or equal to ' 0 ' and ch [ j ] is less than or equal to ' 9 ' or if ch [ j ] is equal to ' _ ' [ENDL] continue to next loop [ENDL] else if ch [ j ] is equal to ' / ' [ENDL] if j - 1 is greater than 17 or j - i is less than 2 [ENDL] set flag to 0 [ENDL] go to print [ENDL] set i to j [ENDL] otherwise [ENDL] set flag to 0 [ENDL] move to print [ENDL] if j - i is greater than 17 or j - i is less than 2 , set flag to 0 [ENDL] identify print [ENDL] print \" YES \\ n \" if flag is truthy or \" NO \\ n \" if not [ENDL] declare integer n", "c++": "int main() { string ch ; cin >> ch ; for ( i = 0 ; i < ch . length ( ) ; i ++ ) if ( ch [ i ] == ' @ ' ) if ( i > 16 || i < 1 ) flag = 0 ; goto print ; break ; } else if ( ( ch [ i ] >= ' a ' && ch [ i ] <= ' z ' ) || ( ch [ i ] >= ' A ' && ch [ i ] <= ' Z ' ) ) continue ; else if ( ( ch [ i ] >= ' 0 ' && ch [ i ] <= ' 9 ' ) || ( ch [ i ] == ' _ ' ) ) continue ; else flag = 0 ; goto print ; dot : } } for ( j = i + 1 ; j < ch . length ( ) ; j ++ ) if ( ch [ j ] == ' . ' ) if ( j - i > 17 || j - i < 2 ) flag = 0 ; goto print ; i = j ; } else if ( ( ch [ j ] >= ' a ' && ch [ j ] <= ' z ' ) || ( ch [ j ] >= ' A ' && ch [ j ] <= ' Z ' ) ) continue ; else if ( ( ch [ j ] >= ' 0 ' && ch [ j ] <= ' 9 ' ) || ( ch [ j ] == ' _ ' ) ) continue ; else if ( ch [ j ] == ' / ' ) if ( j - i > 17 || j - i < 2 ) flag = 0 ; goto print ; i = j ; } else flag = 0 ; goto print ; if ( j - i > 17 || j - i < 2 ) flag = 0 ; } } print : ( flag ) ? ( cout << \" YES\\n \" ) : ( cout << \" NO\\n \" ) ; int n ; return 0; }"}}
{"translation": {"en": "read n [ENDL] print n [ENDL] for i = 1 to n exclusive , print ' ' and i [ENDL] print ' \\ n ' [ENDL] create integer n", "c++": "int main() { cin >> n ; cout << n ; for ( int i = 1 ; i < n ; i ++ ) cout << '   ' << i ; cout << ' \\n ' ; int n ; }"}}
{"translation": {"en": "read n [ENDL] print n [ENDL] for i = 1 to n exclusive , print \" \" print i [ENDL] print newline [ENDL] create integer n", "c++": "int main() { cin >> n ; cout << n ; for ( int i = 1 ; i < n ; ++ i ) { cout << \"   \" << i ; } cout << endl ; int n ; return 0; }"}}
{"translation": {"en": "read n [ENDL] print n [ENDL] for i = 1 to n exclusive , print \" \" print i [ENDL] print newline [ENDL] declare integer variable n", "c++": "int main() { cin >> n ; cout << n ; for ( int i = 1 ; i < n ; ++ i ) { cout << \"   \" << i ; } cout << endl ; int n ; return 0; }"}}
{"translation": {"en": "read n [ENDL] print n [ENDL] for integer i = 1 to n exclusive print \" \" and i [ENDL] print new line [ENDL] n = integer", "c++": "int main() { cin >> n ; cout << n ; for ( int i = 1 ; i < n ; ++ i ) { cout << \"   \" << i ; } cout << endl ; int n ; return 0; }"}}
{"translation": {"en": "read n [ENDL] print n [ENDL] for i = 1 to n exclusive [ENDL] if i is not n print \" \" [ENDL] print i [ENDL] print new line [ENDL] let n be a integer", "c++": "int main() { cin >> n ; cout << n ; for ( int i = 1 ; i < n ; i ++ ) if ( i != n ) cout << \"   \" ; cout << i ; cout << endl ; } int n ; return 0; }"}}
{"translation": {"en": "read n [ENDL] print n [ENDL] for ( i = 1 to n - 1 inclusive ) , print space and i [ENDL] print newline [ENDL] declare integer a", "c++": "int main() { cin >> n ; cout << n ; for ( int i = 1 ; i <= n - 1 ; i ++ ) cout << \"   \" << i ; cout << endl ; int a ; return 0; }"}}
{"translation": {"en": "loop while reading a [ENDL] print a [ENDL] for integer i = 1 to a exclusive , print ' ' and i [ENDL] print new line [ENDL] in the function desperate_optimization that takes integer precision", "c++": "int main() { while ( cin >> a ) cout << a ; for ( int i = 1 ; i < a ; i ++ ) cout << '   ' << i ; cout << endl ; void desperate_optimization ( int precision ) } return 0; }"}}
{"translation": {"en": "print floats with a fixed number of decimals [ENDL] print floats with showpoint format [ENDL] print precision with precision [ENDL] call desperate_optimization on 10 [ENDL] n = integer [ENDL] read n [ENDL] print n [ENDL] for i = 1 to n exclusive , print i [ENDL] print new line [ENDL] a = integer", "c++": "cout . setf ( ios :: fixed ) ; cout . setf ( ios :: showpoint ) ; cout . precision ( precision ) ; desperate_optimization ( 10 ) ; } int main() { int n ; cin >> n ; cout << n ; for ( int i = 1 ; i < n ; i ++ ) cout << \"   \" << i ; cout << ' \\n ' ; int a ; return 0; }"}}
{"translation": {"en": "Read a [ENDL] print a [ENDL] if a is greater than 1 , then print \" \" [ENDL] for i = 0 to a - 1 exclusive [ENDL] print i + 1 [ENDL] if i + 2 is not equal to a , then print \" \" [ENDL] print a new line [ENDL] MOD = integer", "c++": "int main() { cin >> a ; cout << a ; if ( a > 1 ) cout << \"   \" ; for ( int i = 0 ; i < a - 1 ; i ++ ) cout << i + 1 ; if ( i + 2 != a ) cout << \"   \" ; cout << endl ; } int MOD ; return 0; }"}}
{"translation": {"en": "in function mod_pow with arguments of long long a and long long b and returns a long long [ENDL] if b is 0 , then return 1 [ENDL] if b is 1 , then return a modulo MOD [ENDL] if the last bit in binary of b is 1 , then return a modulo MOD * the result of calling mod_pow with arguments a , b - 1 and then modulo the result of that function by MOD [ENDL] x = long long = the result of calling mod_pow with arguments a , and the b with its elements shifted to the right by one bit [ENDL] return ( x * x ) modulo MOD [ENDL] n , m = integer [ENDL] read n , m [ENDL] MOD = m [ENDL] r = integer = the result of calling mod_pow with arguments 3 , n [ENDL] if r is 0 [ENDL] print the result of m - 1 [ENDL] else [ENDL] print the result of r - 1 [ENDL] declare power with long longs x , integers y , m as arguments , returning long long", "c++": "long long mod_pow ( long long a , long long b ) if ( b == 0 ) return 1 ; if ( b == 1 ) return a % MOD ; if ( b & 1 ) return ( ( a % MOD ) * mod_pow ( a , b - 1 ) ) % MOD ; long long x = mod_pow ( a , b >> 1 ) ; return ( x * x ) % MOD ; int n , m ; } int main() { cin >> n >> m ; MOD = m ; int r = mod_pow ( 3 , n ) ; if ( r == 0 ) cout << m - 1 << endl ; else cout << r - 1 << endl ; long long power ( long long x , int y , int m ) } return 0; }"}}
{"translation": {"en": "create long long res with res = 1 [ENDL] while y is greater than 0 [ENDL] if y bitwise and 1 [ENDL] set res to res * x [ENDL] set res to res % m [ENDL] set y to y bitwise right 1 [ENDL] set x to x * x [ENDL] set x to x % m [ENDL] return res from function [ENDL] create integers n , m [ENDL] read n read m [ENDL] create integer ans with ans = result of run power with long long casted ( 3 ) , n , m as arguments [ENDL] if ans is 0 [ENDL] print m - 1 print newline [ENDL] else [ENDL] print ans - 1 print newline [ENDL] in function modl taking three long longs n , k and p and returning a long long", "c++": "long long res = 1 ; while ( y > 0 ) if ( y & 1 ) res = res * x ; res %= m ; y = y >> 1 ; } x = x * x ; x %= m ; return res ; } int n , m ; } int main() { cin >> n >> m ; int ans = power ( ( long long ) 3 , n , m ) ; if ( ans == 0 ) cout << m - 1 << endl ; else cout << ans - 1 << endl ; long long modl ( long long n , long long k , long long p ) } return 0; }"}}
{"translation": {"en": "if n is 0 return 0 [ENDL] if k is 0 [ENDL] return 1 [ENDL] else if k is even [ENDL] return ( modl of n , k / 2 and p * ( modl of n , k / 2 and p ) ) mod p [ENDL] else [ENDL] return ( n * modl of n , k - 1 and p ) mod p [ENDL] n , m = long long [ENDL] read n then m [ENDL] z = long long with z = modl of 3 , n and m [ENDL] if z is 0 [ENDL] print m - 1 [ENDL] else [ENDL] print z - 1 [ENDL] declare integers n and m", "c++": "if ( n == 0 ) return 0 ; if ( k == 0 ) return 1 ; else if ( k % 2 == 0 ) return ( modl ( n , k / 2 , p ) * ( modl ( n , k / 2 , p ) ) ) % p ; else return ( n * modl ( n , k - 1 , p ) ) % p ; long long n , m ; } int main() { cin >> n >> m ; long long z = modl ( 3 , n , m ) ; if ( z == 0 ) cout << m - 1 << endl ; else cout << z - 1 << endl ; int n , m ; return 0; }"}}
{"translation": {"en": "read n and m [ENDL] create long long a = 3 [ENDL] create integer i = 1 [ENDL] create integer two = 0 [ENDL] while n > 0 [ENDL] if n is odd , assign i * a % m to i [ENDL] set n to n / 2 [ENDL] change a to a squared modulo m [ENDL] print ( i - 1 + m ) % m [ENDL] in function pow taking three long longs a , b and m and returning a long long", "c++": "int main() { cin >> n >> m ; long long a = 3 ; int i = 1 ; int two = 0 ; while ( n > 0 ) if ( n % 2 == 1 ) i = i * a % m ; n = n / 2 ; a = ( a * a ) % m ; cout << ( i - 1 + m ) % m << endl ; } long long pow ( long long a , long long b , long long m ) return 0; }"}}
{"translation": {"en": "res = long long with res = 1 [ENDL] loop while b is not 0 [ENDL] if b bitwise - and 1 is true then set res to ( res * a ) mod m [ENDL] set a to ( a * a ) mod m [ENDL] set b to b bithsift right by 1 [ENDL] return res [ENDL] n , m = long long [ENDL] read n then m [ENDL] print ( ( pow of 3 , n and m ) - 1 + m ) mod m [ENDL] MAX = const integer with MAX = 3e4 + 5", "c++": "long long res = 1 ; while ( b ) if ( b & 1 ) { res = ( res * a ) % m ; } a = ( a * a ) % m ; b >>= 1 ; return res ; } long long n , m ; } int main() { cin >> n >> m ; cout << ( pow ( 3 , n , m ) - 1 + m ) % m << endl ; const int MAX = 3e4 + 5 ; return 0; }"}}
{"translation": {"en": "MAX2 = const long long with MAX2 = 11 [ENDL] MOD = const integer with MOD = 1000000000 + 7 [ENDL] INF = const long long with INF = 20000 [ENDL] dr = const integer array with dr = { 1 , 0 , - 1 , 0 , 1 , 1 , - 1 , - 1 } [ENDL] dc = const integer array with dc = { 0 , 1 , 0 , - 1 , 1 , - 1 , 1 , - 1 } [ENDL] pi = const double with pi = acos ( - 1 ) [ENDL] eps = const double with eps = 1e - 9 [ENDL] n , m = long long [ENDL] in the function pw that returns long long [ENDL] ret = long long with ret = 1 , x = 3 [ENDL] while n [ENDL] if n bitwise and 1 , ret = ( ret * x ) modulo m [ENDL] x = ( x * x ) modulo m [ENDL] n = right shift n 1 place [ENDL] return ret [ENDL] read n , m [ENDL] print ( pw ( ) + m - 1 ) modulo m [ENDL] m = long long", "c++": "const long long MAX2 = 11 ; const int MOD = 1000000000 + 7 ; const long long INF = 20000 ; const int dr [ ] = { 1 , 0 , - 1 , 0 , 1 , 1 , - 1 , - 1 } ; const int dc [ ] = { 0 , 1 , 0 , - 1 , 1 , - 1 , 1 , - 1 } ; const double pi = acos ( - 1 ) ; const double eps = 1e-9 ; long long n , m ; long long pw ( ) long long ret = 1 , x = 3 ; while ( n ) if ( n & 1 ) ret = ( ret * x ) % m ; x = ( x * x ) % m ; n >>= 1 ; return ret ; } cin >> n >> m ; } int main() { cout << ( pw ( ) + m - 1 ) % m << \" \\n \" ; long long m ; return 0; }"}}
{"translation": {"en": "in function pw taking two long longs x and p and returning a long long [ENDL] if p is 0 return 1 mod m [ENDL] z = long long with z = pw of x and p / 2 [ENDL] set z to z * z [ENDL] set z to z mod m [ENDL] if p is even return z [ENDL] set z to z * x [ENDL] set z to z mod m [ENDL] return z [ENDL] n = long long [ENDL] raed n then m [ENDL] res = long long with res = 2 * ( ( pw of 3 and n ) - 1 ) / 2 [ENDL] set res to res mod m [ENDL] increment res by m [ENDL] set res to res mod m [ENDL] print res [ENDL] declare power taking in long long ints x , y , and MOD and returning long long int", "c++": "long long pw ( long long x , long long p ) if ( ! p ) return 1 % m ; long long z = pw ( x , p / 2 ) ; z *= z ; z %= m ; if ( p % 2 == 0 ) return z ; z *= x ; z %= m ; return z ; long long n ; } int main() { cin >> n >> m ; long long res = 2 * ( pw ( 3 , n ) - 1 ) / ( 2 ) ; res %= m ; res += m ; res %= m ; cout << res << endl ; long long power ( long long x , long long y , long long MOD ) return 0; }"}}
{"translation": {"en": "create unsigned long long int res = 1 [ENDL] set x to x modulo MOD [ENDL] while y is more than 0 [ENDL] if y & 1 is truthy , set res to ( res * x ) % MOD [ENDL] set y to y > > 1 [ENDL] set x to ( x * x ) % MOD [ENDL] convert res to long long int and return it [ENDL] create long long ints n , m , and res [ENDL] read n and m [ENDL] set res to power ( 3 , n , m ) - 1 [ENDL] print ( res + m ) % m [ENDL] declare long longs m and n", "c++": "unsigned long long res = 1 ; x = x % MOD ; while ( y > 0 ) if ( y & 1 ) { res = ( res * x ) % MOD ; } y = y >> 1 ; x = ( x * x ) % MOD ; return ( long long ) res ; } long long n , m , res ; } cin >> n >> m ; int main() { res = power ( 3 , n , m ) - 1 ; cout << ( res + m ) % m << endl ; long long m , n ; return 0; }"}}
{"translation": {"en": "pw is a long long function with long long arguments a and b [ENDL] declare long long res with value 1 [ENDL] while b is not 0 [ENDL] if b & 1 is true , change res to ( res * a ) modulo m [ENDL] set a to a squared modulo m [ENDL] change the value of b to b divided by 2 [ENDL] return res [ENDL] read input to n and m [ENDL] declare long long variable with name ans and value = pw of 3 and n [ENDL] decrement ans [ENDL] if ans is less than 0 , add m to ans [ENDL] print ans to the standard output [ENDL] declare f taking in long long integers n and m and returning long long int", "c++": "long long pw ( long long a , long long b ) long long res = 1 ; while ( b ) if ( b & 1 ) res = ( res * a ) % m ; a = ( a * a ) % m ; b /= 2 ; return res ; } cin >> n >> m ; } int main() { long long ans = ( pw ( 3 , n ) ) ; ans -- ; if ( ans < 0 ) ans += m ; cout << ans << endl ; long long f ( long long n , long long m ) return 0; }"}}
{"translation": {"en": "if n is equal to 0 [ENDL] return the result of 1 % m [ENDL] else if n is equal to 1 [ENDL] return 3 % m [ENDL] create long long tmp = f ( n / 2 , m ) [ENDL] if n modulo 2 is 0 [ENDL] return the result of tmp * tmp % m [ENDL] otherwise [ENDL] return ( tmp * tmp % m ) * 3 % m [ENDL] create ints n and m [ENDL] read n and m [ENDL] create long long int fx = f ( n , m ) [ENDL] if fx is 0 [ENDL] print m - 1 [ENDL] else [ENDL] print fx - 1 [ENDL] m = long long", "c++": "if ( n == 0 ) return 1 % m ; else if ( n == 1 ) return 3 % m ; long long tmp = f ( n / 2 , m ) ; } if ( n % 2 == 0 ) return tmp * tmp % m ; else return ( tmp * tmp % m ) * 3 % m ; int n , m ; } } int main() { cin >> n >> m ; long long fx = f ( n , m ) ; if ( fx == 0 ) cout << m - 1 << endl ; else cout << fx - 1 << endl ; long long m ; } return 0; }"}}
{"translation": {"en": "in function power taking a long long a and an int n and returning an int [ENDL] res = long long with res = 1 [ENDL] loop while n is greater than 0 [ENDL] if n is uneven [ENDL] set res to res * a [ENDL] set res to res mod m [ENDL] set a to a * a [ENDL] set a to a mod m [ENDL] set n to n / 2 [ENDL] return res [ENDL] n = int [ENDL] read n then m [ENDL] print ( ( ( power of 3 and n ) - 1 ) mod m + m ) mod m [ENDL] declare power with long longs a , b , m as arguments , returning long long", "c++": "int power ( long long a , int n ) long long res = 1 ; while ( n > 0 ) if ( n % 2 == 1 ) res *= a ; res %= m ; a *= a ; } a %= m ; n /= 2 ; return res ; } int n ; } int main() { cin >> n >> m ; cout << ( ( power ( 3 , n ) - 1 ) % m + m ) % m << endl ; long long power ( long long a , long long b , long long m ) return 0; }"}}
{"translation": {"en": "create long longs temp , ans with temp = a , ans = 1 [ENDL] while b is true [ENDL] if b bitwise and 1 is true , set ans to ( ans % m * temp % m ) % m [ENDL] set temp to ( temp % m * temp % m ) % m [ENDL] set b to b / 2 [ENDL] return ans from function [ENDL] create long longs n , m [ENDL] read n read m [ENDL] print ( result of run power with 3 , n , m as arguments - 1 + m ) % m print newline [ENDL] create long longs ax , ay , bx , by , cx , cy", "c++": "long long temp = a , ans = 1 ; while ( b ) if ( b & 1 ) ans = ( ans % m * temp % m ) % m ; temp = ( temp % m * temp % m ) % m ; b /= 2 ; return ans ; } long long n , m ; } int main() { cin >> n >> m ; cout << ( power ( 3 , n , m ) - 1 + m ) % m << endl ; long long ax , ay , bx , by , cx , cy ; }"}}
{"translation": {"en": "read ax read ay read bx read by read cx read cy [ENDL] create long long ds with ds = ( bx * cy - by * cx ) - ( ax * cy - ay * cx ) + ( ax * by - ay * bx ) [ENDL] if ds is 0 [ENDL] print \" TOWARDS \" [ENDL] else if ds is less than 0 [ENDL] print \" RIGHT \" [ENDL] else [ENDL] print \" LEFT \" [ENDL] print ' \\ n ' [ENDL] function solve ( no args , no return value )", "c++": "int main() { cin >> ax >> ay >> bx >> by >> cx >> cy ; long long ds = ( bx * cy - by * cx ) - ( ax * cy - ay * cx ) + ( ax * by - ay * bx ) ; if ( ds == 0 ) cout << \" TOWARDS \" ; else if ( ds < 0 ) cout << \" RIGHT \" ; else cout << \" LEFT \" ; cout << ' \\n ' ; void solve ( ) }"}}
{"translation": {"en": "a1 , a2 , b1 , b2 , c1 , c2 = long long [ENDL] read a1 , a2 , b1 , b2 , c1 , c2 [ENDL] d = ( b1 - a1 ) * ( c2 - a2 ) - ( b2 - a2 ) * ( c1 - a1 ) [ENDL] if d is 0 [ENDL] print \" TOWARDS \" [ENDL] else if d > 0 [ENDL] print \" LEFT \" [ENDL] else [ENDL] print \" RIGHT \" [ENDL] set output precision to 12 digits [ENDL] solve ( ) [ENDL] declare fp with long longs n , p as arguments , returning long long", "c++": "long long a1 , a2 , b1 , b2 , c1 , c2 ; cin >> a1 >> a2 >> b1 >> b2 >> c1 >> c2 ; long long d = ( b1 - a1 ) * ( c2 - a2 ) - ( b2 - a2 ) * ( c1 - a1 ) ; if ( d == 0 ) cout << \" TOWARDS \" << endl ; else if ( d > 0 ) cout << \" LEFT \" << endl ; else cout << \" RIGHT \" << endl ; cout << setprecision ( 12 ) << fixed ; } } int main() { solve ( ) ; long long fp ( long long n , long long p ) return 0; }"}}
{"translation": {"en": "if p is 0 , return 1 from function [ENDL] if p is 1 , return n from function [ENDL] create long long res with res = result of run fp with n , p / 2 as arguments [ENDL] set res to res * res [ENDL] if p % 2 , set res to res * n [ENDL] return res from function [ENDL] create pair of integer , integer array arr with size 5 [ENDL] create integers a , b , c [ENDL] create soubles s , ss , with s = - 1 , ss = - 1 [ENDL] create boolean f with f = 0 [ENDL] for i = 0 to 3 exclusive [ENDL] read first element of arr [ i ] read second element of arr [ i ] [ENDL] if i is 1 [ENDL] if ( ( first element of arr [ i ] - first element of arr [ i - 1 ] ) is not 0 ) set s to ( second element of arr [ i ] - second element of arr [ i - 1 ] ) / ( first element of arr [ i ] - first element of arr [ i - 1 ] ) [ENDL] else if i is 2 [ENDL] if ( ( first element of arr [ i ] - first element of arr [ i - 1 ] ) is not 0 ) set ss to ( second element of arr [ i ] - second element of arr [ i - 1 ] ) / ( first element of arr [ i ] - first element of arr [ i - 1 ] ) [ENDL] if s is ss , set f to 1 [ENDL] if f is true , return print \" TOWARDS \" print ' \\ n ' , 0 from function [ENDL] if second element of arr [ 0 ] is greater than second element of arr [ 1 ] [ENDL] if first element of arr [ 2 ] is greater than first element of arr [ 1 ] [ENDL] return print \" LEFT \" print ' \\ n ' , 0 from function [ENDL] else [ENDL] return print \" RIGHT \" print ' \\ n ' , 0 from function [ENDL] else if second element of arr [ 0 ] is less than second element of arr [ 1 ] [ENDL] if first element of arr [ 2 ] is less than first element of arr [ 1 ] [ENDL] return print \" LEFT \" print ' \\ n ' , 0 from function [ENDL] else [ENDL] return print \" RIGHT \" print ' \\ n ' , 0 from function [ENDL] else if second element of arr [ 0 ] is second element of arr [ 1 ] and first element of arr [ 0 ] is less than first element of arr [ 1 ] [ENDL] if second element of arr [ 2 ] is greater than second element of arr [ 1 ] [ENDL] return print \" LEFT \" print ' \\ n ' , 0 from function [ENDL] else [ENDL] return print \" RIGHT \" print ' \\ n ' , 0 from function [ENDL] else if second element of arr [ 0 ] is second element of arr [ 1 ] and first element of arr [ 0 ] is greater than first element of arr [ 1 ] [ENDL] if second element of arr [ 2 ] is less than second element of arr [ 1 ] [ENDL] return print \" LEFT \" print ' \\ n ' , 0 from function [ENDL] else [ENDL] return print \" RIGHT \" print ' \\ n ' , 0 from function [ENDL] x1 , x2 , x3 , y1 , y2 , y3 = integers", "c++": "if ( p == 0 ) return 1 ; if ( p == 1 ) return n ; long long res = fp ( n , p / 2 ) ; res = ( ( res ) * ( res ) ) ; if ( p % 2 ) res = ( res * n ) ; return res ; pair < int , int > arr [ 5 ] ; } int main() { int a , b , c ; double s = - 1 , ss = - 1 ; bool f = 0 ; for ( int i = 0 ; i < 3 ; i ++ ) cin >> arr [ i ] . first >> arr [ i ] . second ; if ( i == 1 ) if ( ( arr [ i ] . first - arr [ i - 1 ] . first ) != 0 ) s = ( arr [ i ] . second - arr [ i - 1 ] . second ) / ( arr [ i ] . first - arr [ i - 1 ] . first ) ; else if ( i == 2 ) if ( ( arr [ i ] . first - arr [ i - 1 ] . first ) != 0 ) ss = ( arr [ i ] . second - arr [ i - 1 ] . second ) / ( arr [ i ] . first - arr [ i - 1 ] . first ) ; if ( s == ss ) f = 1 ; if ( f ) return cout << \" TOWARDS \" << ' \\n ' , 0 ; } } if ( arr [ 0 ] . second > arr [ 1 ] . second ) if ( arr [ 2 ] . first > arr [ 1 ] . first ) return cout << \" LEFT \" << ' \\n ' , 0 ; else return cout << \" RIGHT \" << ' \\n ' , 0 ; else if ( arr [ 0 ] . second < arr [ 1 ] . second ) if ( arr [ 2 ] . first < arr [ 1 ] . first ) return cout << \" LEFT \" << ' \\n ' , 0 ; else return cout << \" RIGHT \" << ' \\n ' , 0 ; else if ( arr [ 0 ] . second == arr [ 1 ] . second && arr [ 0 ] . first < arr [ 1 ] . first ) if ( arr [ 2 ] . second > arr [ 1 ] . second ) return cout << \" LEFT \" << ' \\n ' , 0 ; else return cout << \" RIGHT \" << ' \\n ' , 0 ; else if ( arr [ 0 ] . second == arr [ 1 ] . second && arr [ 0 ] . first > arr [ 1 ] . first ) if ( arr [ 2 ] . second < arr [ 1 ] . second ) return cout << \" LEFT \" << ' \\n ' , 0 ; else return cout << \" RIGHT \" << ' \\n ' , 0 ; long long int x1 , x2 , x3 , y1 , y2 , y3 ; } return 0; }"}}
{"translation": {"en": "Read x1 , x2 , x3 , y1 , y2 , y3 [ENDL] if ( y2 - y1 ) * ( x3 - x2 ) is equal to ( y3 - y2 ) * ( x2 - x1 ) [ENDL] print TOWARDS and a new line [ENDL] else if ( x3 - x2 ) * ( y2 - y1 ) - ( x2 - x1 ) * ( y3 - y2 ) is greater than 0 [ENDL] print RIGHT and a new line [ENDL] else do the following [ENDL] print LEFT and a new line [ENDL] create long long integers xa , ya , xb , yb , xc , and yc", "c++": "int main() { cin >> x1 >> y1 >> x2 >> y2 >> x3 >> y3 ; if ( ( y2 - y1 ) * ( x3 - x2 ) == ( y3 - y2 ) * ( x2 - x1 ) ) cout << \" TOWARDS \" << endl ; else if ( ( x3 - x2 ) * ( y2 - y1 ) - ( x2 - x1 ) * ( y3 - y2 ) > 0 ) cout << \" RIGHT \" << endl ; else cout << \" LEFT \" << endl ; long long xa , ya , xb , yb , xc , yc ; } return 0; }"}}
{"translation": {"en": "read xa , ya , xb , yb , xc , and yc [ENDL] create long long integer cp = ( xb - xa ) * ( yc - ya ) - ( yb - ya ) * ( xc - xa ) [ENDL] if cp is greater than 0 [ENDL] print \" LEFT \\ n \" [ENDL] else if cp is less than 0 [ENDL] print \" RIGHT \\ n \" [ENDL] else [ENDL] print \" TOWARDS \\ n \" [ENDL] create long long integers x1 , x2 , x3 , y1 , y2 , y3", "c++": "int main() { cin >> xa >> ya >> xb >> yb >> xc >> yc ; long long cp = ( xb - xa ) * ( yc - ya ) - ( yb - ya ) * ( xc - xa ) ; if ( cp > 0 ) cout << \" LEFT\\n \" ; else if ( cp < 0 ) cout << \" RIGHT\\n \" ; else cout << \" TOWARDS\\n \" ; long long int x1 , x2 , x3 , y1 , y2 , y3 ; return 0; }"}}
{"translation": {"en": "read x1 read y1 read x2 read y2 read x3 read y3 [ENDL] if ( y2 - y1 ) * ( x3 - x2 ) is ( y3 - y2 ) * ( x2 - x1 ) [ENDL] print \" TOWARDS \" print newline [ENDL] else if ( x3 - x2 ) * ( y2 - y1 ) - ( x2 - x1 ) * ( y3 - y2 ) is greater than 0 [ENDL] print \" RIGHT \" print newline [ENDL] else [ENDL] print \" LEFT \" print newline [ENDL] x1 , y1 , x2 , y2 , x3 , y3 = long longs", "c++": "int main() { cin >> x1 >> y1 >> x2 >> y2 >> x3 >> y3 ; if ( ( y2 - y1 ) * ( x3 - x2 ) == ( y3 - y2 ) * ( x2 - x1 ) ) cout << \" TOWARDS \" << endl ; else if ( ( x3 - x2 ) * ( y2 - y1 ) - ( x2 - x1 ) * ( y3 - y2 ) > 0 ) cout << \" RIGHT \" << endl ; else cout << \" LEFT \" << endl ; long long x1 , y1 , x2 , y2 , x3 , y3 ; } return 0; }"}}
{"translation": {"en": "read x1 , y1 , x2 , y2 , x3 , y3 [ENDL] vx1 = long long = x2 - x1 , vy1 = long long = y2 - y1 , vx2 = long long = x3 - x2 , vy2 = long long = y3 - y2 [ENDL] cha = long long = vx1 * vy2 - vx2 * vy1 [ENDL] if cha > 0 , then print LEFT [ENDL] if cha < 0 , then print RIGHT [ENDL] if cha is 0 , then print TOWARDS [ENDL] f = integer = 0", "c++": "int main() { cin >> x1 >> y1 >> x2 >> y2 >> x3 >> y3 ; long long vx1 = x2 - x1 , vy1 = y2 - y1 , vx2 = x3 - x2 , vy2 = y3 - y2 ; long long cha = vx1 * vy2 - vx2 * vy1 ; if ( cha > 0 ) { cout << \" LEFT \" << endl ; } if ( cha < 0 ) { cout << \" RIGHT \" << endl ; } if ( cha == 0 ) { cout << \" TOWARDS \" << endl ; } int f = 0 ; return 0; }"}}
{"translation": {"en": "x1 , x2 , x3 , y1 , y , 2 , y3 = long longs [ENDL] read x1 , y1 , x2 , y2 , x3 , y3 [ENDL] temp = long long = ( x2 - x1 ) * ( y3 - y2 ) - ( y2 - y1 ) * ( x3 - x2 ) [ENDL] if temp is 0 [ENDL] f = 0 [ENDL] else if temp > 0 [ENDL] f = 1 [ENDL] else [ENDL] f = 2 [ENDL] if f is 0 [ENDL] print TOWARDS [ENDL] else if f is 2 [ENDL] print RIGHT [ENDL] else [ENDL] print LEFT [ENDL] let x = array of long integers of length 4 , y = array of long integers of length 4", "c++": "int main() { long long x1 , x2 , x3 , y1 , y2 , y3 ; cin >> x1 >> y1 >> x2 >> y2 >> x3 >> y3 ; long long temp = ( x2 - x1 ) * ( y3 - y2 ) - ( y2 - y1 ) * ( x3 - x2 ) ; if ( temp == 0 ) f = 0 ; else if ( temp > 0 ) f = 1 ; else f = 2 ; if ( f == 0 ) puts ( \" TOWARDS \" ) ; else if ( f == 2 ) puts ( \" RIGHT \" ) ; else puts ( \" LEFT \" ) ; long long x [ 4 ] , y [ 4 ] ; return 0; }"}}
{"translation": {"en": "for i = 1 to 3 inclusive , read x [ i ] and y [ i ] [ENDL] let a1 be a long integer with a1 = y [ 1 ] - y [ 2 ] [ENDL] let b1 be a long integer with b1 = x [ 2 ] - x [ 1 ] [ENDL] let c1 be a long integer with c1 = x [ 1 ] * y [ 2 ] - x [ 2 ] * y [ 1 ] [ENDL] let a2 be a long integer with a2 = y [ 2 ] - y [ 3 ] [ENDL] let b2 be a long integer with b2 = x [ 3 ] - x [ 2 ] [ENDL] let c2 be a long integer with c2 = x [ 2 ] * y [ 3 ] - x [ 3 ] * y [ 2 ] [ENDL] if a1 * b2 is equal to a2 * b1 and b1 * c2 is equal to b2 * c1 [ENDL] print TOWARDS and newline [ENDL] else do the following [ENDL] if a1 * b2 is greater than a2 * b1 [ENDL] print LEFT and newline [ENDL] else do the following [ENDL] print RIGHT and newline [ENDL] declare cross with long longs x0 , y0 , x1 , y1 as arguments , returning long long", "c++": "int main() { for ( int i = 1 ; i <= ( 3 ) ; i ++ ) cin >> x [ i ] >> y [ i ] ; long long a1 = y [ 1 ] - y [ 2 ] ; long long b1 = x [ 2 ] - x [ 1 ] ; long long c1 = x [ 1 ] * y [ 2 ] - x [ 2 ] * y [ 1 ] ; long long a2 = y [ 2 ] - y [ 3 ] ; long long b2 = x [ 3 ] - x [ 2 ] ; long long c2 = x [ 2 ] * y [ 3 ] - x [ 3 ] * y [ 2 ] ; if ( a1 * b2 == a2 * b1 && b1 * c2 == b2 * c1 ) cout << \" TOWARDS\\n \" ; else if ( a1 * b2 > a2 * b1 ) cout << \" LEFT\\n \" ; else cout << \" RIGHT\\n \" ; long long cross ( long long x0 , long long y0 , long long x1 , long long y1 ) } return 0; }"}}
{"translation": {"en": "return y1 * x0 - y0 * x1 from function [ENDL] create long long vectors X , Y with X initialized with 3 , Y initialized with 3 [ENDL] for i = 0 to 3 exclusive , read X [ i ] read Y [ i ] [ENDL] create long long c with c = result of run cross with X [ 1 ] - X [ 0 ] , Y [ 1 ] - Y [ 0 ] , X [ 2 ] - X [ 1 ] , Y [ 2 ] - Y [ 1 ] as arguments [ENDL] if c is 0 [ENDL] print \" TOWARDS \\ n \" [ENDL] else if c is less than 0 [ENDL] print \" RIGHT \\ n \" [ENDL] else [ENDL] print \" LEFT \\ n \" [ENDL] x1 , y1 , x2 , y2 , x3 , y3 = integers", "c++": "return y1 * x0 - y0 * x1 ; vector < long long > X ( 3 ) , Y ( 3 ) ; } int main() { for ( long long i = 0 ; i < 3 ; ++ i ) cin >> X [ i ] >> Y [ i ] ; long long c = cross ( X [ 1 ] - X [ 0 ] , Y [ 1 ] - Y [ 0 ] , X [ 2 ] - X [ 1 ] , Y [ 2 ] - Y [ 1 ] ) ; if ( c == 0 ) cout << \" TOWARDS\\n \" ; else if ( c < 0 ) cout << \" RIGHT\\n \" ; else cout << \" LEFT\\n \" ; int x1 , y1 , x2 , y2 , x3 , y3 ; return 0; }"}}
{"translation": {"en": "Read x1 , y1 , x2 , y2 , x3 , y3 [ENDL] if ( y2 - y1 ) * ( x3 - x2 ) is equal to ( y3 - y2 ) * ( x2 - x1 ) [ENDL] print TOWARDS and a new line [ENDL] else if y1 is equal to y2 [ENDL] if x2 is greater than x1 [ENDL] if y3 is greater than y2 [ENDL] print LEFT and a new line [ENDL] else do the following [ENDL] print RIGHT and a new line [ENDL] else do the following [ENDL] if y3 is less than y2 [ENDL] print LEFT and a new line [ENDL] else do the following [ENDL] print RIGHT and a new line [ENDL] else if x1 is equal to x2 [ENDL] if y1 is less than y2 [ENDL] if x3 is greater than x2 [ENDL] print RIGHT and a new line [ENDL] else do the following [ENDL] print LEFT and a new line [ENDL] else do the following [ENDL] if x3 is less than x2 [ENDL] print RIGHT and a new line [ENDL] else do the following [ENDL] print LEFT and a new line [ENDL] else if x1 is less than x2 and y1 is less than y2 [ENDL] if x3 is less than x2 [ENDL] print LEFT and a new line [ENDL] else do the following [ENDL] print RIGHT and a new line [ENDL] else if x1 is greater than x2 and y1 is greater than y2 [ENDL] if x3 is greater than x2 [ENDL] print LEFT and a new line [ENDL] else do the following [ENDL] print RIGHT and a new line [ENDL] else if x1 is less than x2 and y1 is greater than y2 [ENDL] if x3 is greater than x2 [ENDL] print LEFT and a new line [ENDL] else do the following [ENDL] print RIGHT and a new line [ENDL] else do the following [ENDL] if x3 is less than x2 [ENDL] print LEFT and a new line [ENDL] else do the following [ENDL] print RIGHT and a new line [ENDL] let n and m be integers", "c++": "int main() { cin >> x1 >> y1 >> x2 >> y2 >> x3 >> y3 ; if ( ( y2 - y1 ) * ( x3 - x2 ) == ( y3 - y2 ) * ( x2 - x1 ) ) cout << \" TOWARDS \" << endl ; else if ( y1 == y2 ) if ( x2 > x1 ) if ( y3 > y2 ) cout << \" LEFT \" << endl ; else cout << \" RIGHT \" << endl ; else if ( y3 < y2 ) cout << \" LEFT \" << endl ; else cout << \" RIGHT \" << endl ; else if ( x1 == x2 ) } if ( y1 < y2 ) if ( x3 > x2 ) cout << \" RIGHT \" << endl ; else cout << \" LEFT \" << endl ; else if ( x3 < x2 ) cout << \" RIGHT \" << endl ; else cout << \" LEFT \" << endl ; else if ( x1 < x2 && y1 < y2 ) } if ( x3 < x2 ) cout << \" LEFT \" << endl ; else cout << \" RIGHT \" << endl ; else if ( x1 > x2 && y1 > y2 ) if ( x3 > x2 ) cout << \" LEFT \" << endl ; else cout << \" RIGHT \" << endl ; else if ( x1 < x2 && y1 > y2 ) if ( x3 > x2 ) cout << \" LEFT \" << endl ; else cout << \" RIGHT \" << endl ; else if ( x3 < x2 ) cout << \" LEFT \" << endl ; else cout << \" RIGHT \" << endl ; int n , m ; } return 0; }"}}
{"translation": {"en": "declare string called st [ENDL] read n and m [ENDL] res is an integer array with size m [ENDL] fill res with 0 [ENDL] for i = 0 to n exclusive [ENDL] read st [ENDL] if there is no character \" 1 \" in st [ENDL] print - 1 and a new line [ENDL] cur is an integer array with 3 * m elements [ENDL] curAns is an array of integers with size m [ENDL] for j = 0 to 3 * m exclusive set cur [ j ] to st [ j % m ] - ' 0 ' [ENDL] declare integer called counter = 0 [ENDL] for a = m - 1 to 0 inclusive counting down [ENDL] if cur [ a ] = 1 [ENDL] break the loop [ENDL] else [ENDL] increase counter [ENDL] for k = m to 2 * m exclusive [ENDL] if cur [ k ] = 1 [ENDL] curAns [ k % m ] = 0 [ENDL] set counter to 0 [ENDL] else [ENDL] increment counter and set curAns [ k % m ] = counter [ENDL] assign value of 0 to counter [ENDL] for a = 2 * m to 3 * m exclusive [ENDL] if cur [ a ] = 1 [ENDL] stop the loop [ENDL] else [ENDL] increment counter [ENDL] for integer k = 2 * m - 1 to m inclusive counting down [ENDL] if cur [ k ] = 1 [ENDL] curAns [ k % m ] = 0 [ENDL] set value of counter to 0 [ENDL] else [ENDL] increment counter [ENDL] curAns [ k % m ] = min of curAns [ k % m ] and counter [ENDL] for integer j = 0 to m exclusive increase res [ j ] by curAns [ j ] [ENDL] declare integer variable called min = INT_MAX [ENDL] for integer i = 0 to m exclusive [ENDL] if min is greater than res [ i ] , set min to res [ i ] [ENDL] print min and a new line [ENDL] integer constant INF = 1 < < 29", "c++": "int main() { string st ; cin >> n >> m ; int res [ m ] ; for ( int i = 0 ; i < m ; i ++ ) { res [ i ] = 0 ; } for ( int i = 0 ; i < n ; i ++ ) cin >> st ; if ( st . find ( ' 1 ' ) == string :: npos ) cout << - 1 << endl ; int cur [ 3 * m ] ; return 0; } int curAns [ m ] ; for ( int j = 0 ; j < 3 * m ; j ++ ) { cur [ j ] = st [ j % m ] - ' 0 ' ; } int counter = 0 ; for ( int a = m - 1 ; a >= 0 ; a -- ) if ( cur [ a ] == 1 ) break ; else counter ++ ; for ( int k = m ; k < 2 * m ; k ++ ) } if ( cur [ k ] == 1 ) curAns [ k % m ] = 0 ; counter = 0 ; else curAns [ k % m ] = ++ counter ; counter = 0 ; } for ( int a = 2 * m ; a < 3 * m ; a ++ ) if ( cur [ a ] == 1 ) break ; else counter ++ ; for ( int k = 2 * m - 1 ; k >= m ; k -- ) } if ( cur [ k ] == 1 ) curAns [ k % m ] = 0 ; counter = 0 ; else counter ++ ; curAns [ k % m ] = min ( curAns [ k % m ] , counter ) ; for ( int j = 0 ; j < m ; j ++ ) { res [ j ] += curAns [ j ] ; } } } int min = INT_MAX ; } for ( int i = 0 ; i < m ; i ++ ) if ( min > res [ i ] ) min = res [ i ] ; cout << min << endl ; } const int INF = 1 << 29 ; return 0; }"}}
{"translation": {"en": "declare integer variables n and m [ENDL] read n and m [ENDL] a is an array of strings with size n [ENDL] read n elements into a [ENDL] ans is an array of integers with size m [ENDL] set m elements of ans to 0 [ENDL] chk is integer [ENDL] for i = 0 to n exclusive [ENDL] set value of chk to 0 [ENDL] for integer j = 0 to m exclusive , increment chk by 1 if a [ i ] [ j ] = ' 1 ' [ENDL] if chk = 0 [ENDL] print \" - 1 \\ n \" [ENDL] for i = 0 to n exclusive [ENDL] declare integer called last [ENDL] declare boolean variable called found = 0 [ENDL] for j = m - 1 to 0 inclusive counting down [ENDL] if a [ i ] [ j ] = ' 1 ' [ENDL] set value of last to j [ENDL] stop the loop [ENDL] , curr is an array of integers with size m [ENDL] for j = 0 to m exclusive , curr [ j ] = INT_MAX [ENDL] for j = 0 to m exclusive [ENDL] if a [ i ] [ j ] = ' 1 ' [ENDL] set value of last to j [ENDL] found = 1 [ENDL] if found is 0 [ENDL] curr [ j ] = min ( curr [ j ] , ( m - last ) + j ) [ENDL] else [ENDL] curr [ j ] = min of curr [ j ] and abs ( j - last ) [ENDL] found = 0 [ENDL] for j = 0 to m exclusive [ENDL] if a [ i ] [ j ] = ' 1 ' [ENDL] last = j [ENDL] break the loop [ENDL] for integer j = m - 1 to 0 inclusive counting down [ENDL] if a [ i ] [ j ] = ' 1 ' [ENDL] set value of last to j [ENDL] assign value of 1 to found [ENDL] if found is 0 [ENDL] curr [ j ] = min ( curr [ j ] , ( last + 1 ) + ( m - 1 - j ) ) [ENDL] else [ENDL] curr [ j ] = min ( curr [ j ] , abs ( j - last ) ) [ENDL] for integer j = 0 to m exclusive increment ans [ j ] by curr [ j ] [ENDL] res is integer = INT_MAX [ENDL] for i = 0 to m exclusive , set res to min ( res , ans [ i ] ) [ENDL] print res and a new line [ENDL] create constant integer maxn with maxn = 2e5 + 10", "c++": "int n , m ; int main() { cin >> n >> m ; string a [ n ] ; for ( int i = 0 ; i < ( n ) ; i ++ ) cin >> a [ i ] ; int ans [ m ] ; for ( int i = 0 ; i < ( m ) ; i ++ ) ans [ i ] = 0 ; int chk ; for ( int i = 0 ; i < ( n ) ; i ++ ) chk = 0 ; for ( int j = 0 ; j < ( m ) ; j ++ ) { chk += ( a [ i ] [ j ] == ' 1 ' ) ; } if ( chk == 0 ) cout << \" -1\\n \" ; for ( int i = 0 ; i < ( n ) ; i ++ ) return 0; } } int last ; bool found = 0 ; for ( int j = m - 1 ; j >= 0 ; -- j ) if ( a [ i ] [ j ] == ' 1 ' ) last = j ; break ; int curr [ m ] ; } } for ( int j = 0 ; j < ( m ) ; j ++ ) curr [ j ] = INT_MAX ; for ( int j = 0 ; j < ( m ) ; j ++ ) if ( a [ i ] [ j ] == ' 1 ' ) last = j ; found = 1 ; if ( ! found ) } curr [ j ] = min ( curr [ j ] , ( m - last ) + j ) ; else curr [ j ] = min ( curr [ j ] , abs ( j - last ) ) ; found = 0 ; } } for ( int j = 0 ; j < m ; ++ j ) if ( a [ i ] [ j ] == ' 1 ' ) last = j ; break ; for ( int j = m - 1 ; j >= 0 ; -- j ) } } if ( a [ i ] [ j ] == ' 1 ' ) last = j ; found = 1 ; if ( ! found ) } curr [ j ] = min ( curr [ j ] , ( last + 1 ) + ( m - 1 - j ) ) ; else curr [ j ] = min ( curr [ j ] , abs ( j - last ) ) ; for ( int j = 0 ; j < ( m ) ; j ++ ) ans [ j ] += curr [ j ] ; } } int res = INT_MAX ; } for ( int i = 0 ; i < ( m ) ; i ++ ) res = min ( res , ans [ i ] ) ; cout << res << endl ; const int maxn = 2e5 + 10 ; return 0; }"}}
{"translation": {"en": "create integers n , m [ENDL] create string array s with size 110 [ENDL] create 2d integer array l with size 110 by 10010 [ENDL] create 2d integer array r with size 110 by 10010 [ENDL] read n read m [ENDL] for i = 0 to n exclusive , read s [ i ] [ENDL] create boolean bad with bad = false [ENDL] for i = 0 to n exclusive [ENDL] create integer last with last = - 1 [ENDL] for j = 0 to m exclusive [ENDL] if s [ i ] [ j ] is ' 0 ' [ENDL] set l [ i ] [ j ] to - 1 if last is - 1 , else j - last [ENDL] else [ENDL] set l [ i ] [ j ] to 0 , set last to j [ENDL] if last is less than 0 , set bad to true [ENDL] set last to - 1 [ENDL] for j = m - 1 to 0 inclusive , decrementing j [ENDL] if s [ i ] [ j ] is ' 0 ' [ENDL] set r [ i ] [ j ] to - 1 if last is - 1 , else last - j [ENDL] else [ENDL] set r [ i ] [ j ] to 0 , set last to j [ENDL] for j = 0 to m exclusive [ENDL] if l [ i ] [ j ] is less than 0 , set l [ i ] [ j ] to j + l [ i ] [ m - 1 ] + 1 [ENDL] for j = m - 1 to 0 inclusive , decrementing j [ENDL] if r [ i ] [ j ] is less than 0 , set r [ i ] [ j ] to ( m - 1 ) - j + r [ i ] [ 0 ] + 1 [ENDL] if bad is true [ENDL] print - 1 print \" \\ n \" [ENDL] create long long ans with ans = n * m + 1 [ENDL] for j = 0 to m exclusive [ENDL] create long long cur with cur = 0 [ENDL] for i = 0 to n exclusive , increment cur by minimum of l [ i ] [ j ] and r [ i ] [ j ] [ENDL] set ans to minimum of ans and cur [ENDL] print ans print \" \\ n \" [ENDL] assign value 11000 to constant integer maxn", "c++": "int n , m ; string s [ 110 ] ; int l [ 110 ] [ 10010 ] ; int r [ 110 ] [ 10010 ] ; cin >> n >> m ; int main() { for ( int i = 0 ; i < n ; ++ i ) cin >> s [ i ] ; bool bad = false ; for ( int i = 0 ; i < n ; ++ i ) int last = - 1 ; for ( int j = 0 ; j < m ; ++ j ) if ( s [ i ] [ j ] == ' 0 ' ) l [ i ] [ j ] = ( last == - 1 ? - 1 : j - last ) ; else l [ i ] [ j ] = 0 , last = j ; if ( last < 0 ) bad = true ; last = - 1 ; for ( int j = m - 1 ; j >= 0 ; -- j ) if ( s [ i ] [ j ] == ' 0 ' ) r [ i ] [ j ] = ( last == - 1 ? - 1 : last - j ) ; else r [ i ] [ j ] = 0 , last = j ; for ( int j = 0 ; j < m ; ++ j ) if ( l [ i ] [ j ] < 0 ) l [ i ] [ j ] = j + l [ i ] [ m - 1 ] + 1 ; for ( int j = m - 1 ; j >= 0 ; -- j ) if ( r [ i ] [ j ] < 0 ) r [ i ] [ j ] = ( m - 1 ) - j + r [ i ] [ 0 ] + 1 ; if ( bad ) } cout << - 1 << \" \\n \" ; long long ans = n * m + 1 ; return 0; } for ( int j = 0 ; j < m ; ++ j ) long long cur = 0 ; for ( int i = 0 ; i < n ; ++ i ) cur += min ( l [ i ] [ j ] , r [ i ] [ j ] ) ; ans = min ( ans , cur ) ; cout << ans << \" \\n \" ; } const int maxn = 11000 ; }"}}
{"translation": {"en": "create integer INF = 1 < < 30 [ENDL] let m and n be integers [ENDL] da is an 2d array of integers with size 110 by maxn [ENDL] joo is an 2d array of integers with size 110 by maxn [ENDL] read m and n [ENDL] create string s [ENDL] for i = 0 to m exclusive [ENDL] read s [ENDL] for integer j = 0 to n exclusive set da [ i ] [ j ] to 1 if s [ j ] = ' 1 ' , 0 if it is not [ENDL] declare integers t and jj [ENDL] for i = 0 to m exclusive [ENDL] t = INF [ENDL] for j = 0 while j < n * 2 [ENDL] jj = j % n [ENDL] if da [ i ] [ jj ] = 1 , set t to 0 [ENDL] set joo [ i ] [ jj ] = t and increment t [ENDL] t = INF [ENDL] for integer j = n * 2 to 0 inclusive counting down [ENDL] jj = j % n [ENDL] if da [ i ] [ jj ] = 1 , set t to 0 [ENDL] joo [ i ] [ jj ] = min of joo [ i ] [ jj ] and t [ENDL] declare long longs mi = INF and sum [ENDL] for integer j = 0 to n exclusive [ENDL] assign value of 0 to sum [ENDL] for integer i = 0 to m exclusive add joo [ i ] [ j ] to sum [ENDL] set mi to min of sum and mi [ENDL] if mi > = INF [ENDL] print - 1 and a new line [ENDL] else [ENDL] print mi and a new line [ENDL] dist = array of 2 by 10004 int", "c++": "int INF = 1 << 30 ; int m , n ; int da [ 110 ] [ maxn ] ; int joo [ 110 ] [ maxn ] ; cin >> m >> n ; int main() { string s ; for ( int i = 0 ; i < m ; i ++ ) cin >> s ; for ( int j = 0 ; j < n ; j ++ ) da [ i ] [ j ] = ( s [ j ] == ' 1 ' ? 1 : 0 ) ; int t , jj ; } for ( int i = 0 ; i < m ; i ++ ) t = INF ; for ( int j = 0 ; j < n * 2 ; j ++ ) jj = j % n ; if ( da [ i ] [ jj ] == 1 ) t = 0 ; joo [ i ] [ jj ] = t ++ ; t = INF ; } for ( int j = n * 2 ; j >= 0 ; j -- ) jj = j % n ; if ( da [ i ] [ jj ] == 1 ) t = 0 ; joo [ i ] [ jj ] = min ( joo [ i ] [ jj ] , t ++ ) ; long long mi = INF , sum ; } } for ( int j = 0 ; j < n ; j ++ ) sum = 0 ; for ( int i = 0 ; i < m ; i ++ ) { sum += joo [ i ] [ j ] ; } mi = min ( sum , mi ) ; if ( mi >= INF ) } cout << - 1 << endl ; else cout << mi << endl ; int dist [ 2 ] [ 10004 ] ; return 0; }"}}
{"translation": {"en": "n , m = int [ENDL] read n and m [ENDL] for i = 0 to n exclusive [ENDL] str = string [ENDL] read str [ENDL] firstone = - 1 [ENDL] ff = 0 [ENDL] while ff < m and str [ ff ] is not ' 1 ' increment ff [ENDL] if ff is m [ENDL] print - 1 [ENDL] firstone = ff [ENDL] dist [ 0 ] [ ff ] = 0 [ENDL] j = ff + 1 modulo m [ENDL] while true [ENDL] if str [ j ] is ' 1 ' [ENDL] dist [ 0 ] [ j ] = 0 [ENDL] k = j [ENDL] while dist [ 0 ] [ k ] < dist [ 0 ] [ k - 1 + m modulo m [ENDL] k = k - 1 + m modulo m [ENDL] dist [ 0 ] [ k ] = dist [ 0 ] [ k + 1 modulo m ] + 1 [ENDL] if j is firstone break [ENDL] else [ENDL] dist [ 0 ] [ j ] = dist [ 0 ] [ j + m - 1 modulo m ] + 1 [ENDL] j = j + 1 modulo m [ENDL] for z = 0 to m exclusive [ENDL] increment dist [ 1 ] [ z ] by dist [ 0 ] [ z ] [ENDL] dist [ 0 ] [ z ] = 0 [ENDL] minn = dist [ 1 ] [ 0 ] [ENDL] for h = 1 to m exclusive [ENDL] if dist [ 1 ] [ h ] < minn minn = dist [ 1 ] [ h ] [ENDL] print minn [ENDL] create integers n , m", "c++": "int n , m ; int main() { cin >> n >> m ; for ( int i = 0 ; i < n ; i ++ ) string str ; cin >> str ; int firstone = - 1 ; int ff = 0 ; while ( ff < m && str [ ff ] != ' 1 ' ) ff ++ ; if ( ff == m ) cout << - 1 << endl ; firstone = ff ; return 0; } dist [ 0 ] [ ff ] = 0 ; int j = ( ff + 1 ) % m ; while ( true ) if ( str [ j ] == ' 1 ' ) dist [ 0 ] [ j ] = 0 ; int k = j ; while ( dist [ 0 ] [ k ] < dist [ 0 ] [ ( k - 1 + m ) % m ] ) k = ( k - 1 + m ) % m ; dist [ 0 ] [ k ] = dist [ 0 ] [ ( k + 1 ) % m ] + 1 ; if ( j == firstone ) break ; } else dist [ 0 ] [ j ] = dist [ 0 ] [ ( j + m - 1 ) % m ] + 1 ; j = ( j + 1 ) % m ; } for ( int z = 0 ; z < m ; z ++ ) } dist [ 1 ] [ z ] += dist [ 0 ] [ z ] ; dist [ 0 ] [ z ] = 0 ; int minn = dist [ 1 ] [ 0 ] ; } } for ( int h = 1 ; h < m ; h ++ ) if ( dist [ 1 ] [ h ] < minn ) { minn = dist [ 1 ] [ h ] ; } cout << minn << endl ; } int n , m ; return 0; }"}}
{"translation": {"en": "read n read m [ENDL] create 2d character array a of size n by m [ENDL] for i = 0 to n exclusive [ENDL] for j = 0 to m exclusive , read a [ i ] [ j ] [ENDL] for i = 0 to n exclusive [ENDL] if not count of ' 1 ' from a [ i ] to a [ i ] + m [ENDL] print - 1 print ' \\ n ' [ENDL] create 2d integer arrays nearest , l , r , with nearest size n by m , l size n by m , r size n by m [ENDL] for i = 0 to n exclusive [ENDL] create integer lst with lst = - 1 [ENDL] for j = 0 to m exclusive [ENDL] if a [ i ] [ j ] is ' 1 ' , set lst to j [ENDL] create boolean c with c = true [ENDL] for j = 0 to m exclusive [ENDL] set lst to j if a [ i ] [ j ] is ' 1 ' , else lst [ENDL] set c to ( c bitwise and a [ i ] [ j ] ) is 0 [ENDL] set l [ i ] [ j ] to m - lst + j if c is true , else absolute value of j - lst [ENDL] set lst to - 1 [ENDL] set c to true [ENDL] for j = 0 to m exclusive [ENDL] if a [ i ] [ j ] is ' 1 ' [ENDL] set lst to j [ENDL] break loop [ENDL] for j = m - 1 to 0 inclusive , decrementing j [ENDL] set lst to j if a [ i ] [ j ] is ' 1 ' , else lst [ENDL] set c to ( c bitwise and a [ i ] [ j ] ) is 0 [ENDL] set r [ i ] [ j ] to lst + 1 + m - ( j + 1 ) if c is true , else absolute value of j - lst [ENDL] for i = 0 to n exclusive [ENDL] for j = 0 to m exclusive , set nearest [ i ] [ j ] to minimum of r [ i ] [ j ] and l [ i ] [ j ] [ENDL] create integer ans with ans = 0x3f3f3f3f [ENDL] for j = 0 to m exclusive [ENDL] create integer cur with cur = 0 [ENDL] for i = 0 to n exclusive , increment cur by nearest [ i ] [ j ] [ENDL] set ans to minimum of ans and cur [ENDL] print ans print ' \\ n ' [ENDL] declare integer n", "c++": "int main() { cin >> n >> m ; char a [ n ] [ m ] ; for ( int i = 0 ; i < n ; ++ i ) for ( int j = 0 ; j < m ; ++ j ) { cin >> a [ i ] [ j ] ; } for ( int i = 0 ; i < n ; ++ i ) } if ( ! count ( a [ i ] , a [ i ] + m , ' 1 ' ) ) cout << - 1 << ' \\n ' ; int nearest [ n ] [ m ] , l [ n ] [ m ] , r [ n ] [ m ] ; return 0; } } for ( int i = 0 ; i < n ; ++ i ) int lst = - 1 ; for ( int j = 0 ; j < m ; ++ j ) if ( a [ i ] [ j ] == ' 1 ' ) lst = j ; bool c = true ; } for ( int j = 0 ; j < m ; ++ j ) lst = ( a [ i ] [ j ] == ' 1 ' ? j : lst ) ; c &= a [ i ] [ j ] == ' 0 ' ; l [ i ] [ j ] = ( c ? m - lst + j : abs ( j - lst ) ) ; lst = - 1 ; } c = true ; for ( int j = 0 ; j < m ; ++ j ) if ( a [ i ] [ j ] == ' 1 ' ) lst = j ; break ; for ( int j = m - 1 ; j >= 0 ; -- j ) } } lst = ( a [ i ] [ j ] == ' 1 ' ? j : lst ) ; c &= a [ i ] [ j ] == ' 0 ' ; r [ i ] [ j ] = ( c ? lst + 1 + m - ( j + 1 ) : abs ( j - lst ) ) ; for ( int i = 0 ; i < n ; ++ i ) } } for ( int j = 0 ; j < m ; ++ j ) { nearest [ i ] [ j ] = min ( r [ i ] [ j ] , l [ i ] [ j ] ) ; } int ans = 0x3f3f3f3f ; } for ( int j = 0 ; j < m ; ++ j ) int cur = 0 ; for ( int i = 0 ; i < n ; ++ i ) { cur += nearest [ i ] [ j ] ; } ans = min ( ans , cur ) ; cout << ans << ' \\n ' ; } int n ; }"}}
{"translation": {"en": "read n [ENDL] if n is odd [ENDL] print - 1 [ENDL] else [ENDL] print \" 2 1 \" [ENDL] for integer i = 3 to n exclusive with increment step 2 , print \" \" , i + 1 , \" \" and i [ENDL] print new line [ENDL] create int n", "c++": "int main() { cin >> n ; if ( n % 2 == 1 ) cout << - 1 << endl ; else cout << \" 2 1 \" ; for ( int i = 3 ; i < n ; i += 2 ) { cout << \"   \" << i + 1 << \"   \" << i ; } cout << endl ; int n ; } return 0; }"}}
{"translation": {"en": "read n [ENDL] if n mod 2 = 1 [ENDL] print - 1 [ENDL] otherwise [ENDL] print 2 1 [ENDL] for i = 3 to n exclusive , print \" \" , i + 1 , \" \" , i [ENDL] print a new line [ENDL] create int t and i", "c++": "int main() { cin >> n ; if ( n % 2 == 1 ) cout << - 1 << endl ; else cout << \" 2 1 \" ; for ( int i = 3 ; i < n ; i += 2 ) { cout << \"   \" << i + 1 << \"   \" << i ; } cout << endl ; int t , i ; } return 0; }"}}
{"translation": {"en": "read t [ENDL] if t mod 2 = 1 [ENDL] print - 1 [ENDL] else [ENDL] print 2 1 [ENDL] for i = 3 to t exclusive , print \" \" , i + 1 , \" \" , i [ENDL] print a new line [ENDL] let num be integer array with size 101", "c++": "int main() { cin >> t ; if ( t % 2 == 1 ) cout << - 1 << endl ; else cout << \" 2 1 \" ; for ( i = 3 ; i < t ; i += 2 ) { cout << \"   \" << i + 1 << \"   \" << i ; } cout << endl ; int num [ 101 ] ; } return 0; }"}}
{"translation": {"en": "declare integer variable n [ENDL] read n [ENDL] for integer i = 0 to n exclusive , set num [ i ] to i + 1 [ENDL] if n is even [ENDL] print - 1 [ENDL] else [ENDL] for i = 1 to n exclusive swap num [ i - 1 ] and num [ i ] [ENDL] for integer i = 0 to n - 1 exclusive print num [ i ] and \" \" [ENDL] print num [ n - 1 ] [ENDL] n = long long", "c++": "int n ; int main() { cin >> n ; for ( int i = 0 ; i < n ; i ++ ) num [ i ] = i + 1 ; if ( n % 2 ) cout << - 1 << endl ; else for ( int i = 1 ; i < n ; i += 2 ) { swap ( num [ i - 1 ] , num [ i ] ) ; } for ( int i = 0 ; i < n - 1 ; i ++ ) cout << num [ i ] << \"   \" ; cout << num [ n - 1 ] << endl ; long long n ; } }"}}
{"translation": {"en": "read n [ENDL] if n is uneven [ENDL] print - 1 [ENDL] else [ENDL] i = 1 to n inclusive [ENDL] if i is uneven [ENDL] print i + 1 [ENDL] else [ENDL] print i - 1 [ENDL] if i equals n [ENDL] print newline [ENDL] else [ENDL] print \" \" [ENDL] n = integer", "c++": "int main() { cin >> n ; if ( n % 2 == 1 ) cout << - 1 << endl ; else for ( long long i = 1 ; i <= n ; i ++ ) if ( i % 2 == 1 ) cout << i + 1 ; else cout << i - 1 ; if ( i == n ) cout << endl ; else cout << \"   \" ; int n ; } } }"}}
{"translation": {"en": "read n [ENDL] if n modulo 2 is 1 [ENDL] print - 1 [ENDL] else [ENDL] temp = integer with temp = 2 [ENDL] count = integer with count = 0 [ENDL] while not temp is n - 1 [ENDL] print temp , \" \" [ENDL] increment count [ENDL] if count modulo 2 is 1 [ENDL] temp = temp - 1 [ENDL] else [ENDL] temp = temp + 3 [ENDL] print temp [ENDL] a , b = integer", "c++": "int main() { cin >> n ; if ( n % 2 == 1 ) cout << - 1 << endl ; else int temp = 2 ; int count = 0 ; while ( temp != n - 1 ) cout << temp << \"   \" ; count ++ ; if ( count % 2 == 1 ) temp -= 1 ; else temp += 3 ; cout << temp << endl ; } int a , b ; } }"}}
{"translation": {"en": "read a [ENDL] if a modulo not 2 is 0 [ENDL] print - 1 [ENDL] else [ENDL] for b = 2 to a - 2 inclusive with b = b + 2 then print b , ' ' , b - 1 [ENDL] print a , ' ' , a - 1 [ENDL] p = integer", "c++": "int main() { cin >> a ; if ( a % 2 != 0 ) cout << - 1 << endl ; else for ( b = 2 ; b <= a - 2 ; b += 2 ) cout << b << '   ' << b - 1 << '   ' ; cout << a << '   ' << a - 1 << endl ; int p ; } return 0; }"}}
{"translation": {"en": "read p [ENDL] if p modulo 2 is 1 [ENDL] print - 1 [ENDL] else [ENDL] print 2 1 [ENDL] for i = 4 to p inclusive with i = i + 2 then print i , i - 1 [ENDL] print new line [ENDL] declare fastIo with no arguments , returning void", "c++": "int main() { cin >> p ; if ( p % 2 == 1 ) cout << \" -1\\n \" ; else cout << \" 2 1 \" ; for ( int i = 4 ; i <= p ; i += 2 ) cout << \"   \" << i << \"   \" << i - 1 ; cout << endl ; void fastIo ( ) { } } return 0; }"}}
{"translation": {"en": "run fastIo [ENDL] create integer n [ENDL] read n [ENDL] create pair of ( pair of ( integer and integer ) and integer ) m [ENDL] for i = 0 to n exclusive [ENDL] create integers x , y [ENDL] read x read y [ENDL] increment m [ new pair with x and y ] [ENDL] create map iterator it from pair of integer and integer to integer with it = beginning of m [ENDL] create integer cnt with cnt = 1 [ENDL] while it is not end of m [ENDL] if second element of it is greater than cnt , set cnt to second element of it [ENDL] increment it [ENDL] print cnt print newline [ENDL] create constant int N = 1e5 + 5", "c++": "fastIo ( ) ; int main() { int n ; cin >> n ; map < pair < int , int > , int > m ; for ( int i = 0 ; i < n ; i ++ ) int x , y ; cin >> x >> y ; m [ make_pair ( x , y ) ] ++ ; map < pair < int , int > , int > :: iterator it = m . begin ( ) ; } int cnt = 1 ; while ( it != m . end ( ) ) if ( it -> second > cnt ) cnt = it -> second ; it ++ ; cout << cnt << endl ; } const int N = 1e5 + 5 ; return 0; }"}}
{"translation": {"en": "create integers n , res and Max with res and Max = 1 [ENDL] a is an array of int / int pairs with N elements [ENDL] void function Input [ENDL] read n [ENDL] for i from 1 to n inclusive incrementing i , read a [ i ] . first and a [ i ] . second [ENDL] sort a from index 1 to n + 1 [ENDL] Solve is a void function [ENDL] declare integer curr = 1 [ENDL] loop i from 2 to n inclusive [ENDL] if a [ i ] . first = a [ i - 1 ] . first and a [ i ] . second = a [ i - 1 ] . second [ENDL] increment curr and set res to max of res and curr [ENDL] else [ENDL] change curr to 1 [ENDL] print res and ' \\ n ' [ENDL] call function Input [ENDL] call function Solve [ENDL] n , temp = integer 2d array of size [ 24 ] [ 60 ] , maxi , h , m = integers with temp = { 0 } , maxi = 0", "c++": "int n , res = 1 , Max = 1 ; pair < int , int > a [ N ] ; void Input ( ) cin >> n ; for ( int i = 1 ; i <= n ; i ++ ) cin >> a [ i ] . first >> a [ i ] . second ; sort ( a + 1 , a + n + 1 ) ; void Solve ( ) } int curr = 1 ; for ( int i = 2 ; i <= n ; i ++ ) if ( a [ i ] . first == a [ i - 1 ] . first && a [ i ] . second == a [ i - 1 ] . second ) curr ++ , res = max ( res , curr ) ; else curr = 1 ; cout << res << ' \\n ' ; } Input ( ) ; } int main() { Solve ( ) ; int n , temp [ 24 ] [ 60 ] = { 0 } , maxi = 0 , h , m ; return 0; }"}}
{"translation": {"en": "read n [ENDL] while n [ENDL] read h , m [ENDL] increment temp [ h ] [ m ] [ENDL] if temp [ h ] [ m ] > maxi , maxi = temp [ h ] [ m ] [ENDL] print maxi [ENDL] n , h , m , t , c , rest = integer with t = - 1 , c = 0 , res = 1", "c++": "int main() { cin >> n ; while ( n -- ) cin >> h >> m ; temp [ h ] [ m ] ++ ; if ( temp [ h ] [ m ] > maxi ) maxi = temp [ h ] [ m ] ; cout << maxi << endl ; } int n , h , m , t = - 1 , c = 0 , res = 1 ; return 0; }"}}
{"translation": {"en": "read n [ENDL] for i = 0 to n exclusive [ENDL] read h and m [ENDL] t0 = integer with t0 = h * 60 + m [ENDL] c = if t0 is t , c + 1 else 1 [ENDL] if c > res , res = c [ENDL] t = t0 [ENDL] print res [ENDL] create integers n , i , j", "c++": "int main() { cin >> n ; for ( int i = 0 ; i < n ; ++ i ) cin >> h >> m ; int t0 = h * 60 + m ; c = t0 == t ? c + 1 : 1 ; if ( c > res ) res = c ; t = t0 ; cout << res << endl ; } int n , i , j ; return 0; }"}}
{"translation": {"en": "create integer arrays h , m , count with h size 100000 , m size 100000 , count size 100000 [ENDL] read n [ENDL] for i = 0 to n exclusive , read h [ i ] read m [ i ] [ENDL] for i = 0 to n exclusive , set count [ i ] to 1 [ENDL] for i = 0 , j = 0 to i is less than n - 1 , incrementing i [ENDL] if h [ i ] is h [ i + 1 ] and m [ i ] is m [ i + 1 ] [ENDL] increment count [ j ] [ENDL] else if count [ j ] is not 1 [ENDL] increment j [ENDL] create integer ans with ans = count [ 0 ] [ENDL] for i = 0 to n exclusive [ENDL] if count [ i ] is greater than ans , set ans to count [ i ] [ENDL] print ans print newline [ENDL] n , i , c = int with c = 0 and x , y = int array of size 100010 each", "c++": "int main() { int h [ 100000 ] , m [ 100000 ] , count [ 100000 ] ; cin >> n ; for ( i = 0 ; i < n ; i ++ ) { cin >> h [ i ] >> m [ i ] ; } for ( i = 0 ; i < n ; i ++ ) count [ i ] = 1 ; for ( i = 0 , j = 0 ; i < n - 1 ; i ++ ) if ( h [ i ] == h [ i + 1 ] && m [ i ] == m [ i + 1 ] ) count [ j ] ++ ; else if ( count [ j ] != 1 ) j ++ ; int ans = count [ 0 ] ; } for ( i = 0 ; i < n ; i ++ ) if ( count [ i ] > ans ) ans = count [ i ] ; cout << ans << endl ; } int n , i , x [ 100010 ] , y [ 100010 ] , c = 0 ; return 0; }"}}
{"translation": {"en": "v = int vector [ENDL] read n [ENDL] mp = map of pair of int and int and int [ENDL] for i = 0 to n [ENDL] read x [ i ] then y [ i ] [ENDL] increment mp [ make_pair of x [ i ] and y [ i ] ] [ENDL] for i = 0 to n append mp [ make_pair of x [ i ] and y [ i ] ] to v [ENDL] sort v [ENDL] if last element of v is 0 [ENDL] print \" 1 \" [ENDL] else [ENDL] print last element of v [ENDL] n , a , b , c , d , co , m = integers with c = - 1 , d = - 1 , co = 0 , m = 0", "c++": "int main() { vector < int > v ; cin >> n ; map < pair < int , int > , int > mp ; for ( i = 0 ; i < n ; i ++ ) cin >> x [ i ] >> y [ i ] ; mp [ make_pair ( x [ i ] , y [ i ] ) ] ++ ; for ( i = 0 ; i < n ; i ++ ) { v . push_back ( mp [ make_pair ( x [ i ] , y [ i ] ) ] ) ; } } sort ( v . begin ( ) , v . end ( ) ) ; if ( v [ v . size ( ) - 1 ] == 0 ) cout << \" 1 \" << endl ; else cout << v [ v . size ( ) - 1 ] << endl ; int n , a , b , c = - 1 , d = - 1 , co = 0 , m = 0 ; return 0; }"}}
{"translation": {"en": "read n [ENDL] for i = 0 to n exclusive [ENDL] read a and b [ENDL] if a is c and b is d [ENDL] increment co [ENDL] m = max of m and co [ENDL] else [ENDL] co = 1 [ENDL] c = a [ENDL] d = b [ENDL] if m is 0 [ENDL] print 1 [ENDL] else [ENDL] print m [ENDL] let n , h , m , a = two dimensional array of int with lengths 100 , 100", "c++": "int main() { cin >> n ; for ( int i = 0 ; i < n ; i ++ ) cin >> a >> b ; if ( a == c && b == d ) co ++ ; m = max ( m , co ) ; else co = 1 ; c = a ; d = b ; if ( m == 0 ) } cout << 1 << endl ; else cout << m << endl ; int n , h , m , a [ 100 ] [ 100 ] ; return 0; }"}}
{"translation": {"en": "while reading new values for n [ENDL] let maxa = int = 0 [ENDL] for i = 0 to n exclusive [ENDL] read h , m [ENDL] increment a [ h ] [ m ] [ENDL] if a [ h ] [ m ] > maxa , maxa = a [ h ] [ m ] [ENDL] print maxa [ENDL] create integers n , i", "c++": "int main() { while ( cin >> n ) int maxa = 0 ; for ( int i = 0 ; i < n ; i ++ ) cin >> h >> m ; a [ h ] [ m ] ++ ; if ( a [ h ] [ m ] > maxa ) maxa = a [ h ] [ m ] ; cout << maxa << endl ; } int n , i ; } return 0; }"}}
{"translation": {"en": "read n [ENDL] create integer arrays a , b , with a size n + 2 , b size n + 2 [ENDL] create integer m with m = 0 [ENDL] create 2d integer array c with size 24 by 60 , with c = { 0 } [ENDL] for i = 0 to n exclusive [ENDL] read a [ i ] read b [ i ] [ENDL] increment c [ a [ i ] ] [ b [ i ] ] [ENDL] for i = 0 to n exclusive , set m to maximum of m and c [ a [ i ] ] [ b [ i ] ] [ENDL] print m print \" \\ n \" [ENDL] n , hh , mm , h , m , res , k = integers with hh and mm value of - 1 , res value of 0 and k value of 1", "c++": "int main() { cin >> n ; int a [ n + 2 ] , b [ n + 2 ] ; int m = 0 ; int c [ 24 ] [ 60 ] = { 0 } ; for ( i = 0 ; i < n ; i ++ ) cin >> a [ i ] >> b [ i ] ; c [ a [ i ] ] [ b [ i ] ] ++ ; for ( i = 0 ; i < n ; i ++ ) { m = max ( m , c [ a [ i ] ] [ b [ i ] ] ) ; } } cout << m << \" \\n \" ; int n , hh = - 1 , mm = - 1 , h , m , res = 0 , k = 1 ; return 0; }"}}
{"translation": {"en": "read n [ENDL] for i = 0 to n exclusive [ENDL] read h and m [ENDL] if h equals hh and m equals mm [ENDL] add 1 to k [ENDL] else [ENDL] set hh to h [ENDL] set mm to m [ENDL] if res is greater than k then set res to res otherwise set res to k [ENDL] set k to 1 [ENDL] if res is greater than k then print res otherwise print k [ENDL] declare const int N = 1e5 + 5", "c++": "int main() { cin >> n ; for ( int i = 0 ; i < n ; i ++ ) cin >> h >> m ; if ( h == hh && m == mm ) k ++ ; else hh = h ; mm = m ; res = res > k ? res : k ; k = 1 ; cout << ( res > k ? res : k ) << endl ; } } const int N = 1e5 + 5 ; return 0; }"}}
{"translation": {"en": "let n , res and Max be ints with res and Max = 1 [ENDL] create an array of int / int pairs called a with N elements [ENDL] function Input [ENDL] read n [ENDL] loop i from 1 to n inclusive , read a [ i ] . first and a [ i ] . second [ENDL] sort a from index 1 to n + 1 [ENDL] void function Solve [ENDL] declare int variable curr = 1 [ENDL] for i = 2 to n inclusive [ENDL] if a [ i ] . first = a [ i - 1 ] . first and a [ i ] . second = a [ i - 1 ] . second [ENDL] increment curr by one and set res to max of res and curr [ENDL] else [ENDL] assign 1 to curr [ENDL] print res and ' \\ n ' [ENDL] call function Input [ENDL] call function Solve [ENDL] n , ele1 , ele2 = integers", "c++": "int n , res = 1 , Max = 1 ; pair < int , int > a [ N ] ; void Input ( ) cin >> n ; for ( int i = 1 ; i <= n ; i ++ ) cin >> a [ i ] . first >> a [ i ] . second ; sort ( a + 1 , a + n + 1 ) ; void Solve ( ) } int curr = 1 ; for ( int i = 2 ; i <= n ; i ++ ) if ( a [ i ] . first == a [ i - 1 ] . first && a [ i ] . second == a [ i - 1 ] . second ) curr ++ , res = max ( res , curr ) ; else curr = 1 ; cout << res << ' \\n ' ; } Input ( ) ; } int main() { Solve ( ) ; int n , ele1 , ele2 ; return 0; }"}}
{"translation": {"en": "read n [ENDL] arr = integer array of size [ 24 * 60 ] with arr [ 24 * 60 ] = { } [ENDL] while decrement n [ENDL] read ele1 and ele2 [ENDL] increment arr [ ele1 * 60 + ele2 ] [ENDL] max = integer with max = 0 [ENDL] for i = 0 to 24 * 60 exclusive [ENDL] if arr [ i ] > max , max = arr [ i ] [ENDL] print max [ENDL] integers = t", "c++": "int main() { cin >> n ; int arr [ 24 * 60 ] = { } ; while ( n -- ) cin >> ele1 >> ele2 ; arr [ ele1 * 60 + ele2 ] ++ ; int max = 0 ; } for ( int i = 0 ; i < 24 * 60 ; i ++ ) if ( arr [ i ] > max ) { max = arr [ i ] ; } cout << max << \" \\n \" ; } int t ; }"}}
{"translation": {"en": "read t [ENDL] integers array = arr [ t ] [ 2 ] [ENDL] read arr [ i ] [ 0 ] , arr [ i ] [ 1 ] [ENDL] set int count to 0 , temp to 1 [ENDL] for i = 1 to less than t do the following [ENDL] set if ( temp > count ) count equals temp [ENDL] if arr [ i - 1 ] [ 0 ] is arr [ i ] [ 0 ] & & arr [ i - 1 ] [ 1 ] equals arr [ i ] [ 1 ] then do next [ENDL] add one to temp [ENDL] else [ENDL] set temp to 1 [ENDL] set if ( temp > count ) count equals temp [ENDL] output count [ENDL] create integer n", "c++": "int main() { cin >> t ; int arr [ t ] [ 2 ] ; for ( int i = 0 ; i < t ; i ++ ) cin >> arr [ i ] [ 0 ] >> arr [ i ] [ 1 ] ; int count = 0 , temp = 1 ; for ( int i = 1 ; i < t ; i ++ ) if ( temp > count ) count = temp ; if ( arr [ i - 1 ] [ 0 ] == arr [ i ] [ 0 ] && arr [ i - 1 ] [ 1 ] == arr [ i ] [ 1 ] ) temp ++ ; else temp = 1 ; if ( temp > count ) count = temp ; } cout << count << endl ; int n ; }"}}
{"translation": {"en": "read n [ENDL] create integers ans , cnt , ph , pm , with ans = 1 , cnt = 1 , ph = 99 , pm = 99 [ENDL] for i = 0 to n exclusive [ENDL] create integers h , m [ENDL] read h read m [ENDL] if h is ph and m is pm [ENDL] increment cnt [ENDL] if ans is less than cnt , set ans to cnt [ENDL] else [ENDL] set cnt to 1 [ENDL] set ph to h [ENDL] set pm to m [ENDL] print ans print newline [ENDL] let n be a long integer", "c++": "int main() { cin >> n ; int ans = 1 , cnt = 1 , ph = 99 , pm = 99 ; for ( int i = 0 ; i < n ; ++ i ) int h , m ; cin >> h >> m ; if ( h == ph && m == pm ) ++ cnt ; if ( ans < cnt ) ans = cnt ; else cnt = 1 ; ph = h ; } pm = m ; cout << ans << endl ; } long long int n ; return 0; }"}}
{"translation": {"en": "read n [ENDL] let Arr , Sum be long integers with Sum = 0 , Arr = array of long integers of length n + 2 [ENDL] for i = 1 to n inclusive , read Arr [ i ] , increment Sum by Arr [ i ] [ENDL] let s , t be long integers [ENDL] read s , t [ENDL] let Cnt be a long integer with Cnt = 0 [ENDL] if s is greater than t , swap s , t [ENDL] for i = s to t exclusive , increment Cnt by Arr [ i ] [ENDL] print minimum of Cnt , Sum - Cnt and newline [ENDL] a , i , s , t , n = int , b , c , l1 , l2 = 0 , arr = array of 105 int", "c++": "int main() { cin >> n ; long long int Arr [ n + 2 ] , Sum = 0 ; for ( int i = 1 ; i <= n ; i ++ ) cin >> Arr [ i ] , Sum += Arr [ i ] ; long long int s , t ; cin >> s >> t ; long long int Cnt = 0 ; if ( s > t ) swap ( s , t ) ; for ( int i = s ; i < t ; i ++ ) Cnt += Arr [ i ] ; cout << min ( Cnt , Sum - Cnt ) << \" \\n \" ; int a , i , b = 0 , c = 0 , s , t , n , l1 = 0 , l2 = 0 , arr [ 105 ] ; return 0; }"}}
{"translation": {"en": "read n [ENDL] for a = 1 to n inclusive read arr [ a ] [ENDL] read s [ENDL] read t [ENDL] if s > t [ENDL] b = t [ENDL] c = s [ENDL] else [ENDL] b = s [ENDL] c = t [ENDL] for a = b to c exclusive add arr [ a ] to l1 [ENDL] increment a from c while a is not b [ENDL] add arr [ a ] to l2 [ENDL] if a is n a = 0 [ENDL] if l1 < = l2 [ENDL] print l1 [ENDL] else [ENDL] print l2 [ENDL] let d , n , x be integers with d = 2d array of integers with 107 rows and 107 columns respectively", "c++": "int main() { cin >> n ; for ( a = 1 ; a <= n ; a ++ ) { cin >> arr [ a ] ; } cin >> s ; cin >> t ; if ( s > t ) b = t ; c = s ; else b = s ; c = t ; for ( a = b ; a < c ; a ++ ) { l1 = l1 + arr [ a ] ; } } for ( a = c ; a != b ; a ++ ) l2 = l2 + arr [ a ] ; if ( a == n ) a = 0 ; if ( l1 <= l2 ) } cout << l1 << endl ; else cout << l2 << endl ; int d [ 100 + 7 ] [ 100 + 7 ] , n , x ; return 0; }"}}
{"translation": {"en": "read n [ENDL] for i = 1 to n inclusive [ENDL] for j = 1 to n inclusive , d [ i ] [ j ] is equal to INT_MAX / 10 [ENDL] for i = 1 to n inclusive , d [ i ] [ i ] is equal to 0 [ENDL] for i = 1 to n inclusive [ENDL] read x [ENDL] let j be a integer with j = i + 1 [ENDL] if j is greater than n , decrement j by n [ENDL] d [ i ] [ j ] is equal to x [ENDL] d [ j ] [ i ] is equal to x [ENDL] for k = 1 to n inclusive [ENDL] for i = 1 to n inclusive [ENDL] for j = 1 to n inclusive [ENDL] if d [ i ] [ k ] + d [ k ] [ j ] is less than d [ i ] [ j ] , d [ i ] [ j ] is equal to d [ i ] [ k ] + d [ k ] [ j ] [ENDL] let s , t be integers [ENDL] read s , t [ENDL] print d [ s ] [ t ] and newline [ENDL] create ints K , X , Y , M , and N and int array A of size 105", "c++": "cin >> n ; int main() { for ( int i = 1 ; i <= n ; i ++ ) for ( int j = 1 ; j <= n ; j ++ ) d [ i ] [ j ] = INT_MAX / 10 ; for ( int i = 1 ; i <= n ; i ++ ) d [ i ] [ i ] = 0 ; for ( int i = 1 ; i <= n ; i ++ ) cin >> x ; int j = i + 1 ; if ( j > n ) j -= n ; d [ i ] [ j ] = x ; d [ j ] [ i ] = x ; for ( int k = 1 ; k <= n ; k ++ ) } for ( int i = 1 ; i <= n ; i ++ ) for ( int j = 1 ; j <= n ; j ++ ) if ( d [ i ] [ k ] + d [ k ] [ j ] < d [ i ] [ j ] ) d [ i ] [ j ] = d [ i ] [ k ] + d [ k ] [ j ] ; int s , t ; cin >> s >> t ; cout << d [ s ] [ t ] << endl ; int K , A [ 105 ] , X , Y , M , N ; }"}}
{"translation": {"en": "read K [ENDL] for i = 1 to K [ENDL] read A [ i ] [ENDL] set N to N + A [ i ] [ENDL] read X and Y [ENDL] for i = min ( X , Y ) to max ( X , Y ) , set M to M + A [ i ] [ENDL] print the min of M and N - M [ENDL] let int array arr of size 1000", "c++": "cin >> K ; int main() { for ( int i = 1 ; i <= K ; i ++ ) cin >> A [ i ] ; N += A [ i ] ; cin >> X >> Y ; } for ( int i = min ( X , Y ) ; i < max ( X , Y ) ; i ++ ) { M += A [ i ] ; } cout << min ( M , N - M ) << ' \\n ' ; int arr [ 1000 ] ; }"}}
{"translation": {"en": "let int n [ENDL] while cin > > n is truthy [ENDL] let int total = 0 [ENDL] set every index of arr to 0 [ENDL] for i = 0 to n exclusive [ENDL] read arr [ i ] [ENDL] set total to total + arr [ i ] [ENDL] let ints s and t [ENDL] read s and t [ENDL] create int tmp [ENDL] if s is greater than t [ENDL] set tmp to s [ENDL] set s to t [ENDL] set t to tmp [ENDL] decrease s by 1 [ENDL] reduce t by 1 [ENDL] let ints a1 = 0 and a2 = 0 [ENDL] for i = s to t exclusive , set a1 to a1 + arr [ i ] [ENDL] set a2 to total - a1 [ENDL] print the min of a2 and a1 [ENDL] n , sum , sum1 , a , b = int with sum = 0 and sum1 = 0", "c++": "int n ; int main() { while ( cin >> n ) int total = 0 ; memset ( arr , 0 , sizeof ( arr ) ) ; for ( int i = 0 ; i < n ; i ++ ) cin >> arr [ i ] ; total += arr [ i ] ; int s , t ; } cin >> s >> t ; int tmp ; if ( s > t ) tmp = s ; s = t ; t = tmp ; s -- ; } t -- ; int a1 = 0 , a2 = 0 ; for ( int i = s ; i < t ; i ++ ) { a1 += arr [ i ] ; } a2 = total - a1 ; cout << min ( a2 , a1 ) << endl ; int n , sum = 0 , sum1 = 0 , a , b ; } }"}}
{"translation": {"en": "read n [ENDL] x = int array of size n [ENDL] read n values into x [ENDL] read a then b [ENDL] for i = min of a - 1 , b - 1 to max of b - 1 , a - 1 increment sum by x [ i ] [ENDL] for i = min of a - 1 , b - 1 to 0 inclusive decrementing i increment sum1 by x [ i ] [ENDL] for i = n - 1 to max of b - 1 , a - 1 decrementing i increment sum1 by x [ i ] [ENDL] print min of sum , sum1 [ENDL] create integer n", "c++": "int main() { cin >> n ; int x [ n ] ; for ( int i = 0 ; i < n ; i ++ ) { cin >> x [ i ] ; } cin >> a >> b ; for ( int i = min ( a - 1 , b - 1 ) ; i < max ( b - 1 , a - 1 ) ; i ++ ) { sum += x [ i ] ; } for ( int i = min ( a - 1 , b - 1 ) - 1 ; i >= 0 ; i -- ) sum1 += x [ i ] ; for ( int i = n - 1 ; i >= max ( b - 1 , a - 1 ) ; i -- ) sum1 += x [ i ] ; cout << min ( sum , sum1 ) << endl ; int n ; }"}}
{"translation": {"en": "read n [ENDL] create integer array d with size n + 10 [ENDL] set d [ 0 ] to 0 [ENDL] for i = 1 to n inclusive , read d [ i ] [ENDL] create integer array s with size n + 15 [ENDL] set s [ 0 ] to 0 [ENDL] for i = 1 to n + 1 inclusive , set s [ i ] to s [ i - 1 ] + d [ i - 1 ] [ENDL] create integers sr , t [ENDL] read sr read t [ENDL] if sr is greater than t , swap values between sr and t [ENDL] create integer ans with ans = s [ t ] - s [ sr ] [ENDL] set ans to minimum of ( ans and s [ sr ] + s [ n + 1 ] - s [ t ] ) [ENDL] print ans print newline [ENDL] create integers n , m , x , y , ans , ans1 , create integer arrays dist , prefs with dist size 100015 , prefs size 100015", "c++": "int main() { cin >> n ; int d [ n + 10 ] ; d [ 0 ] = 0 ; for ( int i = 1 ; i <= n ; i ++ ) { cin >> d [ i ] ; } int s [ n + 15 ] ; s [ 0 ] = 0 ; for ( int i = 1 ; i <= n + 1 ; i ++ ) { s [ i ] = s [ i - 1 ] + d [ i - 1 ] ; } int sr , t ; cin >> sr >> t ; if ( sr > t ) swap ( sr , t ) ; int ans = s [ t ] - s [ sr ] ; ans = min ( ans , s [ sr ] + s [ n + 1 ] - s [ t ] ) ; cout << ans << endl ; int n , m , dist [ 100015 ] , x , y , prefs [ 100015 ] , ans , ans1 ; return 0; }"}}
{"translation": {"en": "read n [ENDL] for i = 0 to n exclusive , read dist [ i ] [ENDL] set prefs [ 0 ] to dist [ 0 ] [ENDL] for i = 1 to n exclusive , set prefs [ i ] to dist [ i ] + prefs [ i - 1 ] [ENDL] read x read y [ENDL] decrement x [ENDL] decrement y [ENDL] if x is greater than y , swap values between x and y [ENDL] set ans to prefs [ y - 1 ] [ENDL] decrement ans by prefs [ x - 1 ] [ENDL] set ans1 to prefs [ n - 1 ] - ans [ENDL] print minimum of ans and ans1 print newline [ENDL] declare n , s , t , ans = 0 , tmp = 0 as integers , declare line as integer array with size 101 = { }", "c++": "cin >> n ; int main() { for ( int i = 0 ; i < n ; i ++ ) { cin >> dist [ i ] ; } prefs [ 0 ] = dist [ 0 ] ; for ( int i = 1 ; i < n ; i ++ ) { prefs [ i ] = dist [ i ] + prefs [ i - 1 ] ; } cin >> x >> y ; x -- ; y -- ; if ( x > y ) { swap ( x , y ) ; } ans = prefs [ y - 1 ] ; ans -= prefs [ x - 1 ] ; ans1 = prefs [ n - 1 ] - ans ; cout << min ( ans , ans1 ) << endl ; int n , s , t , line [ 101 ] = { } , ans = 0 , tmp = 0 ; return 0; }"}}
{"translation": {"en": "declare integer i [ENDL] read n [ENDL] for i = 1 to n inclusive , read line [ i ] [ENDL] read s read t [ENDL] let i be s [ENDL] while i is not t [ENDL] increment tmp by line [ i ] [ENDL] increment i [ENDL] if i is greater than n , let i be 1 [ENDL] while i is not s [ENDL] increment ans by line [ i ] [ENDL] increment i [ENDL] if i is greater than n , let i be 1 [ENDL] if tmp is less than ans , let ans be tmp [ENDL] print ans and newline [ENDL] n , i , s1 , s2 , s , t , a = integers with a = array of size 105", "c++": "int i ; int main() { cin >> n ; for ( i = 1 ; i <= n ; ++ i ) cin >> line [ i ] ; cin >> s >> t ; i = s ; while ( i != t ) tmp += line [ i ] ; ++ i ; if ( i > n ) i = 1 ; while ( i != s ) } ans += line [ i ] ; ++ i ; if ( i > n ) i = 1 ; if ( tmp < ans ) ans = tmp ; } cout << ans << endl ; int n , i , s1 , s2 , s , t , a [ 105 ] ; return 0; }"}}
{"translation": {"en": "read n [ENDL] for i = 1 to n , read a [ i ] [ENDL] read s , t [ENDL] if s > t , swap s and t [ENDL] for i = s to t exclusive , s1 = s1 + a [ i ] [ENDL] for i = 1 to s exclusive , s2 = s2 + a [ i ] [ENDL] for i = n to t , s2 = s2 + a [ i ] [ENDL] print min of s1 and s2 [ENDL] n = int", "c++": "cin >> n ; int main() { for ( i = 1 ; i <= n ; i ++ ) cin >> a [ i ] ; cin >> s >> t ; if ( s > t ) swap ( s , t ) ; for ( i = s ; i < t ; i ++ ) s1 += a [ i ] ; for ( i = 1 ; i < s ; i ++ ) s2 += a [ i ] ; for ( i = n ; i >= t ; i -- ) s2 += a [ i ] ; cout << min ( s1 , s2 ) << endl ; int n ; return 0; }"}}
{"translation": {"en": "read n [ENDL] arr = int array of size n [ENDL] read n values into arr [ENDL] a , b = int [ENDL] read a then b [ENDL] x = int with x = max of a and b [ENDL] y = int with y = min of a and b [ENDL] d1 = int with d1 = 0 [ENDL] for i = x - 1 to n + y - 1 increment d1 by arr [ i mod n ] [ENDL] d2 = int with d2 = 0 [ENDL] for i = x - 2 to y - 1 inclusive decrementing i increment d2 by arr [ i mod n ] [ENDL] print min of d1 and d2 [ENDL] declare NumberOfStations as integer", "c++": "int main() { cin >> n ; int arr [ n ] ; for ( int i = 0 ; i < n ; ++ i ) cin >> arr [ i ] ; int a , b ; cin >> a >> b ; int x = max ( a , b ) ; int y = min ( a , b ) ; int d1 = 0 ; for ( int i = x - 1 ; i < n + ( y - 1 ) ; i ++ ) { d1 += arr [ i % n ] ; } int d2 = 0 ; for ( int i = x - 2 ; i >= y - 1 ; i -- ) { d2 += arr [ i % n ] ; } cout << min ( d1 , d2 ) << endl ; int NumberOfStations ; }"}}
{"translation": {"en": "declare integers From , To [ENDL] declare integer SumOfDistance = 0 [ENDL] read NumberOfStations [ENDL] declare integer vector StationsDistance initialized with NumberOfStations [ENDL] for Index = 0 to NumberOfStations exclusive [ENDL] read StationsDistance [ Index ] [ENDL] increment SumOfDistance by StationsDistance [ Index ] [ENDL] read From and To [ENDL] declare integers Start , End [ENDL] if From is less than To [ENDL] let Start be From [ENDL] let End be To [ENDL] else [ENDL] let Start be To [ENDL] let End be From [ENDL] declare TheOtherDestance as integer = 0 [ENDL] for Start is less than End , incrementing Start , increment TheOtherDestance by StaionsDistance [ Start - 1 ] [ENDL] print minimum of TheOtherDestance and ( SumOfDistance - TheOtherDestance ) , newline [ENDL] n = long long int", "c++": "int main() { int From , To ; int SumOfDistance = 0 ; cin >> NumberOfStations ; vector < int > StaionsDistance ( NumberOfStations ) ; for ( int Index = 0 ; Index < NumberOfStations ; Index ++ ) cin >> StaionsDistance [ Index ] ; SumOfDistance += StaionsDistance [ Index ] ; cin >> From >> To ; } int Start , End ; if ( From < To ) Start = From ; End = To ; else Start = To ; End = From ; int TheOtherDestance = 0 ; } for ( ; Start < End ; Start ++ ) TheOtherDestance += StaionsDistance [ Start - 1 ] ; cout << min ( TheOtherDestance , ( SumOfDistance - TheOtherDestance ) ) << endl ; long long int n ; return 0; }"}}
{"translation": {"en": "read n [ENDL] d = long long int array of size n [ENDL] read n values into d [ENDL] s , t = long long int [ENDL] read s then t [ENDL] if s is greater than t [ENDL] temp = long long int with temp = s [ENDL] set s to t [ENDL] set t to temp [ENDL] dist1 , dist2 = long long int with dist1 = 0 and dist2 = 0 [ENDL] for i = s - 1 to t - 1 increment dist1 by d [ i ] [ENDL] flag = bool with flag = true [ENDL] for i = t - 1 to s - 1 [ENDL] if i is a multiple of n and flag is true [ENDL] set i to - 1 [ENDL] set flag to false [ENDL] continue [ENDL] increment dist2 by d [ i ] [ENDL] if dist2 > dist1 [ENDL] print dist1 [ENDL] else [ENDL] print dist2 [ENDL] let n , d with 255 elements , s , and t be integers", "c++": "int main() { cin >> n ; long long int d [ n ] ; for ( int i = 0 ; i < n ; i ++ ) { cin >> d [ i ] ; } long long int s , t ; cin >> s >> t ; if ( s > t ) long long int temp = s ; s = t ; t = temp ; long long int dist1 = 0 , dist2 = 0 ; } for ( int i = s - 1 ; i < t - 1 ; i ++ ) { dist1 += d [ i ] ; } bool flag = true ; for ( int i = t - 1 ; i != s - 1 ; i ++ ) if ( i % n == 0 && flag ) i = - 1 ; flag = false ; continue ; dist2 += d [ i ] ; } if ( dist2 > dist1 ) } cout << dist1 << endl ; else cout << dist2 << endl ; int n , d [ 255 ] , s , t ; return 0; }"}}
{"translation": {"en": "let res1 and res2 be integers with value 0 [ENDL] read n [ENDL] read n values into array i [ENDL] iterate and set 2 * n values into array d with element i - n [ENDL] read s and t [ENDL] if s is more than t , swap s and t [ENDL] for i from s to t exclusive , add d at element i to res1 [ENDL] for i from t to n + s exclusive , add d at element i to res2 [ENDL] print min of res1 and res2 [ENDL] n , s , t , sum , m1 = int with sum = 0 and m1 = 0", "c++": "int main() { int res1 = 0 , res2 = 0 ; cin >> n ; for ( int i = 1 ; i <= n ; i ++ ) { cin >> d [ i ] ; } for ( int i = n + 1 ; i <= 2 * n ; i ++ ) { d [ i ] = d [ i - n ] ; } cin >> s >> t ; if ( s > t ) swap ( s , t ) ; for ( int i = s ; i < t ; i ++ ) { res1 += d [ i ] ; } for ( int i = t ; i < n + s ; i ++ ) { res2 += d [ i ] ; } cout << min ( res1 , res2 ) << endl ; int n , s , t , sum = 0 , m1 = 0 ; }"}}
{"translation": {"en": "read n [ENDL] arr = int array of size n [ENDL] for i = 0 to n [ENDL] read arr [ i ] [ENDL] increment sum by arr [ i ] [ENDL] read s then t [ENDL] decrement s [ENDL] decrement t [ENDL] l = int with l = min of s and t [ENDL] h = int with h = max of s and t [ENDL] for i = l to j increment m1 by arr [ i ] [ENDL] print min of m1 and sum - m1 [ENDL] declare integer variables n , m , u , v , x and y", "c++": "int main() { cin >> n ; int arr [ n ] ; for ( int i = 0 ; i < n ; i ++ ) cin >> arr [ i ] ; sum += arr [ i ] ; cin >> s >> t ; } s -- ; t -- ; int l = min ( s , t ) ; int h = max ( s , t ) ; for ( int i = l ; i < h ; i ++ ) { m1 += arr [ i ] ; } cout << min ( m1 , sum - m1 ) << \" \\n \" ; int n , m , u , v , x , y ; }"}}
{"translation": {"en": "read user input to n [ENDL] a is a new array of integers with size 105 [ENDL] start for loop from i = 1 to n inclusive , reading user input to a [ i ] on each loop [ENDL] read u and v from the user input [ENDL] if u is greater than v , swap u and v [ENDL] declare int variables m1 and m2 = 0 [ENDL] for integer i = u to v exclusive , change m1 to m1 + a [ i ] [ENDL] start for loop from i = 1 to n inclusive [ENDL] if i < u or i > = v , add a [ i ] to m2 [ENDL] if u = v [ENDL] print 0 [ENDL] else [ENDL] print min of m1 and m2 to the standard output [ENDL] n , s , t , len1 , len2 = int with len1 = 0 and len2 = 0 and arr = int array of size 103", "c++": "int main() { cin >> n ; int a [ 105 ] = { 0 } ; for ( int i = 1 ; i <= n ; i ++ ) { cin >> a [ i ] ; } cin >> u >> v ; if ( u > v ) { swap ( u , v ) ; } int m1 = 0 , m2 = 0 ; for ( int i = u ; i < v ; i ++ ) { m1 += a [ i ] ; } for ( int i = 1 ; i <= n ; i ++ ) if ( i < u || i >= v ) { m2 += a [ i ] ; } if ( u == v ) } cout << 0 << endl ; else cout << min ( m1 , m2 ) << endl ; int n , arr [ 103 ] , s , t , len1 = 0 , len2 = 0 ; } return 0; }"}}
{"translation": {"en": "read n [ENDL] read n values into arr [ENDL] read s then t [ENDL] if s is greater then t then swap s and t [ENDL] for i = s - 1 to t - 1 increment len1 by arr [ i ] [ENDL] f = int with f = n - t + s [ENDL] tt = int with tt = t - 1 [ENDL] loop f times [ENDL] if tt is even set tt to 0 [ENDL] increment len2 by arr [ tt ] [ENDL] increment tt [ENDL] print min of len1 and len2 [ENDL] in function choose with arguments of long long integer n and long long integer m and returns a long long integer", "c++": "int main() { cin >> n ; for ( int i = 0 ; i < n ; i ++ ) cin >> arr [ i ] ; cin >> s >> t ; if ( s > t ) swap ( s , t ) ; for ( int i = s - 1 ; i < t - 1 ; i ++ ) len1 += arr [ i ] ; int f = n - t + s ; int tt = t - 1 ; while ( f -- ) if ( tt % n == 0 ) tt = 0 ; len2 += arr [ tt ] ; tt ++ ; cout << min ( len1 , len2 ) << endl ; } long long int choose ( long long int n , long long int m ) return 0; }"}}
{"translation": {"en": "ans = long long integer = 0 [ENDL] num = long long integer = 1 [ENDL] den = long long integer = 1 [ENDL] for i = 0 to m exclusive [ENDL] num = num * ( n - i ) [ENDL] num = num / ( i + 1 ) [ENDL] return num [ENDL] in function isPrime with argument integer n and returns a boolean [ENDL] if n < = 1 , then return false [ENDL] if n < = 3 , then return true [ENDL] if n is even and n modulo 3 is 0 , then return false [ENDL] for i = 5 , where i is squared to n inclusive and i = i + 6 [ENDL] if n modulo i is 0 or n modulo the result of i + 2 is 0 , then return false [ENDL] return true [ENDL] in function gcd with arguments of long long integer a and long long integer b and returns a long long integer [ENDL] if a is 0 [ENDL] return b [ENDL] else [ENDL] return the result of calling gcd with arguments of b modulo a and a [ENDL] i , j , k , n , m , t , c = long long integers [ENDL] read n [ENDL] d = long long integer vector of size n [ENDL] for i = 0 to n exclusive , read d [ i ] [ENDL] s = long long integer [ENDL] read s , t [ENDL] if s > t [ENDL] m = s [ENDL] s = t [ENDL] t = m [ENDL] ans1 = long long integer = 0 , ans2 = long long integer = 0 [ENDL] for i = s - 1 to t - 1 exclusive , then ans1 = ans1 + d [ i ] [ENDL] i = t - 1 [ENDL] while i is not s - 1 [ENDL] ans2 = ans2 + d [ i ] [ENDL] increase i by 1 [ENDL] if i is n , then i = 0 [ENDL] print the lower value between ans1 and ans2 [ENDL] declare long longs i , x , j , y , tn = 1 , ans = 0 , long long array ar size 100000", "c++": "long long int ans = 0 ; long long int num = 1 ; long long int den = 1 ; for ( long long int i = 0 ; i < m ; i ++ ) num *= ( n - i ) ; num = num / ( i + 1 ) ; return num ; } bool isPrime ( int n ) } if ( n <= 1 ) return false ; if ( n <= 3 ) return true ; if ( n % 2 == 0 || n % 3 == 0 ) return false ; for ( int i = 5 ; i * i <= n ; i = i + 6 ) if ( n % i == 0 || n % ( i + 2 ) == 0 ) return false ; return true ; } long long int gcd ( long long int a , long long int b ) } if ( a == 0 ) return b ; else return gcd ( b % a , a ) ; long long int i , j , k , n , m , t , c ; } } int main() { cin >> n ; vector < long long int > d ( n ) ; for ( i = 0 ; i < n ; i ++ ) { cin >> d [ i ] ; } ; long long int s ; cin >> s >> t ; if ( s > t ) m = s ; s = t ; t = m ; long long int ans1 = 0 , ans2 = 0 ; } for ( i = s - 1 ; i < t - 1 ; i ++ ) { ans1 += d [ i ] ; } i = t - 1 ; while ( i != s - 1 ) ans2 += d [ i ] ; i ++ ; if ( i == n ) i = 0 ; cout << min ( ans1 , ans2 ) << endl ; } long long ar [ 100000 ] , i , x , j , y , tn = 1 , ans = 0 ; return 0; }"}}
{"translation": {"en": "declare n , m as integers [ENDL] declare tc as long long [ENDL] read n [ENDL] declare v , v1 as long long vectors [ENDL] add 0 to end of v [ENDL] for i = 0 to n exclusive [ENDL] read x [ENDL] add x to end of v [ENDL] let v1 be v [ENDL] for i = 1 to size of v exclusive , increment v [ i ] by v [ i - 1 ] [ENDL] read x read y [ENDL] if x is greater than y , swap values between x and y [ENDL] if x is y [ENDL] print 0 , newline [ENDL] declare integer t1 = v [ y - 1 ] - v [ x - 1 ] [ENDL] declare integer t2 = v [ size of v - 1 ] - v [ y ] + v1 [ y ] + v [ x - 1 ] [ENDL] print minimum of t1 and t2 , newline [ENDL] let N be int", "c++": "int main() { int n , m ; long long tc ; cin >> n ; vector < long long > v , v1 ; v . push_back ( 0 ) ; for ( i = 0 ; i < n ; i ++ ) cin >> x ; v . push_back ( x ) ; v1 = v ; } for ( i = 1 ; i < v . size ( ) ; i ++ ) v [ i ] += v [ i - 1 ] ; cin >> x >> y ; if ( x > y ) swap ( x , y ) ; if ( x == y ) cout << 0 << endl ; int t1 = v [ y - 1 ] - v [ x - 1 ] ; return 0; } int t2 = v [ v . size ( ) - 1 ] - v [ y ] + v1 [ y ] + v [ x - 1 ] ; cout << min ( t1 , t2 ) << endl ; int N ; return 0; }"}}
{"translation": {"en": "let x , s and t = int [ENDL] let d be vector of int [ENDL] read N [ENDL] read x and d . push_back of x N times exclusive [ENDL] read s and t [ENDL] if decremented s is greater than decremented t then swap s and t [ENDL] let d1 be integer set to 0 [ENDL] add d of i to d1 i times from s to t exclusive [ENDL] let d2 be integer set to 0 [ENDL] add d of i to d2 i times from t to N exclusive [ENDL] add d of i to d2 i times from 0 to s exclusive [ENDL] print min of d1 and d2 [ENDL] create string s", "c++": "int x , s , t ; vector < int > d ; cin >> N ; int main() { for ( int i = 0 ; i < N ; ++ i ) cin >> x , d . push_back ( x ) ; cin >> s >> t ; if ( ( -- s ) > ( -- t ) ) swap ( s , t ) ; int d1 = 0 ; for ( int i = s ; i < t ; ++ i ) d1 += d [ i ] ; int d2 = 0 ; for ( int i = t ; i < N ; ++ i ) d2 += d [ i ] ; for ( int i = 0 ; i < s ; ++ i ) d2 += d [ i ] ; cout << min ( d1 , d2 ) << endl ; string s ; return 0; }"}}
{"translation": {"en": "create integers i and j , and an array of integers arr with 10000 elements [ENDL] create integers a , b , c , d , t , cnt and cn where cnt and cn = 0 [ENDL] read from the input to t [ENDL] in a for loop , change k from 1 to t inclusive , reading variable arr [ k ] from the input [ENDL] read variables a and b from the input [ENDL] if a is greater than b , swap a and b [ENDL] in the for loop , change i from a to b exclusive , increasing cnt by arr [ i ] [ENDL] start for loop with i = b , incrementing i by 1 [ENDL] if i = a , stop the loop [ENDL] change cn to cn + arr [ i ] [ENDL] if i = t , set i to 0 [ENDL] if cnt is greater than cn [ENDL] print cn to the standard output [ENDL] else [ENDL] print cnt [ENDL] n , s , t = integers , arr = integer array of size 100", "c++": "int i , j , arr [ 10000 ] ; int a , b , c , d , t , cnt = 0 , cn = 0 ; int main() { cin >> t ; for ( int k = 1 ; k <= t ; k ++ ) { cin >> arr [ k ] ; } cin >> a >> b ; if ( a > b ) { swap ( a , b ) ; } for ( i = a ; i < b ; i ++ ) { cnt += arr [ i ] ; } for ( i = b ; ; i ++ ) if ( i == a ) break ; cn += arr [ i ] ; if ( i == t ) { i = 0 ; } if ( cnt > cn ) } cout << cn << endl ; else cout << cnt << endl ; int n , arr [ 100 ] , s , t ; } return 0; }"}}
{"translation": {"en": "read n [ENDL] for i = 0 to n exclusive [ENDL] read s , t [ENDL] m1 = integer = lower value between s , t [ENDL] m2 = integer = bigger value between s , t [ENDL] decrease m1 by 1 [ENDL] decrease m2 by 1 [ENDL] R1 = integer = 0 , R2 = integer = 0 [ENDL] for i = m1 to m2 , then R1 = R1 + arr [ i ] [ENDL] for i = m2 to mn , then R2 = R1 + arr [ i ] [ENDL] for i = 0 to m1 , then R2 = R2 + arr [ i ] [ENDL] R = integer = lower value between R2 and R1 [ENDL] print R [ENDL] declare array of integers arr with size 10005", "c++": "int main() { cin >> n ; for ( int i = 0 ; i < n ; i ++ ) cin >> arr [ i ] ; cin >> s >> t ; int m1 = min ( s , t ) ; int m2 = max ( s , t ) ; m1 -- ; m2 -- ; int R1 = 0 , R2 = 0 ; for ( int i = m1 ; i < m2 ; i ++ ) R1 += arr [ i ] ; for ( int i = m2 ; i < n ; i ++ ) R2 += arr [ i ] ; for ( int i = 0 ; i < m1 ; i ++ ) R2 += arr [ i ] ; int R = min ( R2 , R1 ) ; cout << R << endl ; int arr [ 10005 ] ; return 0; }"}}
{"translation": {"en": "create int n [ENDL] read n [ENDL] for i = 0 to i = n - 1 read arr [ i + 1 ] [ENDL] let s and t be integers [ENDL] read s and t [ENDL] if s is greater than t then swap s and t [ENDL] create integer aa and set it to 0 [ENDL] for i = s to i = t exclusive set aa to aa + arr [ i ] [ENDL] create integer bb = 0 [ENDL] for i = 1 to i = t exclusive assign bb + arr [ i ] to bb [ENDL] for i = t to i = n do bb = bb + arr [ i ] [ENDL] print min of aa and bb [ENDL] create constant integer maxn with maxn = 105", "c++": "int n ; int main() { cin >> n ; for ( int i = 0 ; i < n ; i ++ ) { cin >> arr [ i + 1 ] ; } int s , t ; cin >> s >> t ; if ( s > t ) { swap ( s , t ) ; } int aa = 0 ; for ( int i = s ; i < t ; i ++ ) { aa += arr [ i ] ; } int bb = 0 ; for ( int i = 1 ; i < s ; i ++ ) { bb += arr [ i ] ; } for ( int i = t ; i <= n ; i ++ ) { bb += arr [ i ] ; } cout << min ( aa , bb ) << endl ; const int maxn = 105 ; }"}}
{"translation": {"en": "create integers n , s , t , create integer array d with size maxn [ENDL] read n [ENDL] for i = 1 to n inclusive , read d [ i ] [ENDL] read s read t [ENDL] create integers clock , revert , i with clock = 0 , revert = 0 [ENDL] create integers front , tail , with front = minimum of s and t , tail = maximum of s and t [ENDL] for i = front to tail exclusive , increment clock by d [ i ] [ENDL] for i = tail to i is not front , incrementing i [ENDL] if i is greater than n , set i to i % n [ENDL] if i is front , break loop [ENDL] increment revert by d [ i ] [ENDL] print minimum of clock and revert print newline [ENDL] declare int variables n , s , t , sum , res and mini with sum , res and mini = 0 , and an array of integers d with 100 elements", "c++": "int n , d [ maxn ] , s , t ; cin >> n ; int main() { for ( int i = 1 ; i <= n ; i ++ ) cin >> d [ i ] ; cin >> s >> t ; int clock = 0 , revert = 0 , i ; int front = min ( s , t ) , tail = max ( s , t ) ; for ( i = front ; i < tail ; i ++ ) { clock += d [ i ] ; } for ( i = tail ; i != front ; i ++ ) if ( i > n ) i %= n ; if ( i == front ) break ; revert += d [ i ] ; cout << min ( clock , revert ) << endl ; } int n , d [ 100 ] , s , t , sum = 0 , res = 0 , mini = 0 ; }"}}
{"translation": {"en": "read n [ENDL] for integer i = 0 to n exclusive [ENDL] read d [ i ] [ENDL] increase sum by d [ i ] [ENDL] read input to s and t [ENDL] for i from min of s - 1 and t - 1 to max of t - 1 and s - 1 exclusive , add d [ i ] to res [ENDL] change mini to min of res and sum - res [ENDL] print mini [ENDL] create int n", "c++": "int main() { cin >> n ; for ( int i = 0 ; i < n ; i ++ ) cin >> d [ i ] ; sum += d [ i ] ; cin >> s >> t ; } for ( int i = min ( s - 1 , t - 1 ) ; i < max ( t - 1 , s - 1 ) ; i ++ ) { res += d [ i ] ; } mini = min ( res , sum - res ) ; cout << mini << endl ; int n ; return 0; }"}}
{"translation": {"en": "read n [ENDL] create int vector x [ENDL] for i = 0 to n exclusive [ENDL] let int m [ENDL] read m [ENDL] add m to the end of x [ENDL] let ints s and t [ENDL] read s and t [ENDL] create ints count1 = 0 and count2 = 0 [ENDL] set s to s + n [ENDL] for i = s - 1 to infinity [ENDL] if i modulo n is equal to t - 1 [ENDL] break loop [ENDL] otherwise [ENDL] set count1 to count1 + x [ i % n ] [ENDL] decrease s by 1 [ENDL] for i = s - 1 to infinity decreasing by 1 each time [ENDL] if i modulo n is equal to t - 1 [ENDL] set count2 to count2 + x [ i % n ] [ENDL] break loop [ENDL] otherwise do [ENDL] set count2 to count2 + x [ i % n ] [ENDL] if count1 is less than or equal to count2 [ENDL] print count1 [ENDL] otherwise do [ENDL] print count2 [ENDL] create ints n , ans1 = 0 , ans2 = 0 , f , t , and tot = 0 and int array d of size 105", "c++": "int main() { cin >> n ; vector < int > x ; for ( int i = 0 ; i < n ; i ++ ) int m ; cin >> m ; x . push_back ( m ) ; int s , t ; } cin >> s >> t ; int count1 = 0 , count2 = 0 ; s = s + n ; for ( int i = s - 1 ; ; i ++ ) if ( i % n == t - 1 ) break ; else count1 = count1 + x [ i % n ] ; s -- ; } for ( int i = s - 1 ; ; i -- ) if ( i % n == t - 1 ) count2 = count2 + x [ i % n ] ; break ; else count2 = count2 + x [ i % n ] ; if ( count1 <= count2 ) } cout << count1 << endl ; else cout << count2 << endl ; int n , ans1 = 0 , ans2 = 0 , d [ 105 ] , f , t , tot = 0 ; return 0; }"}}
{"translation": {"en": "read n [ENDL] for i = 1 to n [ENDL] read d [ i ] [ENDL] set tot to tot + d [ i ] [ENDL] read f and t [ENDL] if f is greater than t , swap the values of f and t [ENDL] for i = f to t exclusive , set ans1 to ans1 + d [ i ] [ENDL] set ans2 to tot - ans1 [ENDL] print the min of ans1 and ans2 [ENDL] mod = long long = 1000000007", "c++": "int main() { cin >> n ; for ( int i = 1 ; i <= n ; i ++ ) cin >> d [ i ] ; tot += d [ i ] ; cin >> f >> t ; } if ( f > t ) swap ( f , t ) ; for ( int i = f ; i < t ; i ++ ) ans1 += d [ i ] ; ans2 = tot - ans1 ; cout << min ( ans1 , ans2 ) << ' \\n ' ; const long long int MOD = 1000000007 ; }"}}
{"translation": {"en": "N , M , K , H , W , L , R = long long integer [ENDL] read N [ENDL] v = integer vector of size N + 1 [ENDL] for i = 1 to N inclusive , then read v [ i ] [ENDL] M = sum of all values of v [ENDL] for i = 1 to N inclusive , v [ i ] = v [ i ] + v [ i - 1 ] [ENDL] read L , R [ENDL] if L > R swap the values of L , R [ENDL] print the result of the lower value between v [ R - 1 ] - v [ L - 1 ] and M in integer form - v [ R - 1 ] + v [ L - 1 ] [ENDL] create character array c with size 4 by 4", "c++": "long long int N , M , K , H , W , L , R ; cin >> N ; int main() { vector < int > v ( N + 1 ) ; for ( int i = 1 ; i <= N ; i ++ ) cin >> v [ i ] ; M = accumulate ( v . begin ( ) , v . end ( ) , 0 ) ; for ( int i = 1 ; i <= N ; i ++ ) v [ i ] += v [ i - 1 ] ; cin >> L >> R ; if ( L > R ) swap ( L , R ) ; cout << min ( v [ R - 1 ] - v [ L - 1 ] , ( int ) M - v [ R - 1 ] + v [ L - 1 ] ) << endl ; char c [ 4 ] [ 4 ] ; return 0; }"}}
{"translation": {"en": "for i = 0 to 4 exclusive [ENDL] for j = 0 to 4 exclusive read c [ i ] [ j ] [ENDL] declare integers x , y , z and v = 0 [ENDL] in the infinite loop [ENDL] for j = z to z + 2 exclusive [ENDL] if c [ v ] [ j ] = ' # ' increment x [ENDL] if c [ v ] [ j ] = ' . ' increment y [ENDL] if c [ v + 1 ] [ j ] = ' # ' increment x [ENDL] if c [ v + 1 ] [ j ] = ' . ' increment y [ENDL] if x > y or y is greater than x [ENDL] print \" YES \" [ENDL] set x to 0 [ENDL] set y to 0 [ENDL] increase z by one [ENDL] if z = 3 [ENDL] increase v by one [ENDL] set z to 0 [ENDL] if v = 3 , break the loop [ENDL] print \" NO \" [ENDL] create 2d boolean array a with size 4 by 4", "c++": "int main() { for ( int i = 0 ; i < 4 ; i ++ ) for ( int j = 0 ; j < 4 ; j ++ ) { cin >> c [ i ] [ j ] ; } int x = 0 , y = 0 , z = 0 , v = 0 ; } while ( true ) for ( int j = z ; j < z + 2 ; j ++ ) if ( c [ v ] [ j ] == ' # ' ) x ++ ; if ( c [ v ] [ j ] == ' . ' ) y ++ ; if ( c [ v + 1 ] [ j ] == ' # ' ) x ++ ; if ( c [ v + 1 ] [ j ] == ' . ' ) y ++ ; if ( x > y || y > x ) } cout << \" YES \" << endl ; x = 0 ; return 0; } y = 0 ; z ++ ; if ( z == 3 ) v ++ ; z = 0 ; if ( v == 3 ) { break ; } } cout << \" NO \" << endl ; } bool a [ 4 ] [ 4 ] ; }"}}
{"translation": {"en": "declare f with no arguments , returning boolean [ENDL] for i = 0 to 3 exclusive [ENDL] for j = 0 to 3 exclusive [ENDL] create boolean bol with bol = a [ i ] [ j ] [ENDL] if a [ i + 1 ] [ j ] is bol and a [ i + 1 ] [ j + 1 ] is bol and a [ i ] [ j + 1 ] is bol , return true from function [ENDL] return false from function [ENDL] create character h [ENDL] for i = 0 to 4 exclusive [ENDL] for j = 0 to 4 exclusive [ENDL] set h to read character [ENDL] if h is ' # ' [ENDL] set a [ i ] [ j ] to true [ENDL] else [ENDL] set a [ i ] [ j ] to false [ENDL] set h to read character [ENDL] for i = 0 to 4 exclusive [ENDL] for j = 0 to 4 exclusive [ENDL] set a [ i ] [ j ] to false if a [ i ] [ j ] is true , else true [ENDL] if result of run f is true [ENDL] print \" YES \" print newline [ENDL] set a [ i ] [ j ] to false if a [ i ] [ j ] is true , else true [ENDL] print \" NO \" print newline [ENDL] create string vector vs initialized with 4", "c++": "bool f ( ) for ( int i = 0 ; i < 3 ; i ++ ) for ( int j = 0 ; j < 3 ; j ++ ) bool bol = a [ i ] [ j ] ; if ( a [ i + 1 ] [ j ] == bol && a [ i + 1 ] [ j + 1 ] == bol && a [ i ] [ j + 1 ] == bol ) { return true ; } return false ; } } char h ; } int main() { for ( int i = 0 ; i < 4 ; i ++ ) for ( int j = 0 ; j < 4 ; j ++ ) h = getchar ( ) ; if ( h == ' # ' ) a [ i ] [ j ] = true ; else a [ i ] [ j ] = false ; h = getchar ( ) ; } for ( int i = 0 ; i < 4 ; i ++ ) } for ( int j = 0 ; j < 4 ; j ++ ) a [ i ] [ j ] = ( a [ i ] [ j ] == true ? false : true ) ; if ( f ( ) == true ) cout << \" YES \" << endl ; a [ i ] [ j ] = ( a [ i ] [ j ] == true ? false : true ) ; return 0; } cout << \" NO \" << endl ; } } vector < string > vs ( 4 ) ; return 0; }"}}
{"translation": {"en": "for i = 0 to 4 exclusive , read vs [ i ] [ENDL] create boolean pass with pass = false [ENDL] for top = 0 to top is less than or equal to 2 and not pass , incrementing top [ENDL] for left = 0 to 2 inclusive [ENDL] create integer dot with dot = 0 [ENDL] for r = 0 to 2 exclusive [ENDL] for c = 0 to 2 exclusive [ENDL] if vs [ top + r ] [ left + c ] is ' . ' , increment dot by 1 [ENDL] if dot is not 2 [ENDL] set pass to true [ENDL] break loop [ENDL] print \" YES \" if pass is true , else \" NO \" , print newline [ENDL] declare compute", "c++": "int main() { for ( size_t i = 0 ; i < 4 ; ++ i ) { cin >> vs [ i ] ; } bool pass = false ; for ( size_t top = 0 ; top <= 2 && ! pass ; ++ top ) for ( size_t left = 0 ; left <= 2 ; ++ left ) int dot = 0 ; for ( size_t r = 0 ; r < 2 ; ++ r ) for ( size_t c = 0 ; c < 2 ; ++ c ) if ( vs [ top + r ] [ left + c ] == ' . ' ) { dot += 1 ; } if ( dot != 2 ) } } pass = true ; break ; cout << ( pass ? \" YES \" : \" NO \" ) << endl ; } } } void compute ( ) return 0; }"}}
{"translation": {"en": "create 2d character array a with size 4 by 4 [ENDL] for i = 0 to 4 exclusive [ENDL] for j = 0 to 4 exclusive , read a [ i ] [ j ] [ENDL] for i = 0 to 4 exclusive [ENDL] for j = 0 to 4 exclusive [ENDL] if j is less than or equal to 2 and i is less than or equal to 2 [ENDL] create integers hutch , dots with hutch = 0 , dots = 0 [ENDL] for k = 0 to 2 exclusive [ENDL] for l = 0 to 2 exclusive [ENDL] if a [ i + k ] [ j + l ] is ' # ' [ENDL] increment hutch [ENDL] else [ENDL] increment dots [ENDL] if hutch is greater than or equal to 3 or dots is greater than or equal to 3 [ENDL] print \" YES \\ n \" [ENDL] return from function [ENDL] print \" NO \\ n \" [ENDL] run compute [ENDL] let s = array of strings of length 5", "c++": "char a [ 4 ] [ 4 ] ; for ( int i = 0 ; i < 4 ; i ++ ) for ( int j = 0 ; j < 4 ; j ++ ) cin >> a [ i ] [ j ] ; for ( int i = 0 ; i < 4 ; i ++ ) for ( int j = 0 ; j < 4 ; j ++ ) if ( j <= 2 && i <= 2 ) int hutch = 0 , dots = 0 ; for ( int k = 0 ; k < 2 ; k ++ ) for ( int l = 0 ; l < 2 ; l ++ ) if ( a [ i + k ] [ j + l ] == ' # ' ) ++ hutch ; else ++ dots ; if ( hutch >= 3 || dots >= 3 ) } cout << \" YES\\n \" ; return ; cout << \" NO\\n \" ; } } } } compute ( ) ; } int main() { string s [ 5 ] ; return 0; }"}}
{"translation": {"en": "for ( i = 0 to 4 exclusive ) , read ith element of array s [ENDL] for ( x = 1 to 4 exclusive ) [ENDL] for ( y = 1 to 4 exclusive ) [ENDL] let cnt be a integer with value assigned as 0 [ENDL] for i = 0 to 2 ( exclusive ) [ENDL] for j = 0 to 2 ( exclusive ) [ENDL] if ( s [ x - i ] [ y - j ] is not equal to s [ x ] [ y ] ) , increase cnt value by 1 [ENDL] check if ( cnt power 2 ) , then return print YES and newline [ENDL] print NO and newline [ENDL] create constant long long mod with mod = 10e9 + 7", "c++": "int main() { for ( int i = 0 ; i < 4 ; i ++ ) cin >> s [ i ] ; for ( int x = 1 ; x < 4 ; x ++ ) for ( int y = 1 ; y < 4 ; y ++ ) int cnt = 0 ; for ( int i = 0 ; i < 2 ; i ++ ) for ( int j = 0 ; j < 2 ; j ++ ) if ( s [ x - i ] [ y - j ] != s [ x ] [ y ] ) cnt ++ ; if ( cnt ^ 2 ) return cout << \" YES\\n \" , 0 ; cout << \" NO\\n \" ; } const long long mod = 10e9 + 7 ; return 0; }"}}
{"translation": {"en": "create constant double eps with eps = 1e - 11 [ENDL] create constant double PI with PI = 2 * acosign of 0 . 0 [ENDL] create 2d character array arr of size 4 by 4 [ENDL] for i = 0 to 4 exclusive [ENDL] for j = 0 to 4 exclusive , read arr [ i ] [ j ] [ENDL] for i = 0 to 4 exclusive [ENDL] for j = 0 to 4 exclusive [ENDL] if arr [ i ] [ j ] is ' . ' or arr [ i ] [ j ] is ' # ' [ENDL] if arr [ i ] [ j - 1 ] is ' # ' and j - 1 is greater than or eqaul to 0 [ENDL] if arr [ i - 1 ] [ j ] is ' # ' and i - 1 is greater than or equal to 0 [ENDL] if arr [ i - 1 ] [ j - 1 ] is ' # ' and i - 1 is greater than or equal to 0 and j - 1 is greater than or equal to 0 [ENDL] print \" YES \" [ENDL] if arr [ i ] [ j + 1 ] is ' # ' and j + 1 is less than 4 [ENDL] if arr [ i - 1 ] [ j ] is ' # ' and i - 1 is greater than or equal to 0 [ENDL] if arr [ i - 1 ] [ j + 1 ] is ' # ' and j + 1 is less than 4 and i - 1 is greater than or equal to 0 [ENDL] print \" YES \" [ENDL] if arr [ i ] [ j - 1 ] is ' # ' and j - 1 is greater than or equal to 0 [ENDL] if arr [ i + 1 ] [ j ] is ' # ' and i + 1 is less than 4 [ENDL] if arr [ i + 1 ] [ j - 1 ] is ' # ' and i + 1 is less than 4 and j - 1 is greater than or equal to 0 [ENDL] print \" YES \" [ENDL] if arr [ i ] [ j + 1 ] is ' # ' and j + 1 is less than 4 [ENDL] if arr [ i + 1 ] [ j ] is ' # ' and i + 1 is less than 4 [ENDL] if arr [ i + 1 ] [ j + 1 ] is ' # ' and i + 1 is less than 4 and j + 1 is less than 4 [ENDL] print \" YES \" [ENDL] if arr [ i ] [ j - 1 ] is ' . ' and j - 1 is greater than or equal to 0 [ENDL] if arr [ i - 1 ] [ j ] is ' . ' and i - 1 is greater than or equal to 0 [ENDL] if arr [ i - 1 ] [ j - 1 ] is ' . ' and i - 1 is greater than or equal to 0 and j - 1 is greater than or equal to 0 [ENDL] print \" YES \" [ENDL] if arr [ i ] [ j + 1 ] is ' . ' and j + 1 is less than 4 [ENDL] if arr [ i - 1 ] [ j ] is ' . ' and i - 1 is greater than or equal to 0 [ENDL] if arr [ i - 1 ] [ j + 1 ] is ' . ' and i - 1 is greater than or equal to 0 and j + 1 is less than 4 [ENDL] print \" YES \" [ENDL] if arr [ i ] [ j - 1 ] is ' . ' and j - 1 is greater than or equal to 0 [ENDL] if arr [ i + 1 ] [ j ] is ' . ' and i + 1 is less than 4 [ENDL] if arr [ i + 1 ] [ j - 1 ] is ' . ' and i + 1 is less than 4 and j - 1 is greater than or equal to 0 [ENDL] print \" YES \" [ENDL] if arr [ i ] [ j + 1 ] is ' . ' and j + 1 is less than 4 [ENDL] if arr [ i + 4 ] [ j ] is ' . ' and i + 1 is less than 4 [ENDL] if arr [ i + 1 ] [ j + 1 ] is ' . ' and i + 1 is less than 4 and j + 1 is less than 4 [ENDL] print \" YES \" [ENDL] print \" NO \" [ENDL] let grid = array of strings of length 4", "c++": "const double eps = 1e-11 ; const double PI = 2 * acos ( 0.0 ) ; char arr [ 4 ] [ 4 ] ; int main() { for ( int i = 0 ; i < 4 ; i ++ ) for ( int j = 0 ; j < 4 ; j ++ ) { cin >> arr [ i ] [ j ] ; } for ( int i = 0 ; i < 4 ; i ++ ) } for ( int j = 0 ; j < 4 ; j ++ ) if ( arr [ i ] [ j ] == ' . ' or arr [ i ] [ j ] == ' # ' ) if ( arr [ i ] [ j - 1 ] == ' # ' and j - 1 >= 0 ) if ( arr [ i - 1 ] [ j ] == ' # ' and i - 1 >= 0 ) if ( arr [ i - 1 ] [ j - 1 ] == ' # ' and i - 1 >= 0 and j - 1 >= 0 ) puts ( \" YES \" ) ; if ( arr [ i ] [ j + 1 ] == ' # ' and j + 1 < 4 ) return 0; } } } if ( arr [ i - 1 ] [ j ] == ' # ' and i - 1 >= 0 ) if ( arr [ i - 1 ] [ j + 1 ] == ' # ' and j + 1 < 4 and i - 1 >= 0 ) puts ( \" YES \" ) ; if ( arr [ i ] [ j - 1 ] == ' # ' and j - 1 >= 0 ) return 0; } } } if ( arr [ i + 1 ] [ j ] == ' # ' and i + 1 < 4 ) if ( arr [ i + 1 ] [ j - 1 ] == ' # ' and i + 1 < 4 and j - 1 >= 0 ) puts ( \" YES \" ) ; if ( arr [ i ] [ j + 1 ] == ' # ' and j + 1 < 4 ) return 0; } } } if ( arr [ i + 1 ] [ j ] == ' # ' and i + 1 < 4 ) if ( arr [ i + 1 ] [ j + 1 ] == ' # ' and i + 1 < 4 and j + 1 < 4 ) puts ( \" YES \" ) ; if ( arr [ i ] [ j - 1 ] == ' . ' and j - 1 >= 0 ) return 0; } } } if ( arr [ i - 1 ] [ j ] == ' . ' and i - 1 >= 0 ) if ( arr [ i - 1 ] [ j - 1 ] == ' . ' and i - 1 >= 0 and j - 1 >= 0 ) puts ( \" YES \" ) ; if ( arr [ i ] [ j + 1 ] == ' . ' and j + 1 < 4 ) return 0; } } } if ( arr [ i - 1 ] [ j ] == ' . ' and i - 1 >= 0 ) if ( arr [ i - 1 ] [ j + 1 ] == ' . ' and i - 1 >= 0 and j + 1 < 4 ) puts ( \" YES \" ) ; if ( arr [ i ] [ j - 1 ] == ' . ' and j - 1 >= 0 ) return 0; } } } if ( arr [ i + 1 ] [ j ] == ' . ' and i + 1 < 4 ) if ( arr [ i + 1 ] [ j - 1 ] == ' . ' and i + 1 < 4 and j - 1 >= 0 ) puts ( \" YES \" ) ; if ( arr [ i ] [ j + 1 ] == ' . ' and j + 1 < 4 ) return 0; } } } if ( arr [ i + 1 ] [ j ] == ' . ' and i + 1 < 4 ) if ( arr [ i + 1 ] [ j + 1 ] == ' . ' and i + 1 < 4 and j + 1 < 4 ) puts ( \" YES \" ) ; puts ( \" NO \" ) ; return 0; } } } } } } string grid [ 4 ] ; }"}}
{"translation": {"en": "read the 0th element of grid , 1st element of grid , 2nd element of grid and 3rd element of grid [ENDL] boolean found is equal to false [ENDL] for i = 0 to 3 exclusive [ENDL] for j = 0 to 3 exclusive [ENDL] let the integers c1 , c2 are assigned as c1 is equal to 0 and c2 is equal to 0 respectively [ENDL] for ( int i1 = i to i + 1 inclusive ) [ENDL] for ( int j1 = j to j + 1 inclusive ) [ENDL] if ( the 2d array grid [ i1 ] [ j1 ] is equal to . ) [ENDL] increase c1 by 1 [ENDL] else do the following [ENDL] increase c2 by 1 [ENDL] if ( c1 is not equal to 2 ) , found is equal to true [ENDL] print YES if found else print NO [ENDL] declare character array a with size 6 by 6", "c++": "int main() { cin >> grid [ 0 ] >> grid [ 1 ] >> grid [ 2 ] >> grid [ 3 ] ; bool found = false ; for ( int i = 0 ; i < 3 ; i ++ ) for ( int j = 0 ; j < 3 ; j ++ ) int c1 = 0 , c2 = 0 ; for ( int i1 = i ; i1 <= i + 1 ; i1 ++ ) for ( int j1 = j ; j1 <= j + 1 ; j1 ++ ) if ( grid [ i1 ] [ j1 ] == ' . ' ) c1 ++ ; else c2 ++ ; if ( c1 != 2 ) { found = true ; } } } cout << ( found ? \" YES \" : \" NO \" ) << endl ; } } char a [ 6 ] [ 6 ] ; return 0; }"}}
{"translation": {"en": "int function nCount with integer arguments x and y and character argument c [ENDL] create integer res = 0 [ENDL] increment res if a [ x + 1 ] [ y ] = c [ENDL] increment res if a [ x ] [ y + 1 ] = c [ENDL] increment res if a [ x + 1 ] [ y + 1 ] = c [ENDL] return res [ENDL] declare character z [ENDL] for integer i = 1 to 4 inclusive [ENDL] for integer j = 1 to 4 inclusive [ENDL] read z [ENDL] a [ i ] [ j ] = z [ENDL] for i = 1 to 4 inclusive [ENDL] for j = 1 to 4 inclusive [ENDL] if a [ i ] [ j ] = ' # ' [ENDL] if nCount ( i , j , ' # ' ) > = 2 | | nCount ( i , j , ' . ' ) > = 3 [ENDL] print \" YES \" [ENDL] else [ENDL] if nCount ( i , j , ' . ' ) > = 2 | | nCount ( i , j , ' # ' ) > = 3 [ENDL] print \" YES \" [ENDL] print \" NO \" [ENDL] create character array m with 4 by 4 elements", "c++": "int nCount ( int x , int y , char c ) int res = 0 ; if ( a [ x + 1 ] [ y ] == c ) { res ++ ; } if ( a [ x ] [ y + 1 ] == c ) { res ++ ; } if ( a [ x + 1 ] [ y + 1 ] == c ) { res ++ ; } return res ; char z ; } int main() { for ( int i = 1 ; i <= 4 ; i ++ ) for ( int j = 1 ; j <= 4 ; j ++ ) cin >> z ; a [ i ] [ j ] = z ; for ( int i = 1 ; i <= 4 ; i ++ ) } } for ( int j = 1 ; j <= 4 ; j ++ ) if ( a [ i ] [ j ] == ' # ' ) if ( nCount ( i , j , ' # ' ) >= 2 || nCount ( i , j , ' . ' ) >= 3 ) cout << \" YES \" << endl ; else return 0; } if ( nCount ( i , j , ' . ' ) >= 2 || nCount ( i , j , ' # ' ) >= 3 ) cout << \" YES \" << endl ; cout << \" NO \" << endl ; return 0; } } } } char m [ 4 ] [ 4 ] ; return 0; }"}}
{"translation": {"en": "function check with integer arguments i and j that returns boolean [ENDL] declare integers cnt and cnt2 = 0 [ENDL] for k = i to i + 2 exclusive [ENDL] for d = j to j + 2 exclusive [ENDL] if m [ k ] [ d ] is ' # ' [ENDL] increment cnt [ENDL] else [ENDL] increment cnt2 [ENDL] return true if cnt = 3 | | cnt = 4 | | cnt2 = 3 | | cnt2 = 4 [ENDL] return false [ENDL] for integer i = 0 to 4 exclusive [ENDL] declare string variable s [ENDL] read s [ENDL] for integer j = 0 to 4 exclusive , set m [ i ] [ j ] to s [ j ] [ENDL] declare boolean variable sol = false [ENDL] for integer i = 0 to 3 exclusive [ENDL] for j = 0 to 3 exclusive [ENDL] if check ( i , j ) is true , set sol to true [ENDL] if sol is true [ENDL] print \" YES \\ n \" [ENDL] else [ENDL] print \" NO \\ n \" [ENDL] num = array of 225 integers", "c++": "bool check ( int i , int j ) int cnt = 0 , cnt2 = 0 ; for ( int k = i ; k < i + 2 ; k ++ ) for ( int d = j ; d < j + 2 ; d ++ ) if ( m [ k ] [ d ] == ' # ' ) ++ cnt ; else ++ cnt2 ; if ( cnt == 3 || cnt == 4 || cnt2 == 3 || cnt2 == 4 ) return true ; } } return false ; for ( int i = 0 ; i < 4 ; i ++ ) } int main() { string s ; cin >> s ; for ( int j = 0 ; j < 4 ; j ++ ) { m [ i ] [ j ] = s [ j ] ; } bool sol = false ; } for ( int i = 0 ; i < 3 ; i ++ ) for ( int j = 0 ; j < 3 ; j ++ ) if ( check ( i , j ) ) sol = true ; if ( sol ) } } cout << \" YES\\n \" ; else cout << \" NO\\n \" ; int num [ 225 ] ; } return 0; }"}}
{"translation": {"en": "n , m , i , j , k = integers [ENDL] read n and k [ENDL] set a index of num to k [ENDL] for i = 1 to k exclusive increment num [ ' a ' + i ] [ENDL] if k > n [ENDL] print - 1 [ENDL] else if n is 1 [ENDL] print a [ENDL] else if k is 1 and n > 1 [ENDL] print - 1 [ENDL] else [ENDL] set f to 1 [ENDL] for i = 1 to n - ( k - 2 ) inclusive [ENDL] if i modulo 2 [ENDL] print a [ENDL] else [ENDL] print b [ENDL] for i = 1 to k - 2 inclusive print ( char ) ( ' b ' + i ) [ENDL] print a new line [ENDL] create integers n , k , sig with sig = 0", "c++": "int n , m , i , j , k ; int main() { cin >> n >> k ; num [ ' a ' ] = k ; for ( i = 1 ; i < k ; i ++ ) num [ ' a ' + i ] ++ ; if ( k > n ) cout << - 1 << endl ; else if ( n == 1 ) cout << ' a ' << endl ; else if ( k == 1 && n > 1 ) cout << - 1 << endl ; else int f = 1 ; for ( i = 1 ; i <= n - ( k - 2 ) ; i ++ ) if ( i % 2 ) cout << ' a ' ; else cout << ' b ' ; for ( i = 1 ; i <= k - 2 ; i ++ ) { cout << ( char ) ( ' b ' + i ) ; } } cout << endl ; int n , k , sig = 0 ; } return 0; }"}}
{"translation": {"en": "create string s [ENDL] read n read k [ENDL] if k is 1 and n is greater than 1 [ENDL] print \" - 1 \\ n \" [ENDL] else if k is greater than n [ENDL] print \" - 1 \\ n \" [ENDL] else if n is 1 and k is 1 [ENDL] print \" a \\ n \" [ENDL] else [ENDL] create integers i , j with j = n - k + 1 [ENDL] if ( j bitwise and 1 ) is 0 , decrement j , set sig to 1 [ENDL] for i = 0 to j inclusive , increment i by 2 , increment s by \" ab \" [ENDL] if sig is true , increment s by \" a \" , set a to j + 2 [ENDL] create character c with c = ' b ' [ENDL] for i is less than n , incrementing i , increment s by character casted ( c + 1 ) , set c to s [ i ] [ENDL] print s print newline [ENDL] create integers n and k", "c++": "int main() { string s ; cin >> n >> k ; if ( k == 1 && n > 1 ) cout << \" -1\\n \" ; else if ( k > n ) cout << \" -1\\n \" ; else if ( n == 1 && k == 1 ) cout << \" a\\n \" ; else int i , j = n - k + 1 ; if ( ( j & 1 ) == 0 ) { j -- , sig = 1 ; } for ( i = 0 ; i <= j ; i += 2 ) s += \" ab \" ; if ( sig ) { s += \" a \" , i = j + 2 ; } char c = ' b ' ; for ( ; i < n ; i ++ ) s += ( char ) ( c + 1 ) , c = s [ i ] ; cout << s << endl ; int n , k ; } return 0; }"}}
{"translation": {"en": "read n and k [ENDL] if n < k or ( k = 1 and n ! = 1 ) [ENDL] print - 1 [ENDL] else if k = 1 and n = 1 [ENDL] print ' a ' [ENDL] else [ENDL] for i = 1 to n - ( k - 2 ) inclusive [ENDL] if i & 1 [ENDL] print ' a ' [ENDL] else [ENDL] print ' b ' [ENDL] declare integer variable x = n - ( k - 2 ) [ENDL] declare character ch = ' c ' [ENDL] for i = 1 to k - 2 inclusive print ch and increment it [ENDL] print new line [ENDL] create n , k and zzz", "c++": "int main() { cin >> n >> k ; if ( n < k || ( k == 1 && n != 1 ) ) cout << - 1 << endl ; else if ( k == 1 && n == 1 ) cout << ' a ' << endl ; else for ( int i = 1 ; i <= n - ( k - 2 ) ; i ++ ) if ( i & 1 ) cout << ' a ' ; else cout << ' b ' ; int x = n - ( k - 2 ) ; } char ch = ' c ' ; for ( int i = 1 ; i <= k - 2 ; i ++ ) { cout << ch ++ ; } cout << endl ; int n , k , zzz ; } return 0; }"}}
{"translation": {"en": "read n , k [ENDL] if n < k or k = 1 and n is different from 1 [ENDL] print - 1 [ENDL] else if k = 1 and n = 1 [ENDL] print a and a new line [ENDL] else [ENDL] for i = 1 to n - k - 2 inclusive [ENDL] if i is odd [ENDL] print a [ENDL] els [ENDL] print b and a new line [ENDL] set x to n - k - 2 [ENDL] assign c to ch [ENDL] for i = 1 to k inclusive , print increment ch [ENDL] print a new line [ENDL] declare long long variables n and k", "c++": "int main() { cin >> n >> k ; if ( n < k || ( k == 1 && n != 1 ) ) cout << - 1 << endl ; else if ( k == 1 && n == 1 ) cout << ' a ' << endl ; else for ( int i = 1 ; i <= n - ( k - 2 ) ; i ++ ) if ( i & 1 ) cout << ' a ' ; else cout << ' b ' ; int x = n - ( k - 2 ) ; } char ch = ' c ' ; for ( int i = 1 ; i <= k - 2 ; i ++ ) { cout << ch ++ ; } cout << endl ; long long n , k ; } return 0; }"}}
{"translation": {"en": "read n and k [ENDL] if k > n | | ( k = 1 & & n > 1 ) [ENDL] print - 1 [ENDL] else if k = 1 [ENDL] print ' a ' [ENDL] else [ENDL] declare long long x = n - ( k - 2 ) [ENDL] declare string str = \" \" [ENDL] declare long long variable i = 0 [ENDL] while i is less than x [ENDL] if i is even [ENDL] append \" a \" to str [ENDL] else [ENDL] append \" b \" to str [ENDL] increase i [ENDL] for long long i = 2 to k exclusive [ENDL] declare character ch = ( i + ' a ' ) [ENDL] append ch to str [ENDL] print str [ENDL] let n , k be ints", "c++": "int main() { cin >> n >> k ; if ( k > n || ( k == 1 && n > 1 ) ) cout << - 1 << endl ; else if ( k == 1 ) cout << ' a ' << endl ; else long long x = n - ( k - 2 ) ; string str = \"  \" ; long long i = 0 ; while ( i < x ) if ( i % 2 == 0 ) str += \" a \" ; else str += \" b \" ; i ++ ; for ( long long i = 2 ; i < k ; i ++ ) } char ch = ( i + ' a ' ) ; str += ch ; cout << str << endl ; } int n , k ; } return 0; }"}}
{"translation": {"en": "read n , k [ENDL] if k is less than n do the following [ENDL] print - 1 and one newline [ENDL] if ke equals 1 do the following [ENDL] if n equals 1 do the following [ENDL] print a and one newline [ENDL] else [ENDL] print - 1 and one newline [ENDL] if k equals 2 do the following [ENDL] for int = 0 to n exclusive print char ( ' a ' + ( i & 1 ) ) [ENDL] print one newline [ENDL] for i = 0 to n - k + 2 exclusive print char ( ' a ' + ( i & 1 ) ) [ENDL] for i = 0 to k - 2 exclusive print char ( ' c ' + i ) [ENDL] print one newline [ENDL] declare integer variables i , j , k , l , n and m", "c++": "cin >> n >> k ; int main() { if ( k > n ) cout << - 1 << endl ; if ( k == 1 ) return 0; } if ( n == 1 ) cout << ' a ' << endl ; else cout << - 1 << endl ; if ( k == 2 ) return 0; } for ( int i = 0 ; i < n ; i ++ ) { cout << char ( ' a ' + ( i & 1 ) ) ; } cout << endl ; for ( int i = 0 ; i < n - k + 2 ; i ++ ) { cout << char ( ' a ' + ( i & 1 ) ) ; } return 0; } for ( int i = 0 ; i < k - 2 ; i ++ ) { cout << char ( ' c ' + i ) ; } cout << endl ; int i , j , k , l , n , m ; }"}}
{"translation": {"en": "read n and m [ENDL] k = m [ENDL] if n < m or ( m = 1 and n is greater than 1 ) [ENDL] print - 1 [ENDL] create a map from integers to characters called mm [ENDL] create character h = ' a ' [ENDL] for i = 0 to 26 exclusive [ENDL] set value of mm [ i ] to h [ENDL] increase h by one [ENDL] declare string variable st = \" \" [ENDL] if n = m [ENDL] for i = 0 to n exclusive , apped mm [ i ] to st [ENDL] print st [ENDL] for i = 0 to n - ( m - 2 ) exclusive [ENDL] if i is even [ENDL] append mm [ 0 ] to st [ENDL] else [ENDL] append mm [ 1 ] to st [ENDL] for i = 0 to m - 2 exclusive , append mm [ i + 2 ] to st [ENDL] print st [ENDL] declare integers a and b", "c++": "int main() { cin >> n >> m ; k = m ; if ( n < m || ( m == 1 && n > 1 ) ) cout << - 1 << endl ; map < int , char > mm ; return 0; } char h = ' a ' ; for ( i = 0 ; i < 26 ; i ++ ) mm [ i ] = h ; h ++ ; string st = \"  \" ; } if ( n == m ) for ( i = 0 ; i < n ; i ++ ) { st += mm [ i ] ; } cout << st << endl ; for ( i = 0 ; i < n - ( m - 2 ) ; i ++ ) return 0; } if ( i % 2 == 0 ) st += mm [ 0 ] ; else st += mm [ 1 ] ; for ( i = 0 ; i < m - 2 ; i ++ ) { st += mm [ i + 2 ] ; } } cout << st << endl ; int a , b ; return 0; }"}}
{"translation": {"en": "while read a and b [ENDL] declare integer i [ENDL] if a = 1 [ENDL] if b is greater than 1 [ENDL] print \" - 1 \" [ENDL] else [ENDL] print \" a \" [ENDL] else [ENDL] declare character variable q = ' c ' [ENDL] declare integer pl = 0 [ENDL] if b > a or ( b = 1 and a > 1 ) [ENDL] print \" - 1 \" [ENDL] else [ENDL] for i = 0 to a - ( b - 2 ) exclusive [ENDL] if pl is even [ENDL] increase pl by one [ENDL] print ' a ' [ENDL] else [ENDL] increment pl [ENDL] print ' b ' [ENDL] for i = 0 to b - 2 exclusive [ENDL] print new line [ENDL] let s , s1 be strings", "c++": "int main() { while ( cin >> a >> b ) int i ; if ( a == 1 ) if ( b > 1 ) cout << \" -1 \" << endl ; else cout << ' a ' << endl ; else } char q = ' c ' ; int pl = 0 ; if ( b > a || ( b == 1 && a > 1 ) ) cout << \" -1 \" << endl ; else for ( i = 0 ; i < a - ( b - 2 ) ; i ++ ) if ( pl % 2 == 0 ) pl ++ ; cout << ' a ' ; else pl ++ ; cout << ' b ' ; for ( i = 0 ; i < b - 2 ; i ++ ) { cout << q ++ ; } } } cout << endl ; string s , s1 ; } } } return 0; }"}}
{"translation": {"en": "let n , k be integers [ENDL] read n , k [ENDL] if ( k is greater than n or ( k is equal to 1 and n is greater than 1 ) ) , and print - 1 and endline , return 0 [ENDL] if ( k is equal to 1 ) print a and endline , return 0 [ENDL] for ( i = 1 to k - 2 inclusive ) , s is equal to s + b + i [ENDL] for ( i = 1 to n - k + 2 inclusive ) , s1 = s1 + ( if i modulus 2 ) ? a else b [ENDL] print s1 and s and newline [ENDL] let xx be a char array of length 1000002", "c++": "int main() { int n , k ; cin >> n >> k ; if ( k > n || ( k == 1 && n > 1 ) ) return cout << \" -1 \" << endl , 0 ; if ( k == 1 ) return cout << \" a \" << endl , 0 ; for ( int i = 1 ; i <= k - 2 ; i ++ ) s += ' b ' + i ; for ( int i = 1 ; i <= n - k + 2 ; i ++ ) s1 += i % 2 ? ' a ' : ' b ' ; cout << s1 << s << endl ; char xx [ 1000002 ] ; }"}}
{"translation": {"en": "n , k = integers [ENDL] while n and k are read [ENDL] if n is equal to or greater than 2 and k is less than 2 , or n is less than k [ENDL] print - 1 and a new line [ENDL] otherwise [ENDL] set integer a equal to k - 2 [ENDL] set t = 0 [ENDL] set all contents of xx to 0 [ENDL] for i = 0 to n exclusive [ENDL] if i is less than n - ( k - 2 ) [ENDL] if i modulo 2 equal to 0 [ENDL] set xx [ i ] = a [ENDL] otherwise [ENDL] set xx [ i ] equal to b [ENDL] otherwise [ENDL] if i is less than n [ENDL] set xx [ i ] = 99 + t [ENDL] increment t [ENDL] print xx and a new line [ENDL] create integers n and k", "c++": "int n , k ; int main() { while ( cin >> n >> k ) if ( n < k || ( n >= 2 && k < 2 ) ) cout << \" -1 \" << endl ; else int a = k - 2 ; int t = 0 ; memset ( xx , 0 , sizeof ( xx ) ) ; for ( int i = 0 ; i < n ; i ++ ) if ( i < n - ( k - 2 ) ) if ( i % 2 == 0 ) xx [ i ] = ' a ' ; else xx [ i ] = ' b ' ; else if ( i < n ) xx [ i ] = 99 + t ; t ++ ; cout << xx << endl ; } } } int n , k ; } } return 0; }"}}
{"translation": {"en": "read n , k [ENDL] if n < k or k equal to 1 and n different from 1 [ENDL] print - 1 [ENDL] otherwise [ENDL] if n equal to or greater than 2 [ENDL] for i = 1 to n inclusive [ENDL] if 1 modulo 2 equal to 0 [ENDL] print b [ENDL] other [ENDL] print a [ENDL] if n - k mod 2 = 0 [ENDL] print ab [ENDL] for i = 3 to k inclusive , print i + a - 1 [ENDL] else [ENDL] print ba [ENDL] for i = 3 to k inclusive , print i + a - 1 [ENDL] print a new line [ENDL] otherwise [ENDL] print a and a new line [ENDL] let b , d , sum , i , n , resh , ans1 , ans2 , ans3 , ans4 , j and k be long longs and a be long long array with length 10001", "c++": "int main() { cin >> n >> k ; if ( n < k || ( k == 1 && n != 1 ) ) cout << - 1 << endl ; else if ( n >= 2 ) for ( int i = 1 ; i <= n - k ; i ++ ) if ( i % 2 == 0 ) cout << \" b \" ; else cout << \" a \" ; if ( ( n - k ) % 2 == 0 ) cout << \" ab \" ; for ( int i = 3 ; i <= k ; i ++ ) cout << char ( i + ' a ' - 1 ) ; else cout << \" ba \" ; for ( int i = 3 ; i <= k ; i ++ ) cout << char ( i + ' a ' - 1 ) ; cout << endl ; } else cout << \" a \" << endl ; long long a [ 10001 ] , b , d , sum , i , n , resh , ans1 , ans2 , ans3 , ans4 , j , k ; } return 0; }"}}
{"translation": {"en": "create strings s and s1 [ENDL] create char array c with length 10001 [ENDL] read n and k [ENDL] if ( n is smaller than k ) or ( k is equal to 1 and n is greater than 1 ) return 0 and print - 1 [ENDL] if n is equal to 1 return 0 and print a and newline [ENDL] for i = 0 to ( n - ( k - 2 ) ) / 2 exclusive print \" ab \" [ENDL] if ( n - ( k - 2 ) mod 2 ) print \" a \" [ENDL] for i = 0 to k - 2 exclusive print char ( i + ' c ' ) [ENDL] print newline [ENDL] create character array ab with size 2 , with ab = { ' a ' , ' b ' }", "c++": "string s , s1 ; char c [ 10001 ] ; cin >> n >> k ; int main() { if ( n < k or ( k == 1 and n > 1 ) ) return cout << - 1 << \" \\n \" , 0 ; if ( n == 1 ) return cout << \" a\\n \" , 0 ; for ( int i = 0 ; i < ( n - ( k - 2 ) ) / 2 ; ++ i ) cout << \" ab \" ; if ( ( n - ( k - 2 ) ) % 2 ) cout << \" a \" ; for ( int i = 0 ; i < k - 2 ; ++ i ) cout << char ( i + ' c ' ) ; cout << \" \\n \" ; char ab [ 2 ] = { ' a ' , ' b ' } ; return 0; }"}}
{"translation": {"en": "create integers n , k [ENDL] read n read k [ENDL] if ( k is 1 and n is not 1 ) or ( k is greater than n ) [ENDL] print - 1 print newline [ENDL] create integer frst with frst = n - k + 2 [ENDL] create boolean flag with flag = 0 [ENDL] create integer i with i = 0 [ENDL] for i is less than frst and i is less than n , incrementing i [ENDL] print ab [ flag ] [ENDL] set flag to ( not flag bitwise and 1 ) [ENDL] create character c with c = ' c ' [ENDL] for i is less than n , incrementing i [ENDL] print c [ENDL] increment c [ENDL] print newline [ENDL] create integers n and k", "c++": "int n , k ; int main() { cin >> n >> k ; if ( ( k == 1 && n != 1 ) || ( k > n ) ) cout << - 1 << endl ; int frst = n - k + 2 ; return 0; } bool flag = 0 ; int i = 0 ; for ( ; i < frst && i < n ; i ++ ) cout << ab [ flag ] ; flag = ( ! flag & 1 ) ; char c = ' c ' ; } for ( ; i < n ; i ++ ) cout << c ; c ++ ; cout << endl ; } int n , k ; return 0; }"}}
{"translation": {"en": "read n and k [ENDL] if n * ( n - 1 ) / 2 < = k [ENDL] print \" no solution \\ n \" [ENDL] else [ENDL] print \" 0 \" , n and \" \\ n [ENDL] declare integers n and k", "c++": "cin >> n >> k ; int main() { if ( n * ( n - 1 ) / 2 <= k ) cout << \" no solution\\n \" ; else for ( ; n -- ; ) cout << \" 0  \" << n << \" \\n \" ; int n , k ; }"}}
{"translation": {"en": "while reading n and k [ENDL] create long long temp = 0 [ENDL] declare long long variable a [ENDL] declare integer j = 1 [ENDL] for i = 1 to n inclusive [ENDL] read a [ENDL] if temp - ( i - 1 ) * ( n - i ) * a is less than k [ENDL] print j [ENDL] decrease i and n [ENDL] else [ENDL] increase temp by ( i - 1 ) * a [ENDL] increase j [ENDL] create long long integers n , i , k , x , b , with x = 1 to b = 0", "c++": "int main() { while ( cin >> n >> k ) long long temp = 0 ; long long a ; int j = 1 ; for ( int i = 1 ; i <= n ; i ++ ) cin >> a ; if ( temp - ( i - 1 ) * ( n - i ) * a < k ) cout << j << endl ; i -- , n -- ; else temp += ( i - 1 ) * a ; j ++ ; long long int n , i , k , x = 1 , b = 0 ; } } return 0; }"}}
{"translation": {"en": "read n read k [ENDL] create long long integer array a with size n [ENDL] for i = 0 to n exclusive , read a [ i ] [ENDL] for i = 1 to n exclusive [ENDL] if b - x * a [ i ] * ( n - i - 1 ) is less than k [ENDL] print i + 1 print newline [ENDL] else [ENDL] increment by by x * a [ i ] [ENDL] increment x [ENDL] create long longs n , k", "c++": "int main() { cin >> n >> k ; long long int a [ n ] ; for ( i = 0 ; i < n ; i ++ ) cin >> a [ i ] ; for ( i = 1 ; i < n ; i ++ ) if ( b - x * a [ i ] * ( n - i - 1 ) < k ) cout << i + 1 << endl ; else b += x * a [ i ] ; x ++ ; long long n , k ; } } return 0; }"}}
{"translation": {"en": "read n readk [ENDL] create long long sum with sum = 0 [ENDL] create long long pos with pos = 1 [ENDL] for i = 1 to n inclusive [ENDL] create long long x [ENDL] read x [ENDL] create long long d with d = sum - ( pos - 1 ) * ( n - i ) * x [ENDL] if d is less than k [ENDL] print i print ' \\ n ' [ENDL] else [ENDL] increment sum by x * ( pos - 1 ) [ENDL] increment pos [ENDL] create long longs n , k , sum , cur with sum = 0 , cur = 0", "c++": "int main() { cin >> n >> k ; long long sum = 0 ; long long pos = 1 ; for ( long long i = 1 ; i <= n ; i ++ ) long long x ; cin >> x ; long long d = sum - ( pos - 1 ) * ( n - i ) * x ; if ( d < k ) cout << i << ' \\n ' ; else sum += x * ( pos - 1 ) ; pos ++ ; long long n , k , sum = 0 , cur = 0 ; } } return 0; }"}}
{"translation": {"en": "read n read k [ENDL] for i = 1 to n inclusive [ENDL] create integer a [ENDL] read a [ENDL] if i is greater than 1 and sum - ( i - cur - 1 ) * ( n - 1 ) * a is less than k [ENDL] print i print newline [ENDL] increment cur [ENDL] else [ENDL] increment sum by a * ( i - cur - 1 ) [ENDL] let n , k be integers", "c++": "int main() { cin >> n >> k ; for ( long long i = 1 ; i <= n ; i ++ ) int a ; cin >> a ; if ( i > 1 && sum - ( i - cur - 1 ) * ( n - i ) * a < k ) cout << i << endl ; cur ++ ; else sum += a * ( i - cur - 1 ) ; int n , k ; } }"}}
{"translation": {"en": "while ( read the values of n and k ) [ENDL] let temp be a long integer with value as 0 [ENDL] let a be a long integer [ENDL] let j be a integer with value as 1 [ENDL] for integer i = 1 to n inclusive [ENDL] read a [ENDL] if ( temp - ( i - 1 ) * ( n - i ) * a is less than k ) [ENDL] print j and newline [ENDL] decrease the value of i by 1 , decrease the value of n by 1 [ENDL] else do the following [ENDL] temp is equal to temp + ( i - 1 ) * a [ENDL] increase j value by 1 [ENDL] create integer T with T = 1", "c++": "int main() { while ( cin >> n >> k ) long long temp = 0 ; long long a ; int j = 1 ; for ( int i = 1 ; i <= n ; i ++ ) cin >> a ; if ( temp - ( i - 1 ) * ( n - i ) * a < k ) cout << j << endl ; i -- , n -- ; else temp += ( i - 1 ) * a ; j ++ ; int T = 1 ; } } return 0; }"}}
{"translation": {"en": "while decrement T is true [ENDL] create integers n , k [ENDL] read n read k [ENDL] create long long integer vector arr initialized with n + 1 [ENDL] set arr [ 0 ] to 0 [ENDL] for i = 0 to n exclusive , read arr [ i + 1 ] [ENDL] create long long integer c with c = 1 [ENDL] create integer p_1 with p_1 = 1 [ENDL] create long long integers cur_d , prev_d , di , with cur_d = 0 , prev_d = 0 , di = 0 [ENDL] for i = 2 to n inclusive [ENDL] set cur_d to prev_d + 1LL * arr [ p_i ] * ( c - 1 ) [ENDL] set di to cur_d - 1LL * ( n - i ) * ( c ) * arr [ i ] [ENDL] if di is less than k [ENDL] print i print ' \\ n ' [ENDL] else [ENDL] increment c [ENDL] set p_i to i [ENDL] set prev_d to cur_d [ENDL] create long long vector v", "c++": "int main() { while ( T -- ) int n , k ; cin >> n >> k ; vector < long long int > arr ( n + 1 ) ; arr [ 0 ] = 0 ; for ( int i = 0 ; i < n ; i ++ ) { cin >> arr [ i + 1 ] ; } long long int c = 1 ; int p_i = 1 ; long long int cur_d = 0 , prev_d = 0 , di = 0 ; for ( int i = 2 ; i <= n ; i ++ ) cur_d = prev_d + 1LL * arr [ p_i ] * ( c - 1 ) ; di = cur_d - 1LL * ( n - i ) * ( c ) * arr [ i ] ; if ( di < k ) cout << i << ' \\n ' ; else c ++ ; p_i = i ; prev_d = cur_d ; vector < long long > v ; } } } return 0; }"}}
{"translation": {"en": "create long longs n , k , a , s , j , p , i with s = 0 , j = 2 [ENDL] read n read k [ENDL] create long long m with m = n [ENDL] read a [ENDL] for i = 2 to n inclusive [ENDL] read a [ENDL] set p to s - ( j - 1 ) * ( m - j ) * a [ENDL] if p is less than k [ENDL] add element i to end of v [ENDL] set m to m - 1 [ENDL] else [ENDL] set s to s + ( j - 1 ) * a [ENDL] set j to j + 1 [ENDL] for i = 0 to size of v exclusive , print v [ i ] print newline [ENDL] create long longs n , k , a , sum and l", "c++": "long long n , k , a , s = 0 , j = 2 , p , i ; int main() { cin >> n >> k ; long long m = n ; cin >> a ; for ( i = 2 ; i <= n ; i ++ ) cin >> a ; p = s - ( j - 1 ) * ( m - j ) * a ; if ( p < k ) v . push_back ( i ) ; m = m - 1 ; else s = s + ( j - 1 ) * a ; j = j + 1 ; for ( i = 0 ; i < v . size ( ) ; i ++ ) cout << v [ i ] << endl ; } } long long n , k , a , sum , l ; return 0; }"}}
{"translation": {"en": "read n and k [ENDL] for long long i = 1 to n inclusive [ENDL] read a [ENDL] if i ! = 1 [ENDL] if sum - ( n - i ) * ( i - 1 ) * a is less than k [ENDL] print i + l [ENDL] decrease i [ENDL] decrease n by one [ENDL] increment l [ENDL] else [ENDL] increase sum by a * ( i - 1 ) [ENDL] declare prn with integer pos as argument , returning void", "c++": "cin >> n >> k ; int main() { for ( long long i = 1 ; i <= n ; i ++ ) cin >> a ; if ( i != 1 ) if ( sum - ( n - i ) * ( i - 1 ) * a < k ) cout << i + l << endl ; i -- ; n -- ; l ++ ; else sum += a * ( i - 1 ) ; void prn ( int pos ) } } }"}}
{"translation": {"en": "print pos print \" \\ n \" [ENDL] create long longs n , k [ENDL] read n read k [ENDL] create long long sz with sz = n [ENDL] create integer pos with pos = 1 [ENDL] create long long ai [ENDL] read ai [ENDL] create long long sum with sum = 0 [ENDL] for i = 2 to sz inclusive [ENDL] increment pos [ENDL] read ai [ENDL] create long long d with d = sum - ( n - pos ) * ( pos - 1 ) * ai [ENDL] if d is less than k [ENDL] run prn with i as argument [ENDL] decrement pos [ENDL] decrement n [ENDL] else [ENDL] increment sum by ai * ( pos - 1 ) [ENDL] create long longs n , k , a , sum , l", "c++": "cout << pos << \" \\n \" ; long long n , k ; } int main() { cin >> n >> k ; long long sz = n ; int pos = 1 ; long long ai ; cin >> ai ; long long sum = 0 ; for ( int i = 2 ; i <= sz ; ++ i ) ++ pos ; cin >> ai ; long long d = sum - ( n - pos ) * ( pos - 1 ) * ai ; if ( d < k ) prn ( i ) ; -- pos ; -- n ; else sum += ai * ( pos - 1 ) ; long long n , k , a , sum , l ; } } return 0; }"}}
{"translation": {"en": "read n read k [ENDL] for i = 1 to n inclusive [ENDL] read a [ENDL] if i is not 1 [ENDL] if sum - ( n - 1 ) * ( i - 1 ) * a is less than k [ENDL] print i + l print newline [ENDL] decrement i [ENDL] decrement n [ENDL] increment l [ENDL] else [ENDL] increment sum by a * ( i - 1 ) [ENDL] integer function Get", "c++": "cin >> n >> k ; int main() { for ( long long i = 1 ; i <= n ; i ++ ) cin >> a ; if ( i != 1 ) if ( sum - ( n - i ) * ( i - 1 ) * a < k ) cout << i + l << endl ; i -- ; n -- ; l ++ ; else sum += a * ( i - 1 ) ; int Get ( ) } } }"}}
{"translation": {"en": "declare character c [ENDL] read c from the input , then loop , while c is not a digit or ' - ' [ENDL] create boolean Flag = true if c = ' - ' , or false otherwise [ENDL] if Flag is true , read c from the input [ENDL] create int X = 0 [ENDL] while c > = ' 0 ' & & c < = ' 9 ' [ENDL] set X to X * 10 + c - 48 [ENDL] read c from the input [ENDL] return - X if Flag if set , else return X [ENDL] function Output with int argument X [ENDL] if X is less than 0 [ENDL] print ' - ' [ENDL] invert the sign of X [ENDL] declare int Len = 0 and int array Data with size 10 [ENDL] while X is not 0 [ENDL] set Data [ Len ] to X % 10 and increment Len [ENDL] divide X by 10 [ENDL] if Len is false , change Data [ Len ] to 0 and increment Len [ENDL] decrement Len and loop further , while Len ! = 0 , printing Data [ Len ] + 48 on each iteration [ENDL] print ' \\ n ' [ENDL] declare integer N = Get ( ) [ENDL] create long longs Sum = 0 and K = Get ( ) [ENDL] declare integers Top and Number = 0 and Total = N [ENDL] for integer i = 0 to N exclusive [ENDL] declare long long X = Get ( ) [ENDL] if Sum - X * Number * ( Total - Number - 1 ) < K [ENDL] call Output of i + 1 [ENDL] decrement Total [ENDL] else [ENDL] increase Sum by Number * X [ENDL] increment Number [ENDL] integers = n , a , b , c , d , w , h , x1 = 2e9 , y1 = 2e9 , x2 = 0 , y2 = 0 , area = 0", "c++": "char c ; while ( c = getchar ( ) , ( c < ' 0 ' || c > ' 9 ' ) && ( c != ' - ' ) ) bool Flag = ( c == ' - ' ) ; ; if ( Flag ) c = getchar ( ) ; int X = 0 ; while ( c >= ' 0 ' && c <= ' 9 ' ) X = X * 10 + c - 48 ; c = getchar ( ) ; return Flag ? - X : X ; } void Output ( int X ) } if ( X < 0 ) putchar ( ' - ' ) ; X = - X ; int Len = 0 , Data [ 10 ] ; } while ( X ) Data [ Len ++ ] = X % 10 ; X /= 10 ; if ( ! Len ) Data [ Len ++ ] = 0 ; } while ( Len -- ) putchar ( Data [ Len ] + 48 ) ; putchar ( ' \\n ' ) ; int N = Get ( ) ; } int main() { long long K = Get ( ) , Sum = 0 ; int Top = 0 , Total = N , Number = 0 ; for ( int i = 0 ; i < N ; i ++ ) long long X = Get ( ) ; if ( Sum - X * Number * ( Total - Number - 1 ) < K ) Output ( i + 1 ) ; Total -- ; else Sum += Number * X ; Number ++ ; int n , a , b , c , d , w , h , x1 = 2e9 , y1 = 2e9 , x2 = 0 , y2 = 0 , area = 0 ; } } return 0; }"}}
{"translation": {"en": "read n [ENDL] if n is true do the following [ENDL] read a , b , c , d [ENDL] set w to c - a [ENDL] set h to d - b [ENDL] area equals area plus w * h [ENDL] set x1 to min ( x1 , a ) [ENDL] set y1 to min ( y1 , b ) [ENDL] set x2 to max ( x2 , c ) [ENDL] set y2 to max ( y2 , d ) [ENDL] set w to x2 - x1 [ENDL] set h to y2 - y1 [ENDL] if w = h and area = w * h print YES else NO ) [ENDL] declare integer variable n", "c++": "int main() { cin >> n ; while ( n -- ) cin >> a >> b >> c >> d ; w = c - a ; h = d - b ; area += w * h ; x1 = min ( x1 , a ) ; y1 = min ( y1 , b ) ; x2 = max ( x2 , c ) ; y2 = max ( y2 , d ) ; w = x2 - x1 ; } h = y2 - y1 ; cout << ( w == h && area == w * h ? \" YES \" : \" NO \" ) << endl ; int n ; return 0; }"}}
{"translation": {"en": "read n [ENDL] declare integers x0 , y0 , x1 , y1 and a with a = 0 [ENDL] change x0 and y0 to 1e9 + 87 [ENDL] change x1 and y1 to - 9e8 [ENDL] for integer i = 0 to n exclusive [ENDL] declare ints l , b , r and u [ENDL] read l , b , r and u [ENDL] add ( r - l ) * ( u - b ) to a [ENDL] change x0 to min of x0 and l [ENDL] change x1 to max of x1 and r [ENDL] change y0 to min of y0 and b [ENDL] change y1 to max of y1 and u [ENDL] subtract x0 from x1 [ENDL] decrease y1 by y0 [ENDL] print \" YES \\ n \" if x1 = y1 and x1 * y1 = a , or \" NO \\ n \" otherwise [ENDL] declare integer n", "c++": "int main() { cin >> n ; int x0 , y0 , x1 , y1 , a = 0 ; x0 = y0 = 1e9 + 87 ; x1 = y1 = - 9e8 ; for ( int i = 0 ; i < n ; ++ i ) int l , b , r , u ; cin >> l >> b >> r >> u ; a += ( r - l ) * ( u - b ) ; x0 = min ( x0 , l ) ; x1 = max ( x1 , r ) ; y0 = min ( y0 , b ) ; y1 = max ( y1 , u ) ; x1 -= x0 ; } y1 -= y0 ; cout << ( x1 == y1 && x1 * y1 == a ? \" YES\\n \" : \" NO\\n \" ) ; int n ; }"}}
{"translation": {"en": "read n [ENDL] create integers xmin and ymin = 1000000000 and xmax and ymax = - 1 [ENDL] create integer act = 0 [ENDL] for i = 1 to n inclusive [ENDL] create ints a , b , c and d [ENDL] read a , b , c and d [ENDL] set xmin to min of xmin and a [ENDL] set xmin to min of xmin and c [ENDL] set xmax to min of xmax and a [ENDL] set xmax to max of xmax and a [ENDL] set ymin to min of ymin and b [ENDL] set ymin to min of ymin and d [ENDL] set ymax to max of ymax and b [ENDL] set ymax to max of ymax and d [ENDL] add abs ( a - c ) * abs ( b - d ) to act [ENDL] if ymax - ymin = xmax - xmin and act = ( ( ymax - ymin ) * ( xmax - xmin ) ) [ENDL] print \" YES \\ n \" [ENDL] else [ENDL] print \" NO \\ n \" [ENDL] declare integer variable n", "c++": "cin >> n ; int main() { int xmin = 1000000000 , xmax = - 1 , ymin = 1000000000 , ymax = - 1 ; int act = 0 ; for ( int i = 1 ; i <= n ; i ++ ) int a , b , c , d ; cin >> a >> b >> c >> d ; xmin = min ( xmin , a ) ; xmin = min ( xmin , c ) ; xmax = max ( xmax , a ) ; xmax = max ( xmax , c ) ; ymin = min ( ymin , b ) ; ymin = min ( ymin , d ) ; ymax = max ( ymax , b ) ; ymax = max ( ymax , d ) ; act += ( abs ( a - c ) * abs ( b - d ) ) ; if ( ymax - ymin == xmax - xmin && act == ( ( ymax - ymin ) * ( xmax - xmin ) ) ) } cout << \" YES\\n \" ; else cout << \" NO\\n \" ; int n ; return 0; }"}}
{"translation": {"en": "read n [ENDL] x1 , y1 , x2 , y2 and sum are long long ints where sum = 0 [ENDL] declare long long int minmum = INT_MIN , maxmum = INT_MIN , p = INT_MAX and q = INT_MAX [ENDL] for i = 0 to n exclusive [ENDL] read input to x1 , y1 , x2 and y2 [ENDL] change maxmum to max of maxmum and max ( x2 and x1 ) [ENDL] change minmum to max of minmum and max ( y2 and y1 ) [ENDL] assign min of p and min ( y2 and y1 ) to p [ENDL] set q to min of q and min ( x2 and x1 ) [ENDL] add fabs ( x2 - x1 ) * fabs ( y2 - y1 ) to sum [ENDL] if sum = ( ( minmum - p ) * ( maxmum - q ) ) and ( maxmum - q ) = = ( minmum - p ) [ENDL] print \" YES \" [ENDL] else [ENDL] print \" NO \\ n \" [ENDL] integers = i , n , x1 , x2 , y1 , y2 , mx = 99999 , my = 99999 , Mx = - 1 , My = - 1 , R = 0", "c++": "int main() { cin >> n ; long long int x1 , y1 , x2 , y2 , sum = 0 ; long long int minmum = INT_MIN , maxmum = INT_MIN , p = INT_MAX , q = INT_MAX ; for ( int i = 0 ; i < n ; i ++ ) cin >> x1 >> y1 >> x2 >> y2 ; maxmum = max ( maxmum , max ( x2 , x1 ) ) ; minmum = max ( minmum , max ( y2 , y1 ) ) ; p = min ( p , min ( y2 , y1 ) ) ; q = min ( q , min ( x2 , x1 ) ) ; sum += fabs ( x2 - x1 ) * fabs ( y2 - y1 ) ; if ( sum == ( ( minmum - p ) * ( maxmum - q ) ) && ( maxmum - q ) == ( minmum - p ) ) } cout << \" YES \" << endl ; else cout << \" NO\\n \" ; int i , n , x1 , x2 , y1 , y2 , mx = 99999 , my = 99999 , Mx = - 1 , My = - 1 , R = 0 ; return 0; }"}}
{"translation": {"en": "read n [ENDL] for = 0 to less than n do the following [ENDL] read x1 , y1 , x2 , y2 [ENDL] R equals R plus ( x2 - x1 ) * ( y2 - y1 ) [ENDL] if Mx is less than x2 then do the following Mx = x2 [ENDL] if My is less than y2 then do the following My = y2 [ENDL] if mx is greater than x1 then do the following mx = x1 [ENDL] if my is greater than y1 then do the following my = y1 [ENDL] if is R and Mx - mx equals My - my then do the following [ENDL] output YES [ENDL] else [ENDL] output NO [ENDL] n = integer", "c++": "int main() { cin >> n ; for ( i = 0 ; i < n ; i ++ ) cin >> x1 >> y1 >> x2 >> y2 ; R += ( x2 - x1 ) * ( y2 - y1 ) ; if ( Mx < x2 ) Mx = x2 ; if ( My < y2 ) My = y2 ; if ( mx > x1 ) mx = x1 ; if ( my > y1 ) my = y1 ; if ( ( Mx - mx ) * ( My - my ) == R && Mx - mx == My - my ) } cout << \" YES \" << endl ; else cout << \" NO \" << endl ; int n ; return 0; }"}}
{"translation": {"en": "S = integer array of size 10 [ENDL] while read n [ENDL] set all contents of S to 0 [ENDL] maxx , maxy = integers with maxx = 0 , maxy = 0 [ENDL] minx , miny = integers with minx = 10000000 , miny = 10000000 [ENDL] C = integer with C = 0 [ENDL] x1 , x2 , y1 , y2 = integers [ENDL] for i = 1 to n [ENDL] read x1 , x2 , y1 , y2 [ENDL] S [ i ] = ( x2 - x1 ) * ( y2 - y1 ) [ENDL] C = C + S [ i ] [ENDL] if x1 < minx , minx = x1 [ENDL] if x2 > maxx , maxx = x2 [ENDL] if y1 < miny , miny = y1 [ENDL] if y2 > maxy , maxy = y2 [ENDL] if C is ( maxx - minx ) * ( maxy - miny ) and ( maxx - minx ) is ( maxy - miny ) [ENDL] print YES [ENDL] else [ENDL] print NO [ENDL] change output format flag to ios : : fixed", "c++": "int main() { int S [ 10 ] ; while ( cin >> n ) memset ( S , 0 , sizeof ( S ) ) ; int maxx = 0 , maxy = 0 ; int minx = 10000000 , miny = 10000000 ; int C = 0 ; int x1 , x2 , y1 , y2 ; for ( int i = 1 ; i <= n ; ++ i ) cin >> x1 >> y1 >> x2 >> y2 ; S [ i ] = ( x2 - x1 ) * ( y2 - y1 ) ; C += S [ i ] ; if ( x1 < minx ) minx = x1 ; if ( x2 > maxx ) maxx = x2 ; if ( y1 < miny ) miny = y1 ; if ( y2 > maxy ) maxy = y2 ; if ( C == ( maxx - minx ) * ( maxy - miny ) && ( maxx - minx ) == ( maxy - miny ) ) } cout << \" YES \" << endl ; else cout << \" NO \" << endl ; cout . setf ( ios :: fixed ) ; } return 0; }"}}
{"translation": {"en": "change output precision to 20 [ENDL] declare ints n , x1 , y1 , x2 and y2 [ENDL] declare int variables xl and yl = 2139062143 and xr and yr = - 2139062143 [ENDL] read input to n [ENDL] declare long long area = 0 [ENDL] loop , decrementing n , while it is not 0 [ENDL] read x1 , y1 , x2 and y2 [ENDL] set xl to min of xl and x1 [ENDL] change xr to xr if xr > x2 , else to x2 [ENDL] set yl to min of yl and y1 [ENDL] change yr to yr if yr > y2 , else to y2 [ENDL] add 1LL * ( x2 - x1 ) * ( y2 - y1 ) to area [ENDL] if xr - xl = yr - yl and area = 1LL * ( xr - xl ) * ( yr - yl ) [ENDL] print \" YES \" to stdout [ENDL] else [ENDL] print \" NO \" to stdout [ENDL] let n be a integer", "c++": "int main() { cout . precision ( 20 ) ; int n , x1 , y1 , x2 , y2 ; int xl = 2139062143 , xr = - 2139062143 , yl = 2139062143 , yr = - 2139062143 ; cin >> n ; long long area = 0 ; while ( n -- ) cin >> x1 >> y1 >> x2 >> y2 ; xl = min ( xl , x1 ) ; xr = ( xr > x2 ? xr : x2 ) ; yl = min ( yl , y1 ) ; yr = ( yr > y2 ? yr : y2 ) ; area += 1LL * ( x2 - x1 ) * ( y2 - y1 ) ; if ( xr - xl == yr - yl && area == 1LL * ( xr - xl ) * ( yr - yl ) ) } puts ( \" YES \" ) ; else puts ( \" NO \" ) ; int n ; return 0; }"}}
{"translation": {"en": "read n [ENDL] create ints x0 , y0 , x1 , y1 , a with a = 0 [ENDL] set x0 and y0 to 1e9 + 87 [ENDL] assign - 9e8 to y1 and x1 [ENDL] for n iterations [ENDL] create integers l , b , r , u [ENDL] read l , b , r and u [ENDL] add a to ( r - l ) * ( u - b ) and assign the result to a [ENDL] set x0 to min ( x0 , l ) [ENDL] assign the greater of x1 and r to x1 [ENDL] set y0 to min ( y0 , b ) [ENDL] set y1 to max of y1 and u [ENDL] x1 = x1 - x0 [ENDL] set y1 to y1 - y0 [ENDL] print ( x1 = = y1 & & x1 * y1 = = a ? \" YES \\ n \" : \" NO \\ n \" ) [ENDL] mn , mn2 = integers with mn = 50000 , mn2 = mn", "c++": "int main() { cin >> n ; int x0 , y0 , x1 , y1 , a = 0 ; x0 = y0 = 1e9 + 87 ; x1 = y1 = - 9e8 ; for ( int i = 0 ; i < n ; ++ i ) int l , b , r , u ; cin >> l >> b >> r >> u ; a += ( r - l ) * ( u - b ) ; x0 = min ( x0 , l ) ; x1 = max ( x1 , r ) ; y0 = min ( y0 , b ) ; y1 = max ( y1 , u ) ; x1 -= x0 ; } y1 -= y0 ; cout << ( x1 == y1 && x1 * y1 == a ? \" YES\\n \" : \" NO\\n \" ) ; int mn = 50000 , mn2 = mn ; }"}}
{"translation": {"en": "N , mx , mx2 , Ar = integers with mx = - 1 , mx2 = mx , Ar = 0 [ENDL] read N [ENDL] for i = 1 to N [ENDL] a , b , x , y = integers [ENDL] read a , b , x , y [ENDL] Ar = Ar + ( x - a ) * ( y - b ) [ENDL] mn = min of mn and min ( a , x ) [ENDL] mn2 = min of mn2 and min ( b , y ) [ENDL] mx = max of mx and max ( a , x ) [ENDL] mx2 = max of mx2 and max ( b , y ) [ENDL] if ( mx - mn is mx2 - mn2 and Ar is ( mx - mn ) * ( mx2 - mn2 ) ) [ENDL] print YES [ENDL] else [ENDL] print NO [ENDL] create long long n", "c++": "int main() { int N , mx = - 1 , mx2 = mx , Ar = 0 ; cin >> N ; for ( int i = 1 ; i <= N ; ++ i ) int a , b , x , y ; cin >> a >> b >> x >> y ; Ar += ( x - a ) * ( y - b ) ; mn = min ( mn , min ( a , x ) ) ; mn2 = min ( mn2 , min ( b , y ) ) ; mx = max ( mx , max ( a , x ) ) ; mx2 = max ( mx2 , max ( b , y ) ) ; if ( mx - mn == mx2 - mn2 && Ar == ( mx - mn ) * ( mx2 - mn2 ) ) } cout << \" YES\\n \" ; else cout << \" NO\\n \" ; long long n ; return 0; }"}}
{"translation": {"en": "read n [ENDL] while n % 3 is 0 , set n to n / 3 [ENDL] print n / 3 + 1 print newline [ENDL] create unsigned long long n , t , coi with coi = 1", "c++": "int main() { cin >> n ; while ( n % 3 == 0 ) n /= 3 ; cout << n / 3 + 1 << endl ; unsigned long long n , t , coi = 1 ; return 0; }"}}
{"translation": {"en": "read n [ENDL] while n % 3 is 0 , set n to n / 3 [ENDL] print ( n - 1 ) / 3 + 1 print ' \\ n ' [ENDL] n , ans = long long with ans = 0", "c++": "int main() { cin >> n ; while ( n % 3 == 0 ) n /= 3 ; cout << ( n - 1 ) / 3 + 1 << ' \\n ' ; long long n , ans = 0 ; }"}}
{"translation": {"en": "read n [ENDL] while n modulo 3 is 0 , n = n / 3 [ENDL] ans = n / 3 + 1 [ENDL] print ans [ENDL] in function cil taking two long longs x and y and returning a long long", "c++": "cin >> n ; int main() { while ( n % 3 == 0 ) n /= 3 ; ans = n / 3 + 1 ; cout << ans << endl ; long long cil ( long long x , long long y ) return 0; }"}}
{"translation": {"en": "if x is a multiple if y [ENDL] return x / y [ENDL] else [ENDL] return x / y + 1 [ENDL] n , i , j = long long with j = 0 [ENDL] read n [ENDL] set i to n [ENDL] loop while n is a multiple of 3 and greater than 0 [ENDL] increment j [ENDL] set n to n / 3 [ENDL] l = long long with l = pow of 3 and j + 1 [ENDL] print cil of i and l [ENDL] let n be a long integer", "c++": "if ( x % y == 0 ) return x / y ; else return x / y + 1 ; long long n , i , j = 0 ; } int main() { cin >> n ; i = n ; while ( n % 3 == 0 && n > 0 ) j ++ ; n /= 3 ; long long l = pow ( 3 , j + 1 ) ; } cout << cil ( i , l ) << endl ; long long n ; }"}}
{"translation": {"en": "read n [ENDL] let sum , x be long integers with x = 3 [ENDL] while n modulo x is equal to 0 , x is equal to x * 3 [ENDL] n / x + 1 is assigned to sum [ENDL] print sum and newline [ENDL] define integers i , j , k , and n", "c++": "int main() { cin >> n ; long long sum , x = 3 ; while ( n % x == 0 ) { x *= 3 ; } sum = n / x + 1 ; cout << sum << endl ; long long i , j , k , n ; return 0; }"}}
{"translation": {"en": "read n [ENDL] define j and set to 3 ; for i from 1 to 35 , set j to itself * 3 [ENDL] if n modulo j isn ' t 0 , then break out [ENDL] print n / j + 1 and a newline [ENDL] create FILE pointer stream", "c++": "int main() { cin >> n ; for ( i = 1 , j = 3 ; i <= 35 ; i ++ , j *= 3 ) if ( n % j != 0 ) break ; cout << ( n / j ) + 1 << endl ; } FILE * stream ; }"}}
{"translation": {"en": "create long long n [ENDL] read n [ENDL] create long long x with x = 1 [ENDL] while n % x is 0 , set x to x * 3 [ENDL] print ( n / x ) + 1 print newline [ENDL] n = integer", "c++": "long long n ; int main() { cin >> n ; long long x = 1 ; while ( n % x == 0 ) { x *= 3 ; } cout << ( n / x ) + 1 << endl ; long long n ; }"}}
{"translation": {"en": "while reading values n [ENDL] while n modulo 3 is 0 , then set n to n / 3 [ENDL] print n / 3 + 1 and a new line [ENDL] set first 4 elements of dx to 0 , 0 , - 1 , 1", "c++": "int main() { while ( cin >> n ) while ( n % 3 == 0 ) n /= 3 ; cout << n / 3 + 1 << endl ; int dx [ 4 ] = { 0 , 0 , - 1 , 1 } ; } return 0; }"}}
{"translation": {"en": "assign 1 , - 1 , 0 , 0 to first 4 elements of dy [ENDL] create long long int n [ENDL] read n [ENDL] set x and ans to 1 [ENDL] while x less than n [ENDL] if n mod x different from 0 , set ans = max of ans and n / x + 1 [ENDL] set x = x * 3 [ENDL] print ans and a newline [ENDL] create long long n", "c++": "int dy [ 4 ] = { 1 , - 1 , 0 , 0 } ; long long int n ; int main() { cin >> n ; long long int x = 1 , ans = 1 ; while ( x < n ) if ( n % x != 0 ) ans = max ( ans , n / x + 1 ) ; x = x * 3 ; cout << ans << ' \\n ' ; } long long n ; }"}}
{"translation": {"en": "read n and loop further [ENDL] declare long long a [ENDL] declare long long t = 3 [ENDL] while n % t = 0 , multiply t by 3 [ENDL] print n / t + 1 [ENDL] create long longs n and a", "c++": "int main() { while ( cin >> n ) long long a ; long long t = 3 ; while ( ! ( n % t ) ) t *= 3 ; cout << n / t + 1 << endl ; long long n , a ; } return 0; }"}}
{"translation": {"en": "read n and keep looping [ENDL] set a to 3 [ENDL] while n modulo a is 0 [ENDL] print n / a + 1 [ENDL] cil is a long long function with long long arguments x and y", "c++": "int main() { while ( cin >> n ) a = 3 ; while ( n % a == 0 ) a *= 3 ; cout << n / a + 1 << endl ; long long cil ( long long x , long long y ) } return 0; }"}}
{"translation": {"en": "if x % y is equal to 0 [ENDL] return x / y [ENDL] else [ENDL] return x / y + 1 [ENDL] declare long long variables n , i and j with j = 0 [ENDL] read input to n [ENDL] change i to n [ENDL] while n % 3 is 0 and n > 0 [ENDL] increment j [ENDL] divide n by 3 [ENDL] create long long l = 3 raised to power j + 1 [ENDL] print cil ( i , l ) [ENDL] create long longs n , m , i , j , k", "c++": "if ( x % y == 0 ) return x / y ; else return x / y + 1 ; long long n , i , j = 0 ; } int main() { cin >> n ; i = n ; while ( n % 3 == 0 && n > 0 ) j ++ ; n /= 3 ; long long l = pow ( 3 , j + 1 ) ; } cout << cil ( i , l ) << endl ; long long n , m , i , j , k ; }"}}
{"translation": {"en": "read n [ENDL] set k to 3 [ENDL] while 1 is true [ENDL] if n % k is not 0 [ENDL] set m to ( n / k ) + 1 [ENDL] break loop [ENDL] set value of k to 3 [ENDL] print m print newline [ENDL] declare const int maxn = 100001", "c++": "int main() { cin >> n ; k = 3 ; while ( 1 ) if ( n % k != 0 ) m = ( n / k ) + 1 ; break ; k *= 3 ; } cout << m << endl ; } const int maxn = 100001 ; }"}}
{"translation": {"en": "declare long long n [ENDL] read n [ENDL] while n modulo 3 = 0 , divide n by 3 [ENDL] print n / 3 + 1 [ENDL] in function power_of_two taking int n and returning bool", "c++": "long long n ; cin >> n ; int main() { while ( n % 3 == 0 ) n /= 3 ; cout << n / 3 + 1 << endl ; bool power_of_two ( int n ) }"}}
{"translation": {"en": "m = int [ENDL] set m to n - 1 [ENDL] if not n bitwise - and m [ENDL] return true [ENDL] else [ENDL] return false [ENDL] n , m , a , mn = int with mn = 10000 [ENDL] read n then m [ENDL] v = int vector [ENDL] for i = 0 to m [ENDL] read a [ENDL] append a to v [ENDL] sort v [ENDL] for i = n - 1 to m set mn to min of mn and v [ i ] - v [ i - n + 1 ] [ENDL] print mn [ENDL] let integers n , m , i , and ans = INT_MAX and int array a of size 1000", "c++": "int m ; m = n - 1 ; if ( ! n & m ) return true ; else return false ; int n , m , a , mn = 10000 ; } int main() { cin >> n >> m ; vector < int > v ; for ( int i = 0 ; i < m ; i ++ ) cin >> a ; v . push_back ( a ) ; sort ( v . begin ( ) , v . end ( ) ) ; } for ( int i = n - 1 ; i < m ; i ++ ) { mn = min ( mn , v [ i ] - v [ i - n + 1 ] ) ; } cout << mn << endl ; int n , m , a [ 1000 ] , i , ans = INT_MAX ; }"}}
{"translation": {"en": "read n and m [ENDL] for i = 0 to m exclusive , read a [ i ] [ENDL] sort array a [ENDL] for i = 0 to m - n , set ans to the min of ans and a [ i + n - 1 ] - a [ i ] [ENDL] print ans [ENDL] let n , m , and f with 1000 indices be int", "c++": "int main() { cin >> n >> m ; for ( i = 0 ; i < m ; i ++ ) cin >> a [ i ] ; sort ( a , a + m ) ; for ( i = 0 ; i <= m - n ; i ++ ) ans = min ( ans , a [ i + n - 1 ] - a [ i ] ) ; cout << ans << endl ; int n , m , f [ 1000 ] ; }"}}
{"translation": {"en": "read n and m [ENDL] read f of i i times from 0 to m exclusive [ENDL] sort f and f plus m [ENDL] let least be f [ n - 1 ] - f [ 0 ] [ENDL] for i from to 1 m - n inclusive [ENDL] if f [ i + n - 1 ] - f [ i ] < least set least to least = f [ i + n - 1 ] - f [ i ] [ENDL] print least [ENDL] create integers array dx initialized with 1 , 0 , - 1 , 0 , 1 , 1 , - 1 , - 1", "c++": "int main() { cin >> n >> m ; for ( int i = 0 ; i < m ; ++ i ) { cin >> f [ i ] ; } sort ( f , f + m ) ; int least = f [ n - 1 ] - f [ 0 ] ; for ( int i = 1 ; i <= m - n ; ++ i ) if ( f [ i + n - 1 ] - f [ i ] < least ) { least = f [ i + n - 1 ] - f [ i ] ; } cout << least << endl ; } int dx [ ] = { 1 , 0 , - 1 , 0 , 1 , 1 , - 1 , - 1 } ; return 0; }"}}
{"translation": {"en": "create integers array dy initialized with 0 , 1 , 0 , - 1 , 1 , - 1 , 1 , - 1 [ENDL] in the function fast [ENDL] declare const long long md = 1e9 + 7 [ENDL] call fast ( ) [ENDL] create long longs n and m [ENDL] read n and m [ENDL] declare an array of long longs a with m + 5 elements [ENDL] read a from the input m times [ENDL] sort first m elements of a [ENDL] declare long long variable ans = LLONG_MAX [ENDL] for i from 0 to m - n inclusive , change ans to min of ans and a [ i + ( n - 1 ) ] - a [ i ] [ENDL] print ans [ENDL] n , m = integers", "c++": "int dy [ ] = { 0 , 1 , 0 , - 1 , 1 , - 1 , 1 , - 1 } ; void fast ( ) { } const long long md = 1e9 + 7 ; fast ( ) ; int main() { long long n , m ; cin >> n >> m ; long long a [ m + 5 ] ; for ( int i = 0 ; i < m ; i ++ ) cin >> a [ i ] ; sort ( a , a + m ) ; long long ans = LLONG_MAX ; for ( int i = 0 ; i <= m - n ; i ++ ) { ans = min ( ans , a [ i + ( n - 1 ) ] - a [ i ] ) ; } cout << ans << endl ; int n , m ; return 0; }"}}
{"translation": {"en": "read n , m [ENDL] arr = integer array of size 100000 [ENDL] for i = 0 to m exclusive , read arr [ i ] [ENDL] sort arr and arr + m [ENDL] mindiff = integer with mindiff = INT_MAX [ENDL] for i = 0 to m - ( n - 1 ) exclusive [ENDL] diff = integer with diff = arr [ i + n - 1 ] - arr [ i ] [ENDL] if diff < mindiff , mindiff = diff [ENDL] print mindiff [ENDL] create new variables n , m , i , j , total , val , diff and mini be ints with total = 0 and mini = 10000", "c++": "int main() { cin >> n >> m ; int arr [ 100000 ] ; for ( int i = 0 ; i < m ; ++ i ) { cin >> arr [ i ] ; } sort ( arr , arr + m ) ; int mindiff = INT_MAX ; for ( int i = 0 ; i < m - ( n - 1 ) ; i ++ ) int diff = arr [ i + n - 1 ] - arr [ i ] ; if ( diff < mindiff ) { mindiff = diff ; } cout << mindiff << endl ; } int n , m , i , j , total = 0 , val , diff , mini = 10000 ; return 0; }"}}
{"translation": {"en": "declare new vector of integers called v [ENDL] read variables n and m from the input [ENDL] for i = 0 to m exclusive [ENDL] read val [ENDL] push val to the end of v [ENDL] sort v [ENDL] start for loop from i = 0 to m - n inclusive incrementing i [ENDL] change val to abs ( v [ i ] - v [ i + n - 1 ] ) [ENDL] change mini to min of mini and val [ENDL] print mini [ENDL] create integers n and m , and an array of integers f with size 1000", "c++": "int main() { vector < int > v ; cin >> n >> m ; for ( i = 0 ; i < m ; i ++ ) cin >> val ; v . push_back ( val ) ; sort ( v . begin ( ) , v . end ( ) ) ; } for ( i = 0 ; i <= m - n ; i ++ ) val = abs ( v [ i ] - v [ i + n - 1 ] ) ; mini = min ( mini , val ) ; cout << mini << endl ; } int n , m , f [ 1000 ] ; }"}}
{"translation": {"en": "read input to n and m [ENDL] for integer i = 0 to m exclusive , read input to f [ i ] [ENDL] sort m elements of f [ENDL] create integer least = f [ n - 1 ] - f [ 0 ] [ENDL] for i from 1 to m - n inclusive [ENDL] if f [ i + n - 1 ] - f [ i ] is less than least , assign f [ i + n - 1 ] - f [ i ] to least [ENDL] print least [ENDL] let n , m , mn be integers wtih mn = 1005 and a be an integer array of size 60", "c++": "int main() { cin >> n >> m ; for ( int i = 0 ; i < m ; ++ i ) { cin >> f [ i ] ; } sort ( f , f + m ) ; int least = f [ n - 1 ] - f [ 0 ] ; for ( int i = 1 ; i <= m - n ; ++ i ) if ( f [ i + n - 1 ] - f [ i ] < least ) { least = f [ i + n - 1 ] - f [ i ] ; } cout << least << endl ; } int n , m , a [ 60 ] , mn = 1005 ; return 0; }"}}
{"translation": {"en": "input n [ENDL] input m [ENDL] input m number of items into a [ENDL] call sort with parameters a , a + m [ENDL] for i = 0 to m - n [ENDL] set integer d to a [ i + n - 1 ] - a [ i ] [ENDL] if d < mn set mn = d [ENDL] print mn [ENDL] declare x , y as integers", "c++": "int main() { cin >> n ; cin >> m ; for ( int i = 0 ; i < m ; i ++ ) { cin >> a [ i ] ; } sort ( a , a + m ) ; for ( int i = 0 ; i < m - n + 1 ; i ++ ) int d = a [ i + n - 1 ] - a [ i ] ; if ( d < mn ) mn = d ; cout << mn << endl ; } int x , y ; return 0; }"}}
{"translation": {"en": "read x , y [ENDL] declare integer array m size y [ENDL] declare integer array arr size y [ENDL] for i = 0 to y exclusive , read arr [ i ] [ENDL] sort elements from arr to arr + y [ENDL] declare integer k with k = 0 [ENDL] for i = 0 to y - x + 1 exclusive [ENDL] let m [ k ] be arr [ x - 1 + i ] - arr [ i ] [ENDL] increment k [ENDL] let integer min be 99999 [ENDL] for j = 0 to k exclusive [ENDL] if min is greater than m [ j ] , let min be m [ j ] [ENDL] print min , newline [ENDL] let i , a , b , j , s , c , d be integers with c = array of integers of length 1000 , d = array of integers of length 1000", "c++": "int main() { cin >> x >> y ; int m [ y ] ; int arr [ y ] ; for ( int i = 0 ; i < y ; i ++ ) { cin >> arr [ i ] ; } sort ( arr , arr + y ) ; int k = 0 ; for ( int i = 0 ; i < y - x + 1 ; i ++ ) m [ k ] = arr [ x - 1 + i ] - arr [ i ] ; k ++ ; int min = 99999 ; } for ( int j = 0 ; j < k ; j ++ ) if ( min > m [ j ] ) min = m [ j ] ; cout << min << endl ; } int i , a , b , j , s , c [ 1000 ] , d [ 1000 ] ; return 0; }"}}
{"translation": {"en": "read a , b [ENDL] for i = 0 to b exclusive , read c [ i ] [ENDL] sort the values c and c + b [ENDL] for i = 0 , j = 0 , i is less than b - a + 1 , increment i , j by 1 , d [ j ] is equal to c [ i + a - 1 ] - c [ i ] [ENDL] sort the values d , d + b - a + 1 [ENDL] print d [ 0 ] and newline [ENDL] create int array A of size 1000100", "c++": "int main() { cin >> a >> b ; for ( i = 0 ; i < b ; i ++ ) { cin >> c [ i ] ; } sort ( c , c + b ) ; for ( i = 0 , j = 0 ; i < b - a + 1 ; i ++ , j ++ ) { d [ j ] = c [ i + a - 1 ] - c [ i ] ; } sort ( d , d + b - a + 1 ) ; cout << d [ 0 ] << endl ; int A [ 100010 ] ; }"}}
{"translation": {"en": "let ints n and m [ENDL] read n and m [ENDL] for i = 0 to m exclusive , read A [ i ] [ENDL] sort A [ENDL] create ints high = n - 1 and low = 0 [ENDL] let int mini = A [ high ] - A [ low ] [ENDL] while high is less than m [ENDL] increment low [ENDL] increment high [ENDL] if high is less than m , set mini to the min of mini and A [ high ] - A [ low ] [ENDL] print mini [ENDL] create ints num and buy", "c++": "int n , m ; int main() { cin >> n >> m ; for ( int i = 0 ; i < m ; i ++ ) cin >> A [ i ] ; sort ( A , A + m ) ; int high = n - 1 , low = 0 ; int mini = A [ high ] - A [ low ] ; while ( high < m ) low ++ ; high ++ ; if ( high < m ) mini = min ( mini , A [ high ] - A [ low ] ) ; cout << mini << ' \\n ' ; } int num , buy ; }"}}
{"translation": {"en": "create int vector v [ENDL] read num and buy [ENDL] for i = 0 to buy exclusive [ENDL] let int x [ENDL] read x [ENDL] append x to vector v [ENDL] sort vector v [ENDL] let ints max = 0 , min = 0 , and differ = 1000000 [ENDL] for i = 0 to size of v exclusive [ENDL] if i + num is greater than the size of v [ENDL] break loop [ENDL] otherwise do [ENDL] set min to the min value in v [ENDL] set max to the max value in v [ENDL] if v . at ( max ) - v . at ( min ) is less than differ , set differ to v . at ( max ) - v . at ( min ) [ENDL] for i = 0 to size of v exclusive [ENDL] let int total = count ( v . begin ( ) , v . end ( ) , v . at ( i ) ) ; [ENDL] if total is greater than or equal to num [ENDL] set differ to 0 [ENDL] break loop [ENDL] print differ [ENDL] let n , m be integers", "c++": "int main() { vector < int > v ; cin >> num >> buy ; for ( int i = 0 ; i < buy ; i ++ ) int x ; cin >> x ; v . push_back ( x ) ; sort ( v . begin ( ) , v . end ( ) ) ; } int max = 0 , min = 0 , differ = 1000000 ; for ( int i = 0 ; i < v . size ( ) ; i ++ ) if ( ( i + num ) > v . size ( ) ) break ; else min = min_element ( v . begin ( ) + i , v . begin ( ) + ( i + num ) ) - v . begin ( ) ; max = max_element ( v . begin ( ) + i , v . begin ( ) + ( i + num ) ) - v . begin ( ) ; if ( ( v . at ( max ) - v . at ( min ) ) < differ ) { differ = v . at ( max ) - v . at ( min ) ; } for ( int i = 0 ; i < v . size ( ) ; i ++ ) } } int total = count ( v . begin ( ) , v . end ( ) , v . at ( i ) ) ; if ( total >= num ) differ = 0 ; break ; cout << differ << endl ; } } int n , m ; }"}}
{"translation": {"en": "read n and m [ENDL] a = array of integers of length m [ENDL] for i = 0 to m exclusive , read a [ i ] [ENDL] sort the values a and a + m [ENDL] let min be a integer with min = 1000000 [ENDL] for i = 0 to m - n + 1 exclusive [ENDL] if a [ i + n - 1 ] - a [ i ] is less than min , the value of min is equal to a [ i + n - 1 ] - a [ i ] [ENDL] if min is equal to 1000000 [ENDL] print 0 and newline [ENDL] else do the following [ENDL] print min and newline [ENDL] set precision to 10", "c++": "int main() { cin >> n >> m ; int a [ m ] ; for ( int i = 0 ; i < m ; i ++ ) cin >> a [ i ] ; sort ( a , a + m ) ; int min = 1000000 ; for ( int i = 0 ; i < m - n + 1 ; i ++ ) if ( ( a [ i + n - 1 ] - a [ i ] ) < min ) { min = a [ i + n - 1 ] - a [ i ] ; } if ( min == 1000000 ) } cout << \" 0\\n \" ; else cout << min << \" \\n \" ; cout . precision ( 10 ) ; }"}}
{"translation": {"en": "print fixed [ENDL] n , m = integers [ENDL] read n , m [ENDL] v = vector of integer with v = m [ENDL] for i = 0 to m exclusive , print v [ i ] [ENDL] sort v . begin ( ) and v . end ( ) [ENDL] diff = vector of integer [ENDL] for i = 0 to m - n + 1 exclusive , append ( abs ( v [ i ] - v [ n + i - 1 ] ) ) in diff [ENDL] print pointer min_element ( diff . begin ( ) , diff . end ( ) ) [ENDL] declare int variables n and m", "c++": "int main() { cout << fixed ; int n , m ; cin >> n >> m ; vector < int > v ( m ) ; for ( int i = 0 ; i < m ; i ++ ) cin >> v [ i ] ; sort ( v . begin ( ) , v . end ( ) ) ; vector < int > diff ; for ( int i = 0 ; i < m - n + 1 ; i ++ ) { diff . push_back ( abs ( v [ i ] - v [ n + i - 1 ] ) ) ; } cout << * min_element ( diff . begin ( ) , diff . end ( ) ) << endl ; int n , m ; }"}}
{"translation": {"en": "read n and m from the input [ENDL] arr is a new array ofintegers with m elements [ENDL] in the for loop , change i from 0 to m exclusive , reading variable arr [ i ] from the input [ENDL] sort arr from index 0 to m exclusive [ENDL] declare integer mn = 1e9 [ENDL] for i = 0 to m - n inclusive , change mn to min of mn and arr [ i + n - 1 ] - arr [ i ] [ENDL] print mn to the standard output [ENDL] numbuy = int", "c++": "int main() { cin >> n >> m ; int arr [ m ] ; for ( int i = 0 ; i < m ; ++ i ) cin >> arr [ i ] ; sort ( arr , arr + m ) ; int mn = 1e9 ; for ( int i = 0 ; i <= m - n ; ++ i ) mn = min ( mn , arr [ i + n - 1 ] - arr [ i ] ) ; cout << mn << endl ; int num , buy ; }"}}
{"translation": {"en": "v = vector of int [ENDL] read num , buy [ENDL] for i = 0 to buy exclusive [ENDL] x = int [ENDL] read x [ENDL] add x at end of v [ENDL] sort v [ENDL] max , min = 0 , differ = 1000000 [ENDL] for i = 0 to size of v exclusive [ENDL] if i + num > size of v [ENDL] break [ENDL] else [ENDL] min = min_element ( first item of v + i , first item of v + i + num ) - first item of v [ENDL] max = max_element ( first item of v + i , first item of v + i + num ) - first item of v [ENDL] if pos of max in v - pos of min in v < differ differ = pos of max in v - pos of min in v [ENDL] for i = 0 to size of v exclusive [ENDL] total = count ( occurrences of i in v ) [ENDL] if total > = num [ENDL] differ = 0 [ENDL] break [ENDL] print differ [ENDL] declare integers n , m", "c++": "int main() { vector < int > v ; cin >> num >> buy ; for ( int i = 0 ; i < buy ; i ++ ) int x ; cin >> x ; v . push_back ( x ) ; sort ( v . begin ( ) , v . end ( ) ) ; } int max = 0 , min = 0 , differ = 1000000 ; for ( int i = 0 ; i < v . size ( ) ; i ++ ) if ( ( i + num ) > v . size ( ) ) break ; else min = min_element ( v . begin ( ) + i , v . begin ( ) + ( i + num ) ) - v . begin ( ) ; max = max_element ( v . begin ( ) + i , v . begin ( ) + ( i + num ) ) - v . begin ( ) ; if ( ( v . at ( max ) - v . at ( min ) ) < differ ) { differ = v . at ( max ) - v . at ( min ) ; } for ( int i = 0 ; i < v . size ( ) ; i ++ ) } } int total = count ( v . begin ( ) , v . end ( ) , v . at ( i ) ) ; if ( total >= num ) differ = 0 ; break ; cout << differ << endl ; } } int n , m ; }"}}
{"translation": {"en": "read n , m [ENDL] declare integer array a size m [ENDL] for i = 0 to m exclusive , read a [ i ] [ENDL] sort from a to a + m [ENDL] declare integers i = 0 , j = n - 1 [ENDL] declare psum = a [ j ] - a [ i ] as integer [ENDL] while j is less than m [ENDL] declare sum = a [ j ] - a [ i ] as integer [ENDL] if sum is less than or equal to psum , let psum = sum [ENDL] increment i [ENDL] increment j [ENDL] print psum , \" \\ n \" [ENDL] noOfStudents , noOfprizes , minimum = int with minimum = 100000", "c++": "int main() { cin >> n >> m ; int a [ m ] ; for ( int i = 0 ; i < m ; i ++ ) { cin >> a [ i ] ; } sort ( a , a + m ) ; int i = 0 , j = n - 1 ; int psum = a [ j ] - a [ i ] ; while ( j < m ) int sum = a [ j ] - a [ i ] ; if ( sum <= psum ) psum = sum ; i ++ ; j ++ ; cout << psum << \" \\n \" ; } int noOfStudents , noOfprizes , minimum = 100000 ; }"}}
{"translation": {"en": "read noOfStudents then noOfprizes [ENDL] a = int array of size noOfprizes [ENDL] read noOfprizes values into a [ENDL] sort a [ENDL] for i = 0 to noOfprizes - noOfStudents + 1 set minimum to min of a [ i + noOfStudents - 1 ] - a [ i ] , minimum [ENDL] print minimum [ENDL] create long long ans = 1000000", "c++": "int main() { cin >> noOfStudents >> noOfprizes ; int a [ noOfprizes ] ; for ( int i = 0 ; i < noOfprizes ; i ++ ) { cin >> a [ i ] ; } sort ( a , a + noOfprizes ) ; for ( int i = 0 ; i + noOfStudents - 1 < noOfprizes ; i ++ ) { minimum = min ( a [ i + noOfStudents - 1 ] - a [ i ] , minimum ) ; } cout << minimum << endl ; long long ans = 1000000 ; return 0; }"}}
{"translation": {"en": "declare long long int variables n and m [ENDL] read input to n and m [ENDL] declare long long int array a with m + 2 elements [ENDL] for integer i = 0 to m exclusive , read a [ i ] [ENDL] sort m elements of a [ENDL] declare long long int k = m - n [ENDL] for i from 0 to k inclusive , assign min of ans and a [ i + ( n - 1 ) ] - a [ i ] to ans [ENDL] print ans [ENDL] n , m = int", "c++": "long long int n , m ; int main() { cin >> n >> m ; long long int a [ m + 2 ] ; for ( int i = 0 ; i < m ; i ++ ) cin >> a [ i ] ; sort ( a , a + m ) ; long long int k = m - n ; for ( int i = 0 ; i <= k ; i ++ ) { ans = min ( ans , a [ i + ( n - 1 ) ] - a [ i ] ) ; } cout << ans << endl ; int n , m ; return 0; }"}}
{"translation": {"en": "while read n , m [ENDL] a = array of 55 int [ENDL] for i = 0 to m exclusive read a [ i ] [ENDL] sort first m items of a [ENDL] min2 = 999999999 , t = int [ENDL] for i = n - 1 to m exclusive [ENDL] t = a [ i ] - a [ i - n + 1 ] [ENDL] if min2 > t min2 = t [ENDL] print min2 [ENDL] create long longs n , m", "c++": "int main() { while ( cin >> n >> m ) int a [ 55 ] ; for ( int i = 0 ; i < m ; i ++ ) cin >> a [ i ] ; sort ( a , a + m ) ; int min2 = 999999999 , t ; for ( int i = n - 1 ; i < m ; i ++ ) t = a [ i ] - a [ i - n + 1 ] ; if ( min2 > t ) min2 = t ; cout << min2 << endl ; } long long n , m ; } }"}}
{"translation": {"en": "read n read m [ENDL] create long long vector a initialized with ( m , 0 ) [ENDL] for i = 0 to m exclusive , read a [ i ] [ENDL] sort elements from beginning of a to end of a [ENDL] create long longs l , r [ENDL] set l to r to 0 [ENDL] set r to n - 1 [ENDL] create long long mn with mn = a [ m - 1 ] - a [ 0 ] [ENDL] while r is not m [ENDL] set mn to minimum of ( mn and a [ r ] - a [ l ] ) [ENDL] increment l [ENDL] increment r [ENDL] print mn print newline [ENDL] let n , m be integers", "c++": "int main() { cin >> n >> m ; vector < long long > a ( m , 0 ) ; for ( long long i = 0 ; i < m ; i ++ ) { cin >> a [ i ] ; } sort ( a . begin ( ) , a . end ( ) ) ; long long l , r ; l = r = 0 ; r = n - 1 ; long long mn = a [ m - 1 ] - a [ 0 ] ; while ( r != m ) mn = min ( mn , a [ r ] - a [ l ] ) ; l ++ ; r ++ ; cout << mn << endl ; } int n , m ; return 0; }"}}
{"translation": {"en": "read n and m [ENDL] arr = vector [ENDL] while m is greater than 0 [ENDL] let i be int [ENDL] read i [ENDL] push_back i onto r [ENDL] decrement m [ENDL] sort with functions arr . begin and arr . end [ENDL] let distance be integer with value 1e9 [ENDL] for i from 0 to arr size minus n + 1 exclusive [ENDL] if arr [ i + n - 1 ] - arr [ i ] < distance then set distance to arr [ i + n - 1 ] - arr [ i ] [ENDL] print distance [ENDL] declare integers k , d and i", "c++": "int main() { cin >> n >> m ; vector < int > arr ; while ( m > 0 ) int i ; cin >> i ; arr . push_back ( i ) ; m -- ; sort ( arr . begin ( ) , arr . end ( ) ) ; } int distance = 1e9 ; for ( int i = 0 ; i < arr . size ( ) - n + 1 ; i ++ ) if ( arr [ i + n - 1 ] - arr [ i ] < distance ) { distance = arr [ i + n - 1 ] - arr [ i ] ; } cout << distance << endl ; } int k , d , i ; return 0; }"}}
{"translation": {"en": "read k and d [ENDL] if d = 0 [ENDL] if k = 1 [ENDL] print 0 and a new line [ENDL] else [ENDL] print \" No solution \\ n \" [ENDL] else [ENDL] print d [ENDL] for i = 1 to k exclusive , print 0 [ENDL] print new line [ENDL] create integers k , d", "c++": "int main() { cin >> k >> d ; if ( d == 0 ) if ( k == 1 ) cout << 0 << endl ; else cout << \" No solution\\n \" ; else } cout << d ; for ( i = 1 ; i < k ; i ++ ) { cout << 0 ; } cout << endl ; int k , d ; } return 0; }"}}
{"translation": {"en": "read k read d [ENDL] if d is 0 and k is greater than 1 [ENDL] print \" No solution \\ n \" [ENDL] print d [ENDL] decrement k [ENDL] while decrement k is true , print 0 [ENDL] print newline [ENDL] k and d = integers", "c++": "int main() { cin >> k >> d ; if ( d == 0 && k > 1 ) cout << \" No solution\\n \" ; cout << d ; return 0; } k -- ; while ( k -- ) cout << 0 ; cout << endl ; int k , d ; }"}}
{"translation": {"en": "read k and d [ENDL] if d = 0 [ENDL] if k = 1 [ENDL] print \" 0 \" and a new line [ENDL] else [ENDL] print \" No solution \" and a new line [ENDL] else [ENDL] print d [ENDL] print \" 0 \" k - 1 times [ENDL] print new line [ENDL] let k be a integer", "c++": "int main() { cin >> k >> d ; if ( d == 0 ) if ( k == 1 ) cout << \" 0 \" << endl ; else cout << \" No solution \" << endl ; else cout << d ; for ( int i = 0 ; i < k - 1 ; ++ i ) { cout << \" 0 \" ; } cout << endl ; int k ; } return 0; }"}}
{"translation": {"en": "let d be a character [ENDL] read the values k and d [ENDL] if ( d is equal to 0 and k is greater than 1 ) [ENDL] print No solution and newline [ENDL] let temp be a string [ENDL] push temp vector to back when element d is given ( temp . push_back ( d ) ) [ENDL] for ( int i is equal to 1 , i is less than k ; increment i value by 1 ) , temp . push_back ( ' 0 ' ) [ENDL] print temp and newline [ENDL] create integers k , d", "c++": "int main() { char d ; cin >> k >> d ; if ( d == ' 0 ' && k > 1 ) cout << \" No solution \" << endl ; string temp ; return 0; } temp . push_back ( d ) ; for ( int i = 1 ; i < k ; i ++ ) temp . push_back ( ' 0 ' ) ; cout << temp << endl ; int k , d ; return 0; }"}}
{"translation": {"en": "read k read d [ENDL] if k is 1 and d is 0 [ENDL] print \" 0 \" print newline [ENDL] else if k is greater than 1 and d is 0 [ENDL] print \" No solution \" print newline [ENDL] else [ENDL] print d [ENDL] for i = 0 to k - 1 exclusive , print \" 0 \" [ENDL] print newline [ENDL] k , d = integers", "c++": "int main() { cin >> k >> d ; if ( k == 1 && d == 0 ) cout << \" 0 \" << endl ; else if ( k > 1 && d == 0 ) cout << \" No solution \" << endl ; else cout << d ; for ( int i = 0 ; i < k - 1 ; i ++ ) { cout << \" 0 \" ; } cout << endl ; int k , d ; } return 0; }"}}
{"translation": {"en": "Read k and d [ENDL] if d is equal to 0 and k is greater than 1 [ENDL] print No solution and a new line [ENDL] else do the following [ENDL] print d [ENDL] for i = 1 to k , exclusive , print 0 [ENDL] print a new line [ENDL] k , d = integers", "c++": "int main() { cin >> k >> d ; if ( d == 0 && k > 1 ) cout << \" No solution \" << endl ; else cout << d ; for ( int i = 1 ; i < k ; i ++ ) cout << 0 ; cout << endl ; int k , d ; } return 0; }"}}
{"translation": {"en": "Read k , d [ENDL] if d is equal to 0 and k is greater than 1 [ENDL] print No solution and a new line [ENDL] print d [ENDL] for j = 1 to k exclusive , print 0 [ENDL] print a new line [ENDL] k , d , i , j = integers", "c++": "int main() { cin >> k >> d ; if ( d == 0 && k > 1 ) cout << \" No solution \" << endl ; cout << d ; return 0; } for ( int i = 1 ; i < k ; i ++ ) { cout << 0 ; } cout << endl ; int k , d , i , j ; }"}}
{"translation": {"en": "Read k and d [ENDL] if d is equal to 0 [ENDL] if k is greater than 1 [ENDL] print No solution and a new line [ENDL] else do the following [ENDL] print 0 and a new line [ENDL] print d [ENDL] for i = 0 to k exclusive , print 0 [ENDL] print a new line [ENDL] k , d = integers", "c++": "int main() { cin >> k >> d ; if ( d == 0 ) if ( k > 1 ) cout << \" No solution \" << endl ; else cout << 0 << endl ; cout << d ; return 0; } for ( i = 1 ; i < k ; i ++ ) cout << 0 ; cout << endl ; int k , d ; }"}}
{"translation": {"en": "read k and d [ENDL] if k is greater than 1 and d is 0 [ENDL] print No solution [ENDL] print d [ENDL] for i = 1 to k exclusive print 0 [ENDL] print new line [ENDL] d = large long", "c++": "int main() { cin >> k >> d ; if ( k > 1 && d == 0 ) cout << \" No solution\\n \" ; cout << d ; return 0; } for ( int i = 1 ; i < k ; i ++ ) { cout << 0 ; } cout << endl ; long long k , d ; }"}}
{"translation": {"en": "read k and d [ENDL] if d = 0 and k > 1 [ENDL] print No Solution [ENDL] else [ENDL] print d [ENDL] increment k [ENDL] while k > - [ENDL] print 0 [ENDL] decrement k [ENDL] print newline [ENDL] declare desperate_optimization with integer precision as argument , returning void", "c++": "int main() { cin >> k >> d ; if ( d == 0 && k > 1 ) cout << \" No solution \" << endl ; else cout << d ; k -- ; while ( k ) cout << 0 ; k -- ; cout << endl ; } void desperate_optimization ( int precision ) } return 0; }"}}
{"translation": {"en": "set cout stream flag ios : : fixed [ENDL] set cout stream flag ios : : showpoint [ENDL] set cout floating point precision to precision [ENDL] run desperate_optimization with 10 as argument [ENDL] create integers n , k [ENDL] read n read k [ENDL] if k is 0 and n is not 1 [ENDL] print \" No solution \" print ' \\ n ' [ENDL] if k is 0 [ENDL] print 0 print ' \\ n [ENDL] else [ENDL] print k [ENDL] for i = 1 to n exclusive , print 0 [ENDL] print ' \\ n ' [ENDL] create integers k , d", "c++": "cout . setf ( ios :: fixed ) ; cout . setf ( ios :: showpoint ) ; cout . precision ( precision ) ; desperate_optimization ( 10 ) ; } int main() { int n , k ; cin >> n >> k ; if ( k == 0 && n != 1 ) cout << \" No solution \" << ' \\n ' ; if ( k == 0 ) return 0; } cout << 0 << ' \\n ' ; else cout << k ; for ( int i = 1 ; i < n ; i ++ ) cout << 0 ; cout << ' \\n ' ; int k , d ; } return 0; }"}}
{"translation": {"en": "read k read d [ENDL] if d is 0 and k is greater than 1 [ENDL] print \" No solution \" print newline [ENDL] print d [ENDL] decrement k [ENDL] while decrement k is true , print 0 [ENDL] print newline [ENDL] create integers k , q , with q = 1", "c++": "cin >> k >> d ; int main() { if ( d == 0 && k > 1 ) cout << \" No solution \" << endl ; cout << d ; return 0; } k -- ; while ( k -- ) cout << 0 ; cout << endl ; int k , q = 1 ; return 0; }"}}
{"translation": {"en": "create character d [ENDL] create string s with s = \" \" [ENDL] read k read d [ENDL] if d - ' 0 ' is 0 [ENDL] if k is 1 [ENDL] print 0 print newline [ENDL] else [ENDL] print \" No solution \" print newline [ENDL] else [ENDL] increment s by d [ENDL] for i = 1 to k exclusive , increment s by \" 0 \" [ENDL] print s print newline [ENDL] declare integers k and d", "c++": "int main() { char d ; string s = \"  \" ; cin >> k >> d ; if ( d - ' 0 ' == 0 ) if ( k == 1 ) cout << 0 << endl ; else cout << \" No solution \" << endl ; else s += d ; for ( int i = 1 ; i < k ; i ++ ) s += \" 0 \" ; cout << s << endl ; int k , d ; } return 0; }"}}
{"translation": {"en": "read k and d [ENDL] if k is greater than 1 and d is 0 [ENDL] print \" No solution \" and a new line [ENDL] print d [ENDL] decrease k by one [ENDL] print 0 in the loop while decrementing k [ENDL] print new line [ENDL] Mod = const int with Mod = 1e9 + 7", "c++": "int main() { cin >> k >> d ; if ( k > 1 && ! d ) cout << \" No solution \" << endl ; cout << d ; return 0; } k -- ; while ( k -- ) cout << 0 ; cout << endl ; const int Mod = 1e9 + 7 ; return 0; }"}}
{"translation": {"en": "n , p = integers [ENDL] choose , ans = long long with choose = 2d array of 30025 rows and 600 columns , ans = 1 [ENDL] Pedy = map from int to int [ENDL] read n [ENDL] index 0 , 0 of choose = 1 [ENDL] for i = 1 to 30024 [ENDL] index i and 0 of choose = 1 [ENDL] for j = 1 to n index i and j of choose = ( choose [ i - 1 ] [ j - 1 ] + choose [ i - 1 ] [ j ] ) modulo Mod [ENDL] for i = 0 to n exclusive [ENDL] read p [ENDL] for j = 2 to j * j < = p [ENDL] if p modulo j is 0 [ENDL] while not ( p modulo j ) [ENDL] p = p / j [ENDL] increment Pedy [ j ] [ENDL] if p > 1 , increment Pedy [ p ] [ENDL] for it = Pedy . begin ( ) to it is not Pedy . end ( ) [ENDL] p = second in it [ENDL] ans = ( ans * choose [ p + n - 1 ] [ n - 1 ] ) modulo Mod [ENDL] print ans [ENDL] me is a map of long long to long long", "c++": "int n , p ; long long choose [ 30000 + 25 ] [ 600 ] , ans = 1 ; map < int , int > Pedy ; cin >> n ; int main() { choose [ 0 ] [ 0 ] = 1 ; for ( int i = 1 ; i < 30000 + 25 ; i ++ ) choose [ i ] [ 0 ] = 1 ; for ( int j = 1 ; j <= n ; j ++ ) choose [ i ] [ j ] = ( choose [ i - 1 ] [ j - 1 ] + choose [ i - 1 ] [ j ] ) % Mod ; for ( int i = 0 ; i < n ; i ++ ) } cin >> p ; for ( int j = 2 ; j * j <= p ; j ++ ) if ( p % j == 0 ) while ( not ( p % j ) ) p /= j ; Pedy [ j ] ++ ; if ( p > 1 ) Pedy [ p ] ++ ; } } for ( map < int , int > :: iterator it = Pedy . begin ( ) ; it != Pedy . end ( ) ; it ++ ) } p = it -> second ; ans = ( ans * choose [ p + n - 1 ] [ n - 1 ] ) % Mod ; cout << ans << endl ; } map < long long , long long > me ; return 0; }"}}
{"translation": {"en": "create long long array fine with 100000 + 5 elements [ENDL] pre is a void function [ENDL] for long long i = 2 to 100000 inclusive [ENDL] if fine [ i ] is equal to 0 [ENDL] for j from 2 * i to 100000 inclusive increasing j by i , assign 1 to fine [ j ] [ENDL] create an arrays of long longs fact and invfact with 100000 elements each [ENDL] pow is a long long function with long long arguments a , b and m [ENDL] declare long long variable ans = 1 [ENDL] while b is not 1 [ENDL] if b & 1 is not 0 , assign ( ans * a ) % m to ans [ENDL] divide b by 2 [ENDL] change a to ( a * a ) % m [ENDL] return ans [ENDL] long long function modinv with long long argument k [ENDL] return pow ( k , 1000000007 - 2 , 1000000007 ) [ENDL] define function precompute [ENDL] set fact [ 0 ] to set fact [ 1 ] to 1 [ENDL] for i from 2 to 100000 exclusive [ENDL] assign fact [ i - 1 ] * i to fact [ i ] [ENDL] fact [ i ] % = 1000000007 [ENDL] set invfact [ 100000 - 1 ] to modinv ( fact [ 100000 - 1 ] ) [ENDL] for i from 100000 - 2 to 0 inclusive decrementing i [ENDL] change invfact [ i ] to invfact [ i + 1 ] * ( i + 1 ) [ENDL] invfact [ i ] % = 1000000007 [ENDL] function nCr with long long arguments x and y that returns long long [ENDL] if y is greater than x , return 0 [ENDL] set long long num to fact [ x ] [ENDL] multiply num by invfact [ y ] [ENDL] num % = 1000000007 [ENDL] multiply num by invfact [ x - y ] [ENDL] num % = 1000000007 [ENDL] return num [ENDL] create long long n [ENDL] read n [ENDL] call precompute ( ) [ENDL] call pre ( ) [ENDL] loop i from 1 to n inclusive [ENDL] create long long temp [ENDL] read temp [ENDL] for j = 2 to 100000 inclusive [ENDL] create long long cur = 0 [ENDL] if temp < = 1 , stop the loop [ENDL] while temp modulo j = 0 & & temp > 1 [ENDL] increment cur [ENDL] divide temp by j [ENDL] if cur ! = 0 , increase me [ j ] by cur [ENDL] if temp ! = 1 , increase me [ temp ] by 1 [ENDL] create map iterator it [ENDL] declare long long ans = 1 [ENDL] move it through me in a loop [ENDL] declare long long variable temp = it - > second [ENDL] multiply ans by nCr ( temp + n - 1 , temp ) [ENDL] ans % = 1000000007 [ENDL] print ans [ENDL] n , l , r , a , b , sum = int with sum = 0 and my = int array of size 105 with all values set to 0", "c++": "long long fine [ 100000 + 5 ] ; void pre ( ) for ( long long i = 2 ; i <= 100000 ; i ++ ) if ( fine [ i ] == 0 ) for ( long long j = 2 * i ; j <= 100000 ; j += i ) { fine [ j ] = 1 ; } long long fact [ 100000 ] , invfact [ 100000 ] ; } } } long long pow ( long long a , long long b , long long m ) long long ans = 1 ; while ( b ) if ( b & 1 ) ans = ( ans * a ) % m ; b /= 2 ; a = ( a * a ) % m ; return ans ; } long long modinv ( long long k ) } return pow ( k , 1000000007 - 2 , 1000000007 ) ; void precompute ( ) } fact [ 0 ] = fact [ 1 ] = 1 ; for ( long long i = 2 ; i < 100000 ; i ++ ) fact [ i ] = fact [ i - 1 ] * i ; fact [ i ] %= 1000000007 ; invfact [ 100000 - 1 ] = modinv ( fact [ 100000 - 1 ] ) ; } for ( long long i = 100000 - 2 ; i >= 0 ; i -- ) invfact [ i ] = invfact [ i + 1 ] * ( i + 1 ) ; invfact [ i ] %= 1000000007 ; long long nCr ( long long x , long long y ) } } if ( y > x ) return 0 ; long long num = fact [ x ] ; num *= invfact [ y ] ; num %= 1000000007 ; num *= invfact [ x - y ] ; num %= 1000000007 ; return num ; long long n ; } int main() { cin >> n ; precompute ( ) ; pre ( ) ; for ( long long i = 1 ; i <= n ; i ++ ) long long temp ; cin >> temp ; for ( long long j = 2 ; j <= 100000 ; j ++ ) long long cur = 0 ; if ( temp <= 1 ) break ; while ( temp % j == 0 && temp > 1 ) cur ++ ; temp /= j ; if ( cur != 0 ) me [ j ] += cur ; } if ( temp != 1 ) me [ temp ] += 1 ; } map < long long , long long > :: iterator it ; } long long ans = 1 ; for ( it = me . begin ( ) ; it != me . end ( ) ; it ++ ) long long temp = it -> second ; ans *= nCr ( temp + n - 1 , temp ) ; ans %= 1000000007 ; cout << ans << endl ; } int n , my [ 105 ] = { 0 } , l , r , a , b , sum = 0 ; return 0; }"}}
{"translation": {"en": "read n [ENDL] read l then r [ENDL] for i = 0 to n - 1 [ENDL] read a then b [ENDL] for j = a + 1 to b inclusive set m [ j ] to 1 [ENDL] for i = l + 1 to r inclusive [ENDL] if m [ i ] is 0 increment sum [ENDL] print sum [ENDL] create integer array arrx with size 101", "c++": "int main() { cin >> n ; cin >> l >> r ; for ( int i = 0 ; i < n - 1 ; i ++ ) cin >> a >> b ; for ( int j = a + 1 ; j <= b ; j ++ ) my [ j ] = 1 ; for ( int i = l + 1 ; i <= r ; i ++ ) } if ( my [ i ] == 0 ) sum ++ ; cout << sum << endl ; int arrx [ 101 ] ; return 0; }"}}
{"translation": {"en": "create integer n [ENDL] read n [ENDL] create integers l , r [ENDL] read l read r [ENDL] for i = 1 to n exclusive [ENDL] create integers a , b [ENDL] read a read b [ENDL] for j = a to b exclusive , set arrx [ j ] to 1 [ENDL] create integer total with total = 0 [ENDL] for i = l to r exclusive , increment total by 0 if arrx [ i ] is true , else 1 [ENDL] print total print newline [ENDL] declare constant integer N = 100 + 5", "c++": "int n ; int main() { cin >> n ; int l , r ; cin >> l >> r ; for ( int i = 1 ; i < n ; i ++ ) int a , b ; cin >> a >> b ; for ( int j = a ; j < b ; j ++ ) arrx [ j ] = 1 ; int total = 0 ; } for ( int i = l ; i < r ; i ++ ) { total += arrx [ i ] ? 0 : 1 ; } cout << total << endl ; const int N = 100 + 5 ; }"}}
{"translation": {"en": "declare boolean array mark with N elements [ENDL] declare int variables n , st and en [ENDL] read input to n , st and en [ENDL] for i = 1 to n exclusive [ENDL] create integers l and r [ENDL] read l and r [ENDL] for j from l to r exclusive , set mark [ j ] to true [ENDL] create int ans = 0 [ENDL] for i = st to en exclusive , increase ans by ! mark [ i ] [ENDL] print ans [ENDL] N = 105", "c++": "bool mark [ N ] ; int n , st , en ; int main() { cin >> n >> st >> en ; for ( int i = 1 ; i < n ; i ++ ) int l , r ; cin >> l >> r ; for ( int j = l ; j < r ; j ++ ) mark [ j ] = true ; int ans = 0 ; } for ( int i = st ; i < en ; i ++ ) ans += ! mark [ i ] ; cout << ans << endl ; const int N = 105 ; return 0; }"}}
{"translation": {"en": "mm = array of N bool [ENDL] n = int [ENDL] read n [ENDL] k1 , k2 = int [ENDL] read k1 , k2 [ENDL] fill mm with false [ENDL] for i = k1 to k2 exclusive mm [ i ] = true [ENDL] for i = 0 to n - 1 exclusive [ENDL] read k1 , k2 [ENDL] for j = k1 to k2 exclusive mm [ j ] = false [ENDL] ans = 0 [ENDL] for i = 0 to 101 exclusive [ENDL] if mm [ i ] increment ans [ENDL] print ans [ENDL] create int arr [ 1000 ]", "c++": "bool mm [ N ] ; int n ; int main() { cin >> n ; int k1 , k2 ; cin >> k1 >> k2 ; memset ( mm , false , sizeof ( mm ) ) ; for ( int i = int ( k1 ) ; i < int ( k2 ) ; ++ i ) mm [ i ] = true ; for ( int i = int ( 0 ) ; i < int ( n - 1 ) ; ++ i ) cin >> k1 >> k2 ; for ( int j = int ( k1 ) ; j < int ( k2 ) ; ++ j ) mm [ j ] = false ; int ans = 0 ; } for ( int i = int ( 0 ) ; i < int ( 101 ) ; ++ i ) if ( mm [ i ] ) ans ++ ; cout << ans << endl ; int arr [ 1000 ] ; return 0; }"}}
{"translation": {"en": "let n be int [ENDL] read n [ENDL] create int l and r [ENDL] read l , r [ENDL] decrement n [ENDL] while decrement n [ENDL] create integers x and y [ENDL] read x , y [ENDL] for i = x to y exclusive , increment arr [ i ] [ENDL] assign 0 to ans [ENDL] for i = l to r exclusive [ENDL] if arr [ i ] = 0 , add 1 to ans [ENDL] print ans [ENDL] create int n , l , r , a [ 200 ] , x , y , ans , z , w , set ans to 0", "c++": "int n ; int main() { cin >> n ; int l , r ; cin >> l >> r ; n -- ; while ( n -- ) int x , y ; cin >> x >> y ; for ( int i = x ; i < y ; i ++ ) arr [ i ] ++ ; int ans = 0 ; } for ( int i = l ; i < r ; i ++ ) if ( arr [ i ] == 0 ) ans ++ ; cout << ans << endl ; int n , l , r , a [ 200 ] , x , y , ans = 0 , z , w ; return 0; }"}}
{"translation": {"en": "read n [ENDL] read x and y [ENDL] for i = 0 to n - 1 exclusive [ENDL] read l and r [ENDL] for j = l to r exclusive , set a [ j ] to 1 [ENDL] for i = x to y exclusive [ENDL] if a [ i ] is 0 , increment ans [ENDL] print ans [ENDL] n = int", "c++": "cin >> n ; int main() { cin >> x >> y ; for ( int i = 0 ; i < n - 1 ; i ++ ) cin >> l >> r ; for ( int j = l ; j < r ; j ++ ) a [ j ] = 1 ; for ( int i = x ; i < y ; i ++ ) } if ( ! a [ i ] ) ans ++ ; cout << ans << endl ; } int n ; return 0; }"}}
{"translation": {"en": "l , r = int [ENDL] vis = array of 101 int [ENDL] while read n [ENDL] fill vis with 0 [ENDL] read l , r [ENDL] for i = l + 1 to r inclusive vis [ i ] = 1 [ENDL] x , y = int [ENDL] for i = 1 to n - 1 inclusive [ENDL] read x , y [ENDL] for j = x + 1 to y inclusive vis [ j ] = 0 [ENDL] cnt = 0 [ENDL] for i = l + 1 to r inclusive add vis [ i ] to cnt [ENDL] print cnt [ENDL] in int function miniel which takes an int vecotr v and an int x", "c++": "int main() { int l , r ; int vis [ 101 ] ; while ( cin >> n ) memset ( vis , 0 , sizeof ( vis ) ) ; cin >> l >> r ; for ( int i = l + 1 ; i <= r ; i ++ ) { vis [ i ] = 1 ; } int x , y ; for ( int i = 1 ; i <= n - 1 ; i ++ ) cin >> x >> y ; for ( int j = x + 1 ; j <= y ; j ++ ) { vis [ j ] = 0 ; } int cnt = 0 ; } for ( int i = l + 1 ; i <= r ; i ++ ) { cnt += vis [ i ] ; } cout << cnt << endl ; int minel ( vector < int > v , int x ) } }"}}
{"translation": {"en": "let l = int = 11111111 [ENDL] for i = 0 to x inclusive [ENDL] if v at i < l then set l = v at 1 [ENDL] return l [ENDL] let n , s , e , p be integers [ENDL] read n , s , e [ENDL] let arr be an integer array of length 100 , with arr [ 0 ] = 0 [ENDL] sum = int = 0 [ENDL] l = int = - 111 [ENDL] for i = 1 to n [ENDL] let x , y be int [ENDL] read x and y [ENDL] if e < = y [ENDL] set p to e [ENDL] else [ENDL] set p to y [ENDL] for i = x to p , set arr [ i ] to arr [ i ] + 1 [ENDL] for i = s to e [ENDL] if arr at i is 0 then increment sum [ENDL] print sum and new line [ENDL] create int n , a , b , c , d , ans", "c++": "int l = 11111111 ; for ( int i = 0 ; i <= x ; i ++ ) if ( v [ i ] < l ) { l = v [ i ] ; } return l ; } int n , s , e , p ; } int main() { cin >> n >> s >> e ; int arr [ 100 ] = { 0 } ; int sum = 0 ; int l = - 111 ; for ( int i = 1 ; i < n ; i ++ ) int x , y ; cin >> x >> y ; if ( e <= y ) p = e ; else p = y ; for ( int i = x ; i < p ; i ++ ) { arr [ i ] = arr [ i ] + 1 ; } } for ( int i = s ; i < e ; i ++ ) } if ( arr [ i ] == 0 ) { sum ++ ; } cout << sum << endl ; } int n , a , b , c , d , ans ; return 0; }"}}
{"translation": {"en": "create int array dryer of length 101 [ENDL] read n , a and b [ENDL] while pre decrement n [ENDL] read c and d [ENDL] for i = c to d exclusive , set dryer [ i ] to 1 [ENDL] for i = a to b exclusive [ENDL] if dryer [ i ] equal to 0 , increment ans [ENDL] print ans [ENDL] create const int maxn = 100 + 10", "c++": "int dryer [ 101 ] ; cin >> n >> a >> b ; int main() { while ( -- n ) cin >> c >> d ; for ( int i = c ; i < d ; i ++ ) { dryer [ i ] = 1 ; } for ( int i = a ; i < b ; i ++ ) } if ( dryer [ i ] == 0 ) { ans ++ ; } cout << ans << endl ; } const int maxn = 100 + 10 ; return 0; }"}}
{"translation": {"en": "let bool array mark size of maxn [ENDL] let int n [ENDL] read n [ENDL] make ints L and R [ENDL] for i = 0 to n exclusive [ENDL] let ints l and r [ENDL] read l and r [ENDL] if i is greater than 0 [ENDL] for j = l to r exclusive , set mark [ j ] to true [ENDL] else [ENDL] set L to l and R to r [ENDL] make integer ans = 0 [ENDL] for i = 0 to maxn exclusive [ENDL] if ! mark [ i ] is truthy and L is less than or equal to i and i is less than R , increment ans [ENDL] print ans [ENDL] b , a , n , i , c , d , m , j = integers", "c++": "bool mark [ maxn ] ; int n ; int main() { cin >> n ; int L , R ; for ( int i = 0 ; i < n ; i ++ ) int l , r ; cin >> l >> r ; if ( i > 0 ) for ( int j = l ; j < r ; j ++ ) mark [ j ] = true ; else L = l , R = r ; int ans = 0 ; } for ( int i = 0 ; i < maxn ; i ++ ) if ( ! mark [ i ] && L <= i && i < R ) ans ++ ; cout << ans << endl ; int b , a , n , i , c , d , m , j ; return 0; }"}}
{"translation": {"en": "v = integer array of size 110 [ENDL] while read n , c , d [ENDL] m = 0 [ENDL] for i = 0 to 100 , v [ i ] = 0 [ENDL] for i = 0 to n - 1 exclusive [ENDL] read a , b [ENDL] for j = a + 1 to b , v [ j ] = - 1 [ENDL] for i = c + 1 to d [ENDL] if v [ i ] is 0 , increment m [ENDL] print m [ENDL] N = 100011", "c++": "int main() { int v [ 110 ] ; while ( cin >> n >> c >> d ) m = 0 ; for ( i = 0 ; i < 101 ; i ++ ) v [ i ] = 0 ; for ( i = 0 ; i < n - 1 ; i ++ ) cin >> a >> b ; for ( j = a + 1 ; j <= b ; j ++ ) v [ j ] = - 1 ; for ( i = c + 1 ; i <= d ; i ++ ) } if ( v [ i ] == 0 ) m ++ ; cout << m << endl ; const int N = 1e5 + 11 ; } return 0; }"}}
{"translation": {"en": "use = array of N bool [ENDL] n = int [ENDL] read n [ENDL] l , r = int [ENDL] read l , r [ENDL] for i = 1 to n exclusive [ENDL] l , r = int [ENDL] read l , r [ENDL] for j = l to r exclusive use [ j ] = 1 [ENDL] ans = 0 [ENDL] for i = l to r exclusive [ENDL] if use [ i ] is 0 increment ans [ENDL] print ans [ENDL] n = int", "c++": "bool use [ N ] ; int n ; int main() { cin >> n ; int l , r ; cin >> l >> r ; for ( int i = 1 ; i < n ; i ++ ) int l , r ; cin >> l >> r ; for ( int j = l ; j < r ; j ++ ) use [ j ] = 1 ; int ans = 0 ; } for ( int i = l ; i < r ; i ++ ) if ( use [ i ] == 0 ) ans ++ ; cout << ans << endl ; int n ; }"}}
{"translation": {"en": "read n [ENDL] i = int [ENDL] x = int vector of size n [ENDL] y = int vector of size n [ENDL] z = int vector of size 101 with all values set to 1 [ENDL] read n values into x then y [ENDL] k = int [ENDL] for i = 1 to n [ENDL] for j = x [ i ] to y [ i ] set z [ k ] to 0 [ENDL] ct = int with ct = 0 [ENDL] for i = x [ 0 ] to y [ 0 ] [ENDL] if z [ i ] is 1 increment ct [ENDL] print ct [ENDL] let n be a integer", "c++": "int main() { cin >> n ; int i ; vector < int > x ( n ) ; vector < int > y ( n ) ; vector < int > z ( 101 , 1 ) ; for ( i = 0 ; i < n ; i ++ ) { cin >> x [ i ] >> y [ i ] ; } int k ; for ( i = 1 ; i < n ; i ++ ) for ( k = x [ i ] ; k < y [ i ] ; k ++ ) { z [ k ] = 0 ; } int ct = 0 ; } for ( i = x [ 0 ] ; i < y [ 0 ] ; i ++ ) if ( z [ i ] == 1 ) { ct ++ ; } cout << ct << endl ; } int n ; return 0; }"}}
{"translation": {"en": "read n [ENDL] let x , y be integers [ENDL] read x , y [ENDL] let d be a integer with d = y - x [ENDL] a = array of integers of length d [ENDL] for i = 0 to d exclusive , the value of a [ i ] is equal to 1 [ENDL] for i = 0 to n - 1 exclusive [ENDL] let m , n be integers [ENDL] read m , n [ENDL] decrement n by 1 [ENDL] for p = m to n inclusive [ENDL] if p > = y or p is less than x , proceed to next [ENDL] the value of a [ p - x ] is equal to 0 [ENDL] let sum be a integer with sum = 0 [ENDL] for j = 0 to d exclusive , increment sum by a [ j ] [ENDL] print sum and newline [ENDL] create int array v [ 105 ]", "c++": "int main() { cin >> n ; int x , y ; cin >> x >> y ; int d = y - x ; int a [ d ] ; for ( int i = 0 ; i < d ; i ++ ) a [ i ] = 1 ; for ( int i = 0 ; i < n - 1 ; i ++ ) int m , n ; cin >> m >> n ; n -- ; for ( int p = m ; p <= n ; p ++ ) if ( p >= y || p < x ) continue ; a [ p - x ] = 0 ; int sum = 0 ; } } for ( int j = 0 ; j < d ; j ++ ) sum += a [ j ] ; cout << sum << \" \\n \" ; int v [ 105 ] ; return 0; }"}}
{"translation": {"en": "create long long n and sum , set sum to 0 [ENDL] read n [ENDL] let x and y be int [ENDL] read x , y [ENDL] for i = 2 to n inclusive [ENDL] create int a and b [ENDL] read a and b [ENDL] for j = a + 1 to b inclusive , set v [ j ] to 1 [ENDL] for i = x + 1 to y inclusive , assign sum + 1 - v [ i ] to sum [ENDL] print sum and a newline [ENDL] create int array a of length 105", "c++": "long long n , sum = 0 ; int main() { cin >> n ; int x , y ; cin >> x >> y ; for ( int i = 2 ; i <= n ; ++ i ) int a , b ; cin >> a >> b ; for ( int j = a + 1 ; j <= b ; ++ j ) v [ j ] = 1 ; for ( int i = x + 1 ; i <= y ; ++ i ) sum += 1 - v [ i ] ; } cout << sum << ' \\n ' ; int a [ 105 ] ; return 0; }"}}
{"translation": {"en": "create integers n , x , y , i , l , r [ENDL] let sum and j be integers [ENDL] read n [ENDL] read x and y [ENDL] for i = 1 to n exclusive [ENDL] read l and r [ENDL] for j = l to r exclusive , set a [ j ] to 1 [ENDL] assign 0 to sum [ENDL] for i = x to y exclusive [ENDL] if a [ i ] equal to 0 , sum = sum + 1 [ENDL] print sum [ENDL] n , i , j , sum , alexeyI and alexeyJ are integers with sum = 0", "c++": "int n , x , y , i , l , r ; int sum , j ; cin >> n ; int main() { cin >> x >> y ; for ( i = 1 ; i < n ; i ++ ) cin >> l >> r ; for ( j = l ; j < r ; j ++ ) { a [ j ] = 1 ; } sum = 0 ; } for ( i = x ; i < y ; i ++ ) if ( a [ i ] == 0 ) sum ++ ; cout << sum << endl ; } int n , i , j , sum = 0 , alexeyI , alexeyJ ; }"}}
{"translation": {"en": "create int array dryer with size 101 [ENDL] call fill_n ( dryer , 101 , 1 ) [ENDL] read n [ENDL] read input to alexeyI and alexeyJ [ENDL] for integer l = 0 to n - 1 exclusive [ENDL] read i and j [ENDL] for k from i to j exclusive , set dryer [ k ] to 0 [ENDL] for k from alexeyI to alexeyJ exclusive , add dryer [ k ] to sum [ENDL] print sum [ENDL] create int array arr with size 1000", "c++": "int main() { int dryer [ 101 ] ; fill_n ( dryer , 101 , 1 ) ; cin >> n ; cin >> alexeyI >> alexeyJ ; for ( int l = 0 ; l < n - 1 ; l ++ ) cin >> i >> j ; for ( int k = i ; k < j ; k ++ ) { dryer [ k ] = 0 ; } for ( int k = alexeyI ; k < alexeyJ ; k ++ ) { sum += dryer [ k ] ; } } cout << sum << endl ; int arr [ 1000 ] ; return 0; }"}}
{"translation": {"en": "declare integer variable n [ENDL] read n [ENDL] create integers l and r [ENDL] read l and r [ENDL] decrement n by one [ENDL] while n ! = 0 , decrement it and continue the loop [ENDL] create ints x and y [ENDL] read input to x and y [ENDL] for i = y to x exclusive counting down , increment arr [ i ] by one [ENDL] declare int variable ans = 0 [ENDL] for i = r to l exclusive counting down [ENDL] if arr [ i ] is equal to 0 , increment ans by one [ENDL] print ans [ENDL] in function File", "c++": "int n ; int main() { cin >> n ; int l , r ; cin >> l >> r ; n -- ; while ( n -- ) int x , y ; cin >> x >> y ; for ( int i = y ; i > x ; i -- ) arr [ i ] ++ ; int ans = 0 ; } for ( int i = r ; i > l ; i -- ) if ( arr [ i ] == 0 ) ans ++ ; cout << ans << endl ; void File ( ) return 0; }"}}
{"translation": {"en": "call freopen of \" output . txt \" , \" w \" and stdout [ENDL] call freopen of \" input . txt \" , \" r \" and stdin [ENDL] define empty function fast [ENDL] pi = const double with pi = 2 * acos of 0 . 0 [ENDL] nn = const int with nn = 2e5 + 5 [ENDL] oo = const int with oo = 0x3f3f3f3f [ENDL] call fast [ENDL] n , b , e , ans = int with ans = 0 [ENDL] arr = int array of size nn [ENDL] read n [ENDL] read b then e [ENDL] for i = 0 to n - 1 [ENDL] x , y = int [ENDL] read x then y [ENDL] for j = x to y increment arr [ j ] [ENDL] for i = b to e [ENDL] if arr8i ] is 0 increment ans [ENDL] print ans [ENDL] create long longs A , B , ans with ans = - 0x7fffffff", "c++": "freopen ( \" output.txt \" , \" w \" , stdout ) ; freopen ( \" input.txt \" , \" r \" , stdin ) ; void fast ( ) { } } const double pi = 2 * acos ( 0.0 ) ; const int nn = 2e5 + 5 ; const int oo = 0x3f3f3f3f ; fast ( ) ; int main() { int n , b , e , ans = 0 ; int arr [ nn ] = { } ; cin >> n ; cin >> b >> e ; for ( int i = 0 ; i < n - 1 ; i ++ ) int x , y ; cin >> x >> y ; for ( int j = x ; j < y ; j ++ ) arr [ j ] ++ ; for ( int i = b ; i < e ; i ++ ) } if ( ! arr [ i ] ) ans ++ ; cout << ans << \" \\n \" ; long long A , B , ans = - 0x7fffffff ; return 0; }"}}
{"translation": {"en": "create long longs bxb , bex , bob , bpb [ENDL] read A read B [ENDL] if B is 0 [ENDL] print A * A print newline [ENDL] for i = 0 to A exclusive print \" o \" [ENDL] print newline [ENDL] if B is 1 [ENDL] print A * A - 1 print newline [ENDL] for i = 0 to A exclusive , print \" o \" [ENDL] print \" x \" print newline [ENDL] if A is 0 [ENDL] print - B * B print newline [ENDL] for i = 0 to B exclusive , print \" x ' [ENDL] print newline [ENDL] for xb = 2 to minimum of ( B and A + 1 ) inclusive [ENDL] create integer ob with ob = xb - 1 [ENDL] create long long score with score = ob - 1 [ENDL] increment score by ( A - ( ob - 1 ) ) * ( A - ( ob - 1 ) ) [ENDL] end statement [ENDL] create long long pb with pb = B / xb [ENDL] create long long ex with ex = B % xb [ENDL] decrement score by ( xb - ex ) * pb * pb [ENDL] decrement score by ex * ( pb + 1 ) * ( pb + 1 ) [ENDL] if score is greater than ans [ENDL] set ans to score [ENDL] set bxb to xb [ENDL] set bex to ex [ENDL] set bob to ob [ENDL] set bpb to pb [ENDL] print ans print newline [ENDL] for i = 0 to bxb exclusive [ENDL] for j = 0 to bpb exclusive , print \" x \" [ENDL] if i is less than bex , print \" x \" [ENDL] if i is 0 [ENDL] for j = 0 to A - ( bob - 1 ) exclusive , print \" o \" [ENDL] else if i + 1 is less than bxb [ENDL] print \" o \" [ENDL] print newline [ENDL] declare integer variables co and cx", "c++": "long long bxb , bex , bob , bpb ; cin >> A >> B ; int main() { if ( B == 0 ) cout << A * A << endl ; for ( int i = 0 ; i < A ; i ++ ) cout << \" o \" ; cout << endl ; if ( B == 1 ) return 0; } cout << A * A - 1 << endl ; for ( int i = 0 ; i < A ; i ++ ) cout << \" o \" ; cout << \" x \" << endl ; if ( A == 0 ) return 0; } cout << - B * B << endl ; for ( int i = 0 ; i < B ; i ++ ) cout << \" x \" ; cout << endl ; for ( int xb = 2 ; xb <= min ( B , A + 1 ) ; xb ++ ) return 0; } int ob = xb - 1 ; long long score = ob - 1 ; score += ( A - ( ob - 1 ) ) * ( A - ( ob - 1 ) ) ; ; long long pb = B / xb ; long long ex = B % xb ; score -= ( xb - ex ) * pb * pb ; score -= ex * ( pb + 1 ) * ( pb + 1 ) ; if ( score > ans ) ans = score ; bxb = xb ; bex = ex ; bob = ob ; bpb = pb ; cout << ans << endl ; } } for ( int i = 0 ; i < bxb ; i ++ ) for ( int j = 0 ; j < bpb ; j ++ ) cout << \" x \" ; if ( i < bex ) cout << \" x \" ; if ( i == 0 ) for ( int j = 0 ; j < A - ( bob - 1 ) ; j ++ ) cout << \" o \" ; else if ( i + 1 < bxb ) cout << \" o \" ; cout << endl ; } int co , cx ; return 0; }"}}
{"translation": {"en": "create const long long inf = - 1e16 [ENDL] inlined long long function gox with int argument num [ENDL] return inf if num is greater than cx [ENDL] declare int ex = cx % num [ENDL] declare int variable anch = cx / num [ENDL] declare long long variable ans = 1LL * ( anch + 1 ) * ( anch + 1 ) * ex [ENDL] increase ans by 1LL * anch * anch * ( num - ex ) [ENDL] return - ans [ENDL] inlined long long function goo with int argument num [ENDL] if num is greater than co [ENDL] declare int variable juntos = co - num + 1 [ENDL] create long long ans = 1LL * juntos * juntos [ENDL] increase ans by num - 1 [ENDL] return ans [ENDL] inlined void function build with int arguments x and o [ENDL] create string s [ENDL] declare integer xx = cx / x [ENDL] create bool flag = true if x > o , else false [ENDL] declare bool variable fst = true [ENDL] create integer ex = cx % x [ENDL] declare integer prim = co - o + 1 [ENDL] while either x or o is true [ENDL] if flag is true [ENDL] push ' x ' into s xx times [ENDL] if ex is greater than 0 , push ' x ' into s and decrement ex [ENDL] decrement x [ENDL] else [ENDL] if fst is true [ENDL] push ' o ' into s prim times [ENDL] set fst to false [ENDL] else [ENDL] push ' o ' into s [ENDL] decrement o [ENDL] invert the value of flag [ENDL] print s [ENDL] read co and cx [ENDL] if co is 0 or cx is 0 [ENDL] if co is greater than 0 [ENDL] print 1LL * co * co [ENDL] print ' o ' co times [ENDL] print a new line [ENDL] if cx is greater than 0 [ENDL] print - 1LL * cx * cx [ENDL] print ' x ' cx times [ENDL] print [ENDL] declare int lim = min of co and cx [ENDL] create long long ans = LLONG_MIN [ENDL] pos is a pair of integers [ENDL] for integer i = 1 to lim + 1 exclusive [ENDL] if ans is less than gox ( i ) + goo ( i ) [ENDL] assign gox ( i ) + goo ( i ) to ans [ENDL] pos = { i , i } [ENDL] for i = 2 to cx + 1 exclusive [ENDL] if ans is less than gox ( i ) + goo ( i - 1 ) [ENDL] change ans to gox ( i ) + goo ( i - 1 ) [ENDL] pos = { i , i - 1 } [ENDL] for i = 2 to co + 1 exclusive [ENDL] if ans is less than gox ( i - 1 ) + goo ( i ) [ENDL] set ans to gox ( i - 1 ) + goo ( i ) [ENDL] pos = { i - 1 , i } [ENDL] print ans [ENDL] call build with arguments pos . first and pos . second [ENDL] create long long a and b", "c++": "const long long inf = - 1e16 ; inline long long gox ( int num ) if ( num > cx ) return inf ; int ex = cx % num ; int anch = cx / num ; long long ans = 1LL * ( anch + 1 ) * ( anch + 1 ) * ex ; ans += 1LL * anch * anch * ( num - ex ) ; return - ans ; inline long long goo ( int num ) } if ( num > co ) return inf ; int juntos = co - num + 1 ; long long ans = 1LL * juntos * juntos ; ans += num - 1 ; return ans ; inline void build ( int x , int o ) } string s ; int xx = cx / x ; bool flag = ( x > o ) ; bool fst = true ; int ex = cx % x ; int prim = co - o + 1 ; while ( x || o ) if ( flag ) for ( int i = int ( 0 ) ; i < int ( xx ) ; ++ i ) s . push_back ( ' x ' ) ; if ( ex > 0 ) s . push_back ( ' x ' ) , ex -- ; x -- ; else if ( fst ) for ( int i = int ( 0 ) ; i < int ( prim ) ; ++ i ) s . push_back ( ' o ' ) ; fst = false ; else s . push_back ( ' o ' ) ; o -- ; flag = ( ! flag ) ; } cout << s << endl ; } cin >> co >> cx ; } int main() { if ( co == 0 || cx == 0 ) if ( co > 0 ) cout << 1LL * co * co << endl ; for ( int i = int ( 0 ) ; i < int ( co ) ; ++ i ) cout << ' o ' ; cout << endl ; if ( cx > 0 ) } cout << - 1LL * cx * cx << endl ; for ( int i = int ( 0 ) ; i < int ( cx ) ; ++ i ) cout << ' x ' ; cout << endl ; int lim = min ( co , cx ) ; } return 0; } long long ans = LLONG_MIN ; pair < int , int > pos ; for ( int i = int ( 1 ) ; i < int ( lim + 1 ) ; ++ i ) if ( ans < gox ( i ) + goo ( i ) ) ans = gox ( i ) + goo ( i ) ; pos = { i , i } ; for ( int i = int ( 2 ) ; i < int ( cx + 1 ) ; ++ i ) } } if ( ans < gox ( i ) + goo ( i - 1 ) ) ans = gox ( i ) + goo ( i - 1 ) ; pos = { i , i - 1 } ; for ( int i = int ( 2 ) ; i < int ( co + 1 ) ; ++ i ) } } if ( ans < gox ( i - 1 ) + goo ( i ) ) ans = gox ( i - 1 ) + goo ( i ) ; pos = { i - 1 , i } ; cout << ans << endl ; } } build ( pos . first , pos . second ) ; long long a , b ; return 0; }"}}
{"translation": {"en": "read a , b [ENDL] if a equal to 0 [ENDL] print - 1 * b * b [ENDL] for i = 0 to b exclusive , print x [ENDL] print a newline [ENDL] else if b = 0 [ENDL] print a * a [ENDL] for i = 0 to a exclusive , print o [ENDL] print a newline [ENDL] else if b equal to 1 [ENDL] print a * a - 1 [ENDL] for i = 0 to a exclusive , print o [ENDL] print x [ENDL] print a newline [ENDL] else [ENDL] ser ret to LLONG_MIN [ENDL] set foo = 0 [ENDL] for j = 1 to min of b - 1 and a [ENDL] assign ( a - j + 1 ) * ( a - j + 1 ) + ( j - 1 ) to pos [ENDL] set q = b / ( j + 1 ) and r to b % ( j + 1 ) [ENDL] set neg = r * ( q + 1 ) * ( q + 1 ) + ( j + 1 - r ) * q * q [ENDL] if pos - neg greater than ret [ENDL] ret = pos - neg [ENDL] assign j + 1 to foo [ENDL] print ret [ENDL] set q = b / foo , r = b % foo [ENDL] assign ( a - ( foo - 1 ) + 1 ) to g [ENDL] for j = 1 to foo + 1 exclusive [ENDL] for i = 0 to q exclusive , print x [ENDL] if < = r , print x [ENDL] if j different from foo [ENDL] if j equal to 1 [ENDL] for i = 0 to g exclusive , print o [ENDL] else [ENDL] print o [ENDL] print a newline [ENDL] create integer vector v", "c++": "int main() { cin >> a >> b ; if ( a == 0 ) cout << - 1 * b * b << endl ; for ( int ( i ) = ( 0 ) ; ( i ) < ( b ) ; ++ ( i ) ) cout << ' x ' ; cout << endl ; else if ( b == 0 ) cout << a * a << endl ; for ( int ( i ) = ( 0 ) ; ( i ) < ( a ) ; ++ ( i ) ) cout << ' o ' ; cout << endl ; else if ( b == 1 ) cout << a * a - 1 << endl ; for ( int ( i ) = ( 0 ) ; ( i ) < ( a ) ; ++ ( i ) ) cout << ' o ' ; cout << ' x ' ; cout << endl ; else long long ret = LLONG_MIN ; long long foo = 0 ; for ( long long j = 1 ; j <= min ( b - 1 , a ) ; j ++ ) long long pos = ( a - j + 1 ) * ( a - j + 1 ) + ( j - 1 ) ; long long q = b / ( j + 1 ) , r = b % ( j + 1 ) ; long long neg = r * ( q + 1 ) * ( q + 1 ) + ( j + 1 - r ) * q * q ; if ( pos - neg > ret ) ret = pos - neg ; foo = j + 1 ; cout << ret << endl ; } } long long q = b / foo , r = b % foo ; long long g = ( a - ( foo - 1 ) + 1 ) ; for ( int ( j ) = ( 1 ) ; ( j ) < ( foo + 1 ) ; ++ ( j ) ) for ( int ( i ) = ( 0 ) ; ( i ) < ( q ) ; ++ ( i ) ) cout << ' x ' ; if ( j <= r ) cout << ' x ' ; if ( j != foo ) if ( j == 1 ) for ( int ( i ) = ( 0 ) ; ( i ) < ( g ) ; ++ ( i ) ) cout << ' o ' ; else cout << ' o ' ; cout << endl ; } } vector < int > v ; } return 0; }"}}
{"translation": {"en": "create integers n , p , k [ENDL] read n read p read k [ENDL] for x = p - k to p + k inclusive [ENDL] if x is less than 1 , break current loop iteration [ENDL] if x is greater than n , break current loop iteration [ENDL] add element x to end of v [ENDL] if v [ 0 ] is not 1 , print \" < < \" [ENDL] for i = 0 to integer casted size of v exclusive [ENDL] if v [ i ] is p , print \" ( \" [ENDL] print v [ i ] [ENDL] if v [ i ] is p , print \" ) \" [ENDL] if i is integer casted size of v - 1 [ENDL] if v [ i ] is less than n [ENDL] print \" > > \" print newline [ENDL] else [ENDL] print newline [ENDL] else [ENDL] print \" \" [ENDL] create integer queue q", "c++": "int n , p , k ; int main() { cin >> n >> p >> k ; for ( int x = p - k ; x <= p + k ; x ++ ) if ( x < 1 ) continue ; if ( x > n ) continue ; v . push_back ( x ) ; if ( v [ 0 ] != 1 ) cout << \" <<  \" ; } for ( int ( i ) = ( 0 ) ; ( i ) < ( ( ( int ) v . size ( ) ) ) ; ++ ( i ) ) if ( v [ i ] == p ) cout << \" ( \" ; cout << v [ i ] ; if ( v [ i ] == p ) cout << \" ) \" ; if ( i == ( ( int ) v . size ( ) ) - 1 ) if ( v [ i ] < n ) cout << \"  >> \" << endl ; else cout << endl ; else cout << \"   \" ; queue < int > q ; } return 0; }"}}
{"translation": {"en": "create boolean array p with size 10000 with p = { } [ENDL] create integer pe [ENDL] declare print with integers c , a , b as arguments , returning void [ENDL] if a is less than c or a is greater than b or p [ a ] or a is greater than pe or a is less than 1 , return from function [ENDL] set p [ a ] to true [ENDL] run print with c , a - 1 , b as arguments [ENDL] add element a to end of q [ENDL] run print with c , a + 1 , b as arguments [ENDL] create integers n , k [ENDL] read pe read n read k [ENDL] if n - k is greater than 1 , print \" < < \" [ENDL] run print with n - k , n , n + k as arguments [ENDL] while q is not empty [ENDL] if size of q is not 1 and front of q is not n [ENDL] print front of q print \" \" [ENDL] else if front of q is n [ENDL] print \" ( \" print front of q [ENDL] if size of q is not 1 [ENDL] print \" ) \" [ENDL] else [ENDL] print \" ) \" [ENDL] else [ENDL] print front of q [ENDL] remove element from end of q [ENDL] if n + k is less than pe , print \" > > \" [ENDL] print newline [ENDL] in the function desperate_optimization", "c++": "bool p [ 10000 ] = { } ; int pe ; void print ( int c , int a , int b ) if ( a < c || a > b || p [ a ] || a > pe || a < 1 ) return ; p [ a ] = true ; print ( c , a - 1 , b ) ; q . push ( a ) ; print ( c , a + 1 , b ) ; int n , k ; } int main() { cin >> pe >> n >> k ; if ( n - k > 1 ) { cout << \" <<  \" ; } print ( n - k , n , n + k ) ; while ( ! q . empty ( ) ) if ( q . size ( ) != 1 && q . front ( ) != n ) cout << q . front ( ) << \"   \" ; else if ( q . front ( ) == n ) cout << \" ( \" << q . front ( ) ; if ( q . size ( ) != 1 ) cout << \" )  \" ; else cout << \" ) \" ; else cout << q . front ( ) ; q . pop ( ) ; if ( n + k < pe ) { cout << \"  >> \" ; } } cout << endl ; void desperate_optimization ( int precision ) }"}}
{"translation": {"en": "set format flag ios : : fixed of the output [ENDL] set format flag ios : : showpoint of the output [ENDL] set output precision to precision [ENDL] call desperate_optimization ( 10 ) [ENDL] let n , p and k be integers [ENDL] read n , p and k [ENDL] if p - k is greater than 1 [ENDL] for i = max of 1 and p - k to p exclusive , print i and \" \" [ENDL] print \" ( \" , p and \" ) \" [ENDL] for i = p + 1 to min of n and p + k inclusive , print \" \" and i [ENDL] if p + k is less than n , print \" > > \" [ENDL] print ' \\ n ' [ENDL] create integers n , p , k", "c++": "cout . setf ( ios :: fixed ) ; cout . setf ( ios :: showpoint ) ; cout . precision ( precision ) ; desperate_optimization ( 10 ) ; } int main() { int n , p , k ; cin >> n >> p >> k ; if ( p - k > 1 ) cout << \" <<  \" ; for ( int i = max ( 1 , p - k ) ; i < p ; i ++ ) { cout << i << \"   \" ; } cout << \" ( \" << p << \" ) \" ; for ( int i = p + 1 ; i <= min ( n , p + k ) ; i ++ ) { cout << \"   \" << i ; } if ( p + k < n ) cout << \"  >> \" ; cout << ' \\n ' ; int n , p , k ; return 0; }"}}
{"translation": {"en": "create booleans start , end with start = 1 , end = 0 [ENDL] read n read p read k [ENDL] for i = p - k to p + k inclusive [ENDL] if start is true [ENDL] if i is less than or equal to 1 [ENDL] if p is 1 [ENDL] print \" ( \" print 1 print \" ) \" [ENDL] else [ENDL] print 1 [ENDL] set i to 1 [ENDL] else [ENDL] print \" < < \" print i [ENDL] set start to 0 [ENDL] break current loop iteration [ENDL] if i is greater than or equal to n [ENDL] set end to 1 [ENDL] if p is n [ENDL] print \" ( \" print n print \" ) \" [ENDL] else [ENDL] print \" \" print n [ENDL] break loop [ENDL] if i is p [ENDL] print \" ( \" print i print \" ) \" [ENDL] else [ENDL] print \" \" print i [ENDL] if not end print \" > > \" [ENDL] print ' \\ n ' [ENDL] pi = const double with pi = 3 . 14159265359", "c++": "int main() { bool start = 1 , end = 0 ; cin >> n >> p >> k ; for ( int i = p - k ; i <= p + k ; i ++ ) if ( start ) if ( i <= 1 ) if ( p == 1 ) cout << \" ( \" << 1 << \" ) \" ; else cout << 1 ; i = 1 ; else cout << \" <<  \" << i ; start = 0 ; continue ; if ( i >= n ) } end = 1 ; if ( p == n ) cout << \"  ( \" << n << \" ) \" ; else cout << \"   \" << n ; break ; if ( i == p ) } cout << \"  ( \" << i << \" ) \" ; else cout << \"   \" << i ; if ( ! end ) cout << \"  >> \" ; } } cout << ' \\n ' ; const double pi = 3.14159265359 ; }"}}
{"translation": {"en": "MOD = const long long with MOD = 1000 * 1000 * 1000 + 7 [ENDL] N = const int with N = 200 * 1000 + 10 [ENDL] a , b = int [ENDL] read a then b [ENDL] aa , bb = int with aa = a * a and bb = b * b [ENDL] as = int vector [ENDL] bs = int vector [ENDL] for i = 1 to aa [ENDL] int sq = sqrt of aa - i * - [ENDL] if sq * sq + i * i is aa then append i to as [ENDL] for i = 1 to bb [ENDL] sq = int with sq = sqrt of bb - i * i [ENDL] if sq * sq + i * i is bb then append i to bs [ENDL] for i = 0 to size of as [ENDL] for j = 0 to size of bs [ENDL] xa = int with xa = as [ i ] [ENDL] ya = int with ya = sqrt of aa - xa * xa [ENDL] xb = int with xb = bs [ j ] [ENDL] yb = int with yb = sqrt of bb - xb * xb [ENDL] if ( xb - xa ) * ( xb - xa ) + ( ya + yb ) * ( ya + yb ) is aa + bb and xb is not xa [ENDL] print \" YES \" [ENDL] print xa and ya [ENDL] print xb and - yb [ENDL] print 0 and 0 [ENDL] print \" NO \" [ENDL] create integers n and v", "c++": "const long long MOD = 1000 * 1000 * 1000 + 7 ; const int N = 200 * 1000 + 10 ; int a , b ; int main() { cin >> a >> b ; int aa = a * a , bb = b * b ; vector < int > as ; vector < int > bs ; for ( int i = 1 ; i < aa ; i ++ ) int sq = sqrt ( aa - i * i ) ; if ( sq * sq + i * i == aa ) as . push_back ( i ) ; for ( int i = 1 ; i < bb ; i ++ ) } int sq = sqrt ( bb - i * i ) ; if ( sq * sq + i * i == bb ) bs . push_back ( i ) ; for ( int i = 0 ; i < as . size ( ) ; i ++ ) } for ( int j = 0 ; j < bs . size ( ) ; j ++ ) int xa = as [ i ] ; int ya = sqrt ( aa - xa * xa ) ; int xb = bs [ j ] ; int yb = sqrt ( bb - xb * xb ) ; if ( ( xb - xa ) * ( xb - xa ) + ( ya + yb ) * ( ya + yb ) == aa + bb && xb != xa ) cout << \" YES\\n \" ; cout << xa << \"   \" << ya << ' \\n ' ; cout << xb << \"   \" << - yb << ' \\n ' ; cout << 0 << \"   \" << 0 << ' \\n ' ; cout << \" NO\\n \" ; return 0; } } } int n , v ; }"}}
{"translation": {"en": "read n and v [ENDL] a is an array of doubles with size n [ENDL] read n elements into array a [ENDL] declare double called minvalue = INT_MAX [ENDL] b is an array of doubles with size n [ENDL] for integer i = 0 to n exclusive [ENDL] read b [ i ] [ENDL] assign value of min of minvalue and b [ i ] to the minvalue [ENDL] l is double = 0 [ENDL] let r be double = 1e18 [ENDL] answer is double = 0 [ENDL] for integer i = 1 to 100 inclusive [ENDL] double mid = ( l + ( r - l ) / 2 ) [ENDL] sum is double = 0 [ENDL] flag is integer = 0 [ENDL] for i = 0 to n exclusive [ENDL] set double value to a [ i ] * mid [ENDL] if value is greater than b [ i ] [ENDL] set flag to 1 [ENDL] break the loop [ENDL] else [ENDL] increase sum by ( a [ i ] * mid ) [ENDL] if flag = 1 [ENDL] set value of r to mid - 1 [ENDL] skip the rest of the loop [ENDL] if sum < = v [ENDL] set answer to sum [ENDL] l = mid + 1 [ENDL] else [ENDL] r = mid - 1 [ENDL] print setprecision ( 6 ) , fixed , answer and \" \\ n \" [ENDL] declare integer variable n", "c++": "int main() { cin >> n >> v ; double a [ n ] ; for ( int i = 0 ; i < n ; i ++ ) { cin >> a [ i ] ; } double minvalue = INT_MAX ; double b [ n ] ; for ( int i = 0 ; i < n ; i ++ ) cin >> b [ i ] ; minvalue = min ( minvalue , b [ i ] ) ; double l = 0 ; } double r = 1e18 ; double answer = 0 ; for ( int i = 1 ; i <= 100 ; i ++ ) double mid = ( l + ( r - l ) / 2 ) ; double sum = 0 ; int flag = 0 ; for ( int i = 0 ; i < n ; i ++ ) double value = a [ i ] * mid ; if ( value > b [ i ] ) flag = 1 ; break ; else sum += ( a [ i ] * mid ) ; if ( flag == 1 ) } r = mid - 1 ; continue ; if ( sum <= v ) } answer = sum ; l = mid + 1 ; else r = mid - 1 ; cout << setprecision ( 6 ) << fixed << answer << \" \\n \" ; } } int n ; return 0; }"}}
{"translation": {"en": "read input to n [ENDL] let A be integer array with size n [ENDL] read n elements into A [ENDL] create integer ansf = 1 [ENDL] create integer j = 0 [ENDL] create integer ch = 0 [ENDL] create integer max1 = 1 [ENDL] create integer x = 1 [ENDL] declare integer array dp with size n filled with 0 [ENDL] for integer i = 1 to n exclusive incrementing i [ENDL] if A [ i ] is greater than A [ i - 1 ] [ENDL] change dp [ i ] to dp [ i - 1 ] + 1 [ENDL] else [ENDL] assign 0 to dp [ i ] [ENDL] loop i from 1 to n exclusive [ENDL] if A [ i ] is greater than A [ i - 1 ] [ENDL] increment ansf by one [ENDL] else [ENDL] if ch is 0 [ENDL] assign A [ i ] to x [ENDL] assign A [ i - 1 ] + 1 to A [ i ] [ENDL] change j to i [ENDL] assign 1 to ch [ENDL] increment ansf by one [ENDL] else [ENDL] assign i - j to ansf [ENDL] change A [ j ] to x [ENDL] if ansf = 1 [ENDL] if A [ i ] is greater than A [ i - 1 ] [ENDL] increment ansf by one [ENDL] change x to A [ i - 2 ] [ENDL] increment ansf by one [ENDL] assign i - 2 to j [ENDL] change A [ i - 2 ] to A [ i - 1 ] - 1 [ENDL] if i > = 3 and A [ i - 2 ] > A [ i - 3 ] , increase ansf by dp [ i - 2 ] [ENDL] else [ENDL] increment ansf [ENDL] assign A [ i - 1 ] to x [ENDL] assign i - 1 to j [ENDL] change A [ i - 1 ] to A [ i ] - 1 [ENDL] if A [ i - 1 ] is greater than A [ i - 2 ] , increase ansf by dp [ i - 1 ] [ENDL] else [ENDL] if A [ j ] is less than A [ j + 1 ] , increment ansf [ENDL] change x to A [ i ] [ENDL] set j to i [ENDL] change A [ i ] to A [ i - 1 ] + 1 [ENDL] change max1 to max of max1 and ansf [ENDL] print max1 and \" \\ n \" [ENDL] v = vector array of long long of size 100005", "c++": "int main() { cin >> n ; int A [ n ] ; for ( int i = 0 ; i < n ; i ++ ) { cin >> A [ i ] ; } int ansf = 1 ; int j = 0 ; int ch = 0 ; int max1 = 1 ; int x = 0 ; int dp [ n ] = { 0 } ; for ( int i = 1 ; i < n ; i ++ ) if ( A [ i ] > A [ i - 1 ] ) dp [ i ] = dp [ i - 1 ] + 1 ; else dp [ i ] = 0 ; for ( int i = 1 ; i < n ; i ++ ) } } if ( A [ i ] > A [ i - 1 ] ) ansf ++ ; else if ( ch == 0 ) x = A [ i ] ; A [ i ] = A [ i - 1 ] + 1 ; j = i ; ch = 1 ; ansf ++ ; else ansf = i - j ; A [ j ] = x ; if ( ansf == 1 ) if ( A [ i ] > A [ i - 1 ] ) ansf ++ ; x = A [ i - 2 ] ; ansf ++ ; j = i - 2 ; A [ i - 2 ] = A [ i - 1 ] - 1 ; if ( i >= 3 && A [ i - 2 ] > A [ i - 3 ] ) ansf = ansf + dp [ i - 2 ] ; else ansf ++ ; x = A [ i - 1 ] ; j = i - 1 ; A [ i - 1 ] = A [ i ] - 1 ; if ( A [ i - 1 ] > A [ i - 2 ] ) ansf = ansf + dp [ i - 1 ] ; else } if ( A [ j ] < A [ j + 1 ] ) ansf ++ ; x = A [ i ] ; j = i ; A [ i ] = A [ i - 1 ] + 1 ; max1 = max ( max1 , ansf ) ; } } } cout << max1 << \" \\n \" ; } vector < long long > v [ 100005 ] ; return 0; }"}}
{"translation": {"en": "in the function solve [ENDL] n , x , b , y , ans = long long with x = 0 , ans = 0 [ENDL] read n [ENDL] a = array of long long of size n [ENDL] for i = 0 to n exclusive [ENDL] read a [ i ] [ENDL] if i is 0 [ENDL] append a [ i ] in v [ x ] [ENDL] continue iteration [ENDL] if a [ i ] < = a [ i - 1 ] , increment x [ENDL] append a [ i ] in v [ x ] [ENDL] if x is 0 [ENDL] print v [ 0 ] . size ( ) [ENDL] return [ENDL] for i = 0 to x + 1 [ENDL] if i is x [ENDL] y = v [ i ] . size ( ) + 1 [ENDL] else [ENDL] n = long long with n = v [ i ] . size ( ) [ENDL] m = long long with m = v [ i + 1 ] . size ( ) [ENDL] if m is 1 [ENDL] y = n + 1 ; [ENDL] else if n is 1 [ENDL] y = m + 1 [ENDL] else if v [ i + 1 ] [ 1 ] - v [ i ] [ n - 1 ] > 1 [ENDL] y = n + m [ENDL] else if v [ i + 1 ] [ 0 ] - v [ i ] [ n - 2 ] > 1 [ENDL] y = n + m [ENDL] else [ENDL] y = n + 1 [ENDL] ans = max of ans and y [ENDL] print ans [ENDL] return [ENDL] TESTS = long long with TESTS = 1 [ENDL] while postfix decrement TESTS , call solve [ENDL] create constant integer max4 with max4 = 10004", "c++": "void solve ( ) long long n , x = 0 , b , y , ans = 0 ; cin >> n ; long long a [ n ] ; for ( long long i = 0 ; i < n ; i ++ ) cin >> a [ i ] ; if ( i == 0 ) v [ x ] . push_back ( a [ i ] ) ; continue ; if ( a [ i ] <= a [ i - 1 ] ) x ++ ; } v [ x ] . push_back ( a [ i ] ) ; if ( x == 0 ) } cout << v [ 0 ] . size ( ) << ' \\n ' ; return ; for ( long long i = 0 ; i < x + 1 ; i ++ ) } if ( i == x ) y = v [ i ] . size ( ) + 1 ; else long long n = v [ i ] . size ( ) ; long long m = v [ i + 1 ] . size ( ) ; if ( m == 1 ) y = n + 1 ; else if ( n == 1 ) y = m + 1 ; else if ( v [ i + 1 ] [ 1 ] - v [ i ] [ n - 1 ] > 1 ) y = n + m ; else if ( v [ i + 1 ] [ 0 ] - v [ i ] [ n - 2 ] > 1 ) y = n + m ; else y = n + 1 ; ans = max ( ans , y ) ; } cout << ans << ' \\n ' ; } return ; long long TESTS = 1 ; } int main() { while ( TESTS -- ) { solve ( ) ; } const int max4 = 10004 ; return 0; }"}}
{"translation": {"en": "create constant integer maxx with maxx = 200005 [ENDL] create constant integer max6 with max6 = 1000006 [ENDL] create constant integer lg5 with lg5 = 17 [ENDL] create constant integer INF with INF = 1000000007 [ENDL] create constant long long INFLL with INFLL = 4LL * 1000000000 * 1000000000 [ENDL] declare powmod with integers a , b , mod as arguments , returning integer [ENDL] create integer res with res = 1 [ENDL] set a to a % mod [ENDL] for b , setting b to b bitshift right 1 [ENDL] if b bitwise and 1 , set res to 1LL * res * a % mod [ENDL] set a to 1LL * a * a % mod [ENDL] return res from function [ENDL] declare gcd with integers a , b as arguments , returning integer [ENDL] while b is greater than 0 [ENDL] create integer t with t = a % b [ENDL] set a to b , set b to t [ENDL] return a from function [ENDL] declare lcm with integers a , b as arguments , returning integer [ENDL] return ( a / ( result of run gcd with a , b as arguments ) ) * b [ENDL] declare is_prime with integer n as argument , returning integer [ENDL] if n is less than or equal to 1 or n is greater than 3 and ( n % 2 is 0 or n % 3 is 0 ) , return 0 from function [ENDL] for i = 5 , t = 2 to i * i is less than or equal to n , incrementing i by t , setting t to 6 - t [ENDL] if n % i is 0 , return 0 from function [ENDL] return 1 from function [ENDL] create integer n , create integer arrays arr , pref , suff , with arr size maxx , pref size maxx , suff size maxx [ENDL] read n [ENDL] if n is 1 , return print 1 print ' \\ n ' , 0 from function [ENDL] for i = 1 to n inclusive , read arr [ i ] [ENDL] for i = 1 to n inclusive [ENDL] if arr [ i ] is greater than arr [ i - 1 ] [ENDL] set pref [ i ] to pref [ i - 1 ] + 1 [ENDL] else [ENDL] set pref [ i ] to 1 [ENDL] for i = n to 1 inclusive , decrementing i [ENDL] if i is n or arr [ i ] is less than arr [ i + 1 ] [ENDL] set suff [ i ] to suff [ i + 1 ] + 1 [ENDL] else [ENDL] set suff [ i ] to 1 [ENDL] create integer res with res = 2 [ENDL] for i = 2 to n exclusive [ENDL] if arr [ i + 1 ] is greater than arr [ i - 1 ] + 1 , set res to maximum of ( res and pref [ i - 1 ] + suff [ i + 1 ] + 1 ) [ENDL] for i = 2 to n exclusive , set res to maximum of ( res and maximum of ( pref [ i ] and suff [ i ] ) + 1 ) [ENDL] print res print ' \\ n ' [ENDL] create const long long inf = 1e9 + 7", "c++": "const int maxx = 200005 ; const int max6 = 1000006 ; const int lg5 = 17 ; const int INF = 1000000007 ; const long long INFLL = 4LL * 1000000000 * 1000000000 ; int powmod ( int a , int b , int mod ) int res = 1 ; a %= mod ; for ( ; b ; b >>= 1 ) if ( b & 1 ) { res = 1LL * res * a % mod ; } a = 1LL * a * a % mod ; return res ; } int gcd ( int a , int b ) } while ( b > 0 ) int t = a % b ; a = b , b = t ; return a ; } int lcm ( int a , int b ) } return ( a / gcd ( a , b ) ) * b ; int is_prime ( int n ) } if ( n <= 1 || n > 3 && ( n % 2 == 0 || n % 3 == 0 ) ) return 0 ; for ( int i = 5 , t = 2 ; i * i <= n ; i += t , t = 6 - t ) if ( n % i == 0 ) return 0 ; return 1 ; int n , arr [ maxx ] , pref [ maxx ] , suff [ maxx ] ; } cin >> n ; int main() { if ( n == 1 ) { return cout << 1 << ' \\n ' , 0 ; } for ( int i = 1 ; i <= n ; i ++ ) { cin >> arr [ i ] ; } for ( int i = 1 ; i <= n ; i ++ ) if ( arr [ i ] > arr [ i - 1 ] ) pref [ i ] = pref [ i - 1 ] + 1 ; else pref [ i ] = 1 ; for ( int i = n ; i >= 1 ; i -- ) } } if ( i == n || arr [ i ] < arr [ i + 1 ] ) suff [ i ] = suff [ i + 1 ] + 1 ; else suff [ i ] = 1 ; int res = 2 ; } } for ( int i = 2 ; i < n ; i ++ ) if ( arr [ i + 1 ] > arr [ i - 1 ] + 1 ) { res = max ( res , pref [ i - 1 ] + suff [ i + 1 ] + 1 ) ; } for ( int i = 2 ; i < n ; i ++ ) { res = max ( res , max ( pref [ i ] , suff [ i ] ) + 1 ) ; } } cout << res << ' \\n ' ; const long long inf = 1e9 + 7 ; return 0; }"}}
{"translation": {"en": "declare integer n [ENDL] read from the input to n [ENDL] create long long ans = 0 and long long arrays a , left and right with size n + 2 [ENDL] change a [ 0 ] to - 1 [ENDL] assign inf to a [ n + 1 ] [ENDL] loop i from 1 to n inclusive incrementing i [ENDL] set right [ 0 ] to 0 [ENDL] loop i from 1 to n inclusive , change right [ i ] to right [ i - 1 ] + 1 if a [ i ] > a [ i - 1 ] , or else 1 [ENDL] set left [ n + 1 ] to 0 [ENDL] loop i from n to 0 inclusive decrementing i , change left [ i ] to left [ i + 1 ] + 1 if a [ i ] < a [ i + 1 ] , or else 1 [ENDL] loop i from 1 to n inclusive [ENDL] if a [ i - 1 ] + 1 is less than a [ i + 1 ] [ENDL] set ans to max of ans and 1 + left [ i + 1 ] + right [ i - 1 ] [ENDL] else [ENDL] set ans to max of ans and ( max of left [ i ] and right [ i ] + 1 ) [ENDL] print ans [ENDL] maxn = const integer with maxn = 100005", "c++": "int n ; int main() { cin >> n ; long long a [ n + 2 ] , left [ n + 2 ] , right [ n + 2 ] , ans = 0 ; a [ 0 ] = - 1 ; a [ n + 1 ] = inf ; for ( int i = 1 ; i <= n ; i ++ ) cin >> a [ i ] ; right [ 0 ] = 0 ; for ( int i = 1 ; i <= n ; i ++ ) right [ i ] = ( a [ i ] > a [ i - 1 ] ? right [ i - 1 ] + 1 : 1 ) ; left [ n + 1 ] = 0 ; for ( int i = n ; i > 0 ; i -- ) left [ i ] = ( a [ i ] < a [ i + 1 ] ? left [ i + 1 ] + 1 : 1 ) ; for ( int i = 1 ; i <= n ; i ++ ) if ( a [ i - 1 ] + 1 < a [ i + 1 ] ) ans = max ( ans , 1 + left [ i + 1 ] + right [ i - 1 ] ) ; else ans = max ( ans , max ( left [ i ] , right [ i ] ) + 1 ) ; cout << ans << endl ; } const int maxn = 100005 ; }"}}
{"translation": {"en": "INF = const integer with INF = 0x3fffffff [ENDL] eps = double with eps = 1e - 8 [ENDL] pi = double with pi = acos of - 1 [ENDL] f = integer array of size maxn [ENDL] g = integer array of size maxn [ENDL] a = integer array of size maxn [ENDL] n = integer [ENDL] read n [ENDL] for i = 1 to n , read a [ i ] [ENDL] for i = 1 to n [ENDL] if a [ i ] > a [ i - 1 ] [ENDL] f [ i ] = f [ i - 1 ] + 1 [ENDL] else [ENDL] f [ i ] = 1 [ENDL] for i = n down to 1 [ENDL] if a [ i ] < a [ i + 1 ] [ENDL] g [ i ] = g [ i + 1 ] + 1 [ENDL] else [ENDL] g [ i ] = 1 [ENDL] ans = integer with ans = 0 [ENDL] for i = 1 to n [ENDL] if a [ i + 1 ] - a [ i - 1 ] > 1 [ENDL] ans = max of ans and f [ i - 1 ] + g [ i + 1 ] + 1 [ENDL] else [ENDL] ans = max of ans and max ( f [ i - 1 ] + 1 , g [ i + 1 ] + 1 ) [ENDL] print ans [ENDL] a , dp1 , dp2 = int array of size 100005 each", "c++": "const int INF = 0x3fffffff ; double eps = 1e-8 ; double pi = acos ( - 1 ) ; int f [ maxn ] ; int g [ maxn ] ; int a [ maxn ] ; int n ; cin >> n ; int main() { for ( int i = 1 ; i <= n ; i ++ ) cin >> a [ i ] ; for ( int i = 1 ; i <= n ; i ++ ) if ( a [ i ] > a [ i - 1 ] ) f [ i ] = f [ i - 1 ] + 1 ; else f [ i ] = 1 ; for ( int i = n ; i >= 1 ; i -- ) } if ( a [ i ] < a [ i + 1 ] ) g [ i ] = g [ i + 1 ] + 1 ; else g [ i ] = 1 ; int ans = 0 ; } for ( int i = 1 ; i <= n ; i ++ ) if ( a [ i + 1 ] - a [ i - 1 ] > 1 ) ans = max ( ans , f [ i - 1 ] + g [ i + 1 ] + 1 ) ; else ans = max ( ans , max ( f [ i - 1 ] + 1 , g [ i + 1 ] + 1 ) ) ; cout << ans << endl ; } } int a [ 100005 ] , dp1 [ 100005 ] , dp2 [ 100005 ] ; }"}}
{"translation": {"en": "n = int [ENDL] read n [ENDL] for i = 1 to n inclusive read a [ i ] [ENDL] set a [ 0 ] to 0x3f3f3f3f [ENDL] set a [ n + 1 ] to 0x3f3f3f3f [ENDL] ans = int with ans = 0 [ENDL] for i = 1 to n inclusive set dp1 [ i ] and dp2 [ i ] to 1 [ENDL] for i = 1 to n inclusive [ENDL] if a [ i ] is greater than a [ i - 1 ] then set dp1 [ i ] to dp1 [ i - 1 ] + 1 [ENDL] set ans to max of ans and dp1 [ i ] [ENDL] for i = n to 0 decrementing i [ENDL] if a [ i ] is less than a [ i + 1 ] then set dp2 [ i ] to dp2 [ i + 1 ] + 1 [ENDL] set ans to max of ans and dp2 [ i ] [ENDL] for i = 2 to n inclusive set ans to max of ans and dp2 [ i ] + 1 [ENDL] for i = 1 to n set ans to max of ans and dp1 [ i ] + 1 [ENDL] for i = 2 to n [ENDL] if a [ i + 1 ] - a [ i - 1 ] is greater than 1 then set ans to max of ans and dp2 [ i + 1 ] + dp1 [ i - 1 ] + 1 [ENDL] print ans [ENDL] a , n , b , c = int", "c++": "int n ; int main() { cin >> n ; for ( int i = 1 ; i <= n ; i ++ ) { cin >> a [ i ] ; } a [ 0 ] = 0x3f3f3f3f ; a [ n + 1 ] = 0x3f3f3f3f ; int ans = 0 ; for ( int i = 1 ; i <= n ; i ++ ) { dp1 [ i ] = dp2 [ i ] = 1 ; } for ( int i = 1 ; i <= n ; i ++ ) if ( a [ i ] > a [ i - 1 ] ) { dp1 [ i ] = dp1 [ i - 1 ] + 1 ; } ans = max ( ans , dp1 [ i ] ) ; for ( int i = n ; i > 0 ; i -- ) } if ( a [ i ] < a [ i + 1 ] ) { dp2 [ i ] = dp2 [ i + 1 ] + 1 ; } ans = max ( ans , dp2 [ i ] ) ; for ( int i = 2 ; i <= n ; i ++ ) { ans = max ( ans , dp2 [ i ] + 1 ) ; } } for ( int i = 1 ; i < n ; i ++ ) { ans = max ( ans , dp1 [ i ] + 1 ) ; } for ( int i = 2 ; i < n ; i ++ ) if ( a [ i + 1 ] - a [ i - 1 ] > 1 ) { ans = max ( ans , dp2 [ i + 1 ] + dp1 [ i - 1 ] + 1 ) ; } cout << ans << endl ; } int a , n , b , c ; return 0; }"}}
{"translation": {"en": "s = array of 8 char [ENDL] w = array of 8 char filled with \" jolteon \" , q = array of 8 char filled with \" flareon \" [ENDL] v = array of 8 char filled with \" umbreon \" , z = array of 8 char filled with \" leafeon \" , l = array of 8 char filled with \" glaceeon \" , m = array of 8 char filled with \" sylveon \" [ENDL] read n [ENDL] read s [ENDL] if n is 8 [ENDL] print \" vaporeon \" [ENDL] else if n is 6 [ENDL] print \" espeon \" [ENDL] else [ENDL] a = 0 [ENDL] b = 0 [ENDL] c = 0 [ENDL] d = 0 [ENDL] e = 0 [ENDL] f = 0 [ENDL] for i = 0 to 8 exclusive [ENDL] if s [ i ] is w [ i ] increment a [ENDL] for i = 0 to 8 exclusive [ENDL] if s [ i ] is q [ i ] increment b [ENDL] for i = 0 to 8 exclusive [ENDL] if s [ i ] is v [ i ] increment c [ENDL] for i = 0 to 8 exclusive [ENDL] if s [ i ] is z [ i ] increment d [ENDL] for i = 0 to 8 exclusive [ENDL] if s [ i ] is l [ i ] increment e [ENDL] for i = 0 to 8 exclusive [ENDL] if s [ i ] is m [ i ] increment f [ENDL] if a > b and a > c and a > d and a > e and a > f [ENDL] print \" jolteon \" [ENDL] if b > a and b > c and b > d and b > e and b > f [ENDL] print \" flareon \" [ENDL] if c > a and c > b and c > d and c > e and c > f [ENDL] print \" umbreon \" [ENDL] if d > a and d > b and d > c and d > e and d > f [ENDL] print \" leafeon \" [ENDL] if e > a and e > b and e > c and e > d and e > f [ENDL] print \" glaceon \" [ENDL] if f > a and f > b and f > c and f > d and f > e [ENDL] print \" sylveon \" [ENDL] create pair of integer , integer array par with size 10001", "c++": "int main() { char s [ 8 ] ; char w [ 8 ] = \" jolteon \" , q [ 8 ] = \" flareon \" ; char v [ 8 ] = \" umbreon \" , z [ 8 ] = \" leafeon \" , l [ 8 ] = \" glaceon \" , m [ 8 ] = \" sylveon \" ; cin >> n ; cin >> s ; if ( n == 8 ) cout << \" vaporeon \" << endl ; else if ( n == 6 ) cout << \" espeon \" << endl ; else a = 0 ; b = 0 ; c = 0 ; int d = 0 ; int e = 0 ; int f = 0 ; for ( int i = 0 ; i < 8 ; i ++ ) if ( s [ i ] == w [ i ] ) { a ++ ; } for ( int i = 0 ; i < 8 ; i ++ ) } if ( s [ i ] == q [ i ] ) { b ++ ; } for ( int i = 0 ; i < 8 ; i ++ ) } if ( s [ i ] == v [ i ] ) { c ++ ; } for ( int i = 0 ; i < 8 ; i ++ ) } if ( s [ i ] == z [ i ] ) { d ++ ; } for ( int i = 0 ; i < 8 ; i ++ ) } if ( s [ i ] == l [ i ] ) { e ++ ; } for ( int i = 0 ; i < 8 ; i ++ ) } if ( s [ i ] == m [ i ] ) { f ++ ; } if ( a > b && a > c && a > d && a > e && a > f ) } cout << \" jolteon \" << endl ; else if ( b > a && b > c && b > d && b > e && b > f ) cout << \" flareon \" << endl ; else if ( c > a && c > b && c > d && c > e && c > f ) cout << \" umbreon \" << endl ; else if ( d > a && d > c && d > b && d > e && d > f ) cout << \" leafeon \" << endl ; else if ( e > a && e > c && e > d && e > b && e > f ) cout << \" glaceon \" << endl ; else if ( f > a && f > c && f > d && f > e && f > b ) cout << \" sylveon \" << endl ; pair < int , int > par [ 10001 ] ; } } return 0; }"}}
{"translation": {"en": "create string set str [ENDL] create string s [ENDL] create integers n , i [ENDL] read n read s [ENDL] if n is 8 [ENDL] print \" vaporeon \" print newline [ENDL] else if n is 6 [ENDL] print \" espeon \" print newline [ENDL] else if n is 7 [ENDL] if s [ 0 ] is ' . ' [ENDL] if s [ 1 ] is ' o ' [ENDL] print \" jolteon \" print newline [ENDL] if s [ 1 ] is ' m ' [ENDL] print \" umbreon \" print newline [ENDL] if s [ 1 ] is ' e ' [ENDL] print \" leafeon \" print newline [ENDL] if s [ 1 ] is ' y ' [ENDL] print \" sylveon \" print newline [ENDL] if s [ 1 ] is ' l ' [ENDL] if s [ 3 ] is ' r ' [ENDL] print \" flareon \" print newline [ENDL] else [ENDL] print \" glaceon \" print newline [ENDL] if s [ 1 ] is ' . ' [ENDL] if s [ 2 ] is ' b ' [ENDL] print \" umbreon \" print newline [ENDL] if s [ 2 ] is ' l ' [ENDL] if s [ 3 ] is ' t ' [ENDL] print \" jolteon \" print newline [ENDL] else [ENDL] print \" sylveon \" print newline [ENDL] if s [ 2 ] is ' a ' [ENDL] if s [ 3 ] is ' r ' [ENDL] print \" flareon \" print newline [ENDL] if s [ 3 ] is ' c ' [ENDL] print \" glaceon \" print newline [ENDL] else [ENDL] print \" leafeon \" print newline [ENDL] if s [ 2 ] is ' . ' [ENDL] if s [ 3 ] is ' r ' [ENDL] print \" flareon \" print newline [ENDL] if s [ 3 ] is ' c ' [ENDL] print \" glaceon \" print newline [ENDL] if s [ 3 ] is ' f ' [ENDL] print \" leafeon \" print newline [ENDL] if s [ 3 ] is ' t ' [ENDL] print \" jolteon \" print newline [ENDL] if s [ 3 ] is ' v ' [ENDL] print \" sylveon \" print newline [ENDL] else [ENDL] print \" umbreon \" print newline [ENDL] if s [ 0 ] is ' j ' [ENDL] print \" jolteon \" print newline [ENDL] if s [ 0 ] is ' f ' [ENDL] print ' flareon \" print newline [ENDL] if s [ 0 ] is ' u ' [ENDL] print \" umbreon \" print newline [ENDL] if s [ 0 ] is ' l ' [ENDL] print \" leafeon \" print newline [ENDL] if s [ 0 ] is ' g ' [ENDL] print \" glaceon \" print newline [ENDL] if s [ 0 ] is ' s ' [ENDL] print \" sylveon \" print newline [ENDL] str = string array of size 12", "c++": "set < string > str ; string s ; int main() { int n , i ; cin >> n >> s ; if ( n == 8 ) cout << \" vaporeon \" << endl ; else if ( n == 6 ) cout << \" espeon \" << endl ; else if ( n == 7 ) if ( s [ 0 ] == ' . ' ) if ( s [ 1 ] == ' o ' ) cout << \" jolteon \" << endl ; if ( s [ 1 ] == ' m ' ) return 0; } cout << \" umbreon \" << endl ; if ( s [ 1 ] == ' e ' ) return 0; } cout << \" leafeon \" << endl ; if ( s [ 1 ] == ' y ' ) return 0; } cout << \" sylveon \" << endl ; if ( s [ 1 ] == ' l ' ) return 0; } if ( s [ 3 ] == ' r ' ) cout << \" flareon \" << endl ; else return 0; cout << \" glaceon \" << endl ; if ( s [ 1 ] == ' . ' ) return 0; } } if ( s [ 2 ] == ' b ' ) cout << \" umbreon \" << endl ; if ( s [ 2 ] == ' l ' ) return 0; } if ( s [ 3 ] == ' t ' ) cout << \" jolteon \" << endl ; else return 0; cout << \" sylveon \" << endl ; if ( s [ 2 ] == ' a ' ) return 0; } } if ( s [ 3 ] == ' r ' ) cout << \" flareon \" << endl ; if ( s [ 3 ] == ' c ' ) return 0; } cout << \" glaceon \" << endl ; else return 0; cout << \" leafeon \" << endl ; if ( s [ 2 ] == ' . ' ) return 0; } } if ( s [ 3 ] == ' r ' ) cout << \" flareon \" << endl ; if ( s [ 3 ] == ' c ' ) return 0; } cout << \" glaceon \" << endl ; if ( s [ 3 ] == ' f ' ) return 0; } cout << \" leafeon \" << endl ; if ( s [ 3 ] == ' t ' ) return 0; } cout << \" jolteon \" << endl ; if ( s [ 3 ] == ' v ' ) return 0; } cout << \" sylveon \" << endl ; else return 0; cout << \" umbreon \" << endl ; if ( s [ 0 ] == ' j ' ) return 0; } } } } cout << \" jolteon \" << endl ; if ( s [ 0 ] == ' f ' ) return 0; } cout << \" flareon \" << endl ; if ( s [ 0 ] == ' u ' ) return 0; } cout << \" umbreon \" << endl ; if ( s [ 0 ] == ' l ' ) return 0; } cout << \" leafeon \" << endl ; if ( s [ 0 ] == ' g ' ) return 0; } cout << \" glaceon \" << endl ; if ( s [ 0 ] == ' s ' ) return 0; } cout << \" sylveon \" << endl ; string str [ 12 ] ; return 0; } } return 0; }"}}
{"translation": {"en": "n , i , j , ck = int [ENDL] read n then str [ 0 ] [ENDL] set str [ 1 ] to \" vaporeon \" [ENDL] set str [ 2 ] to \" jolteon \" [ENDL] set str [ 3 ] to \" flareon \" [ENDL] set str [ 4 ] to \" espeon \" [ENDL] set str [ 5 ] to \" umbreon \" [ENDL] set str [ 6 ] to \" leafeon \" [ENDL] set str [ 7 ] to \" glaceon \" [ENDL] set str [ 8 ] to \" sylveon \" [ENDL] for i = 1 to 8 inclusive [ENDL] if size of str [ i ] is n [ENDL] set ck to 1 [ENDL] for j = 0 to n [ENDL] if str [ 0 ] [ j ] > = ' a ' and str [ 0 ] [ j ] < = ' z ' [ENDL] if str [ 0 ] [ j ] is not str [ i ] [ j ] [ENDL] set ck to 0 [ENDL] break [ENDL] if ck is 1 [ENDL] print str [ i ] [ENDL] print newline [ENDL] create integer N", "c++": "int main() { int n , i , j , ck ; cin >> n >> str [ 0 ] ; str [ 1 ] = \" vaporeon \" ; str [ 2 ] = \" jolteon \" ; str [ 3 ] = \" flareon \" ; str [ 4 ] = \" espeon \" ; str [ 5 ] = \" umbreon \" ; str [ 6 ] = \" leafeon \" ; str [ 7 ] = \" glaceon \" ; str [ 8 ] = \" sylveon \" ; for ( i = 1 ; i <= 8 ; i ++ ) if ( str [ i ] . size ( ) == n ) ck = 1 ; for ( j = 0 ; j < n ; j ++ ) if ( str [ 0 ] [ j ] >= ' a ' && str [ 0 ] [ j ] <= ' z ' ) if ( str [ 0 ] [ j ] != str [ i ] [ j ] ) ck = 0 ; break ; if ( ck == 1 ) } } } cout << str [ i ] << endl ; cout << endl ; return 0; } } } int N ; return 0; }"}}
{"translation": {"en": "create string jolteon with jolteon = \" jolteaon \" [ENDL] create integer jol with jol = 0 [ENDL] create string flareon with flareon = \" flareon \" [ENDL] create integer fla with fla = 0 [ENDL] create string umbreon with umbreon = \" umbreon \" [ENDL] create integer umb with umb = 0 [ENDL] create string leafeon with leafeon = \" leafeon \" [ENDL] create integer leaf with leaf = 0 [ENDL] create string glaceon with glaceon = \" glaceon \" [ENDL] create integer gla with gla = 0 [ENDL] create string sylveon with sylveon = \" sylveon \" [ENDL] create integer syl with syl = 0 [ENDL] create string eevee [ENDL] read N [ENDL] read eevee [ENDL] if N is 8 [ENDL] print \" vaporeon \\ n \" [ENDL] else if N is 6 [ENDL] print \" espeon \\ n \" [ENDL] else [ENDL] for x = 0 to N exclusive [ENDL] if eevee [ x ] is not ' . ' [ENDL] iif eevee [ x ] is flareon [ x ] and fla is 0 [ENDL] if x is not 2 , set leaf to 1 [ENDL] set jol to 1 [ENDL] set syl to 1 [ENDL] set umb to 1 [ENDL] if x is not 1 and x is not 2 , set gla to 1 [ENDL] if eevee [ x ] is glaceon [ x ] and gla is 0 [ENDL] if x is not 2 , set leaf to 1 [ENDL] set jol to 1 [ENDL] set syl to 1 [ENDL] set umb to 1 [ENDL] if x is not 1 and x is not 2 , set fla to 1 [ENDL] if eevee [ x ] is leafeon [ x ] and leaf is 0 [ENDL] if x is not 2 [ENDL] set fla to 1 [ENDL] set gla to 1 [ENDL] set jol to 1 [ENDL] set syl to 1 [ENDL] set umb to 1 [ENDL] if eevee [ x ] is jolteon [ x ] and jol is 0 [ENDL] set leaf to 1 [ENDL] set fla to 1 [ENDL] if x is not 2 , set syl to 1 [ENDL] set umb to 1 [ENDL] set gla to 1 [ENDL] if eevee [ x ] is umbreon [ x ] and umb is 0 [ENDL] set leaf to 1 [ENDL] set jol to 1 [ENDL] set syl to 1 [ENDL] set fla to 1 [ENDL] set gla to 1 [ENDL] if eevee [ x ] is sylveon [ x ] and syl is 0 [ENDL] set leaf to 1 [ENDL] set fla to 1 [ENDL] if x is not 2 , set jol to 1 [ENDL] set umb to 1 [ENDL] set gla to 1 [ENDL] if syl + leaf + jol + umb + gla + fla is 5 [ENDL] if syl is 0 , print sylveon print \" \\ n \" [ENDL] if gla is 0 , print glaceon print \" \\ n \" [ENDL] if fla is 0 , print flareon print \" \\ n \" [ENDL] if jol is 0 , print jolteon print \" \\ n \" [ENDL] if umb is 0 print umbreon print \" \\ n \" [ENDL] if leaf is 0 print leafon print \" \\ n \" [ENDL] break loop [ENDL] let n be an integer", "c++": "int main() { string jolteon = \" jolteon \" ; int jol = 0 ; string flareon = \" flareon \" ; int fla = 0 ; string umbreon = \" umbreon \" ; int umb = 0 ; string leafeon = \" leafeon \" ; int leaf = 0 ; string glaceon = \" glaceon \" ; int gla = 0 ; string sylveon = \" sylveon \" ; int syl = 0 ; string eevee ; cin >> N ; cin >> eevee ; if ( N == 8 ) cout << \" vaporeon\\n \" ; else if ( N == 6 ) cout << \" espeon\\n \" ; else for ( int x = 0 ; x < N ; x ++ ) if ( eevee [ x ] != ' . ' ) if ( eevee [ x ] == flareon [ x ] && fla == 0 ) if ( x != 2 ) { leaf = 1 ; } jol = 1 ; syl = 1 ; umb = 1 ; if ( x != 1 && x != 2 ) { gla = 1 ; } if ( eevee [ x ] == glaceon [ x ] && gla == 0 ) } if ( x != 2 ) { leaf = 1 ; } jol = 1 ; syl = 1 ; umb = 1 ; if ( x != 1 && x != 2 ) { fla = 1 ; } if ( eevee [ x ] == leafeon [ x ] && leaf == 0 ) } if ( x != 2 ) fla = 1 ; gla = 1 ; jol = 1 ; } syl = 1 ; umb = 1 ; if ( eevee [ x ] == jolteon [ x ] && jol == 0 ) } leaf = 1 ; fla = 1 ; if ( x != 2 ) { syl = 1 ; } umb = 1 ; gla = 1 ; if ( eevee [ x ] == umbreon [ x ] && umb == 0 ) } leaf = 1 ; jol = 1 ; syl = 1 ; fla = 1 ; gla = 1 ; if ( eevee [ x ] == sylveon [ x ] && syl == 0 ) } leaf = 1 ; fla = 1 ; if ( x != 2 ) { jol = 1 ; } umb = 1 ; gla = 1 ; if ( syl + leaf + jol + umb + gla + fla == 5 ) } if ( syl == 0 ) { cout << sylveon << \" \\n \" ; } if ( gla == 0 ) { cout << glaceon << \" \\n \" ; } if ( fla == 0 ) { cout << flareon << \" \\n \" ; } if ( jol == 0 ) { cout << jolteon << \" \\n \" ; } if ( umb == 0 ) { cout << umbreon << \" \\n \" ; } if ( leaf == 0 ) { cout << leafeon << \" \\n \" ; } break ; int n ; } } } } }"}}
{"translation": {"en": "read n [ENDL] define n number of pair pr with two integer elements [ENDL] for i = 0 to n exclusive , read [ENDL] sort pr , pr + n [ENDL] for j = 0 to n - 1 ( exclusive ) [ENDL] if first element of jth pair is less than j + 1 th pair , and second element of jth pair is greater than j + 1th pair , do the following [ENDL] print Happy Alex and a new line [ENDL] print Poor Alex and a new line [ENDL] t , a , b , h , p = int with h = 0 and p = 0", "c++": "int main() { cin >> n ; pair < int , int > pr [ n ] ; for ( int i = 0 ; i < n ; i ++ ) { cin >> pr [ i ] . first >> pr [ i ] . second ; } sort ( pr , pr + n ) ; for ( int j = 0 ; j < n - 1 ; j ++ ) if ( pr [ j ] . first < pr [ j + 1 ] . first && pr [ j ] . second > pr [ j + 1 ] . second ) cout << \" Happy Alex \" << endl ; cout << \" Poor Alex \" << endl ; return 0; } } int t , a , b , h = 0 , p = 0 ; return 0; }"}}
{"translation": {"en": "read t [ENDL] loop t times [ENDL] read a then b [ENDL] if a is not equal to b increment p [ENDL] if p is not equal 0 [ENDL] print \" Happy Alex \" [ENDL] else [ENDL] print \" Poor Alex \" [ENDL] declare integer variable n", "c++": "int main() { cin >> t ; while ( t -- ) cin >> a >> b ; if ( a != b ) p ++ ; if ( p != 0 ) } cout << \" Happy Alex \" << endl ; else cout << \" Poor Alex \" << endl ; int n ; return 0; }"}}
{"translation": {"en": "read n [ENDL] create doubles x and y [ENDL] create double z [ENDL] double pointer * arr points to new array of doubles with size n [ENDL] for i = 0 to n exclusive [ENDL] read x and y [ENDL] declare double variable q = x + ( y / 100000 ) [ENDL] set value of arr [ i ] to q [ENDL] sort arr [ENDL] for integer i = 0 to n - 1 exclusive [ENDL] if arr [ i ] ! = arr [ i + 1 ] [ENDL] if arr [ i + 1 ] - arr [ i ] is less than 1 [ENDL] print \" Happy Alex \" [ENDL] print \" Poor Alex \" [ENDL] count , i , j , n = int with count = 0 and a , b = int array of size 100001 each", "c++": "int main() { cin >> n ; double x , y ; double z ; double * arr = new double [ n ] ; for ( int i = 0 ; i < n ; i ++ ) cin >> x >> y ; double q = x + ( y / 100000 ) ; arr [ i ] = q ; sort ( arr , arr + n ) ; } for ( int i = 0 ; i < n - 1 ; i ++ ) if ( int ( arr [ i ] ) != int ( arr [ i + 1 ] ) ) if ( arr [ i + 1 ] - arr [ i ] < 1 ) cout << \" Happy Alex \" << endl ; cout << \" Poor Alex \" << endl ; return 0; } } } int a [ 100001 ] , b [ 100001 ] , count = 0 , i , j , n ; return 0; }"}}
{"translation": {"en": "read n [ENDL] read n values into a then b [ENDL] for j = 0 to n [ENDL] if a [ j ] is not b [ j ] [ENDL] print \" Happy Alex \" [ENDL] set count to 1 [ENDL] break loop [ENDL] if count is 0 then print \" Poor Alex \" [ENDL] create integer n", "c++": "int main() { cin >> n ; for ( i = 0 ; i < n ; i ++ ) { cin >> a [ i ] >> b [ i ] ; } for ( j = 0 ; j < n ; j ++ ) if ( a [ j ] != b [ j ] ) cout << \" Happy Alex \" << endl ; count = 1 ; break ; if ( count == 0 ) cout << \" Poor Alex \" << endl ; } } int n ; return 0; }"}}
{"translation": {"en": "read n [ENDL] create pair array of integer , integer pr with size n [ENDL] for i = 0 to n exclusive , read first element of pr [ i ] read second element of pr [ i ] [ENDL] sort elements from pr to pr + n [ENDL] for j = 0 to n - 1 exclusive [ENDL] if first element of pr [ j ] is less than first element of pr [ j + 1 ] and second element of pr [ j ] is greater than second element of pr [ j + 1 ] [ENDL] print \" Happy Alex \" print newline [ENDL] print \" Poor Alex \" print newline [ENDL] declare integer variables n , a and b", "c++": "int main() { cin >> n ; pair < int , int > pr [ n ] ; for ( int i = 0 ; i < n ; i ++ ) { cin >> pr [ i ] . first >> pr [ i ] . second ; } sort ( pr , pr + n ) ; for ( int j = 0 ; j < n - 1 ; j ++ ) if ( pr [ j ] . first < pr [ j + 1 ] . first && pr [ j ] . second > pr [ j + 1 ] . second ) cout << \" Happy Alex \" << endl ; cout << \" Poor Alex \" << endl ; return 0; } } int n , a , b ; return 0; }"}}
{"translation": {"en": "read input to n [ENDL] for integer i = 1 to n inclusive [ENDL] read a and b [ENDL] if a ! = b [ENDL] print \" Happy Alex \" [ENDL] print \" Poor Alex \" [ENDL] create constant integer MAXN with MAXN = 100000 + 10", "c++": "int main() { cin >> n ; for ( int i = 1 ; i <= n ; i ++ ) cin >> a >> b ; if ( a != b ) cout << \" Happy Alex \" << endl ; cout << \" Poor Alex \" << endl ; return 0; } } const int MAXN = 100000 + 10 ; return 0; }"}}
{"translation": {"en": "create constant long double eps with eps = 1e - 10 [ENDL] create integer array cnt with size MAXN [ENDL] declare check with integer n as argument , returning integer [ENDL] for i = 0 to i + 2 is less than n , incrementing i [ENDL] if cnt [ i ] is 0 , break current loop iteration [ENDL] if cnt [ i ] is greater than or equal to 2 and cnt [ i + 1 ] is greater than or equal to 0 , return 1 from function [ENDL] if cnt [ i ] is less than or equal to - 2 and cnt [ i + 1 ] is less than or equal to 0 , return - 1 from function [ENDL] increment cnt [ i + 1 ] by cnt [ i ] [ENDL] increment cnt [ i + 2 ] by cnt [ i ] [ENDL] create long double p with p = square root of ( long double casted 5 ) + 1 [ENDL] set p to p / 2 [ENDL] create long double ret with ret = p * cnt [ n - 2 ] + cnt [ n - 1 ] [ENDL] if absolute value of ret is less than eps , return 0 from function [ENDL] if ret is greater than 0 , return 1 from function [ENDL] return - 1 from function [ENDL] create strings s1 , s2 [ENDL] read s1 read s2 [ENDL] create integer n with n = maximum of size of s1 and size of s2 [ENDL] if size of s1 is less than n , set s1 to string initialized with ( n - size of s1 , ' 0 ' ) + s1 [ENDL] if size of s2 is less than n , set s2 to string initialized with ( n - size of s2 , ' 0 ' ) + s2 [ENDL] for i = 0 to n exclusive [ENDL] create integer a with a = s1 [ i ] - ' 0 ' [ENDL] create integer b with b = s2 [ i ] - ' 0 ' [ENDL] set cnt [ i ] to a - b [ENDL] create integer ret with ret = result of run check with n as argument [ENDL] if ret is 0 [ENDL] print \" = \" print newline [ENDL] else if ret is - 1 [ENDL] print \" < \" print newline [ENDL] else [ENDL] print \" > \" print newline [ENDL] s1 , s2 = string", "c++": "const long double eps = 1e-10 ; int cnt [ MAXN ] ; int check ( int n ) for ( int i = 0 ; i + 2 < n ; i ++ ) if ( cnt [ i ] == 0 ) continue ; if ( cnt [ i ] >= 2 && cnt [ i + 1 ] >= 0 ) return 1 ; if ( cnt [ i ] <= - 2 && cnt [ i + 1 ] <= 0 ) return - 1 ; cnt [ i + 1 ] += cnt [ i ] ; cnt [ i + 2 ] += cnt [ i ] ; long double p = sqrt ( ( long double ) 5 ) + 1 ; } p /= 2 ; long double ret = p * cnt [ n - 2 ] + cnt [ n - 1 ] ; if ( fabs ( ret ) < eps ) return 0 ; if ( ret > 0 ) return 1 ; return - 1 ; string s1 , s2 ; } int main() { cin >> s1 >> s2 ; int n = max ( s1 . size ( ) , s2 . size ( ) ) ; if ( s1 . size ( ) < n ) s1 = string ( n - s1 . size ( ) , ' 0 ' ) + s1 ; if ( s2 . size ( ) < n ) s2 = string ( n - s2 . size ( ) , ' 0 ' ) + s2 ; for ( int i = 0 ; i < n ; i ++ ) int a = s1 [ i ] - ' 0 ' ; int b = s2 [ i ] - ' 0 ' ; cnt [ i ] = a - b ; int ret = check ( n ) ; } if ( ret == 0 ) cout << \" = \" << endl ; else if ( ret == - 1 ) cout << \" < \" << endl ; else cout << \" > \" << endl ; string s1 , s2 ; return 0; }"}}
{"translation": {"en": "read a line into s1 using cin [ENDL] read a line into s2 using cin [ENDL] sz1 = int with sz1 = size of s1 [ENDL] sz2 = int with sz2 = size of s2 [ENDL] swaped = bool with swaped = false [ENDL] if sz1 is less than sz2 [ENDL] call swap on s1 and s2 [ENDL] call swap on sz1 and sz2 [ENDL] set swaped to true [ENDL] if sz1 is greater than sz2 [ENDL] aux = string with aux = \" \" [ENDL] for i = 1 to sz1 - sz2 inclusive append \" 0 \" to aux [ENDL] prepend aux to s2 [ENDL] prepend \" 0 \" to s1 [ENDL] prepend \" 0 \" to s2 [ENDL] increment sz1 [ENDL] for i = 1 to sz1 - 1 [ENDL] if s1 [ i ] and s1 [ i + 1 ] are both ' 1 ' [ENDL] set s1 [ i - 1 ] to ' 1 ' [ENDL] set s1 [ i ] to ' 0 ' [ENDL] set s1 [ i + 1 ] to ' 0 ' [ENDL] j = int with j = i - 2 [ENDL] loop while j is greater than 0 and s1 [ j ] is ' 1 ' [ENDL] set s1 [ j - 1 ] to ' 1 ' [ENDL] set s1 [ j ] to ' 0 ' [ENDL] set s1 [ j + 1 ] to ' 0 ' [ENDL] decrement j by 2 [ENDL] if s2 [ i ] and s2 [ i + 1 ] are both ' 1 ' [ENDL] set s2 [ i - 1 ] to ' 1 ' [ENDL] set s2 [ i ] to ' 0 ' [ENDL] set s2 [ i + 1 ] to ' 0 ' [ENDL] j = int with j = i - 2 [ENDL] loop while j is greater than 0 and s2 [ j ] is ' 1 ' [ENDL] set s2 [ j - 1 ] to ' 1 ' [ENDL] set s2 [ j ] to ' 0 ' [ENDL] set s2 [ j + 1 ] to ' 0 ' [ENDL] decrement j by 2 [ENDL] for i = 0 to sz1 [ENDL] if s1 [ i ] is greater than s2 [ i ] [ENDL] if swaped is false [ENDL] print ' > ' [ENDL] else [ENDL] print ' < ' [ENDL] if s18i ] is less than s2 [ i ] [ENDL] if swaped is false [ENDL] print ' < ' [ENDL] else [ENDL] print ' > ' [ENDL] print ' = ' [ENDL] create constant double PI with PI = 3 . 14159265358979323846264338327", "c++": "getline ( cin , s1 ) ; int main() { getline ( cin , s2 ) ; int sz1 = s1 . size ( ) ; int sz2 = s2 . size ( ) ; bool swaped = 0 ; if ( sz1 < sz2 ) swap ( s1 , s2 ) ; swap ( sz1 , sz2 ) ; swaped = 1 ; if ( sz1 > sz2 ) } string aux = \"  \" ; for ( int i = 1 ; i + sz2 <= sz1 ; ++ i ) { aux += \" 0 \" ; } s2 = aux + s2 ; s1 = \" 0 \" + s1 ; } s2 = \" 0 \" + s2 ; sz1 ++ ; for ( int i = 1 ; i + 1 < sz1 ; ++ i ) if ( s1 [ i ] == ' 1 ' and s1 [ i + 1 ] == ' 1 ' ) s1 [ i - 1 ] = ' 1 ' ; s1 [ i ] = ' 0 ' ; s1 [ i + 1 ] = ' 0 ' ; int j = i - 2 ; while ( j - 1 >= 0 and s1 [ j ] == ' 1 ' ) s1 [ j - 1 ] = ' 1 ' ; s1 [ j ] = ' 0 ' ; s1 [ j + 1 ] = ' 0 ' ; j -= 2 ; if ( s2 [ i ] == ' 1 ' and s2 [ i + 1 ] == ' 1 ' ) } } s2 [ i - 1 ] = ' 1 ' ; s2 [ i ] = ' 0 ' ; s2 [ i + 1 ] = ' 0 ' ; int j = i - 2 ; while ( j - 1 >= 0 and s2 [ j ] == ' 1 ' ) s2 [ j - 1 ] = ' 1 ' ; s2 [ j ] = ' 0 ' ; s2 [ j + 1 ] = ' 0 ' ; j -= 2 ; for ( int i = 0 ; i < sz1 ; ++ i ) } } } if ( s1 [ i ] > s2 [ i ] ) if ( ! swaped ) cout << ' > ' << ' \\n ' ; else cout << ' < ' << ' \\n ' ; else if ( s1 [ i ] < s2 [ i ] ) } return 0; if ( ! swaped ) cout << ' < ' << ' \\n ' ; else cout << ' > ' << ' \\n ' ; cout << ' = ' << ' \\n ' ; } return 0; } } const double PI = 3.14159265358979323846264338327 ; return 0; }"}}
{"translation": {"en": "create strings a , b [ENDL] read a read b [ENDL] create integer vectors a1 , b1 with a1 initialized with 100020 , b1 initialized with 100020 [ENDL] for i = size of a - 1 to 0 inclusive , decrementing i , set a1 [ size of a - 1 - i ] to a [ i ] - ' 0 ' [ENDL] for i = size of b - 1 to 0 inclusive , decrementing i , set b1 [ size of b - 1 - i ] to b [ i ] - ' 0 ' [ENDL] for i = 100010 to 0 inclusive , decrementing i [ENDL] for j = i to a1 [ j ] and a1 [ j + 1 ] , incrementing j by 2 , set a1 [ j ] to a1 [ j + 1 ] to 0 , set a1 [ j + 2 ] to 1 [ENDL] for j = i to b1 [ j ] and b1 [ j + 1 ] , incrementing j by 2 , set b1 [ j ] to b1 [ j + 1 ] to 0 , set b1 [ j + 2 ] to 1 [ENDL] for i = 100010 to 0 inclusive , decrementing i [ENDL] if a1 [ i ] is less than b1 [ i ] , return print ' < ' print newline , 0 from function [ENDL] if a1 [ i ] is greater than b1 [ i ] , return print ' > ' print newline , 0 [ENDL] print ' = ' print newline [ENDL] create a map from integers to strings with name m", "c++": "string a , b ; int main() { cin >> a >> b ; vector < int > a1 ( 100020 ) , b1 ( 100020 ) ; for ( int i = a . size ( ) - 1 ; i >= 0 ; i -- ) a1 [ a . size ( ) - 1 - i ] = a [ i ] - ' 0 ' ; for ( int i = b . size ( ) - 1 ; i >= 0 ; i -- ) b1 [ b . size ( ) - 1 - i ] = b [ i ] - ' 0 ' ; for ( int i = 100010 ; i >= 0 ; i -- ) for ( int j = i ; a1 [ j ] && a1 [ j + 1 ] ; j += 2 ) a1 [ j ] = a1 [ j + 1 ] = 0 , a1 [ j + 2 ] = 1 ; for ( int j = i ; b1 [ j ] && b1 [ j + 1 ] ; j += 2 ) b1 [ j ] = b1 [ j + 1 ] = 0 , b1 [ j + 2 ] = 1 ; for ( int i = 100010 ; i >= 0 ; i -- ) } if ( a1 [ i ] < b1 [ i ] ) return cout << ' < ' << endl , 0 ; if ( a1 [ i ] > b1 [ i ] ) return cout << ' > ' << endl , 0 ; cout << ' = ' << endl ; } map < int , string > m ; return 0; }"}}
{"translation": {"en": "create iterator it for map of int to strings [ENDL] s = array of characters of size 20 [ENDL] declare integer variable n [ENDL] m [ 0 ] = \" January \" [ENDL] m [ 1 ] = \" February \" [ENDL] m [ 2 ] = \" March \" [ENDL] m [ 3 ] = \" April \" [ENDL] m [ 4 ] = \" May \" [ENDL] m [ 5 ] = \" June \" [ENDL] m [ 6 ] = \" July \" [ENDL] m [ 7 ] = \" August \" [ENDL] m [ 8 ] = \" September \" [ENDL] m [ 9 ] = \" October \" [ENDL] m [ 10 ] = \" November \" [ENDL] m [ 11 ] = \" December \" [ENDL] while cin > > s > > n [ENDL] create integer j with value 0 [ENDL] move it through m from the beginning [ENDL] increment j [ENDL] if it - > second = s . break [ENDL] print m [ ( j + n - 1 ) % 12 ] and a new line [ENDL] create map m from integer to string", "c++": "map < int , string > :: iterator it ; char s [ 20 ] ; int main() { int n ; m [ 0 ] = \" January \" ; m [ 1 ] = \" February \" ; m [ 2 ] = \" March \" ; m [ 3 ] = \" April \" ; m [ 4 ] = \" May \" ; m [ 5 ] = \" June \" ; m [ 6 ] = \" July \" ; m [ 7 ] = \" August \" ; m [ 8 ] = \" September \" ; m [ 9 ] = \" October \" ; m [ 10 ] = \" November \" ; m [ 11 ] = \" December \" ; while ( cin >> s >> n ) int j = 0 ; for ( it = m . begin ( ) ; it != m . end ( ) ; it ++ ) ++ j ; if ( it -> second == s ) break ; cout << m [ ( j + n - 1 ) % 12 ] << endl ; } map < int , string > m ; } return 0; }"}}
{"translation": {"en": "create map iterator it from integer to string [ENDL] create character array s with size 20 [ENDL] create integer n [ENDL] set m [ 0 ] to \" January \" [ENDL] set m [ 1 ] to \" February \" [ENDL] set m [ 2 ] to \" March \" [ENDL] set m [ 3 ] to \" April \" [ENDL] set m [ 4 ] to \" May \" [ENDL] set m [ 5 ] to \" June \" [ENDL] set m [ 6 ] to \" July \" [ENDL] set m [ 7 ] to \" August \" [ENDL] set m [ 8 ] to \" September \" [ENDL] set m [ 9 ] to \" October \" [ENDL] set m [ 10 ] to \" November \" [ENDL] set m [ 11 ] to \" December \" [ENDL] while read s read n [ENDL] create integer j with j = 0 [ENDL] for it = beginning of m to it is not end of m , incrementing it [ENDL] increment j [ENDL] if second element of it is s , break loop [ENDL] print m [ ( j + n - 1 ) % 12 ] print newline [ENDL] let a be string", "c++": "map < int , string > :: iterator it ; char s [ 20 ] ; int main() { int n ; m [ 0 ] = \" January \" ; m [ 1 ] = \" February \" ; m [ 2 ] = \" March \" ; m [ 3 ] = \" April \" ; m [ 4 ] = \" May \" ; m [ 5 ] = \" June \" ; m [ 6 ] = \" July \" ; m [ 7 ] = \" August \" ; m [ 8 ] = \" September \" ; m [ 9 ] = \" October \" ; m [ 10 ] = \" November \" ; m [ 11 ] = \" December \" ; while ( cin >> s >> n ) int j = 0 ; for ( it = m . begin ( ) ; it != m . end ( ) ; it ++ ) ++ j ; if ( it -> second == s ) break ; cout << m [ ( j + n - 1 ) % 12 ] << endl ; } string a ; } return 0; }"}}
{"translation": {"en": "s = integer [ENDL] read a and s [ENDL] declare integer variable d [ENDL] if a is equal to \" January \" [ENDL] set d to 1 [ENDL] else if a is equal to \" February \" [ENDL] set value of d to 2 [ENDL] else if a is equal to \" March \" [ENDL] set value of d to 3 [ENDL] else if a is equal to \" April \" [ENDL] set value of d to 4 [ENDL] else if a is equal to \" May \" [ENDL] set d to 5 [ENDL] else if a is equal to \" June \" [ENDL] set value of d to 6 [ENDL] else if a is equal to \" July \" [ENDL] set value of d to 7 [ENDL] else if a is equal to \" August \" [ENDL] set value of d to 8 [ENDL] else if a is equal to \" September \" [ENDL] set d to 9 [ENDL] else if a is equal to \" October \" [ENDL] set d to 10 [ENDL] else if a is equal to \" November \" [ENDL] d = 11 [ENDL] else [ENDL] d = 12 [ENDL] decrease d by one [ENDL] d = d + s [ENDL] d = d % 12 [ENDL] if d is equal to 0 [ENDL] a = \" January \" [ENDL] else if d is equal to 1 [ENDL] a = \" February \" [ENDL] else if d is equal to 2 [ENDL] a = \" March \" [ENDL] else if d is equal to 3 [ENDL] a = \" April \" [ENDL] else if d is equal to 4 [ENDL] a = \" May \" [ENDL] else if d is equal to 5 [ENDL] a = \" June \" [ENDL] else if d is equal to 6 [ENDL] a = \" July \" [ENDL] else if d is equal to 7 [ENDL] a = \" August \" [ENDL] else if d is equal to 8 [ENDL] a = \" September \" [ENDL] else if d is equal to 9 [ENDL] a = \" October \" [ENDL] else if d is equal to 10 [ENDL] a = \" November \" [ENDL] else [ENDL] a = \" December \" [ENDL] print a and a new line [ENDL] v is a vector of strings with 120 elements", "c++": "int main() { int s ; cin >> a >> s ; int d ; if ( a == \" January \" ) d = 1 ; else if ( a == \" February \" ) d = 2 ; else if ( a == \" March \" ) d = 3 ; else if ( a == \" April \" ) d = 4 ; else if ( a == \" May \" ) d = 5 ; else if ( a == \" June \" ) d = 6 ; else if ( a == \" July \" ) d = 7 ; else if ( a == \" August \" ) d = 8 ; else if ( a == \" September \" ) d = 9 ; else if ( a == \" October \" ) d = 10 ; else if ( a == \" November \" ) d = 11 ; else d = 12 ; d -- ; d = d + s ; d = d % 12 ; if ( d == 0 ) a = \" January \" ; else if ( d == 1 ) a = \" February \" ; else if ( d == 2 ) a = \" March \" ; else if ( d == 3 ) a = \" April \" ; else if ( d == 4 ) a = \" May \" ; else if ( d == 5 ) a = \" June \" ; else if ( d == 6 ) a = \" July \" ; else if ( d == 7 ) a = \" August \" ; else if ( d == 8 ) a = \" September \" ; else if ( d == 9 ) a = \" October \" ; else if ( d == 10 ) a = \" November \" ; else a = \" December \" ; cout << a << endl ; vector < string > v ( 120 ) ; }"}}
{"translation": {"en": "for integer i = 0 to 120 exclusive [ENDL] v [ i ] = \" January \" [ENDL] v [ i + 1 ] = \" February \" [ENDL] v [ i + 2 ] = \" March \" [ENDL] v [ i + 3 ] = \" April \" [ENDL] v [ i + 4 ] = \" May \" [ENDL] v [ i + 5 ] = \" June \" [ENDL] v [ i + 6 ] = \" July \" [ENDL] v [ i + 7 ] = \" August \" [ENDL] v [ i + 8 ] = \" September \" [ENDL] v [ i + 9 ] = \" October \" [ENDL] v [ i + 10 ] = \" November \" [ENDL] v [ i + 11 ] = \" December \" [ENDL] x = string [ENDL] read x [ENDL] declare integers n and z [ENDL] read n [ENDL] for i = 0 to 120 exclusive [ENDL] if v [ i ] = x [ENDL] assign value of i to the z [ENDL] break the loop [ENDL] print v [ z + n ] and a new line [ENDL] let num be an array of integers of length 3005", "c++": "int main() { for ( int i = 0 ; i < 120 ; i += 12 ) v [ i ] = \" January \" ; v [ i + 1 ] = \" February \" ; v [ i + 2 ] = \" March \" ; v [ i + 3 ] = \" April \" ; v [ i + 4 ] = \" May \" ; v [ i + 5 ] = \" June \" ; v [ i + 6 ] = \" July \" ; v [ i + 7 ] = \" August \" ; v [ i + 8 ] = \" September \" ; v [ i + 9 ] = \" October \" ; v [ i + 10 ] = \" November \" ; v [ i + 11 ] = \" December \" ; string x ; } cin >> x ; int n , z ; cin >> n ; for ( int i = 0 ; i < 120 ; i ++ ) if ( v [ i ] == x ) z = i ; break ; cout << v [ z + n ] << endl ; } } int num [ 3005 ] ; }"}}
{"translation": {"en": "create a map from strings to integers with name ma [ENDL] set integer ans to 0 [ENDL] boolean function is_prime with integer arguments u [ENDL] s = string [ENDL] s = \" January \" [ENDL] ma [ s ] = 1 [ENDL] s = \" February \" [ENDL] ma [ s ] = 2 [ENDL] s = \" March \" [ENDL] ma [ s ] = 3 [ENDL] s = \" April \" [ENDL] set value of ma [ s ] to 4 [ENDL] s = \" May \" [ENDL] ma [ s ] = 5 [ENDL] ma [ \" June \" ] = 6 [ENDL] ma [ \" July \" ] = 7 [ENDL] ma [ \" August \" ] = 8 [ENDL] ma [ \" September \" ] = 9 [ENDL] ma [ \" October \" ] = 10 [ENDL] ma [ \" November \" ] = 11 [ENDL] ma [ \" December \" ] = 12 [ENDL] n = integer [ENDL] read s [ENDL] read n [ENDL] if n % 12 = 0 [ENDL] print s and a new line [ENDL] else [ENDL] set integer a to ma [ s ] [ENDL] increase n by a [ENDL] if n % 12 = 1 , print \" January \" and a new line [ENDL] if n % 12 = 2 , print \" February \" and a new line [ENDL] if n % 12 = 3 , print \" March \" and a new line [ENDL] if n % 12 = 4 , print \" April \" and a new line [ENDL] if n % 12 = 5 , print \" May \" and a new line [ENDL] if n % 12 = 6 , print \" June \" and a new line [ENDL] if n % 12 = 7 , print \" July \" and a new line [ENDL] if n % 12 = 8 , print \" August \" and a new line [ENDL] if n % 12 = 9 , print \" September \" and a new line [ENDL] if n % 12 = 10 , print \" October \" and a new line [ENDL] if n % 12 = 11 , print \" November \" and a new line [ENDL] if n % 12 = 0 , print \" December \" and a new line [ENDL] declare inline nxt with no arguments , returning long long", "c++": "map < string , int > ma ; int ans = 0 ; bool is_prime ( int u ) ; string s ; int main() { s = \" January \" ; ma [ s ] = 1 ; s = \" February \" ; ma [ s ] = 2 ; s = \" March \" ; ma [ s ] = 3 ; s = \" April \" ; ma [ s ] = 4 ; s = \" May \" ; ma [ s ] = 5 ; ma [ \" June \" ] = 6 ; ma [ \" July \" ] = 7 ; ma [ \" August \" ] = 8 ; ma [ \" September \" ] = 9 ; ma [ \" October \" ] = 10 ; ma [ \" November \" ] = 11 ; ma [ \" December \" ] = 12 ; int n ; cin >> s ; cin >> n ; if ( n % 12 == 0 ) cout << s << endl ; else int a = ma [ s ] ; n += a ; if ( n % 12 == 1 ) cout << \" January \" << endl ; if ( n % 12 == 2 ) cout << \" February \" << endl ; if ( n % 12 == 3 ) cout << \" March \" << endl ; if ( n % 12 == 4 ) cout << \" April \" << endl ; if ( n % 12 == 5 ) cout << \" May \" << endl ; if ( n % 12 == 6 ) cout << \" June \" << endl ; if ( n % 12 == 7 ) cout << \" July \" << endl ; if ( n % 12 == 8 ) cout << \" August \" << endl ; if ( n % 12 == 9 ) cout << \" September \" << endl ; if ( n % 12 == 10 ) cout << \" October \" << endl ; if ( n % 12 == 11 ) cout << \" November \" << endl ; if ( n % 12 == 0 ) cout << \" December \" << endl ; inline long long nxt ( ) } }"}}
{"translation": {"en": "create long longs _x , _tmp with _x = 0 , _tmp = 1 [ENDL] create character _tc with _tc = read character [ENDL] while _tc is less than ' 0 ' or _tc is greater than ' 9 ' and _tc is not ' - ' , set _tc to read character [ENDL] if _tc is ' - ' , set _tc to read character , set _tmp to - 1 [ENDL] while _tc is greater than or equal to ' 0 ' and _tc is less than or equal to ' 9 ' , set _x to _x * 10 , increment _x by ( _tc - ' 0 ' ) , set _tc to read character [ENDL] return _x * _tmp from function [ENDL] create string array s with size 170 [ENDL] for i = 1 to 160 inclusive [ENDL] if ( i % 12 = = 1 ) s [ i ] = \" January \" ; [ENDL] if ( i % 12 = = 2 ) s [ i ] = \" February \" ; [ENDL] if ( i % 12 = = 3 ) s [ i ] = \" March \" ; [ENDL] if ( i % 12 = = 4 ) s [ i ] = \" April \" ; [ENDL] if ( i % 12 = = 5 ) s [ i ] = \" May \" ; [ENDL] if ( i % 12 = = 6 ) s [ i ] = \" June \" ; [ENDL] if ( i % 12 = = 7 ) s [ i ] = \" July \" ; [ENDL] if ( i % 12 = = 8 ) s [ i ] = \" August \" ; [ENDL] if ( i % 12 = = 9 ) s [ i ] = \" September \" ; [ENDL] if ( i % 12 = = 10 ) s [ i ] = \" October \" ; [ENDL] if ( i % 12 = = 11 ) s [ i ] = \" November \" ; [ENDL] if ( i % 12 = = 0 ) s [ i ] = \" December \" ; [ENDL] create string str [ENDL] create integer n [ENDL] read str read n [ENDL] for i = 1 to 12 inclusive [ENDL] if s [ i ] is str , print s [ i + n ] print newline [ENDL] declare map from integer to string m", "c++": "long long _x = 0 , _tmp = 1 ; char _tc = getchar ( ) ; while ( ( _tc < ' 0 ' || _tc > ' 9 ' ) && _tc != ' - ' ) _tc = getchar ( ) ; if ( _tc == ' - ' ) _tc = getchar ( ) , _tmp = - 1 ; while ( _tc >= ' 0 ' && _tc <= ' 9 ' ) _x *= 10 , _x += ( _tc - ' 0 ' ) , _tc = getchar ( ) ; return _x * _tmp ; string s [ 170 ] ; } int main() { for ( int i = 1 ; i <= 160 ; ++ i ) if ( i % 12 == 1 ) s [ i ] = \" January \" ; if ( i % 12 == 2 ) s [ i ] = \" February \" ; if ( i % 12 == 3 ) s [ i ] = \" March \" ; if ( i % 12 == 4 ) s [ i ] = \" April \" ; if ( i % 12 == 5 ) s [ i ] = \" May \" ; if ( i % 12 == 6 ) s [ i ] = \" June \" ; if ( i % 12 == 7 ) s [ i ] = \" July \" ; if ( i % 12 == 8 ) s [ i ] = \" August \" ; if ( i % 12 == 9 ) s [ i ] = \" September \" ; if ( i % 12 == 10 ) s [ i ] = \" October \" ; if ( i % 12 == 11 ) s [ i ] = \" November \" ; if ( i % 12 == 0 ) s [ i ] = \" December \" ; string str ; } int n ; cin >> str >> n ; for ( int i = 1 ; i <= 12 ; ++ i ) if ( s [ i ] == str ) { cout << s [ i + n ] << endl ; } map < int , string > m ; } }"}}
{"translation": {"en": "declare map iterator from integer to string it [ENDL] declare character array s size 20 [ENDL] declare integer n [ENDL] let m [ 0 ] be \" January \" [ENDL] let m [ 1 ] be \" February \" [ENDL] let m [ 2 ] be \" March \" [ENDL] let m [ 3 ] be \" April \" [ENDL] let m [ 4 ] be \" May \" [ENDL] let m [ 5 ] be \" June \" [ENDL] let m [ 6 ] be \" July \" [ENDL] let m [ 7 ] be \" August \" [ENDL] let m [ 8 ] be \" September \" [ENDL] let m [ 9 ] be \" October \" [ENDL] let m [ 10 ] be \" November \" [ENDL] let m [ 11 ] be \" December \" [ENDL] while read s , n [ENDL] declare integer j = 0 [ENDL] for it = beginning of m to it is not end of m , incrementing it [ENDL] increment j [ENDL] if second element of it is s , end loop [ENDL] print m [ ( j + n - 1 ) % 12 ] , newline [ENDL] declare integers n , m , a , b , rub , with rub = 0", "c++": "map < int , string > :: iterator it ; char s [ 20 ] ; int main() { int n ; m [ 0 ] = \" January \" ; m [ 1 ] = \" February \" ; m [ 2 ] = \" March \" ; m [ 3 ] = \" April \" ; m [ 4 ] = \" May \" ; m [ 5 ] = \" June \" ; m [ 6 ] = \" July \" ; m [ 7 ] = \" August \" ; m [ 8 ] = \" September \" ; m [ 9 ] = \" October \" ; m [ 10 ] = \" November \" ; m [ 11 ] = \" December \" ; while ( cin >> s >> n ) int j = 0 ; for ( it = m . begin ( ) ; it != m . end ( ) ; it ++ ) ++ j ; if ( it -> second == s ) break ; cout << m [ ( j + n - 1 ) % 12 ] << endl ; } int n , m , a , b , rub = 0 ; } return 0; }"}}
{"translation": {"en": "read n , m , a and b [ENDL] while n is greater than 0 [ENDL] if n is less than m [ENDL] set integer flag to n * a [ENDL] if flag is less than b [ENDL] increase rub by flag [ENDL] n = 0 [ENDL] else [ENDL] increase rub by b [ENDL] decrease n by m [ENDL] else if ( a * m ) is greater than b [ENDL] decrease n by m [ENDL] increase rub by b [ENDL] else [ENDL] increase rub by n * a [ENDL] assign value of 0 to the n [ENDL] print rub and \" \\ n \" [ENDL] create integers n , m , a , b , r , d , cost with cost = 0", "c++": "int main() { cin >> n >> m >> a >> b ; while ( n > 0 ) if ( n < m ) int flag = n * a ; if ( flag < b ) rub += flag ; n = 0 ; else rub += b ; n -= m ; else if ( ( a * m ) > b ) } n -= m ; rub += b ; else rub += n * a ; n = 0 ; cout << rub << \" \\n \" ; } } int n , m , a , b , r , d , cost = 0 ; }"}}
{"translation": {"en": "read n read m read a read b [ENDL] set r to n % m [ENDL] set d to n / m [ENDL] if m is greater than n [ENDL] if b is less than a * b [ENDL] print b print newline [ENDL] else [ENDL] print a * n print newline [ENDL] if d * b is less than a * ( n - r ) [ENDL] increment cost by d * b [ENDL] if r * a is less than b [ENDL] increment cost by r * a [ENDL] else [ENDL] increment cost by b [ENDL] else [ENDL] increment cost by a * n [ENDL] print cost print newline [ENDL] n , m , a , b = integers", "c++": "int main() { cin >> n >> m >> a >> b ; r = n % m ; d = n / m ; if ( m > n ) if ( b < a * n ) cout << b << endl ; else return 0; cout << a * n << endl ; if ( d * b < a * ( n - r ) ) return 0; } } cost += ( d * b ) ; if ( r * a < b ) cost += ( r * a ) ; else cost += b ; else } cost += ( a * n ) ; cout << cost << endl ; } int n , m , a , b ; return 0; }"}}
{"translation": {"en": "Read n , m , a , b [ENDL] x = integer , set to ( n / m ) * b + ( n % m ) * a [ENDL] y = integer , set to ( n / m + 1 ) * b [ENDL] z = integer , set to n * a [ENDL] print minimum value of x and minimum value of y and z and a new line [ENDL] create integer TESTS with TESTS = 1", "c++": "int main() { cin >> n >> m >> a >> b ; int x = ( n / m ) * b + ( n % m ) * a ; int y = ( n / m + 1 ) * b ; int z = n * a ; cout << min ( x , min ( y , z ) ) << endl ; int TESTS = 1 ; }"}}
{"translation": {"en": "while decrementing TESTS is true [ENDL] create long longs n , m , a , b [ENDL] read n read m read a read b [ENDL] create long long integer vector v [ENDL] if b is greater than or equal to m * a [ENDL] read n * a read ' \\ n ' [ENDL] else [ENDL] create long long c with c = n / m [ENDL] create long long ans with ans = c * b [ENDL] decrement n by c * m [ENDL] increment ans by minimum of b and a * n [ENDL] print ans print ' \\ n ' [ENDL] n , m , a , b are long long", "c++": "int main() { while ( TESTS -- ) long long n , m , a , b ; cin >> n >> m >> a >> b ; vector < long long int > v ; if ( b >= m * a ) cout << n * a << ' \\n ' ; else long long c = n / m ; long long ans = c * b ; n -= c * m ; ans += min ( b , a * n ) ; cout << ans << ' \\n ' ; long long n , m , a , b ; } } return 0; }"}}
{"translation": {"en": "read n , m , a , b [ENDL] if m * a < b [ENDL] print n * a [ENDL] else [ENDL] price = n / m * b + min ( n modulo m * a , b ) [ENDL] print price [ENDL] create integers n , m , a , b", "c++": "int main() { cin >> n >> m >> a >> b ; if ( m * a < b ) cout << n * a << endl ; else long long price = ( n / m ) * b + min ( ( n % m ) * a , b ) ; cout << price << endl ; int n , m , a , b ; } return 0; }"}}
{"translation": {"en": "read n read m read a read b [ENDL] if m * a is greater than b [ENDL] print minimum of ( ( n / m ) * b + ( n % m ) * a and ( ( n / m ) + 1 ) * b ) print newline [ENDL] print minimum of n * a and ( ( n / m ) + 1 ) * b print newline [ENDL] create integers n , m", "c++": "int main() { cin >> n >> m >> a >> b ; if ( m * a > b ) cout << min ( ( n / m ) * b + ( n % m ) * a , ( ( n / m ) + 1 ) * b ) << endl ; cout << min ( n * a , ( ( n / m ) + 1 ) * b ) << endl ; return 0; } int n , m ; return 0; }"}}
{"translation": {"en": "create floats a , b [ENDL] read n read m read a read b [ENDL] create integer sum with sum = 0 [ENDL] if ( n % m ) * a is less than or equal to b [ENDL] increment sum by n / m * b + ( n % m ) * a [ENDL] else [ENDL] set sum to ( n / m + 1 ) * b [ENDL] if sum is greater than n * a , set sum to n * a [ENDL] print sum print newline [ENDL] create long long integers n , m , a , b", "c++": "int main() { float a , b ; cin >> n >> m >> a >> b ; int sum = 0 ; if ( ( n % m ) * a <= b ) sum += n / m * b + ( n % m ) * a ; else sum = ( n / m + 1 ) * b ; if ( sum > n * a ) sum = n * a ; cout << sum << endl ; long long int n , m , a , b ; }"}}
{"translation": {"en": "read n read m read a read b [ENDL] if m * a is less than b [ENDL] print n * a print newline [ENDL] else [ENDL] create long long integer price with price = ( n / m ) * b + minimum of ( n % m ) * b and b [ENDL] print price print newline [ENDL] declare long longs n , m , a and b", "c++": "int main() { cin >> n >> m >> a >> b ; if ( m * a < b ) cout << n * a << endl ; else long long int price = ( n / m ) * b + min ( ( n % m ) * a , b ) ; cout << price << endl ; long long n , m , a , b ; } return 0; }"}}
{"translation": {"en": "read n , m , a and b [ENDL] if m * a is less than b [ENDL] print n * a and a new line [ENDL] else [ENDL] create variable price of type long long = ( n / m ) * b + min of ( n % m ) * a and b [ENDL] print price and a new line [ENDL] create integers m , n , a , b and cost", "c++": "int main() { cin >> n >> m >> a >> b ; if ( m * a < b ) cout << n * a << endl ; else long long price = ( n / m ) * b + min ( ( n % m ) * a , b ) ; cout << price << endl ; int m , n , a , b , cost ; } return 0; }"}}
{"translation": {"en": "read n , m , a and b [ENDL] if a is greater than b / m [ENDL] cost = ( n / m ) * b [ENDL] if a * ( n % m ) is less than b [ENDL] add a * ( n % m ) to cost [ENDL] else [ENDL] increase cost by b [ENDL] else [ENDL] cost = n * a [ENDL] print cost and a new line [ENDL] create integers n , m , a , b", "c++": "int main() { cin >> n >> m >> a >> b ; if ( a > ( b / m ) ) cost = ( n / m ) * b ; if ( a * ( n % m ) < b ) cost += a * ( n % m ) ; else cost += b ; else cost = n * a ; cout << cost << endl ; int n , m , a , b ; return 0; }"}}
{"translation": {"en": "read n , m , a , b [ENDL] create integer sum with sum = a * n [ENDL] create integer msum with msum = b [ENDL] create integer rides with rides = m [ENDL] do the following while rides less than or equal to n [ENDL] add b to msum [ENDL] add m to rides [ENDL] subtract b from msum [ENDL] subtract m from rides [ENDL] if sum less than or equal to msum then do the following [ENDL] print sum and a new line [ENDL] else do the following [ENDL] if rides less than n [ENDL] create integer newsum with newsum = msum + ( n - rides ) * a [ENDL] add b to msum [ENDL] add m to rides [ENDL] create numsum1 with newsum1 = msum [ENDL] if newsum1 less than or equal to newsum then do the following [ENDL] print newsum1 and a new line [ENDL] else do the following [ENDL] print newsum and a new line [ENDL] else if rides greater than n then do the following [ENDL] create integer newsum with newsum = msum + ( n - rides ) * a [ENDL] add b to msum [ENDL] add m to rides [ENDL] create newsum1 with newsum1 = msum [ENDL] if newsum1 less than or equal to newsum then do the following [ENDL] print newsum1 and a new line [ENDL] else do the following [ENDL] print newsum and a new line [ENDL] else do the following [ENDL] print msum and a new line [ENDL] n and m = integers with m = 2", "c++": "int main() { cin >> n >> m >> a >> b ; int sum = a * n ; int msum = b ; int rides = m ; while ( rides <= n ) msum += b ; rides += m ; msum -= b ; } rides -= m ; if ( sum <= msum ) cout << sum << \" \\n \" ; else if ( rides < n ) int newsum = msum + ( n - rides ) * a ; msum += b ; rides += m ; int newsum1 = msum ; if ( newsum1 <= newsum ) cout << newsum1 << endl ; else cout << newsum << endl ; else if ( rides > n ) int newsum = msum + ( n - rides ) * a ; msum += b ; rides += m ; int newsum1 = msum ; if ( newsum1 <= newsum ) cout << newsum1 << endl ; else cout << newsum << endl ; else cout << msum << \" \\n \" ; int n , m = 2 ; } } }"}}
{"translation": {"en": "read n [ENDL] print m [ENDL] for i = 1 to n - 1 exclusive [ENDL] increase m by i + 1 [ENDL] if m % n is equal to 0 [ENDL] print \" \" and n [ENDL] else [ENDL] print \" \" and m % n [ENDL] print new line [ENDL] create integers n , m with m = 2", "c++": "int main() { cin >> n ; cout << m ; for ( int i = 1 ; i < n - 1 ; i ++ ) m += ( i + 1 ) ; if ( m % n == 0 ) cout << \"   \" << n ; else cout << \"   \" << m % n ; cout << endl ; } int n , m = 2 ; return 0; }"}}
{"translation": {"en": "read n [ENDL] print m [ENDL] for i = 1 to n - 1 exclusive [ENDL] increment m by i + 1 [ENDL] if m % n is 0 [ENDL] print \" \" print n [ENDL] else [ENDL] print \" \" print m % n [ENDL] print newline [ENDL] n = integer", "c++": "int main() { cin >> n ; cout << m ; for ( int i = 1 ; i < n - 1 ; i ++ ) m += ( i + 1 ) ; if ( m % n == 0 ) cout << \"   \" << n ; else cout << \"   \" << m % n ; cout << endl ; } int n ; return 0; }"}}
{"translation": {"en": "read n [ENDL] set integer cur to 0 [ENDL] for integer i = 1 to n exclusive [ENDL] if i is greater than 1 print whitespace [ENDL] increase cur by i [ENDL] set cur to remainder of division of cur by n [ENDL] print cur + 1 [ENDL] print new line [ENDL] create integers n , i , create integer array a with size 200", "c++": "int main() { cin >> n ; int cur = 0 ; for ( int i = 1 ; i < n ; ++ i ) if ( i > 1 ) cout << \"   \" ; cur += i ; cur %= n ; cout << cur + 1 ; cout << endl ; } int n , a [ 200 ] , i ; }"}}
{"translation": {"en": "read n [ENDL] set a [ 0 ] to 1 [ENDL] for i = 1 to n - 1 inclusive [ENDL] set a [ i ] to ( a [ i - 1 ] + i ) % n [ENDL] if a [ i ] is 0 , set a [ i ] to n [ENDL] for i = 1 to n - 1 exclusive , print a [ i ] print \" \" [ENDL] print a [ n - 1 ] print newline [ENDL] integers n and i , integer array a of size 200", "c++": "int main() { cin >> n ; a [ 0 ] = 1 ; for ( i = 1 ; i <= n - 1 ; i ++ ) a [ i ] = ( a [ i - 1 ] + i ) % n ; if ( a [ i ] == 0 ) a [ i ] = n ; for ( i = 1 ; i < n - 1 ; i ++ ) { cout << a [ i ] << \"   \" ; } } cout << a [ n - 1 ] << endl ; int n , a [ 200 ] , i ; return 0; }"}}
{"translation": {"en": "read n [ENDL] set value of a [ 0 ] to 1 [ENDL] for i = 1 to n - 1 inclusive [ENDL] a [ i ] = ( a [ i - 1 ] + i ) % n [ENDL] set a [ i ] to n if a [ i ] is 0 [ENDL] for i = 1 to n - 1 exclusive print a [ i ] and \" \" [ENDL] print a [ n - 1 ] and a new line [ENDL] mp = map from long long to long long", "c++": "int main() { cin >> n ; a [ 0 ] = 1 ; for ( i = 1 ; i <= n - 1 ; i ++ ) a [ i ] = ( a [ i - 1 ] + i ) % n ; if ( a [ i ] == 0 ) a [ i ] = n ; for ( i = 1 ; i < n - 1 ; i ++ ) { cout << a [ i ] << \"   \" ; } } cout << a [ n - 1 ] << endl ; map < long long , long long > mp ; return 0; }"}}
{"translation": {"en": "declare vector of strings called s [ENDL] declare vector of integers called v [ENDL] declare integer variable m [ENDL] read m [ENDL] let k , i and j be integers with k = m , i = 1 and j = 1 [ENDL] decrease m by one [ENDL] while m - - [ENDL] increase j by i [ENDL] integer ans = j % k [ENDL] if ans is equal to 0 set ans to j [ENDL] print ans [ENDL] if m is equal to 0 [ENDL] print new line [ENDL] else [ENDL] print \" \" [ENDL] increase i by one [ENDL] j % = k [ENDL] if j is equal to 0 , set j to ans [ENDL] declare integer vector v initialized with 6", "c++": "vector < string > s ; vector < int > v ; int m ; int main() { cin >> m ; int k = m , i = 1 , j = 1 ; m -- ; while ( m -- ) j += i ; int ans = j % k ; if ( ans == 0 ) ans = j ; cout << ans ; if ( m == 0 ) cout << endl ; else cout << \"   \" ; i ++ ; j %= k ; if ( j == 0 ) j = ans ; vector < int > v ( 6 ) ; } return 0; }"}}
{"translation": {"en": "read v [ 0 ] , v [ 1 ] , v [ 2 ] , v [ 3 ] , [ 4 ] , v [ 5 ] [ENDL] sort from beginning of v to end of v [ENDL] declare integers h , b [ENDL] if v [ 0 ] is v [ 3 ] [ENDL] let h be 4 [ENDL] let b be 5 [ENDL] else if v [ 1 ] is v [ 4 ] [ENDL] let h be 0 [ENDL] let b be 5 [ENDL] else if v [ 2 ] is v [ 5 ] [ENDL] let h be 0 [ENDL] let b be 1 [ENDL] else [ENDL] print \" Alien \\ n \" [ENDL] print \" Bear \\ n \" if v [ h ] is less than v [ b ] , else \" Elephant \\ n \" [ENDL] declare const int INF = 0x3f3f3f3f", "c++": "int main() { cin >> v [ 0 ] >> v [ 1 ] >> v [ 2 ] >> v [ 3 ] >> v [ 4 ] >> v [ 5 ] ; sort ( v . begin ( ) , v . end ( ) ) ; int h , b ; if ( v [ 0 ] == v [ 3 ] ) h = 4 ; b = 5 ; else if ( v [ 1 ] == v [ 4 ] ) h = 0 ; b = 5 ; else if ( v [ 2 ] == v [ 5 ] ) h = 0 ; b = 1 ; else cout << \" Alien\\n \" ; cout << ( v [ h ] < v [ b ] ? \" Bear\\n \" : \" Elephant\\n \" ) ; return 0; } const int INF = 0x3f3f3f3f ; return 0; }"}}
{"translation": {"en": "create int array a with size 11 [ENDL] declare integer variables n , m and t [ENDL] declare integer variables i , j and k [ENDL] for i = 0 to 6 exclusive , read t and increment a [ t ] [ENDL] for i = 1 to 9 inclusive [ENDL] if a [ i ] > = 4 , break [ENDL] if i is greater than 9 [ENDL] print \" Alien \" [ENDL] for i from 1 to 9 inclusive [ENDL] if a [ i ] = 2 or a [ i ] = 6 , stop the loop [ENDL] if i is greater than 9 [ENDL] print \" Bear \" [ENDL] print \" Elephant \" [ENDL] declare new array of integers a with size 10", "c++": "int a [ 11 ] ; int n , m , t ; int main() { int i , j , k ; for ( i = 0 ; i < 6 ; i ++ ) cin >> t , a [ t ] ++ ; for ( i = 1 ; i <= 9 ; i ++ ) if ( a [ i ] >= 4 ) break ; if ( i > 9 ) cout << \" Alien \" << endl ; for ( i = 1 ; i <= 9 ; i ++ ) return 0; } if ( a [ i ] == 2 || a [ i ] == 6 ) break ; if ( i > 9 ) cout << \" Bear \" << endl ; cout << \" Elephant \" << endl ; return 0; } int a [ 10 ] ; return 0; }"}}
{"translation": {"en": "create new integer variable x [ENDL] for i from 1 to 6 inclusive incrementing i [ENDL] read variable x from the input [ENDL] increment a [ x ] [ENDL] declare new ints y and z = - 1 [ENDL] start for loop from i = 1 to 9 inclusive [ENDL] if a [ i ] > = 4 , assign i to z [ENDL] if z is not - 1 [ENDL] assign a [ z ] - 4 to a [ z ] [ENDL] for i = 1 to 9 inclusive [ENDL] if a [ i ] is equal to 1 and y = - 1 , change y to i [ENDL] if a [ i ] = 1 and y is not - 1 , set z to i [ENDL] if a [ i ] is equal to 2 , change y to set z to a [ i ] [ENDL] if y is equal to z [ENDL] print \" Elephant \" [ENDL] else [ENDL] print \" Bear \" to the standard output [ENDL] else [ENDL] print \" Alien \" [ENDL] create integers i , j , n , p , q , flag with p = 0 , flag = 0 , create integer array a with size 10 with a = { 0 }", "c++": "int x ; int main() { for ( int i = 1 ; i <= 6 ; i ++ ) cin >> x ; a [ x ] ++ ; int y = - 1 , z = - 1 ; } for ( int i = 1 ; i <= 9 ; i ++ ) if ( a [ i ] >= 4 ) { z = i ; } if ( z != - 1 ) } a [ z ] = a [ z ] - 4 ; for ( int i = 1 ; i <= 9 ; i ++ ) if ( a [ i ] == 1 && y == - 1 ) { y = i ; } if ( a [ i ] == 1 && y != - 1 ) { z = i ; } if ( a [ i ] == 2 ) { y = z = a [ i ] ; } if ( y == z ) } cout << \" Elephant \" << endl ; else cout << \" Bear \" << endl ; else cout << \" Alien \" << endl ; int i , j , n , p = 0 , q , flag = 0 , a [ 10 ] = { 0 } ; }"}}
{"translation": {"en": "for i = 0 to 6 exclusive [ENDL] read n [ENDL] increment a [ n ] [ENDL] for i = 0 to 9 inclusive [ENDL] if a [ i ] is greater than or equal to 4 [ENDL] decrement a [ i ] by 4 [ENDL] set flag to 1 [ENDL] if flag is 0 [ENDL] print \" Alien \" print newline [ENDL] for i = 0 to 9 inclusive [ENDL] if a [ i ] is 2 [ENDL] print \" Elephant \" print newline [ENDL] print \" Bear \" print newline [ENDL] ar = int array of size 12", "c++": "int main() { for ( i = 0 ; i < 6 ; i ++ ) cin >> n ; a [ n ] ++ ; for ( i = 0 ; i <= 9 ; i ++ ) } if ( a [ i ] >= 4 ) a [ i ] -= 4 ; flag = 1 ; if ( flag == 0 ) } } cout << \" Alien \" << endl ; for ( i = 0 ; i <= 9 ; i ++ ) return 0; } if ( a [ i ] == 2 ) cout << \" Elephant \" << endl ; cout << \" Bear \" << endl ; return 0; } } int ar [ 12 ] ; return 0; }"}}
{"translation": {"en": "a , b , c , d , e , f = int [ENDL] read a then b then c then d then e then f [ENDL] increment ar [ a ] [ENDL] increment ar [ b ] [ENDL] increment ar [ c ] [ENDL] increment ar [ d ] [ENDL] increment ar [ e ] [ENDL] increment ar [ f ] [ENDL] paichi = bool with paichi = false [ENDL] for i = 1 to 9 inclusive [ENDL] if ar [ i ] > = 4 set paichi to true [ENDL] if not paichi print \" Alien \" and return 0 [ENDL] cnt = int with cnt = 0 [ENDL] for i = 1 to 9 inclusive [ENDL] if ar [ i ] is 2 or 6 print \" Elephant \" and return 0 [ENDL] print \" Bear \" [ENDL] create integer A with size 6", "c++": "int a , b , c , d , e , f ; int main() { cin >> a >> b >> c >> d >> e >> f ; ar [ a ] ++ ; ar [ b ] ++ ; ar [ c ] ++ ; ar [ d ] ++ ; ar [ e ] ++ ; ar [ f ] ++ ; bool paichi = false ; for ( int i = 1 ; i <= 9 ; i ++ ) if ( ar [ i ] >= 4 ) { paichi = true ; } if ( ! paichi ) return cout << \" Alien\\n \" , 0 ; } int cnt = 0 ; for ( int i = 1 ; i <= 9 ; i ++ ) if ( ar [ i ] == 2 or ar [ i ] == 6 ) return cout << \" Elephant\\n \" , 0 ; cout << \" Bear\\n \" ; } int A [ 6 ] ; return 0; }"}}
{"translation": {"en": "for i = 0 to 6 exclusive , read A [ i ] [ENDL] sort elements from A to A + 6 [ENDL] create integers B , C [ENDL] if A [ 0 ] is A [ 3 ] [ENDL] set B to A [ 4 ] , set C to A [ 5 ] [ENDL] else if A [ 1 ] is A [ 4 ] [ENDL] set B to A [ 0 ] , set C to A [ 5 ] [ENDL] else if A [ 2 ] is A [ 5 ] [ENDL] set B to A [ 0 ] , set C to A [ 1 ] [ENDL] else [ENDL] print \" Alien \" print newline [ENDL] if B is C [ENDL] print \" Elephant \" print newline [ENDL] if B is less than C [ENDL] print \" Bear \" print newline [ENDL] dp = two dimensional char array of sizes 10 and 10", "c++": "int main() { for ( int i = 0 ; i < 6 ; ++ i ) { cin >> A [ i ] ; } sort ( A , A + 6 ) ; int B , C ; if ( A [ 0 ] == A [ 3 ] ) B = A [ 4 ] , C = A [ 5 ] ; else if ( A [ 1 ] == A [ 4 ] ) B = A [ 0 ] , C = A [ 5 ] ; else if ( A [ 2 ] == A [ 5 ] ) B = A [ 0 ] , C = A [ 1 ] ; else cout << \" Alien \" << endl ; if ( B == C ) return 0; } cout << \" Elephant \" << endl ; if ( B < C ) return 0; } cout << \" Bear \" << endl ; char dp [ 10 ] [ 10 ] ; return 0; } }"}}
{"translation": {"en": "mp = long long and long long map [ENDL] n , x = long long [ENDL] a = long long array of size 10 [ENDL] for i = 0 to 6 [ENDL] read a [ i ] [ENDL] increment mp [ a [ i ] ] [ENDL] ok = bool with ok = false [ENDL] for i = 0 to 6 [ENDL] if mp [ a [ i ] ] is 6 set ok to true [ENDL] if ok is true [ENDL] print \" Elephant \" [ENDL] for i = 0 to 6 [ENDL] if mp [ a [ i ] ] is 5 set ok to true [ENDL] if ok is true [ENDL] print \" Bear \" [ENDL] for i = 0 to 6 [ENDL] if mp [ a [ i ] ] is 4 set ok to true [ENDL] if ok is false [ENDL] print \" Alien \" [ENDL] for i = 0 to 6 [ENDL] if mp [ a [ i ] ] is 2 set ok to false [ENDL] if ok is true [ENDL] print \" Bear \" [ENDL] else [ENDL] print \" Elephant \" [ENDL] declare int arrays b with size 10 and c with size 6", "c++": "map < long long , long long > mp ; long long n , x ; int main() { long long a [ 10 ] ; for ( int i = 0 ; i < 6 ; i ++ ) cin >> a [ i ] ; mp [ a [ i ] ] ++ ; bool ok = false ; } for ( int i = 0 ; i < 6 ; i ++ ) if ( mp [ a [ i ] ] == 6 ) ok = true ; if ( ok ) } cout << \" Elephant \" << endl ; for ( int i = 0 ; i < 6 ; i ++ ) return 0; } if ( mp [ a [ i ] ] == 5 ) ok = true ; if ( ok ) } cout << \" Bear \" << endl ; for ( int i = 0 ; i < 6 ; i ++ ) return 0; } if ( mp [ a [ i ] ] == 4 ) ok = true ; if ( ! ok ) } cout << \" Alien \" << endl ; for ( int i = 0 ; i < 6 ; i ++ ) return 0; } if ( mp [ a [ i ] ] == 2 ) ok = false ; if ( ok ) } cout << \" Bear \" << endl ; else cout << \" Elephant \" << endl ; int b [ 10 ] , c [ 6 ] ; return 0; }"}}
{"translation": {"en": "declare an array of integers a with size 6 and integer variables i , x and j with j = 0 [ENDL] for i = 0 to 6 exclusive [ENDL] read a [ i ] [ENDL] assign a [ i ] to x [ENDL] increment b [ x ] by one [ENDL] for i = 1 to 9 inclusive [ENDL] if b [ i ] ! = 0 [ENDL] set c [ j ] to b [ i ] [ENDL] increment j by one [ENDL] sort first 3 elements of c [ENDL] if c [ 0 ] = 1 and c [ 1 ] = 1 and c [ 2 ] = 4 [ENDL] print \" Bear \" [ENDL] else if c [ 0 ] = 0 and c [ 1 ] = 1 and c [ 2 ] = 5 [ENDL] print \" Bear \" [ENDL] else if c [ 0 ] = 0 and c [ 1 ] = 2 and c [ 2 ] = 4 [ENDL] print \" Elephant \" [ENDL] else if c [ 2 ] is equal to 6 [ENDL] print \" Elephant \" [ENDL] else [ENDL] print \" Alien \" [ENDL] create integers i , j , n , p , q , flag , with p = 0 , flag = 0 , create integer array a with size 10 with a = { 0 }", "c++": "int a [ 6 ] , i , x , j = 0 ; int main() { for ( i = 0 ; i < 6 ; i ++ ) cin >> a [ i ] ; x = a [ i ] ; b [ x ] ++ ; for ( i = 1 ; i <= 9 ; i ++ ) } if ( b [ i ] != 0 ) c [ j ] = b [ i ] ; j ++ ; sort ( c , c + 3 ) ; } } if ( c [ 0 ] == 1 && c [ 1 ] == 1 && c [ 2 ] == 4 ) cout << \" Bear \" << endl ; else if ( c [ 0 ] == 0 && c [ 1 ] == 1 && c [ 2 ] == 5 ) cout << \" Bear \" << endl ; else if ( c [ 0 ] == 0 && c [ 1 ] == 2 && c [ 2 ] == 4 ) cout << \" Elephant \" << endl ; else if ( c [ 2 ] == 6 ) cout << \" Elephant \" << endl ; else cout << \" Alien \" << endl ; int i , j , n , p = 0 , q , flag = 0 , a [ 10 ] = { 0 } ; } return 0; }"}}
{"translation": {"en": "for i = 0 to 6 exclusive [ENDL] read n [ENDL] increment a [ n ] [ENDL] for i = 0 to 9 inclusive [ENDL] if a [ i ] is greater than or equal to 4 [ENDL] decrement a [ i ] by 4 [ENDL] set flag to 1 [ENDL] if flag is 0 [ENDL] print \" Alien \" print newline [ENDL] for i = 0 to 9 inclusive [ENDL] if a [ i ] is 2 [ENDL] print \" Elephant \" print newline [ENDL] print \" Bear \" print newline [ENDL] declare integer array list size 10", "c++": "int main() { for ( i = 0 ; i < 6 ; i ++ ) cin >> n ; a [ n ] ++ ; for ( i = 0 ; i <= 9 ; i ++ ) } if ( a [ i ] >= 4 ) a [ i ] -= 4 ; flag = 1 ; if ( flag == 0 ) } } cout << \" Alien \" << endl ; for ( i = 0 ; i <= 9 ; i ++ ) return 0; } if ( a [ i ] == 2 ) cout << \" Elephant \" << endl ; cout << \" Bear \" << endl ; return 0; } } int list [ 10 ] ; return 0; }"}}
{"translation": {"en": "set bytes from list to size of list to value 0 [ENDL] for i = 0 to 6 exclusive [ENDL] declare temp as integer [ENDL] read temp [ENDL] increment list [ temp ] [ENDL] for i = 0 to 10 exclusive [ENDL] if list [ i ] is 4 [ENDL] for j = 0 to 10 exclusive [ENDL] if list [ j ] is 2 [ENDL] print \" Elephant \" , newline [ENDL] print \" Bear \" , newline [ENDL] else if list [ i ] is 5 [ENDL] print \" Bear \" , newline [ENDL] else if list [ i ] is 6 [ENDL] print \" Elephant \" , newline [ENDL] print \" Alien \" , newline [ENDL] create integer array mp with size 20", "c++": "int main() { memset ( list , 0 , sizeof ( list ) ) ; for ( int i = 0 ; i < 6 ; i ++ ) int temp ; cin >> temp ; list [ temp ] ++ ; for ( int i = 0 ; i < 10 ; i ++ ) } if ( list [ i ] == 4 ) for ( int j = 0 ; j < 10 ; j ++ ) if ( list [ j ] == 2 ) cout << \" Elephant \" << endl ; cout << \" Bear \" << endl ; return 0; } } else if ( list [ i ] == 5 ) return 0; cout << \" Bear \" << endl ; else if ( list [ i ] == 6 ) return 0; cout << \" Elephant \" << endl ; cout << \" Alien \" << endl ; return 0; } } int mp [ 20 ] ; return 0; }"}}
{"translation": {"en": "create integer n [ENDL] create integer vector Q [ENDL] set bytes from mp to size of mp to value 0 [ENDL] for i = 1 to 6 inclusive [ENDL] create integer p [ENDL] read p [ENDL] increment mp [ p ] [ENDL] add character p to end of Q [ENDL] create integers flag1 , flag2 with flag1 = 0 , flag2 = 0 [ENDL] for i = 0 to size of Q exclusive [ENDL] if mp [ Q [ i ] ] is greater than or equal to 4 , set flag1 to 1 [ENDL] if mp [ Q [ i ] ] is 2 , set flag2 to 1 [ENDL] if mp [ Q [ i ] ] is 6 [ENDL] set flag1 to 1 [ENDL] set flag2 to 1 [ENDL] if flag1 is 1 and flag2 is 0 [ENDL] print \" Bear \\ n \" [ENDL] else if flag1 is 1 and flag2 is 1 [ENDL] print \" Elephant \\ n \" [ENDL] else [ENDL] print \" Alien \\ n \" [ENDL] a , b , n = int and s = int array of size 10", "c++": "int n ; int main() { vector < int > Q ; memset ( mp , 0 , sizeof mp ) ; for ( int i = 1 ; i <= 6 ; i ++ ) int p ; cin >> p ; mp [ p ] ++ ; Q . push_back ( p ) ; int flag1 = 0 , flag2 = 0 ; } for ( int i = 0 ; i < Q . size ( ) ; i ++ ) if ( mp [ Q [ i ] ] >= 4 ) { flag1 = 1 ; } if ( mp [ Q [ i ] ] == 2 ) { flag2 = 1 ; } if ( mp [ Q [ i ] ] == 6 ) flag1 = 1 ; flag2 = 1 ; if ( flag1 == 1 and flag2 == 0 ) } } cout << \" Bear\\n \" ; else if ( flag1 == 1 and flag2 == 1 ) cout << \" Elephant\\n \" ; else cout << \" Alien\\n \" ; int s [ 10 ] , a , b , n ; } return 0; }"}}
{"translation": {"en": "for i = 0 to 6 [ENDL] read n [ENDL] increment s [ n ] [ENDL] for i = 0 to 10 [ENDL] if s [ i ] is greater or equal to 4 set b to 1 [ENDL] if s [ i ] is 2 or 6 set a to 1 [ENDL] if b is 0 [ENDL] print \" Alien \" [ENDL] else if a is 1 [ENDL] print \" Elephant \" [ENDL] else [ENDL] print \" Bear \" [ENDL] create a map from integers to integers with name mp", "c++": "for ( int i = 0 ; i < 6 ; i ++ ) int main() { cin >> n ; s [ n ] ++ ; for ( int i = 0 ; i < 10 ; i ++ ) } if ( s [ i ] >= 4 ) { b = 1 ; } if ( s [ i ] == 2 || s [ i ] == 6 ) { a = 1 ; } if ( b == 0 ) } cout << \" Alien \" << endl ; else if ( a == 1 ) cout << \" Elephant \" << endl ; else cout << \" Bear \" << endl ; map < int , int > mp ; } }"}}
{"translation": {"en": "for integer i = 0 to 6 exclusive [ENDL] declare int p [ENDL] read p [ENDL] increment mp [ p ] [ENDL] if length of mp is greater than 3 [ENDL] print \" Alien \" [ENDL] if length of mp is equal to 3 [ENDL] create integer f = 0 [ENDL] it is a map iterator [ENDL] move it through mp [ENDL] if it - > second = 4 [ENDL] change f to 1 [ENDL] break the loop [ENDL] if f ! = 0 [ENDL] print \" Bear \" [ENDL] else [ENDL] print \" Alien \" [ENDL] if length of mp is equal to 2 [ENDL] declare integer variable f = 0 [ENDL] it is a map iterator [ENDL] move it through mp [ENDL] if it - > second = 2 [ENDL] change f to 1 [ENDL] break the loop [ENDL] if if it - > second = 3 [ENDL] print \" Alien \" [ENDL] if f ! = 0 [ENDL] print \" Elephant \" [ENDL] else [ENDL] print \" Bear \" [ENDL] if length of mp = 1 [ENDL] print \" Elephant \" [ENDL] l , r = long long", "c++": "for ( int i = 0 ; i < 6 ; i ++ ) int main() { int p ; cin >> p ; mp [ p ] ++ ; if ( mp . size ( ) > 3 ) } cout << \" Alien \" << endl ; if ( mp . size ( ) == 3 ) return 0; } int f = 0 ; map < int , int > :: iterator it ; for ( it = mp . begin ( ) ; it != mp . end ( ) ; it ++ ) if ( it -> second == 4 ) f = 1 ; break ; if ( f ) } } cout << \" Bear \" << endl ; else return 0; cout << \" Alien \" << endl ; if ( mp . size ( ) == 2 ) return 0; } } int f = 0 ; map < int , int > :: iterator it ; for ( it = mp . begin ( ) ; it != mp . end ( ) ; it ++ ) if ( it -> second == 2 ) f = 1 ; break ; if ( it -> second == 3 ) } cout << \" Alien \" << endl ; if ( f ) return 0; } } cout << \" Elephant \" << endl ; else return 0; cout << \" Bear \" << endl ; if ( mp . size ( ) == 1 ) return 0; } } cout << \" Elephant \" << endl ; long long l , r ; return 0; } return 0; }"}}
{"translation": {"en": "read l then r [ENDL] if r - l is greater than 1 [ENDL] if l is even [ENDL] print l then ' ' then l + 1 then ' ' then l + 2 [ENDL] else [ENDL] if r - l is greater than 2 [ENDL] print l + 1 then ' ' then l + 2 then ' ' then l + 3 [ENDL] else [ENDL] print - 1 [ENDL] else [ENDL] print - 1 [ENDL] tmp , min1 , max1 , sum_n , index_max , index_min = int", "c++": "int main() { cin >> l >> r ; if ( r - l > 1 ) if ( l % 2 == 0 ) cout << l << '   ' << l + 1 << '   ' << l + 2 << endl ; else if ( r - l > 2 ) cout << l + 1 << '   ' << l + 2 << '   ' << l + 3 << endl ; else cout << - 1 << endl ; else } cout << - 1 << endl ; int tmp , min1 , max1 , sum_n , index_max , index_min ; }"}}
{"translation": {"en": "arr1 = two dimensional int array of sizes 1000 and 1000 [ENDL] arr3 = char array of size 100 [ENDL] arr = int array of size 10000 [ENDL] in function display_vector taking an int vector v [ENDL] for i = 0 to size of v print v [ i ] then \" \" [ENDL] print newline [ENDL] define empty function speed [ENDL] in function min_max taking an int vector v and an int l [ENDL] set min1 to INT_MAX [ENDL] set max1 to INT_MIN [ENDL] for i = l to size of v [ENDL] if v [ i ] is less or equal to min1 [ENDL] set min1 to v [ i ] [ENDL] set index_min to i [ENDL] if v [ i ] is greater or equal to max1 [ENDL] set max1 to v [ i ] [ENDL] set index_max to i [ENDL] in function sum_v taking an int vector v and returning an int [ENDL] for i = 0 to size of v increment sum_n by v [ i ] [ENDL] return sum_n [ENDL] in function is_it_sorted_acs taking an int vector v and returning a bool [ENDL] test1 = bool with test1 = false [ENDL] for i = 0 to size of v - 1 [ENDL] if v [ i + 1 ] is less or equal to v [ i ] [ENDL] set test1 to false [ENDL] return test1 [ENDL] set test1 to true [ENDL] return test1 [ENDL] in function is_it_sorted_des taking an int vector v and returning a bool [ENDL] test1 = bool with test1 = false [ENDL] for i = 0 to size of v - 1 [ENDL] if v [ i + 1 ] is greater or equal to v [ i ] [ENDL] set test1 to false [ENDL] return test1 [ENDL] set test1 to true [ENDL] return test1 [ENDL] call speed [ENDL] l , r = long long [ENDL] read l then r [ENDL] if l is uneven then increment l [ENDL] if r - l is less than 2 then print - 1 and return 0 [ENDL] print l and l + 1 and l + 2 [ENDL] create long long l and r", "c++": "int arr1 [ 1000 ] [ 1000 ] ; char arr3 [ 100 ] ; int arr [ 10000 ] ; void display_vector ( vector < int > v ) for ( int i = 0 ; i < v . size ( ) ; i ++ ) cout << v [ i ] << \"   \" ; cout << endl ; void speed ( ) { } } void min_max ( vector < int > v , int l ) min1 = INT_MAX ; max1 = INT_MIN ; for ( int i = l ; i < v . size ( ) ; i ++ ) if ( v [ i ] <= min1 ) min1 = v [ i ] ; index_min = i ; if ( v [ i ] >= max1 ) } max1 = v [ i ] ; index_max = i ; int sum_v ( vector < int > v ) } } } for ( int i = 0 ; i < v . size ( ) ; i ++ ) sum_n += v [ i ] ; return sum_n ; bool is_it_sorted_acs ( vector < int > v ) } bool test1 = false ; for ( int i = 0 ; i < v . size ( ) - 1 ; i ++ ) if ( v [ i + 1 ] <= v [ i ] ) test1 = false ; return test1 ; test1 = true ; } return test1 ; bool is_it_sorted_des ( vector < int > v ) } bool test1 = false ; for ( int i = 0 ; i < v . size ( ) - 1 ; i ++ ) if ( v [ i + 1 ] >= v [ i ] ) test1 = false ; return test1 ; test1 = true ; } return test1 ; speed ( ) ; } int main() { long long l , r ; cin >> l >> r ; if ( l % 2 != 0 ) l ++ ; if ( r - l < 2 ) return cout << - 1 << endl , 0 ; cout << l << \"   \" << l + 1 << \"   \" << l + 2 << endl ; long long l , r ; }"}}
{"translation": {"en": "read l and r [ENDL] if r - l + 1 less than 3 [ENDL] print - 1 [ENDL] if l is odd [ENDL] print l , ' ' , l + 1 , ' ' , l + 2 [ENDL] if r - l + 1 greater than 3 [ENDL] print l + 1 , ' ' , l + 2 , ' ' , l + 3 [ENDL] print - 1 and a newline [ENDL] create long long l and r", "c++": "int main() { cin >> l >> r ; if ( r - l + 1 < 3 ) cout << - 1 << endl ; if ( l % 2 == 0 ) return 0; } cout << l << '   ' << l + 1 << '   ' << l + 2 << endl ; if ( r - l + 1 > 3 ) return 0; } cout << l + 1 << '   ' << l + 2 << '   ' << l + 3 << endl ; cout << - 1 << endl ; return 0; } long long l , r ; }"}}
{"translation": {"en": "read l , r [ENDL] if r - l + 1 < 3 [ENDL] print - 1 [ENDL] if l is even [ENDL] print l , \" \" , l + 1 , \" \" , l + 2 [ENDL] if r - l + 1 greater than 3 [ENDL] print l + 1 , \" \" , l + 2 , \" \" , l + 3 [ENDL] print - 1 and a newline [ENDL] create integer long longs l , r", "c++": "cin >> l >> r ; int main() { if ( r - l + 1 < 3 ) cout << - 1 << endl ; if ( l % 2 == 0 ) return 0; } cout << l << \"   \" << l + 1 << \"   \" << l + 2 << endl ; if ( r - l + 1 > 3 ) return 0; } cout << l + 1 << \"   \" << l + 2 << \"   \" << l + 3 << endl ; cout << - 1 << endl ; return 0; } int long long l , r ; return 0; return 0; }"}}
{"translation": {"en": "read l read r [ENDL] if l % 2 is not 0 , increment l [ENDL] if l + 2 is greater than r [ENDL] print - 1 print newline [ENDL] else [ENDL] print l print \" \" print l + 1 print \" \" print l + 2 print newline [ENDL] declare long long variables k and l", "c++": "int main() { cin >> l >> r ; if ( l % 2 != 0 ) l ++ ; if ( l + 2 > r ) cout << - 1 << endl ; else cout << l << \"   \" << l + 1 << \"   \" << l + 2 << endl ; long long k , l ; return 0; }"}}
{"translation": {"en": "read k and l and keep looping [ENDL] if l - k is less than 2 [ENDL] print - 1 [ENDL] else if k is even [ENDL] print k , \" \" , k + 1 , \" \" and k + 2 [ENDL] else if k is odd & & l - k > = 3 [ENDL] print k + 1 , \" \" , k + 2 , \" \" and k + 3 [ENDL] else [ENDL] print - 1 [ENDL] create long longs n , m", "c++": "int main() { while ( cin >> k >> l ) if ( l - k < 2 ) cout << - 1 << endl ; else if ( ! ( k % 2 ) ) cout << k << \"   \" << k + 1 << \"   \" << k + 2 << endl ; else if ( k % 2 && l - k >= 3 ) cout << k + 1 << \"   \" << k + 2 << \"   \" << k + 3 << endl ; else cout << - 1 << endl ; long long n , m ; } return 0; }"}}
{"translation": {"en": "read n read m [ENDL] if m - n is less than 2 [ENDL] print - 1 print newline [ENDL] else [ENDL] if n % 2 is 0 [ENDL] print n print \" \" print n + 1 print \" \" print n + 2 print newline [ENDL] else if n % 2 is not 0 and n + 3 is less than or equal to m [ENDL] print n + 1 print \" \" print n + 2 print \" \" print n + 3 print newline [ENDL] else [ENDL] print - 1 print newline [ENDL] a , b = long long integer", "c++": "int main() { cin >> n >> m ; if ( m - n < 2 ) cout << - 1 << endl ; else if ( n % 2 == 0 ) cout << n << \"   \" << n + 1 << \"   \" << n + 2 << endl ; else if ( n % 2 != 0 && n + 3 <= m ) cout << n + 1 << \"   \" << n + 2 << \"   \" << n + 3 << endl ; else cout << - 1 << endl ; long long int a , b ; } }"}}
{"translation": {"en": "read a , b [ENDL] if a modulo 2 is 0 and a + 2 < = b [ENDL] print a , \" \" , a + 1 , \" \" , a + 2 [ENDL] else if a modulo 2 is not 0 and a + 3 < = b [ENDL] print a + 1 , \" \" , a + 2 , \" \" , a + 3 [ENDL] else [ENDL] print - 1 [ENDL] create long long l and r", "c++": "int main() { cin >> a >> b ; if ( a % 2 == 0 && a + 2 <= b ) cout << a << \"   \" << a + 1 << \"   \" << a + 2 << endl ; else if ( a % 2 != 0 && a + 3 <= b ) cout << a + 1 << \"   \" << a + 2 << \"   \" << a + 3 << endl ; else cout << - 1 << endl ; long long l , r ; } return 0; }"}}
{"translation": {"en": "read l and r [ENDL] if r - l + 1 < 3 [ENDL] read - 1 [ENDL] if r - l + 1 = 3 and r mod 2 different from 0 or l mod 2 different from 0 [ENDL] print - 1 [ENDL] if l is even and l + 2 is even [ENDL] print l , \" \" , l + 1 , \" \" , l + 2 [ENDL] else [ENDL] print l + 1 , \" \" , l + 2 , \" \" , l + 3 [ENDL] l , r = long long", "c++": "int main() { cin >> l >> r ; if ( r - l + 1 < 3 ) cout << - 1 << endl ; if ( r - l + 1 == 3 && ( r % 2 != 0 || l % 2 != 0 ) ) return 0; } cout << - 1 << endl ; if ( l % 2 == 0 && ( l + 2 ) % 2 == 0 ) return 0; } cout << l << \"   \" << l + 1 << \"   \" << l + 2 << endl ; else cout << l + 1 << \"   \" << l + 2 << \"   \" << l + 3 << endl ; long long l , r ; }"}}
{"translation": {"en": "read l , r [ENDL] if r - l + 1 < 3 [ENDL] print - 1 [ENDL] if l modulo 2 is 0 [ENDL] print l , ' ' , l + 1 , ' ' , l + 2 [ENDL] if r - l + 1 > 3 [ENDL] print l + 1 , ' ' , l + 2 , ' ' , l + 3 [ENDL] print - 1 [ENDL] create long long n1 and n2", "c++": "int main() { cin >> l >> r ; if ( r - l + 1 < 3 ) cout << - 1 << endl ; if ( l % 2 == 0 ) return 0; } cout << l << '   ' << l + 1 << '   ' << l + 2 << endl ; if ( r - l + 1 > 3 ) return 0; } cout << l + 1 << '   ' << l + 2 << '   ' << l + 3 << endl ; cout << - 1 << endl ; return 0; } long long n1 , n2 ; }"}}
{"translation": {"en": "read n1 , n2 [ENDL] if n1 is odd , increase n1 [ENDL] if n2 - n1 less than 2 [ENDL] print - 1 [ENDL] else [ENDL] print n1 , \" \" , n1 + 1 , \" \" , n1 + 2 [ENDL] let l , r be long integers", "c++": "int main() { cin >> n1 >> n2 ; if ( n1 % 2 != 0 ) n1 ++ ; if ( n2 - n1 < 2 ) cout << \" -1 \" << endl ; else cout << n1 << \"   \" << n1 + 1 << \"   \" << n1 + 2 << endl ; long long l , r ; } return 0; }"}}
{"translation": {"en": "read l and r [ENDL] if r - l is less than 2 [ENDL] print - 1 and newline [ENDL] else if r - l is equal to 2 [ENDL] if r modulo 2 [ENDL] print - 1 and newline [ENDL] else do the following [ENDL] print l and space and l + 1 and space and r and newline [ENDL] else do the following [ENDL] if l modulo 2 [ENDL] print l + 1 and space and l + 2 and space and l + 3 and newline [ENDL] else do the following [ENDL] print l and space and l + 1 and space and l + 2 and newline [ENDL] create long long l and r", "c++": "int main() { cin >> l >> r ; if ( r - l < 2 ) cout << - 1 << ' \\n ' ; else if ( r - l == 2 ) if ( r % 2 ) cout << - 1 << ' \\n ' ; else cout << l << \"   \" << l + 1 << \"   \" << r << ' \\n ' ; else if ( l % 2 ) cout << l + 1 << \"   \" << l + 2 << \"   \" << l + 3 << ' \\n ' ; else cout << l << \"   \" << l + 1 << \"   \" << l + 2 << ' \\n ' ; long long l , r ; } }"}}
{"translation": {"en": "read l and r [ENDL] is l is even and l + 2 < = r [ENDL] print l , \" \" , l + 1 , \" \" , l + 2 [ENDL] else [ENDL] l + 3 < = r [ENDL] print l + 1 , \" \" , l + 2 , \" \" , l + 3 [ENDL] else [ENDL] print - 1 and a newline [ENDL] n , res = integer with res = 0", "c++": "int main() { cin >> l >> r ; if ( l % 2 == 0 && l + 2 <= r ) cout << l << \"   \" << l + 1 << \"   \" << l + 2 << endl ; else if ( l + 3 <= r ) cout << l + 1 << \"   \" << l + 2 << \"   \" << l + 3 << endl ; else cout << - 1 << endl ; int n , res = 0 ; } return 0; }"}}
{"translation": {"en": "read n [ENDL] total = integer with total = 0 [ENDL] while total < n [ENDL] increment res [ENDL] total = total + res * ( res + 1 ) / 2 [ENDL] if total > n , decrement res [ENDL] print res [ENDL] create ints n , i , j , x , and mohi", "c++": "int main() { cin >> n ; int total = 0 ; while ( total < n ) res ++ ; total += res * ( res + 1 ) / 2 ; if ( total > n ) { res -- ; } } cout << res << endl ; int n , i , j , x , mohi ; return 0; }"}}
{"translation": {"en": "create long long int sum = 0 [ENDL] create integer vector v [ENDL] read n [ENDL] for i = 1 to n [ENDL] for j = 1 to i [ENDL] set mohi to ( j * ( j + 1 ) ) / 2 [ENDL] set sum to sum + mohi [ENDL] if sum is less than n [ENDL] set x to i [ENDL] break loop [ENDL] set sum to 0 [ENDL] if n is equal to 1 [ENDL] print 1 [ENDL] otherwise [ENDL] print x - 1 [ENDL] n , ans , sum , sum2 = int", "c++": "int main() { long long int sum = 0 ; vector < int > v ; cin >> n ; for ( i = 1 ; i <= n ; i ++ ) for ( j = 1 ; j <= i ; j ++ ) mohi = ( j * ( j + 1 ) ) / 2 ; sum += mohi ; if ( sum > n ) } x = i ; break ; sum = 0 ; } if ( n == 1 ) } cout << 1 << endl ; else cout << x - 1 << endl ; int n , ans , sum , sum2 ; }"}}
{"translation": {"en": "while read n [ENDL] ans , sum , sum2 = 0 [ENDL] while true [ENDL] if sum2 > n break [ENDL] increment ans [ENDL] add ans to sum [ENDL] add sum to sum2 [ENDL] print ans - 1 [ENDL] int function Addition with int argument n", "c++": "int main() { while ( cin >> n ) ans = sum = sum2 = 0 ; while ( true ) if ( sum2 > n ) break ; ans ++ ; sum += ans ; sum2 += sum ; cout << ans - 1 << endl ; } int Addition ( int n ) } return 0; }"}}
{"translation": {"en": "declare new integer s [ENDL] set s to ( n * ( 1 + n ) ) / 2 [ENDL] return s [ENDL] a and i are integers with i = 0 [ENDL] read input to a [ENDL] if a is greater than 0 [ENDL] change a to a - the result of Addition ( i ) [ENDL] while a > 0 [ENDL] increment i [ENDL] assign a - the result of Addition ( i + 1 ) to a [ENDL] print i to the standard output [ENDL] else [ENDL] print \" 0 \" to the standard output [ENDL] n , a , b = integers with a = 0 , b = 0", "c++": "int s ; s = ( n * ( 1 + n ) ) / 2 ; return s ; int a , i = 0 ; } int main() { cin >> a ; if ( a > 0 ) a = a - Addition ( i ) ; while ( a > 0 ) i ++ ; a = a - Addition ( i + 1 ) ; cout << i << endl ; } else cout << \" 0 \" << endl ; int n , a = 0 , b = 0 ; }"}}
{"translation": {"en": "read n [ENDL] for i = 1 to n exclusive [ENDL] a = a + i [ENDL] n = n - a [ENDL] if n > = 0 , increment b [ENDL] print b [ENDL] declare integer array a with size 151 ; create integers sum and sum1 where sum1 = 0", "c++": "int main() { cin >> n ; for ( int i = 1 ; a < n ; i ++ ) a += i ; n -= a ; if ( n >= 0 ) b ++ ; cout << b << endl ; } int a [ 151 ] , sum , sum1 = 0 ; }"}}
{"translation": {"en": "read variable sum from the input [ENDL] in the for loop , change i from 1 to 150 inclusive [ENDL] set a [ i ] to ( 1 + i ) * i / 2 [ENDL] increase sum1 by a [ i ] [ENDL] set a [ i + 1 ] to ( 2 + i ) * ( i + 1 ) / 2 [ENDL] if sum > = sum1 and sum < sum1 + a [ i + 1 ] [ENDL] print i to the standard output [ENDL] break the loop [ENDL] n = integer , s = integer = 0", "c++": "int main() { cin >> sum ; for ( int i = 1 ; i <= 150 ; i ++ ) a [ i ] = ( 1 + i ) * i / 2 ; sum1 += a [ i ] ; a [ i + 1 ] = ( 2 + i ) * ( i + 1 ) / 2 ; if ( sum >= sum1 && sum < sum1 + a [ i + 1 ] ) cout << i << endl ; break ; int n , s = 0 ; } } return 0; }"}}
{"translation": {"en": "read n [ENDL] loop indefinitely for i = 1 and increase i at the end of the loop [ENDL] if s > n [ENDL] print the result of i - 2 [ENDL] exit the for loop [ENDL] else [ENDL] s = s + ( i * ( i + 1 ) ) / 2 [ENDL] var , n , aux , x = int with var = 1 and aux = 0 and x = 0", "c++": "int main() { cin >> n ; for ( int i = 1 ; ; i ++ ) if ( s > n ) cout << i - 2 << \" \\n \" ; break ; else s += ( i * ( i + 1 ) ) / 2 ; int var = 1 , n , aux = 0 , x = 0 ; } } }"}}
{"translation": {"en": "read n [ENDL] level = int with level = 0 [ENDL] loop infinitely [ENDL] increment x by var [ENDL] increment aux by x [ENDL] if aux > n break [ENDL] increment level [ENDL] increment var [ENDL] print level [ENDL] create constant int INF = 1e9", "c++": "int main() { cin >> n ; int level = 0 ; while ( 1 ) x += var ; aux += x ; if ( aux > n ) break ; level ++ ; var ++ ; cout << level << \" \\n \" ; } const int INF = 1e9 ; }"}}
{"translation": {"en": "let const integer N = 1e5 [ENDL] let int array arr of size 10001 [ENDL] declare prework [ENDL] set arr [ 0 ] to 0 [ENDL] for i = 1 to 10000 , set arr [ i ] to arr [ i - 1 ] + i [ENDL] call prework [ENDL] let ints n and cnt = 0 [ENDL] read n [ENDL] for i = 1 , loop indefinitely [ENDL] if n is less than arr [ i ] , break loop [ENDL] set n to n - arr [ i ] [ENDL] increment cnt [ENDL] print cnt [ENDL] create ints n , c = 0 , d , and count = 0", "c++": "const int N = 1e5 ; int arr [ 10001 ] ; void prework ( ) arr [ 0 ] = 0 ; for ( int i = 1 ; i <= 10000 ; i ++ ) { arr [ i ] = arr [ i - 1 ] + i ; } prework ( ) ; } int main() { int n , cnt = 0 ; cin >> n ; for ( int i = 1 ; ; i ++ ) if ( n < arr [ i ] ) break ; n -= arr [ i ] ; cnt ++ ; cout << cnt << endl ; } int n , c = 0 , d , count = 0 ; return 0; }"}}
{"translation": {"en": "read n [ENDL] for i = 1 to n [ENDL] set c to c + 1 [ENDL] if n is greater than or equal to c , increment count [ENDL] set n to n - c [ENDL] print count [ENDL] n = int", "c++": "int main() { cin >> n ; for ( int i = 1 ; i <= n ; i ++ ) c += i ; if ( n >= c ) count ++ ; n -= c ; cout << count << endl ; } int n ; return 0; }"}}
{"translation": {"en": "read n [ENDL] h = int with h = 1 [ENDL] temp = int with temp = ( ( h ) * ( h + 1 ) * ( h + 2 ) ) / 6 [ENDL] loop while temp < = n [ENDL] increment h [ENDL] set temp to ( ( h ) * ( h + 1 ) * ( h + 2 ) ) / 6 [ENDL] print h - 1 [ENDL] n = long long", "c++": "int main() { cin >> n ; int h = 1 ; int temp = ( ( h ) * ( h + 1 ) * ( h + 2 ) ) / 6 ; while ( temp <= n ) h ++ ; temp = ( ( h ) * ( h + 1 ) * ( h + 2 ) ) / 6 ; cout << h - 1 << endl ; } long long n ; return 0; }"}}
{"translation": {"en": "read n [ENDL] val , ans = long long with val = 0 and ans = 0 [ENDL] for i = 0 to 10001 [ENDL] increment val by i [ENDL] increment ans by val [ENDL] if ans > n [ENDL] print i - 1 [ENDL] in function sum taking an int n and returning an int", "c++": "int main() { cin >> n ; long long val = 0 , ans = 0 ; for ( long long i = 0 ; i < 10001 ; i ++ ) val += i ; ans += val ; if ( ans > n ) cout << i - 1 << endl ; int sum ( int n ) return 0; } } return 0; }"}}
{"translation": {"en": "s = int with s = ( n * ( n + 1 ) ) / 2 [ENDL] return s [ENDL] n = int [ENDL] read n [ENDL] i = int with i = 0 [ENDL] s = int with s = 0 [ENDL] loop infinitely [ENDL] increment s by sum of i [ENDL] if s > n [ENDL] break [ENDL] else [ENDL] increment i [ENDL] print i - 1 [ENDL] n , count = int with count = 0", "c++": "int s = ( n * ( n + 1 ) ) / 2 ; return s ; int n ; } int main() { cin >> n ; int i = 0 ; int s = 0 ; while ( true ) s = s + sum ( i ) ; if ( s > n ) break ; else i ++ ; cout << ( i - 1 ) << endl ; } } int n , count = 0 ; }"}}
{"translation": {"en": "read n [ENDL] flag , i , x = int with flag = 0 and i = 2 and x = 1 [ENDL] loop while flag < = n [ENDL] increment flag by x [ENDL] increment x by i [ENDL] increment i [ENDL] if flag < = n increment count [ENDL] print count [ENDL] n = int", "c++": "int main() { cin >> n ; int flag = 0 , i = 2 , x = 1 ; while ( flag <= n ) flag += x ; x += i ; i ++ ; if ( flag <= n ) count ++ ; cout << count << endl ; } int n ; return 0; }"}}
{"translation": {"en": "read n [ENDL] tot , ans = int with tot = 0 and ans = 0 [ENDL] for i = 1 to n inclusive [ENDL] increment tot by i * ( i + 1 ) / 2 [ENDL] if tot > n break [ENDL] set ans to i [ENDL] print ans [ENDL] n = long long , x , count and boxes = 0", "c++": "int main() { cin >> n ; int tot = 0 , ans = 0 ; for ( int i = 1 ; i <= n ; i += 1 ) tot += i * ( i + 1 ) / 2 ; if ( tot > n ) break ; ans = i ; cout << ans << endl ; } long long n , x = 0 , count = 0 , boxes = 0 ; return 0; }"}}
{"translation": {"en": "read n [ENDL] i = 1 [ENDL] j = 1 [ENDL] while boxes + i + x < = n [ENDL] add i to x [ENDL] add j to i [ENDL] increment count [ENDL] add x to boxes [ENDL] print count [ENDL] let i , n , k be integers", "c++": "int main() { cin >> n ; long long i = 1 ; long long j = 1 ; while ( boxes + i + x <= n ) x += i ; i += j ; count ++ ; boxes += x ; cout << count << endl ; } int i , n , k ; }"}}
{"translation": {"en": "while read n [ENDL] k is equal to 0 [ENDL] for i is equal to 1 , n > = 0 , increment i by 1 [ENDL] increment k by i [ENDL] decrement n by k [ENDL] print i - 2 and newline [ENDL] a = array of integers of length 10010", "c++": "int main() { while ( cin >> n ) k = 0 ; for ( i = 1 ; n >= 0 ; i ++ ) k += i ; n -= k ; cout << ( i - 2 ) << endl ; } int a [ 10010 ] ; } }"}}
{"translation": {"en": "1st element in a is equal to 1 [ENDL] let sum , m be long integers [ENDL] for i = 2 to 10000 inclusive , the value of a [ i ] is equal to a [ i - 1 ] + i [ENDL] while reading m [ENDL] for i = 1 to 10000 inclusive [ENDL] decrement m by a [ i ] [ENDL] if m is less than a [ i + 1 ] [ENDL] print i and newline [ENDL] stop [ENDL] declare integer vector sol", "c++": "a [ 1 ] = 1 ; int main() { long long int sum , m ; for ( int i = 2 ; i <= 10000 ; i ++ ) a [ i ] = a [ i - 1 ] + i ; while ( cin >> m ) for ( int i = 1 ; i <= 10000 ; i ++ ) m -= a [ i ] ; if ( m < a [ i + 1 ] ) cout << i << endl ; break ; vector < int > sol ; } } } return 0; }"}}
{"translation": {"en": "declare integer n [ENDL] read n [ENDL] declare integer sum = 0 [ENDL] for i = 1 to 150 inclusive [ENDL] if sum is greater than n [ENDL] print i - 2 , newline [ENDL] increment sum by ( ( i * ( i + 1 ) ) / 2 ) [ENDL] create int array a of length 10010", "c++": "int n ; int main() { cin >> n ; int sum = 0 ; for ( int i = 1 ; i <= 150 ; i ++ ) if ( sum > n ) cout << i - 2 << endl ; sum += ( ( i * ( i + 1 ) ) / 2 ) ; return 0; } int a [ 10010 ] ; } }"}}
{"translation": {"en": "set a [ 0 ] to 0 [ENDL] for i = 1 to 10000 inclusive set a [ i ] = a [ i - 1 ] + i [ENDL] create int n [ENDL] while read n [ENDL] ans = 0 [ENDL] loop over i starting from i = 1 [ENDL] if n > = a [ i ] [ENDL] set n to n - a [ i ] , increment ans [ENDL] else [ENDL] break [ENDL] print ans [ENDL] n , i , l , s = long long integer with s = 0", "c++": "a [ 0 ] = 0 ; int main() { for ( int i = 1 ; i <= 10000 ; i ++ ) a [ i ] = a [ i - 1 ] + i ; int n ; while ( cin >> n ) int ans = 0 ; for ( int i = 1 ; ; i ++ ) if ( n >= a [ i ] ) n -= a [ i ] , ans ++ ; else break ; cout << ans << endl ; } long long int n , i , l , s = 0 ; } return 0; }"}}
{"translation": {"en": "read n [ENDL] for l = 0 [ENDL] s = s + l * ( l + 1 ) / 2 [ENDL] if s > n , break loop [ENDL] print l - 1 [ENDL] create int n", "c++": "int main() { cin >> n ; for ( l = 0 ; ; l ++ ) s += l * ( l + 1 ) / 2 ; if ( s > n ) { break ; } cout << l - 1 << endl ; } int n ; return 0; }"}}
{"translation": {"en": "read n [ENDL] create int ans , t and q , set ans to 0 and t , q to 1 [ENDL] ans = ans + t [ENDL] while n > = ans [ENDL] increment q [ENDL] set t to t + q [ENDL] assign ans + t to ans [ENDL] print q - 1 [ENDL] create int n", "c++": "int main() { cin >> n ; int ans = 0 , t = 1 , q = 1 ; ans = ans + t ; while ( n >= ans ) q ++ ; t = t + q ; ans = ans + t ; cout << q - 1 << endl ; } int n ; }"}}
{"translation": {"en": "read n [ENDL] create int a , c , b and i , set a , c and b to 0 [ENDL] for i = 1 to n inclusive [ENDL] set b to ( i * ( i + 1 ) ) / 2 [ENDL] set a to a + b [ENDL] if a > n , break [ENDL] increment c [ENDL] print c [ENDL] create ints n and c", "c++": "int main() { cin >> n ; int a = 0 , c = 0 , b = 0 , i ; for ( int i = 1 ; i <= n ; i ++ ) b = ( i * ( i + 1 ) ) / 2 ; a += b ; if ( a > n ) break ; c ++ ; cout << c << endl ; } int n , c ; return 0; }"}}
{"translation": {"en": "read n [ENDL] for c = 1 , loop as long as c * ( c + 1 ) * ( c + 2 ) / 6 < = n [ENDL] end statement [ENDL] print c - 1 [ENDL] let n be an integer", "c++": "cin >> n ; int main() { for ( c = 1 ; c * ( c + 1 ) * ( c + 2 ) / 6 <= n ; c ++ ) ; cout << c - 1 << ' \\n ' ; int n ; }"}}
{"translation": {"en": "get input in n [ENDL] let i = 2 = int [ENDL] while n - i * ( i + 1 ) / 2 is positive [ENDL] decrement n by i * ( i + 1 ) / 2 [ENDL] increment i [ENDL] print i - 1 [ENDL] a is a new array of integers with size 10010", "c++": "int main() { cin >> n ; int i = 2 ; while ( n - i * ( i + 1 ) / 2 > 0 ) n -= i * ( i + 1 ) / 2 ; i ++ ; cout << i - 1 << endl ; } int a [ 10010 ] ; }"}}
{"translation": {"en": "set a [ 1 ] to 1 [ENDL] declare new long long int variables sum and m [ENDL] for i from 2 to 10000 inclusive , change a [ i ] to a [ i - 1 ] + i [ENDL] read m and loop further [ENDL] start for loop from i = 1 to 10000 inclusive incrementing i [ENDL] decrease m by a [ i ] [ENDL] if m is less than a [ i + 1 ] [ENDL] print i [ENDL] break the loop [ENDL] n = int", "c++": "a [ 1 ] = 1 ; int main() { long long int sum , m ; for ( int i = 2 ; i <= 10000 ; i ++ ) a [ i ] = a [ i - 1 ] + i ; while ( cin >> m ) for ( int i = 1 ; i <= 10000 ; i ++ ) m -= a [ i ] ; if ( m < a [ i + 1 ] ) cout << i << endl ; break ; int n ; } } } return 0; }"}}
{"translation": {"en": "a = int with a = 0 [ENDL] b = int with b = 1 [ENDL] c = int with c = 0 [ENDL] read n [ENDL] loop infinitely [ENDL] for i = 1 to b inclusive increment a by i [ENDL] increment b [ENDL] if a > n break [ENDL] increment c [ENDL] print c [ENDL] n , r , t = int with r = 0 and t = 0", "c++": "int main() { int a = 0 ; int b = 1 ; int c = 0 ; cin >> n ; while ( true ) for ( int i = 1 ; i <= b ; i ++ ) { a += i ; } b ++ ; if ( a > n ) { break ; } c ++ ; cout << c << \" \\n \" ; } int n , r = 0 , t = 0 ; return 0; }"}}
{"translation": {"en": "read n [ENDL] for i = 1 [ENDL] increment r by i [ENDL] increment t by r [ENDL] if t > n [ENDL] print i - 1 [ENDL] break [ENDL] let int n", "c++": "int main() { cin >> n ; for ( int i = 1 ; ; ++ i ) r += i ; t += r ; if ( t > n ) cout << ( i - 1 ) << endl ; break ; int n ; } } return 0; }"}}
{"translation": {"en": "read n and while n is truthy [ENDL] let long long int sum = 0 [ENDL] let int i [ENDL] for i = 1 loop indefinitely [ENDL] make long long current = 1LL * i * ( i + 1 ) / 2 [ENDL] if sum + current is less than or equal to n [ENDL] set n to n - sum + current [ENDL] else do [ENDL] break loop [ENDL] print i - 1 [ENDL] cube = long long", "c++": "int main() { while ( cin >> n ) long long sum = 0 ; int i ; for ( i = 1 ; ; i ++ ) long long current = 1LL * i * ( i + 1 ) / 2 ; if ( sum + current <= n ) n -= sum + current ; else break ; cout << i - 1 << endl ; } long long cube ; } return 0; }"}}
{"translation": {"en": "res = long long [ENDL] read cube [ENDL] for i = 0 loop while i * ( i + 1 ) * ( i + 2 ) < = 6 * cube set res to i [ENDL] print res [ENDL] declare need with integer a as argument , returning integer", "c++": "long long res ; int main() { cin >> cube ; for ( long long i = 0 ; i * ( i + 1 ) * ( i + 2 ) <= 6 * cube ; ++ i ) { res = i ; } cout << res << endl ; int need ( int a ) return 0; }"}}
{"translation": {"en": "declare b as integer = 0 [ENDL] for i = 1 to a inclusive , increment b by i [ENDL] return b from function [ENDL] declare integer a [ENDL] read a [ENDL] declare integer i with i = 0 [ENDL] while a is greater than or equal to result of run need with i as argument [ENDL] decrement a by need ( 1 ) [ENDL] increment i [ENDL] print i - 1 print newline [ENDL] n = int", "c++": "int b = 0 ; for ( int i = 1 ; i <= a ; i ++ ) { b += i ; } return b ; int a ; } int main() { cin >> a ; int i = 0 ; while ( a >= need ( i ) ) a -= need ( i ) ; i ++ ; cout << i - 1 << endl ; } int n ; }"}}
{"translation": {"en": "read n [ENDL] sum , i , b = int [ENDL] set sum , b , i to 1 [ENDL] loop infinitely [ENDL] if sum is n [ENDL] print i [ENDL] break [ENDL] else [ENDL] if sum > n [ENDL] print i - 1 [ENDL] break [ENDL] else [ENDL] increment i [ENDL] increment b by i [ENDL] increment sum by b [ENDL] n = int", "c++": "int main() { cin >> n ; int sum , i , b ; sum = b = i = 1 ; for ( ; ; ) if ( sum == n ) cout << i << endl ; break ; else if ( sum > n ) cout << ( i - 1 ) << endl ; break ; else i ++ ; b += i ; sum += b ; int n ; } } } return 0; }"}}
{"translation": {"en": "read n [ENDL] sum and height = 0 [ENDL] while sum < = n [ENDL] increment height [ENDL] add height * ( height + 1 ) / 2 to sum [ENDL] print height - 1 [ENDL] let n , sum , level be integers", "c++": "int main() { cin >> n ; int sum = 0 , height = 0 ; while ( sum <= n ) height ++ ; sum += height * ( height + 1 ) / 2 ; cout << height - 1 << endl ; } int n , sum , level ; return 0; }"}}
{"translation": {"en": "while read n [ENDL] if n is equal to 1 [ENDL] print 1 and newline [ENDL] proceed to next [ENDL] sum is equal to 1 , level is equal to 1 [ENDL] for integer i is equal to 2 , the condition is always true , increment i by 1 [ENDL] increment level by i [ENDL] increment sum by level [ENDL] if sum is equal to n [ENDL] print i and newline [ENDL] stop [ENDL] else if sum is greater than n [ENDL] print i - 1 and newline [ENDL] stop [ENDL] n = int", "c++": "int main() { while ( cin >> n ) if ( n == 1 ) cout << ' 1 ' << endl ; continue ; sum = 1 , level = 1 ; } for ( int i = 2 ; ; i ++ ) level += i ; sum += level ; if ( sum == n ) cout << i << endl ; break ; else if ( sum > n ) cout << i - 1 << endl ; break ; int n ; } } } return 0; }"}}
{"translation": {"en": "read n [ENDL] if n < 4 [ENDL] print 1 [ENDL] cnt = 0 , m = 1 , i = 1 , sum = 0 [ENDL] while sum + i < = n [ENDL] addi to sum [ENDL] increment cnt [ENDL] increment m [ENDL] add m to i [ENDL] print cnt [ENDL] let n be a integer", "c++": "int main() { cin >> n ; if ( n < 4 ) cout << 1 << endl ; int cnt = 0 , m = 1 , i = 1 , sum = 0 ; return 0; } while ( sum + i <= n ) sum = sum + i ; cnt ++ ; m ++ ; i += m ; cout << cnt << endl ; } int n ; }"}}
{"translation": {"en": "read n [ENDL] the 1000th element of sum1 is equal to 0 [ENDL] the 1000th element of sum2 is equal to 1 [ENDL] let sum be a integer with sum = 0 [ENDL] for i = 1 to 50 exclusive [ENDL] increment sum by i [ENDL] sum1 [ i - 1 ] is equal to sum [ENDL] sum1 [ i ] is equal to sum1 [ i - 1 ] + i + 1 [ENDL] sum2 [ i ] is equal to sum2 [ i - 1 ] + sum1 [ i ] [ENDL] if sum2 [ i - 1 ] < = n and sum2 [ i ] is greater than n , print i and newline [ENDL] declare integer n", "c++": "int main() { while ( cin >> n ) int sum1 [ 1000 ] = { 0 } ; int sum2 [ 1000 ] = { 1 } ; int sum = 0 ; for ( int i = 1 ; i < 50 ; i ++ ) sum += i ; sum1 [ i - 1 ] = sum ; sum1 [ i ] = sum1 [ i - 1 ] + i + 1 ; sum2 [ i ] = sum2 [ i - 1 ] + sum1 [ i ] ; if ( ( sum2 [ i - 1 ] <= n ) && ( sum2 [ i ] > n ) ) cout << i << endl ; int n ; } } }"}}
{"translation": {"en": "read n [ENDL] declare integer cont = 0 [ENDL] declare integer sumador = 1 [ENDL] declare i = 1 as integer [ENDL] while n is greater than 0 and n is greater than or equal to sumador [ENDL] let n be n - sumador [ENDL] increment cont [ENDL] increment i [ENDL] let sumador = sumador + 1 [ENDL] print cont , \" \\ n \" [ENDL] declare int variables n and i", "c++": "int main() { cin >> n ; int cont = 0 ; int sumador = 1 ; int i = 1 ; while ( n > 0 && n >= sumador ) n = n - sumador ; cont ++ ; i ++ ; sumador = sumador + i ; cout << cont << \" \\n \" ; } int n , i ; return 0; }"}}
{"translation": {"en": "read user input to n [ENDL] for i from 1 to 40 inclusive incrementing i [ENDL] if i * ( i + 1 ) * ( i + 2 ) / 6 is greater than n , stop the loop [ENDL] print i - 1 to the standard output [ENDL] declare integers n , tmp = 0 , hitung = 0", "c++": "cin >> n ; int main() { for ( i = 1 ; i <= 40 ; i ++ ) if ( i * ( i + 1 ) * ( i + 2 ) / 6 > n ) break ; cout << i - 1 << endl ; int n , tmp = 0 , hitung = 0 ; }"}}
{"translation": {"en": "read n [ENDL] for i = 1 to n inclusive [ENDL] increment hitung by ( ( i * ( i + 1 ) ) / 2 ) [ENDL] if hitung is n [ENDL] set tmp to i [ENDL] break loop [ENDL] else if hitung is greater than n [ENDL] set tmp to i - 1 [ENDL] break loop [ENDL] print tmp , newline [ENDL] create integer length = 1e5", "c++": "int main() { cin >> n ; for ( int i = 1 ; i <= n ; i ++ ) hitung += ( ( i * ( i + 1 ) ) / 2 ) ; if ( hitung == n ) tmp = i ; break ; else if ( hitung > n ) tmp = i - 1 ; break ; cout << tmp << endl ; } } int length = 1e5 ; }"}}
{"translation": {"en": "let ints n , i , and sum = 0 [ENDL] read n [ENDL] create int vector a of size n + 1 [ENDL] set a [ 0 ] to 0 [ENDL] for i = 1 to n , set a [ i ] to a [ i - 1 ] + i [ENDL] for i = 1 until sum < = n and i < = n are false , set sum to sum + a [ i ] [ENDL] if n is equal to 1 , increase 1 by 1 [ENDL] print the result of i - 2 [ENDL] declare new integer variable n", "c++": "int n , i , sum = 0 ; int main() { cin >> n ; vector < int > a ( n + 1 ) ; a [ 0 ] = 0 ; for ( i = 1 ; i <= n ; i ++ ) { a [ i ] = a [ i - 1 ] + i ; } for ( i = 1 ; ( sum <= n ) && ( i <= n ) ; i ++ ) { sum += a [ i ] ; } if ( n == 1 ) i ++ ; cout << i - 2 << endl ; int n ; return 0; }"}}
{"translation": {"en": "read n and keep looping [ENDL] declare new long long variable sum with value 0 [ENDL] declare new integer called i [ENDL] set i to 1 and increment it in a for loop [ENDL] declare new long long variable current with value 1LL * i * ( i + 1 ) / 2 [ENDL] if sum + current < = n [ENDL] subtract sum + current from n [ENDL] else [ENDL] break the loop [ENDL] print i - 1 to the standard output [ENDL] create integer n", "c++": "int main() { while ( cin >> n ) long long sum = 0 ; int i ; for ( i = 1 ; ; i ++ ) long long current = 1LL * i * ( i + 1 ) / 2 ; if ( sum + current <= n ) n -= sum + current ; else break ; cout << i - 1 << endl ; } int n ; } return 0; }"}}
{"translation": {"en": "while get n do the following till valid input [ENDL] create long long sum , prev , x and set them to 0 [ENDL] for integer i = 1 to n with increment i [ENDL] add sum to prev [ENDL] add i to sum [ENDL] if sum + prev less than or equal to n [ENDL] increment x [ENDL] else do the following [ENDL] break the loop [ENDL] print x [ENDL] in function inum taking pointer to an int a , int k , int i returning int", "c++": "int main() { while ( cin >> n ) long long sum = 0 , prev = 0 , x = 0 ; for ( int i = 1 ; i <= n ; i ++ ) prev += sum ; sum += i ; if ( sum + prev <= n ) x ++ ; else break ; cout << x << endl ; } int inum ( int * a , int k , int i ) } return 0; }"}}
{"translation": {"en": "for l = 1 to k [ENDL] if a [ l - 1 ] is not 1 [ENDL] set a [ l ] to a [ l - 1 ] + ( l + 1 ) [ENDL] else [ENDL] set a [ l ] to ( inum of a , l , i ) + l + 1 [ENDL] return value of ( a + ( k - 1 ) ) [ENDL] in function isum taking int i returning int [ENDL] arr , a = int array of size i each [ENDL] set arr [ i ] to - 1 [ENDL] set a [ i ] to - 1 [ENDL] set a [ 0 ] to 1 [ENDL] set arr [ 0 ] to 1 [ENDL] if i is 1 [ENDL] return i [ENDL] else [ENDL] j = int with j = 1 [ENDL] for j to i [ENDL] if arr [ j - 1 ] is not - 1 [ENDL] set arr [ j ] to arr [ j - 1 ] + inum of a , j + 1 , i [ENDL] else [ENDL] set arr [ j ] to isnum of j + j + 1 [ENDL] return value of arr + ( i - 1 ) [ENDL] n , i = int with i = 1 [ENDL] read n [ENDL] loop while isnum of i < = n increment i [ENDL] print i - 1 [ENDL] declare n , cnt , sum , ans , i as long long integers", "c++": "for ( int l = 1 ; l < k ; l ++ ) if ( a [ l - 1 ] != - 1 ) a [ l ] = a [ l - 1 ] + ( l + 1 ) ; else a [ l ] = inum ( a , l , i ) + l + 1 ; return * ( a + ( k - 1 ) ) ; } } int isum ( int i ) } int arr [ i ] , a [ i ] ; arr [ i ] = { - 1 } ; a [ i ] = { - 1 } ; a [ 0 ] = 1 ; arr [ 0 ] = 1 ; if ( i == 1 ) return i ; else int j = 1 ; for ( j ; j < i ; j ++ ) if ( arr [ j - 1 ] != - 1 ) arr [ j ] = arr [ j - 1 ] + inum ( a , j + 1 , i ) ; else arr [ j ] = isum ( j ) + ( j + 1 ) ; return * ( arr + ( i - 1 ) ) ; } } } int n , i = 1 ; } int main() { cin >> n ; while ( isum ( i ) <= n ) { i ++ ; } cout << ( i - 1 ) << endl ; long long int n , cnt , sum , ans , i ; return 0; }"}}
{"translation": {"en": "read n [ENDL] let cnt be 0 , ans be 0 , sum be 0 [ENDL] for i = 1 to 10000 inclusive [ENDL] increment ans by i [ENDL] increment sum by ans [ENDL] if sum is greater than n , break loop [ENDL] increment cnt [ENDL] print cnt print newline [ENDL] create integer n", "c++": "int main() { cin >> n ; cnt = 0 , ans = 0 , sum = 0 ; for ( i = 1 ; i <= 10000 ; i ++ ) ans += i ; sum += ans ; if ( sum > n ) break ; cnt ++ ; cout << cnt << endl ; } int n ; return 0; }"}}
{"translation": {"en": "create integer array a with dimension 100 [ENDL] while get n do till valid input [ENDL] create integer i , sum with i = 2 , sum = 0 [ENDL] create integer cs with cs = 0 [ENDL] set a [ 1 ] to 1 [ENDL] for integer i = 2 with increment i till sum less than n [ENDL] set a [ i ] to i + a [ i - 1 ] [ENDL] add a [ i ] to sum [ENDL] set cs to i - 1 [ENDL] print cs [ENDL] create integer variables n , i and l with i and l = 0", "c++": "int main() { int a [ 100 ] ; while ( cin >> n ) int i = 2 , sum = 0 ; int cs = 0 ; a [ 1 ] = 1 ; for ( i = 2 ; sum < n ; i ++ ) a [ i ] = i + a [ i - 1 ] ; sum += a [ i ] ; cs = i - 1 ; cout << cs << endl ; } int n , i = 0 , l = 0 ; } }"}}
{"translation": {"en": "read standard input to n [ENDL] while l < = n [ENDL] increment i by one [ENDL] change l to sum of l and ( i * ( i + 1 ) ) / 2 [ENDL] print i - 1 [ENDL] cum = long long array of size 102", "c++": "int main() { cin >> n ; while ( l <= n ) i ++ ; l += ( i * ( i + 1 ) ) / 2 ; cout << i - 1 << endl ; } long long cum [ 100 + 2 ] ; return 0; }"}}
{"translation": {"en": "for i = 1 to 100 inclusive set cum [ i ] to i [ENDL] for i = 2 to 100 inclusive increment cum [ i ] by cum [ i - 1 ] [ENDL] n = int [ENDL] read n [ENDL] sum = long long with sum = 0 [ENDL] Count = int with Count = 0 [ENDL] i = int [ENDL] iterate i starting at 1 while sum < = n [ENDL] increment sum by cum [ i ] [ENDL] if sum > n [ENDL] break [ENDL] else [ENDL] increment Count [ENDL] print Count [ENDL] create int sum = 1", "c++": "for ( int i = 1 ; i <= 100 ; i ++ ) cum [ i ] = i ; int main() { for ( int i = 2 ; i <= 100 ; i ++ ) { cum [ i ] += cum [ i - 1 ] ; } int n ; cin >> n ; long long sum = 0 ; int Count = 0 ; int i ; for ( i = 1 ; sum <= n ; i ++ ) sum += cum [ i ] ; if ( sum > n ) break ; else Count ++ ; cout << Count << endl ; } int sum = 1 ; }"}}
{"translation": {"en": "make int levels = 1 [ENDL] make integer counter = 0 [ENDL] let int n [ENDL] read n [ENDL] for i = 2 to n [ENDL] increment counter [ENDL] set levels to levels + i [ENDL] set sum to sum + levels [ENDL] print counter [ENDL] declare long long n", "c++": "int main() { int levels = 1 ; int counter = 0 ; int n ; cin >> n ; for ( int i = 2 ; sum <= n ; i ++ ) counter ++ ; levels = levels + i ; sum = sum + levels ; cout << counter << endl ; } long long n ; }"}}
{"translation": {"en": "while read n is true [ENDL] declare i as integer [ENDL] declare long long t = 0 [ENDL] declare long long k = 0 [ENDL] declare last as integer [ENDL] for i = 1 , incrementing i [ENDL] increment t by i [ENDL] increment k by t [ENDL] if n is greater than or equal to k [ENDL] let last be i [ENDL] else [ENDL] break loop [ENDL] if n is 0 , let last be 0 [ENDL] print last , newline [ENDL] integer function check with string argument s and integer arguments i and j", "c++": "int main() { while ( cin >> n ) int i ; long long t = 0 ; long long k = 0 ; int last ; for ( i = 1 ; ; i ++ ) t += i ; k += t ; if ( n >= k ) last = i ; else break ; if ( n == 0 ) { last = 0 ; } } } cout << last << endl ; int check ( string s , int i , int j ) } }"}}
{"translation": {"en": "declare integer variables l = i and r = j [ENDL] while l is less than r [ENDL] if s [ l ] = s [ r ] [ENDL] increment l [ENDL] decrease r by one [ENDL] skip the rest of the loop [ENDL] else [ENDL] return 1 [ENDL] declare string variable s [ENDL] read s [ENDL] i , n and j are integers where n = length of s [ENDL] set value of i to 0 [ENDL] set j to n - 1 [ENDL] while i is less than j [ENDL] if s [ i ] ! = s [ j ] [ENDL] if i + 1 = j [ENDL] insert s [ i ] at position s . begin ( ) + j + 1 of s [ENDL] print s [ENDL] else [ENDL] if check ( s , i + 1 , j ) is 1 [ENDL] insert s [ i ] at position s . begin ( ) + j + 1 of s [ENDL] print s [ENDL] else if check ( s , i , j - 1 ) is 1 [ENDL] insert s [ j ] at position s . begin ( ) + i of s [ENDL] print s [ENDL] else [ENDL] print \" NA \" [ENDL] else [ENDL] increase i [ENDL] decrease j by one [ENDL] if length of s is even [ENDL] push character ' a ' to s at position s . begin ( ) + n / 2 [ENDL] print s [ENDL] else [ENDL] push character aat s [ n / 2 ] to s at position s . begin ( ) + n / 2 + 1 [ENDL] print s [ENDL] let s1 be character array with size 15", "c++": "int l = i , r = j ; while ( l < r ) if ( s [ l ] == s [ r ] ) l ++ ; r -- ; continue ; else return 1 ; return 0; } string s ; } int main() { cin >> s ; int i , n = s . length ( ) , j ; i = 0 ; j = n - 1 ; while ( i < j ) if ( s [ i ] != s [ j ] ) if ( i + 1 == j ) s . insert ( s . begin ( ) + j + 1 , s [ i ] ) ; cout << s << endl ; else return 0; if ( check ( s , i + 1 , j ) ) s . insert ( s . begin ( ) + j + 1 , s [ i ] ) ; cout << s << endl ; else if ( check ( s , i , j - 1 ) ) return 0; s . insert ( s . begin ( ) + i , s [ j ] ) ; cout << s << endl ; else return 0; cout << \" NA \" << endl ; else return 0; } } i ++ ; j -- ; if ( s . length ( ) % 2 == 0 ) } } s . insert ( s . begin ( ) + n / 2 , ' a ' ) ; cout << s << endl ; else return 0; s . insert ( s . begin ( ) + n / 2 + 1 , s [ n / 2 ] ) ; cout << s << endl ; char s1 [ 15 ] ; return 0; } }"}}
{"translation": {"en": "set s2 be character array with size 15 [ENDL] set s be character array with size 15 [ENDL] declare integer variable f = 0 [ENDL] read s1 [ENDL] declare integer variable n = length of s1 [ENDL] create boolean flag = 0 [ENDL] for i = 0 to 26 exclusive [ENDL] for j = 0 to n inclusive [ENDL] set f to 0 [ENDL] for k = 0 to j exclusive , set s [ k ] to s1 [ k ] [ENDL] s [ j ] = char ( ' a ' + i ) [ENDL] for k = j + 1 to n inclusive , set s [ k ] to s1 [ k - 1 ] [ENDL] for i = 0 , j = n while i < j increase i and decrease j [ENDL] if s [ i ] ! = s [ j ] [ENDL] increment f [ENDL] if f > = 1 , break [ENDL] if f = 0 [ENDL] print n elements of s [ENDL] print new line [ENDL] print \" NA \" [ENDL] declare string s", "c++": "char s2 [ 15 ] ; char s [ 15 ] ; int f = 0 ; int main() { cin >> s1 ; int n = strlen ( s1 ) ; bool flag = 0 ; for ( int i = 0 ; i < 26 ; i ++ ) for ( int j = 0 ; j <= n ; j ++ ) f = 0 ; for ( int k = 0 ; k < j ; k ++ ) { s [ k ] = s1 [ k ] ; } s [ j ] = char ( ' a ' + i ) ; for ( int k = j + 1 ; k <= n ; k ++ ) { s [ k ] = s1 [ k - 1 ] ; } for ( int i = 0 , j = n ; i < j ; i ++ , j -- ) if ( s [ i ] != s [ j ] ) f ++ ; if ( f >= 1 ) { break ; } if ( f == 0 ) } } for ( int i = 0 ; i <= n ; i ++ ) { cout << s [ i ] ; } cout << endl ; cout << \" NA \" << endl ; return 0; } } } string s ; return 0; }"}}
{"translation": {"en": "read s [ENDL] declare integer variable pntr = length of s - 1 [ENDL] declare character c [ENDL] for i = 0 to length of s / 2 exclusive [ENDL] if s [ i ] ! = s [ pntr ] [ENDL] declare boolean b = true [ENDL] declare integer variable pntr2 = pntr [ENDL] for integer j = i + 1 to ( length of s + 1 ) / 2 exclusive [ENDL] if s [ j ] ! = s [ pntr2 ] [ENDL] set b to false [ENDL] else [ENDL] decrease pntr2 [ENDL] if b is true [ENDL] assign value of s [ i ] to c [ENDL] for integer j = 0 to length of s exclusive [ENDL] print s [ j ] [ENDL] if j = pntr print c [ENDL] print new line [ENDL] pntr2 = pntr - 1 [ENDL] set value of b to true [ENDL] for integer j = i to ( length of s + 1 ) / 2 exclusive [ENDL] if s [ j ] ! = s [ pntr2 ] [ENDL] b = false [ENDL] else [ENDL] decrement pntr2 [ENDL] if b [ENDL] assign value of s [ pntr ] to c [ENDL] for integer j = 0 to length of s exclusive [ENDL] if j = i [ENDL] print s [ j ] [ENDL] print new line [ENDL] print \" NA \" [ENDL] else [ENDL] decrement pntr [ENDL] if length of s is an even number [ENDL] for i = 0 to length of s exclusive [ENDL] if i = ( length of s ) / 2 [ENDL] print s [ i ] and s [ i ] [ENDL] else [ENDL] print s [ i ] [ENDL] print new line [ENDL] else [ENDL] for integer i = 0 to length of s exclusive [ENDL] if i = ( length of s / 2 ) [ENDL] print \" a \" and s [ i ] [ENDL] else [ENDL] print s [ i ] [ENDL] print new line [ENDL] declare string variable s", "c++": "int main() { cin >> s ; int pntr = s . size ( ) - 1 ; char c ; for ( int i = 0 ; i < s . size ( ) / 2 ; i ++ ) if ( s [ i ] != s [ pntr ] ) bool b = true ; int pntr2 = pntr ; for ( int j = i + 1 ; j < ( s . size ( ) + 1 ) / 2 ; j ++ ) if ( s [ j ] != s [ pntr2 ] ) b = false ; else pntr2 -- ; if ( b ) c = s [ i ] ; for ( int j = 0 ; j < s . size ( ) ; j ++ ) cout << s [ j ] ; if ( j == pntr ) cout << c ; cout << endl ; } pntr2 = pntr - 1 ; return 0; } b = true ; for ( int j = i ; j < ( s . size ( ) + 1 ) / 2 ; j ++ ) if ( s [ j ] != s [ pntr2 ] ) b = false ; else pntr2 -- ; if ( b ) c = s [ pntr ] ; for ( int j = 0 ; j < s . size ( ) ; j ++ ) if ( j == i ) cout << c ; cout << s [ j ] ; cout << endl ; } cout << \" NA \" << endl ; return 0; } else return 0; pntr -- ; if ( s . size ( ) % 2 ) } for ( int i = 0 ; i < s . size ( ) ; i ++ ) if ( i == ( s . size ( ) ) / 2 ) cout << s [ i ] << s [ i ] ; else cout << s [ i ] ; cout << endl ; else for ( int i = 0 ; i < s . size ( ) ; i ++ ) if ( i == ( s . size ( ) / 2 ) ) cout << \" a \" << s [ i ] ; else cout << s [ i ] ; cout << endl ; string s ; } }"}}
{"translation": {"en": "read s [ENDL] for char = ' a ' to ' z ' inclusive going alphabetically [ENDL] for integer i = 0 to length of s inclusive [ENDL] declare string t = s [ENDL] insert character c to the t at position i [ENDL] create string k = t [ENDL] reverse k [ENDL] if k = t [ENDL] print t [ENDL] print \" NA \" [ENDL] create string s", "c++": "cin >> s ; int main() { for ( char c = ' a ' ; c <= ' z ' ; c ++ ) for ( int i = 0 ; i <= s . size ( ) ; i ++ ) string t = s ; t . insert ( i , 1 , c ) ; string k = t ; reverse ( k . begin ( ) , k . end ( ) ) ; if ( k == t ) cout << t << endl ; cout << \" NA \" << endl ; return 0; } } string s ; return 0; }"}}
{"translation": {"en": "read s [ENDL] create integer flag with flag = - 1 [ENDL] create integer sz with sz = size of s [ENDL] for i = 0 to 26 exclusive [ENDL] create string a [ENDL] add element ( ' a ' + i ) to end of a [ENDL] increment a by s [ENDL] for j = 0 to sz exclusive [ENDL] create string b with b = 0 [ENDL] reverse element order from beginning of b to end of b [ENDL] if a is b [ENDL] print a print newline [ENDL] swap element values from a [ j ] to a [ j + 1 ] [ENDL] create string b with b = a [ENDL] reverse element order from beginning of b to end of b [ENDL] if a is b [ENDL] print a print newline [ENDL] print \" NA \" print newline [ENDL] create 2d integer array mp with size 1010 by 1010", "c++": "int main() { cin >> s ; int flag = - 1 ; int sz = s . size ( ) ; for ( int i = 0 ; i < 26 ; i ++ ) string a ; a . push_back ( ' a ' + i ) ; a += s ; for ( int j = 0 ; j < sz ; j ++ ) string b = a ; reverse ( b . begin ( ) , b . end ( ) ) ; if ( a == b ) cout << a << endl ; swap ( a [ j ] , a [ j + 1 ] ) ; return 0; } string b = a ; } reverse ( b . begin ( ) , b . end ( ) ) ; if ( a == b ) cout << a << endl ; cout << \" NA \" << endl ; return 0; } } int mp [ 1010 ] [ 1010 ] ; return 0; }"}}
{"translation": {"en": "create integers m , n , k [ENDL] read m read n read k [ENDL] set bytes from m to size of m to value 0 [ENDL] create integer flog with flag = 0 [ENDL] create integer ans with ans = 0 [ENDL] for i = 1 to k inclusive [ENDL] create integers x , y [ENDL] read x read y [ENDL] set mp [ x ] [ y ] to 1 [ENDL] if flag is 0 [ENDL] if ( mp [ x - 1 ] [ y ] and mp [ x - 1 ] [ y - 1 ] and mp [ x ] [ y - 1 ] ) , set flog to 1 [ENDL] if ( mp [ x + 1 ] [ y ] and mp [ x + 1 ] [ y + 1 ] and mp [ x ] [ y + 1 ] ) , set flog to 1 [ENDL] if ( mp [ x - 1 ] [ y ] and mp [ x - 1 ] [ y + 1 ] and mp [ x ] [ y + 1 ] ) , set flog to 1 [ENDL] if ( mp [ x + 1 ] [ y ] and mp [ x + 1 ] [ y - 1 ] and mp [ x ] [ y - 1 ] ) , set flog to 1 [ENDL] if flog is true [ENDL] print i print newline [ENDL] print \" 0 \" print newline [ENDL] mp = two dimensional int array of sizes 1010 and 1010", "c++": "int m , n , k ; int main() { cin >> m >> n >> k ; memset ( mp , 0 , sizeof ( mp ) ) ; int flog = 0 ; int ans = 0 ; for ( int i = 1 ; i <= k ; i ++ ) int x , y ; cin >> x >> y ; mp [ x ] [ y ] = 1 ; if ( flog == 0 ) if ( mp [ x - 1 ] [ y ] && mp [ x - 1 ] [ y - 1 ] && mp [ x ] [ y - 1 ] ) flog = 1 ; if ( mp [ x + 1 ] [ y ] && mp [ x + 1 ] [ y + 1 ] && mp [ x ] [ y + 1 ] ) flog = 1 ; if ( mp [ x - 1 ] [ y ] && mp [ x - 1 ] [ y + 1 ] && mp [ x ] [ y + 1 ] ) flog = 1 ; if ( mp [ x + 1 ] [ y ] && mp [ x + 1 ] [ y - 1 ] && mp [ x ] [ y - 1 ] ) flog = 1 ; if ( flog ) cout << i << endl ; cout << \" 0 \" << endl ; return 0; } } } int mp [ 1010 ] [ 1010 ] ; }"}}
{"translation": {"en": "m , n , k = int [ENDL] read m then n then k [ENDL] set all values of mp to 0 [ENDL] flog = int with flog = 0 [ENDL] ans = int with ans = 0 [ENDL] for i = 1 to k inclusive [ENDL] x , y = int [ENDL] read x then y [ENDL] set mp [ x ] [ y ] to 1 [ENDL] if flog is 0 [ENDL] if mp [ x - 1 ] [ y ] is not 0 and mp [ x - 1 ] [ y - 1 ] is not 0 and mp [ x ] [ y - 1 ] is not 0 then set flog to 1 [ENDL] if mp [ x + 1 ] [ y ] is not 0 and mp [ x + 1 ] [ y + 1 ] is not 0 and mp [ x ] [ y + 1 ] is not 0 then set flog to 1 [ENDL] if mp [ x - 1 ] [ y ] is not 0 and mp [ x - 1 ] [ y + 1 ] is not 0 and mp [ x ] [ y + 1 ] is not 0 then set flog to 1 [ENDL] if mp [ x + 1 ] [ y ] is not 0 and mp [ x + 1 ] [ y - 1 ] is not 0 and mp [ x ] [ y - 1 ] is not 0 then set flog to 1 [ENDL] if flog is not 0 [ENDL] print i [ENDL] print \" 0 \" [ENDL] let OO , NegOO , N , mod be constant integers with OO = 0x3f3f3f3f , NegOO = - 1 * OO , N = 1e3 + 5 , mod = 1e9 + 7", "c++": "int m , n , k ; int main() { cin >> m >> n >> k ; memset ( mp , 0 , sizeof ( mp ) ) ; int flog = 0 ; int ans = 0 ; for ( int i = 1 ; i <= k ; i ++ ) int x , y ; cin >> x >> y ; mp [ x ] [ y ] = 1 ; if ( flog == 0 ) if ( mp [ x - 1 ] [ y ] && mp [ x - 1 ] [ y - 1 ] && mp [ x ] [ y - 1 ] ) flog = 1 ; if ( mp [ x + 1 ] [ y ] && mp [ x + 1 ] [ y + 1 ] && mp [ x ] [ y + 1 ] ) flog = 1 ; if ( mp [ x - 1 ] [ y ] && mp [ x - 1 ] [ y + 1 ] && mp [ x ] [ y + 1 ] ) flog = 1 ; if ( mp [ x + 1 ] [ y ] && mp [ x + 1 ] [ y - 1 ] && mp [ x ] [ y - 1 ] ) flog = 1 ; if ( flog ) cout << i << endl ; cout << \" 0 \" << endl ; return 0; } } } const int OO = 0x3f3f3f3f , NegOO = - 1 * OO , N = 1e3 + 5 , mod = 1e9 + 7 ; }"}}
{"translation": {"en": "black = 2d boolean array of N rows and N columns [ENDL] boolean check of int x , int z [ENDL] if black [ x + 1 ] [ z ] and black [ x + 1 ] [ z + 1 ] and black [ x ] [ z + 1 ] , return the value 1 [ENDL] if black [ x ] [ z - 1 ] and black [ x + 1 ] [ z - 1 ] and black [ x + 1 ] [ z ] , return the value 1 [ENDL] if black [ x ] [ z - 1 ] and black [ x - 1 ] [ z ] and black [ x - 1 ] [ z - 1 ] , return the value 1 [ENDL] if black [ x ] [ z + 1 ] and black [ x - 1 ] [ z ] and black [ x - 1 ] [ z + 1 ] , return the value 1 [ENDL] let n , m , k be integers [ENDL] read n , m , k [ENDL] let ans be a integer with ans = 0 [ENDL] let x , z be integers [ENDL] for i = 0 to k exclusive [ENDL] read x , z [ENDL] set black [ x ] [ z ] to 1 [ENDL] if not ans [ENDL] if check ( x , z ) , ans is equal to i + 1 [ENDL] print ans and newline [ENDL] declare long longs n , m , i , k , v1 , v2 and f where f = 0 , and 2d long long array a with size 1007 by 1007", "c++": "bool black [ N ] [ N ] ; bool check ( int x , int z ) if ( black [ x + 1 ] [ z ] && black [ x + 1 ] [ z + 1 ] && black [ x ] [ z + 1 ] ) return 1 ; if ( black [ x ] [ z - 1 ] && black [ x + 1 ] [ z - 1 ] && black [ x + 1 ] [ z ] ) return 1 ; if ( black [ x ] [ z - 1 ] && black [ x - 1 ] [ z ] && black [ x - 1 ] [ z - 1 ] ) return 1 ; if ( black [ x ] [ z + 1 ] && black [ x - 1 ] [ z ] && black [ x - 1 ] [ z + 1 ] ) return 1 ; int n , m , k ; return 0; } int main() { cin >> n >> m >> k ; int ans = 0 ; int x , z ; for ( int i = 0 ; i < k ; ++ i ) cin >> x >> z ; black [ x ] [ z ] = 1 ; if ( ! ans ) if ( check ( x , z ) ) ans = i + 1 ; cout << ans << \" \\n \" ; } } long long n , m , i , a [ 1007 ] [ 1007 ] , k , v1 , v2 , f = 0 ; return 0; }"}}
{"translation": {"en": "read n , m and k [ENDL] for i from 1 to k inclusive [ENDL] read v1 and v2 [ENDL] change a [ v1 ] [ v2 ] to 1 [ENDL] if ( a [ v1 ] [ v2 ] + a [ v1 + 1 ] [ v2 ] + a [ v1 + 1 ] [ v2 + 1 ] + a [ v1 ] [ v2 + 1 ] ) = 4 [ENDL] print i [ENDL] assign 1 to f [ENDL] break the loop [ENDL] if a [ v1 ] [ v2 ] + a [ v1 - 1 ] [ v2 ] + a [ v1 ] [ v2 + 1 ] + a [ v1 - 1 ] [ v2 + 1 ] = 4 [ENDL] print i [ENDL] set f to 1 [ENDL] stop the loop [ENDL] if a [ v1 ] [ v2 ] + a [ v1 ] [ v2 - 1 ] + a [ v1 + 1 ] [ v2 ] + a [ v1 + 1 ] [ v2 - 1 ] = 4 [ENDL] print i [ENDL] set f to 1 [ENDL] stop the loop [ENDL] if a [ v1 ] [ v2 ] + a [ v1 - 1 ] [ v2 ] + a [ v1 ] [ v2 - 1 ] + a [ v1 - 1 ] [ v2 - 1 ] = 4 [ENDL] print i [ENDL] change f to 1 [ENDL] break the loop [ENDL] if f is equal to 0 , print 0 [ENDL] create constant integer N with N = 1e5 + 5", "c++": "cin >> n >> m >> k ; int main() { for ( i = 1 ; i <= k ; i ++ ) cin >> v1 >> v2 ; a [ v1 ] [ v2 ] = 1 ; if ( ( a [ v1 ] [ v2 ] + a [ v1 + 1 ] [ v2 ] + a [ v1 + 1 ] [ v2 + 1 ] + a [ v1 ] [ v2 + 1 ] ) == 4 ) cout << i << endl ; f = 1 ; break ; if ( ( a [ v1 ] [ v2 ] + a [ v1 - 1 ] [ v2 ] + a [ v1 ] [ v2 + 1 ] + a [ v1 - 1 ] [ v2 + 1 ] ) == 4 ) } cout << i << endl ; f = 1 ; break ; if ( ( a [ v1 ] [ v2 ] + a [ v1 ] [ v2 - 1 ] + a [ v1 + 1 ] [ v2 ] + a [ v1 + 1 ] [ v2 - 1 ] ) == 4 ) } cout << i << endl ; f = 1 ; break ; if ( ( a [ v1 ] [ v2 ] + a [ v1 - 1 ] [ v2 ] + a [ v1 ] [ v2 - 1 ] + a [ v1 - 1 ] [ v2 - 1 ] ) == 4 ) } cout << i << endl ; f = 1 ; break ; if ( f == 0 ) cout << 0 << endl ; } } const int N = 1e5 + 5 ; return 0; }"}}
{"translation": {"en": "create integers x , y , create integer array arr with size 1005 by 1005 [ENDL] declare solve with integers st1 , st2 as arguments , returning boolean [ENDL] for z = st1 to st1 + 1 inclusive [ENDL] for v = st2 to st2 + 2 inclusive [ENDL] if not arr [ x + z ] [ y + v ] , return false from function [ENDL] return true from function [ENDL] create integers n , m , k [ENDL] read n read m read k [ENDL] for i = 1 to k inclusive [ENDL] read x read y [ENDL] set arr [ x ] [ y ] to 1 [ENDL] for t = - 1 to 0 inclusive [ENDL] for u = - 1 to 0 inclusive [ENDL] if result of run solve with t , u as arguments is true , return print i print \" \\ n \" , 0 from function [ENDL] return print 0 print \" \\ n \" , 0 from function [ENDL] create 2d ingeger arrays a , vis , with a size 1005 by 1005 , vis size 1005 by 1005", "c++": "int x , y , arr [ 1005 ] [ 1005 ] = { } ; bool solve ( int st1 , int st2 ) for ( int z = st1 ; z <= st1 + 1 ; ++ z ) for ( int v = st2 ; v <= st2 + 1 ; ++ v ) if ( ! arr [ x + z ] [ y + v ] ) return false ; return true ; } } int n , m , k ; } int main() { cin >> n >> m >> k ; for ( int i = 1 ; i <= k ; ++ i ) cin >> x >> y ; arr [ x ] [ y ] = 1 ; for ( int t = - 1 ; t <= 0 ; ++ t ) for ( int u = - 1 ; u <= 0 ; ++ u ) if ( solve ( t , u ) ) return cout << i << \" \\n \" , 0 ; return cout << 0 << \" \\n \" , 0 ; } } } int a [ 1005 ] [ 1005 ] , vis [ 1005 ] [ 1005 ] ; return 0; }"}}
{"translation": {"en": "create integer ans [ENDL] create integers n , m [ENDL] create 2d integer array fang with size 4 by 2 with fang = { 1 , 0 , - 1 , 0 , 0 , 1 , 0 , - 1 } [ENDL] declare dfs with integers x , y as arguments , returning void [ENDL] increment ans [ENDL] for i = 0 to 4 exclusive [ENDL] create integer nx with nx = x + fang [ i ] [ 0 ] [ENDL] create integer ny with ny = y + fang [ i ] [ 1 ] [ENDL] if nx is greater than 0 and nx is less than or equal to n and ny is greater than 0 and ny is less than or equal to m and a [ nx ] [ ny ] and not vis [ nx ] [ ny ] [ENDL] set vis [ nx ] [ ny ] to 1 [ENDL] run dfs with nx , ny as arguments [ENDL] create integers k , i , j [ENDL] while read n read m read k [ENDL] set ans to 0 [ENDL] create integers x , y [ENDL] set bytes from a to size of a to value 0 [ENDL] create integer res with res = 0 [ENDL] for i = 1 to k inclusive [ENDL] read x read y [ENDL] set a [ x ] [ y ] to 1 [ENDL] if not res [ENDL] increment ans [ENDL] if ( a [ x ] [ y ] and a [ x + 1 ] [ y ] and a [ x ] [ y + 1 ] and a [ x + 1 ] [ y + 1 ] ) , set res to 1 [ENDL] if ( a [ x ] [ y ] and a [ x + 1 ] [ y ] and a [ x ] [ y - 1 ] and a [ x + 1 ] [ y - 1 ] ) , set res to 1 [ENDL] if ( a [ x ] [ y ] and a [ x - 1 ] [ y ] and a [ x ] [ y + 1 ] and a [ x - 1 ] [ y + 1 ] ) , set res to 1 [ENDL] if ( a [ x ] [ y ] and a [ x - 1 ] [ y ] and a [ x ] [ y - 1 ] and a [ x - 1 ] [ y - 1 ] ) , set res to 1 [ENDL] if not res , set ans to 0 [ENDL] print ans print newline [ENDL] create bool a [ 1005 ] [ 1005 ]", "c++": "int ans ; int n , m ; int fang [ 4 ] [ 2 ] = { 1 , 0 , - 1 , 0 , 0 , 1 , 0 , - 1 } ; void dfs ( int x , int y ) ans ++ ; for ( int i = 0 ; i < 4 ; ++ i ) int nx = x + fang [ i ] [ 0 ] ; int ny = y + fang [ i ] [ 1 ] ; if ( nx > 0 && nx <= n && ny > 0 && ny <= m && a [ nx ] [ ny ] && ! vis [ nx ] [ ny ] ) vis [ nx ] [ ny ] = 1 ; dfs ( nx , ny ) ; int k , i , j ; } } } int main() { while ( cin >> n >> m >> k ) ans = 0 ; int x , y ; memset ( a , 0 , sizeof ( a ) ) ; int res = 0 ; for ( i = 1 ; i <= k ; ++ i ) cin >> x >> y ; a [ x ] [ y ] = 1 ; if ( ! res ) ans ++ ; if ( a [ x ] [ y ] && a [ x + 1 ] [ y ] && a [ x ] [ y + 1 ] && a [ x + 1 ] [ y + 1 ] ) res = 1 ; if ( a [ x ] [ y ] && a [ x + 1 ] [ y ] && a [ x ] [ y - 1 ] && a [ x + 1 ] [ y - 1 ] ) res = 1 ; if ( a [ x ] [ y ] && a [ x - 1 ] [ y ] && a [ x ] [ y + 1 ] && a [ x - 1 ] [ y + 1 ] ) res = 1 ; if ( a [ x ] [ y ] && a [ x - 1 ] [ y ] && a [ x ] [ y - 1 ] && a [ x - 1 ] [ y - 1 ] ) res = 1 ; if ( ! res ) ans = 0 ; } } cout << ans << endl ; bool a [ 1005 ] [ 1005 ] ; } }"}}
{"translation": {"en": "create int n and m [ENDL] read n , m [ENDL] create int k [ENDL] read k [ENDL] for c = 1 to k inclusive [ENDL] create int x and y [ENDL] read x , y [ENDL] set a [ x ] [ y ] = true [ENDL] if a [ x ] [ y ] , a [ x + 1 ] [ y ] , a [ x ] [ y + 1 ] , a [ x + 1 ] [ y + 1 ] are true [ENDL] print c [ENDL] else if a [ x ] [ y ] and a [ x - 1 ] [ y ] and a [ x ] [ y + 1 ] and a [ x - 1 ] [ y + 1 ] are not false [ENDL] print c and a newline [ENDL] else if a [ x ] [ y ] , a [ x - 1 ] [ y ] , a [ x ] [ y - 1 ] , a [ x - 1 ] [ y - 1 ] = true [ENDL] print c [ENDL] else if a [ x ] [ y ] and a [ x + 1 ] [ y ] and a [ x ] [ y - 1 ] and a [ x + 1 ] [ y - 1 ] different from false [ENDL] print c [ENDL] print 0 and a newline [ENDL] create constant integer N with N = 1e3 + 5", "c++": "int n , m ; int main() { cin >> n >> m ; int k ; cin >> k ; for ( int c = 1 ; c <= k ; c ++ ) int x , y ; cin >> x >> y ; a [ x ] [ y ] = true ; if ( a [ x ] [ y ] && a [ x + 1 ] [ y ] && a [ x ] [ y + 1 ] && a [ x + 1 ] [ y + 1 ] ) cout << c << endl ; else if ( a [ x ] [ y ] && a [ x - 1 ] [ y ] && a [ x ] [ y + 1 ] && a [ x - 1 ] [ y + 1 ] ) return 0; cout << c << endl ; else if ( a [ x ] [ y ] && a [ x - 1 ] [ y ] && a [ x ] [ y - 1 ] && a [ x - 1 ] [ y - 1 ] ) return 0; cout << c << endl ; else if ( a [ x ] [ y ] && a [ x + 1 ] [ y ] && a [ x ] [ y - 1 ] && a [ x + 1 ] [ y - 1 ] ) return 0; cout << c << endl ; cout << 0 << endl ; return 0; } } const int N = 1e3 + 5 ; return 0; }"}}
{"translation": {"en": "create 2d boolean array mark with size N by N [ENDL] create integers n , m , k [ENDL] read n read m read k [ENDL] for i = 0 to k exclusive [ENDL] create integers x , y [ENDL] read x read y [ENDL] set mark [ decrement x ] [ decrement y ] to true [ENDL] for a = x - 1 to x inclusive [ENDL] for b = y - 1 to y inclusive [ENDL] if bitwise not minimum of ( a and b ) and a + 1 is less than n and b + 1 is less than m [ENDL] create boolean bad with bad = true [ENDL] for c = 0 to 4 exclusive , set bad to bad bitwise and mark [ a + ( c bitwise and 1 ) ] [ b + ( c bitshift right 1 bitwise and 1 ) ] [ENDL] if bad , return print i + 1 print newline , 0 [ENDL] print \" 0 \\ n \" [ENDL] create integer n", "c++": "bool mark [ N ] [ N ] ; int n , m , k ; int main() { cin >> n >> m >> k ; for ( int i = 0 ; i < k ; i ++ ) int x , y ; cin >> x >> y ; mark [ -- x ] [ -- y ] = true ; for ( int a = x - 1 ; a <= x ; a ++ ) for ( int b = y - 1 ; b <= y ; b ++ ) if ( ~ min ( a , b ) && a + 1 < n && b + 1 < m ) bool bad = true ; for ( int c = 0 ; c < 4 ; c ++ ) bad &= mark [ a + ( c & 1 ) ] [ b + ( c >> 1 & 1 ) ] ; if ( bad ) return cout << i + 1 << endl , 0 ; cout << \" 0\\n \" ; } } int n ; return 0; }"}}
{"translation": {"en": "create strings str , s , ans , min with min = \" z \" [ENDL] read str read n [ENDL] for i = 0 to n exclusive [ENDL] read s [ENDL] if s is str [ENDL] set min to str [ENDL] break loop [ENDL] if first index of str in s is 0 and s is less than min , set min to s [ENDL] if min is \" z \" [ENDL] print str print newline [ENDL] else [ENDL] print min print newline [ENDL] create string str , str2 , ans , set ans to a", "c++": "int main() { string str , s , ans , min = \" z \" ; cin >> str >> n ; for ( int i = 0 ; i < n ; i ++ ) cin >> s ; if ( s == str ) min = str ; break ; if ( ( s . find ( str ) == 0 ) && ( s < min ) ) min = s ; } if ( min == \" z \" ) } cout << str << endl ; else cout << min << endl ; string str , str2 , ans = \" a \" ; return 0; }"}}
{"translation": {"en": "create int n and flag , assign 0 to flag [ENDL] read str [ENDL] set len to length of str [ENDL] read n [ENDL] for i = 0 to n exclusive [ENDL] read str2 [ENDL] set flag to 0 [ENDL] for j = 0 to len [ENDL] if str [ j ] different from str2 [ j ] [ENDL] flag = 1 [ENDL] break [ENDL] if flag = 1 , continue [ENDL] if ans equal to a [ENDL] set ans to str2 [ENDL] else if str2 < ans [ENDL] set ans = str2 [ENDL] if ans different from a [ENDL] print ans [ENDL] else [ENDL] print str and a newline [ENDL] let str , s be strings with s = array of strings of length 105", "c++": "int main() { int n , flag = 0 ; cin >> str ; int len = str . length ( ) ; cin >> n ; for ( int i = 0 ; i < n ; i ++ ) cin >> str2 ; flag = 0 ; for ( int j = 0 ; j < len ; j ++ ) if ( str [ j ] != str2 [ j ] ) flag = 1 ; break ; if ( flag == 1 ) { continue ; } } } if ( ans == \" a \" ) ans = str2 ; else if ( str2 < ans ) ans = str2 ; if ( ans != \" a \" ) } } cout << ans << endl ; else cout << str << endl ; string str , s [ 105 ] ; } return 0; }"}}
{"translation": {"en": "create a vector of strings s1 [ENDL] let n be a integer [ENDL] read str [ENDL] read n [ENDL] for i = 0 to n exclusive , read s [ i ] [ENDL] sort the values s and s + n [ENDL] for i = 0 to n exclusive [ENDL] if s [ i ] . find ( str ) is equal to 0 , push_back s [ i ] in s1 [ENDL] if length of s1 [ENDL] print s1 [ 0 ] and newline [ENDL] else do the following [ENDL] print str and newline [ENDL] str = string", "c++": "vector < string > s1 ; int n ; cin >> str ; int main() { cin >> n ; for ( int i = 0 ; i < n ; i ++ ) cin >> s [ i ] ; sort ( s , s + n ) ; for ( int i = 0 ; i < n ; i ++ ) if ( s [ i ] . find ( str ) == 0 ) s1 . push_back ( s [ i ] ) ; if ( s1 . size ( ) ) } cout << s1 [ 0 ] << \" \\n \" ; else cout << str << \" \\n \" ; string str ; return 0; }"}}
{"translation": {"en": "read str [ENDL] len = int with len = length of str [ENDL] n = int [ENDL] read n [ENDL] vec = string vector [ENDL] for i = 0 to n [ENDL] temp = string [ENDL] read temp [ENDL] pos = int with pos = index of str in temp [ENDL] if pos is 0 [ENDL] suffix = string with suffix = substr of len on temp [ENDL] append suffix to vec [ENDL] if size of vec is 0 [ENDL] pritn str [ENDL] else [ENDL] sort vec [ENDL] print str + vec [ 0 ] [ENDL] s = string", "c++": "int main() { cin >> str ; int len = str . length ( ) ; int n ; cin >> n ; vector < string > vec ; for ( int i = 0 ; i < n ; i ++ ) string temp ; cin >> temp ; int pos = temp . find ( str ) ; if ( pos == 0 ) string suffix = temp . substr ( len ) ; vec . push_back ( suffix ) ; if ( vec . size ( ) == 0 ) } } cout << str << endl ; else sort ( vec . begin ( ) , vec . end ( ) ) ; cout << ( str + vec [ 0 ] ) << endl ; string s ; } return 0; }"}}
{"translation": {"en": "read s [ENDL] n = integer [ENDL] read n [ENDL] vs = vector string [ENDL] for i = 0 to n exclusive [ENDL] ss = string [ENDL] read ss [ENDL] append ss in vs [ENDL] sort vs . begin ( ) and vs . end ( ) [ENDL] len = integer with len = s . size ( ) [ENDL] for i = 0 to n exclusive [ENDL] if vs [ i ] . substr ( 0 , len ) is s [ENDL] print vs [ i ] [ENDL] print s [ENDL] let str be a string , s = array of strings of length 101", "c++": "int main() { cin >> s ; int n ; cin >> n ; vector < string > vs ; for ( int i = 0 ; i < n ; i ++ ) string ss ; cin >> ss ; vs . push_back ( ss ) ; sort ( vs . begin ( ) , vs . end ( ) ) ; } int len = s . size ( ) ; for ( int i = 0 ; i < n ; i ++ ) if ( vs [ i ] . substr ( 0 , len ) == s ) cout << vs [ i ] << endl ; cout << s << endl ; return 0; } string str , s [ 101 ] ; return 0; }"}}
{"translation": {"en": "let n be a integer [ENDL] read str [ENDL] read n [ENDL] for i = 1 to n inclusive , read s [ i ] [ENDL] sort the values s + 1 and s + n + 1 [ENDL] for i = 1 to n inclusive [ENDL] if s [ i ] . substr ( 0 , length of str ) is equal to str [ENDL] print s [ i ] and newline [ENDL] print str and newline [ENDL] function subset ( get strings n1 and n2 and int len , return bool )", "c++": "int main() { int n ; cin >> str ; cin >> n ; for ( int i = 1 ; i <= n ; i ++ ) cin >> s [ i ] ; sort ( s + 1 , s + n + 1 ) ; for ( int i = 1 ; i <= n ; i ++ ) if ( s [ i ] . substr ( 0 , str . length ( ) ) == str ) cout << s [ i ] << endl ; cout << str << endl ; return 0; } bool subset ( string n1 , string n2 , int len ) return 0; }"}}
{"translation": {"en": "for i = 0 to len exclusive [ENDL] if n1 [ i ] ! = n2 [ i ] return false [ENDL] return true [ENDL] function small_min ( get strings n1 and n2 , return string ) [ENDL] if length of n1 < length of n2 return n1 [ENDL] return n2 [ENDL] s , ans = string [ENDL] read s [ENDL] ara = array of 110 string [ENDL] n = int [ENDL] read n [ENDL] f = 0 [ENDL] for i = 0 to n exclusive [ENDL] read ara [ i ] [ENDL] j = int [ENDL] for j = 0 to size of s exclusive [ENDL] if ara [ i ] [ j ] ! = s [ j ] break [ENDL] if j is size of s [ENDL] if f is 0 ans = ara [ i ] [ENDL] f = 1 [ENDL] ans = min ( ans , ara [ i ] ) [ENDL] if f is 0 [ENDL] print s [ENDL] else [ENDL] print ans [ENDL] arr = int array of size 1000000 and a = int array of size 1000 and ar = int array of size 100000", "c++": "for ( int i = 0 ; i < len ; i ++ ) if ( n1 [ i ] != n2 [ i ] ) return false ; return true ; } string small_min ( string n1 , string n2 ) } if ( n1 . length ( ) < n2 . length ( ) ) return n1 ; return n2 ; string s , ans ; } int main() { cin >> s ; string ara [ 110 ] ; int n ; cin >> n ; int f = 0 ; for ( int i = 0 ; i < n ; i ++ ) cin >> ara [ i ] ; int j ; for ( j = 0 ; j < s . size ( ) ; j ++ ) if ( ara [ i ] [ j ] != s [ j ] ) break ; if ( j == s . size ( ) ) } if ( f == 0 ) ans = ara [ i ] ; f = 1 ; ans = min ( ans , ara [ i ] ) ; if ( f == 0 ) } } cout << s << endl ; else cout << ans << endl ; int arr [ 1000000 ] , a [ 1000 ] , ar [ 100000 ] ; return 0; }"}}
{"translation": {"en": "m = char , int map [ENDL] mm = char , int map [ENDL] s , m , k , n = string with k = \" \" and n = \" \" [ENDL] x = int [ENDL] read s then x [ENDL] for i = 0 to x [ENDL] read m [ENDL] if size of m > = size of s [ENDL] set n to first size of s chars of m [ENDL] if n is s and ( m < = k | | k is \" \" ) set k to m [ENDL] if k is not \" \" [ENDL] print k [ENDL] else [ENDL] print s [ENDL] create string pointer ch , create string var", "c++": "map < char , int > m ; map < char , int > mm ; string s , m , k = \"  \" , n = \"  \" ; int main() { int x ; cin >> s >> x ; for ( int i = 0 ; i < x ; i ++ ) cin >> m ; if ( m . size ( ) >= s . size ( ) ) n = m . substr ( 0 , s . size ( ) ) ; if ( n == s && ( m <= k || k == \"  \" ) ) { k = m ; } if ( k != \"  \" ) } } cout << k << endl ; else cout << s << endl ; string * ch , var ; return 0; }"}}
{"translation": {"en": "create integer n [ENDL] read var read n [ENDL] set ch to new string array with size n [ENDL] for i = 0 to n exclusive , read ch [ i ] [ENDL] sort elements from ch to ch + n [ENDL] for i = 0 to n exclusive [ENDL] if first index of var in ch [ i ] is 0 [ENDL] print ch [ i ] print newline [ENDL] print var print newline [ENDL] create string s and string array s1 with dimension 101", "c++": "int main() { int n ; cin >> var >> n ; ch = new string [ n ] ; for ( int i = 0 ; i < n ; i ++ ) cin >> ch [ i ] ; sort ( ch , ch + n ) ; for ( int i = 0 ; i < n ; i ++ ) if ( ch [ i ] . find ( var ) == 0 ) cout << ch [ i ] << endl ; cout << var << endl ; return 0; } } string s , s1 [ 101 ] ; return 0; }"}}
{"translation": {"en": "create integer n , ok [ENDL] get s , n [ENDL] for integer i = 1 to n with increment i do get s1 [ i ] [ENDL] for integer i = n to 1 with decrement i [ENDL] for integer j = 1 with increment j till j less than i [ENDL] if s1 [ j ] greater than s1 [ j + 1 ] then swap s1 [ j ] and s1 [ j + 1 ] [ENDL] for integer k = 1 to n with increment k [ENDL] set ok to 1 [ENDL] for integer i = 0 to length of s - 1 with increment i [ENDL] if s [ i ] not equal to s1 [ k ] [ i ] then [ENDL] set ok to 0 [ENDL] break the loop [ENDL] if ok not equal to 0 then [ENDL] print s1 [ k ] [ENDL] print s [ENDL] M = 110", "c++": "int n , ok ; cin >> s >> n ; int main() { for ( int i = 1 ; i <= n ; ++ i ) cin >> s1 [ i ] ; for ( int i = n ; i >= 1 ; -- i ) for ( int j = 1 ; j < i ; ++ j ) if ( s1 [ j ] > s1 [ j + 1 ] ) swap ( s1 [ j ] , s1 [ j + 1 ] ) ; for ( int k = 1 ; k <= n ; ++ k ) ok = 1 ; for ( int i = 0 ; i < s . length ( ) ; ++ i ) if ( s [ i ] != s1 [ k ] [ i ] ) ok = 0 ; break ; if ( ok ) } cout << s1 [ k ] << endl ; cout << s << endl ; return 0; } } const int M = 110 ; return 0; }"}}
{"translation": {"en": "s = array of M by M char [ENDL] a = array of M char [ENDL] f and t = array of M int [ENDL] b = array of M char [ENDL] n = int [ENDL] while read a [ENDL] read n [ENDL] c = 0 [ENDL] fill f with 0 [ENDL] fill t with 0 [ENDL] len = length of a [ENDL] for i = 0 to n exclusive [ENDL] read s [ i ] [ENDL] len1 = length of s [ i ] [ENDL] if len1 < len [ENDL] t [ i ] = 1 [ENDL] continue [ENDL] for j = 0 to len exclusive [ENDL] if a [ j ] is not s [ i ] [ j ] [ENDL] t [ i ] = 1 [ENDL] break [ENDL] if t [ i ] is 0 [ENDL] f [ i ] = 1 [ENDL] fill b with 0 [ENDL] copy from s [ i ] to b [ENDL] increment c [ENDL] if c is 0 [ENDL] print a [ENDL] else [ENDL] for i = 0 to n exclusive [ENDL] if f [ i ] is 1 [ENDL] if b > s [ i ] [ENDL] fill b with 0 [ENDL] copy from s [ i ] to b [ENDL] print b [ENDL] declare string variable with name ss", "c++": "char s [ M ] [ M ] ; char a [ M ] ; int f [ M ] , t [ M ] ; char b [ M ] ; int n ; int main() { while ( cin >> a ) cin >> n ; int c = 0 ; memset ( f , 0 , sizeof ( f ) ) ; memset ( t , 0 , sizeof ( t ) ) ; int len = strlen ( a ) ; for ( int i = 0 ; i < n ; i ++ ) cin >> s [ i ] ; int len1 = strlen ( s [ i ] ) ; if ( len1 < len ) t [ i ] = 1 ; continue ; for ( int j = 0 ; j < len ; j ++ ) } if ( a [ j ] != s [ i ] [ j ] ) t [ i ] = 1 ; break ; if ( t [ i ] == 0 ) } } f [ i ] = 1 ; memset ( b , 0 , sizeof ( b ) ) ; strcpy ( b , s [ i ] ) ; c ++ ; if ( c == 0 ) } } cout << a << endl ; else for ( int i = 0 ; i < n ; i ++ ) if ( f [ i ] == 1 ) if ( strcmp ( b , s [ i ] ) > 0 ) memset ( b , 0 , sizeof ( b ) ) ; strcpy ( b , s [ i ] ) ; cout << b << endl ; } } } string ss ; } } return 0; }"}}
{"translation": {"en": "read standard input to ss [ENDL] create new integer n [ENDL] read variable n from the input [ENDL] read and discard the input data [ENDL] create string res = ss [ENDL] declare new boolean noe with value 0 [ENDL] for integer i = 0 to n exclusive incrementing i [ENDL] s is a new string [ENDL] read variable s from the input [ENDL] declare string tmp with value \" \" [ENDL] for j = 0 and ii = 0 while j < length of s , increment j [ENDL] if ss [ ii ] = s [ j ] [ENDL] increment ii [ENDL] else [ENDL] assign 0 to ii [ENDL] if ii is equal to length of ss [ENDL] if noe is false [ENDL] set res to the substring of s from index j - ii + 1 to the end ; set noe to 1 [ENDL] else [ENDL] change tmp to the substring of s from index j - ii + 1 to the end [ENDL] set res to min of res and tmp [ENDL] assign 0 to ii [ENDL] print res and ' \\ n ' [ENDL] create string s", "c++": "int main() { cin >> ss ; int n ; cin >> n ; cin . ignore ( ) ; string res = ss ; bool noe = 0 ; for ( int i = 0 ; i < n ; i ++ ) string s ; cin >> s ; string tmp = \"  \" ; for ( int j = 0 , ii = 0 ; j < s . length ( ) ; j ++ ) if ( ss [ ii ] == s [ j ] ) ii ++ ; else ii = 0 ; if ( ii == ss . length ( ) ) if ( ! noe ) res = s . substr ( j - ii + 1 , s . length ( ) ) , noe = 1 ; else tmp = s . substr ( j - ii + 1 , s . length ( ) ) ; res = min ( res , tmp ) ; ii = 0 ; cout << res << ' \\n ' ; } } } } string s ; return 0; }"}}
{"translation": {"en": "read s [ENDL] let int len = s . length ( ) [ENDL] let int n [ENDL] read n [ENDL] let string array array of size n [ENDL] let string array output of size n [ENDL] create integer count = 0 [ENDL] for i = 0 to n exclusive [ENDL] read array [ i ] [ENDL] let int flag = 0 [ENDL] if array [ i ] . length ( ) is less than len , continue to next loop iteration [ENDL] for j = 0 to len exclusive [ENDL] if array [ i ] [ j ] is not equal to s [ j ] [ENDL] set flag to 1 [ENDL] break loop [ENDL] if flag is equal to 0 , set output [ count + + ] to array [ i ] [ENDL] if count is 0 [ENDL] print s [ENDL] sort output using argument output + count [ENDL] print output [ 0 ] [ENDL] v = string vector", "c++": "int main() { cin >> s ; int len = s . length ( ) ; int n ; cin >> n ; string array [ n ] ; string output [ n ] ; int count = 0 ; for ( int i = 0 ; i < n ; i ++ ) cin >> array [ i ] ; int flag = 0 ; if ( array [ i ] . length ( ) < len ) { continue ; } for ( int j = 0 ; j < len ; j ++ ) if ( array [ i ] [ j ] != s [ j ] ) flag = 1 ; break ; if ( flag == 0 ) { output [ count ++ ] = array [ i ] ; } } } if ( count == 0 ) } cout << s << endl ; sort ( output , output + count ) ; return 0; } cout << output [ 0 ] << endl ; vector < string > v ; return 0; }"}}
{"translation": {"en": "x = string [ENDL] read x [ENDL] n , i = long long [ENDL] y = string [ENDL] read n [ENDL] while n is not 0 subtract 1 from n and do [ENDL] read y [ENDL] append y to the end of v [ENDL] sort v [ENDL] for i = 0 to size of v exclusive [ENDL] f = long long with value of the position of x within v [ i ] [ENDL] if f equals 0 [ENDL] print v [ i ] [ENDL] print x [ENDL] create integer n", "c++": "string x ; int main() { cin >> x ; long long n , i ; string y ; cin >> n ; while ( n -- ) cin >> y ; v . push_back ( y ) ; sort ( v . begin ( ) , v . end ( ) ) ; } for ( i = 0 ; i < v . size ( ) ; i ++ ) long long f = v [ i ] . find ( x ) ; if ( f == 0 ) cout << v [ i ] << \" \\n \" ; cout << x << \" \\n \" ; return 0; } } int n ; }"}}
{"translation": {"en": "create string array s with size 110 , create string st [ENDL] read st read n [ENDL] for i = 0 to n exclusive , read s [ i ] [ENDL] sort elements from s to s + n [ENDL] for i = 0 to n exclusive [ENDL] if substring of s [ i ] from 0 to size of st is st [ENDL] print s [ i ] print newline [ENDL] print st print newline [ENDL] create constant integer INF = 1e9", "c++": "int main() { string s [ 110 ] , st ; cin >> st >> n ; for ( int i = 0 ; i < n ; i ++ ) cin >> s [ i ] ; sort ( s , s + n ) ; for ( int i = 0 ; i < n ; i ++ ) if ( s [ i ] . substr ( 0 , st . size ( ) ) == st ) cout << s [ i ] << endl ; cout << st << endl ; return 0; } const int INF = 1e9 ; return 0; }"}}
{"translation": {"en": "let string s [ENDL] create int N [ENDL] create string array A of size 128 [ENDL] read S and N [ENDL] for i = 0 to N exclusive , read A [ i ] [ENDL] sort A [ENDL] let string ans = S [ENDL] for i = 0 to N exclusive [ENDL] let bool check = true [ENDL] for j = 0 to size of S exclusive [ENDL] if S [ j ] is not equal to A [ i ] [ j ] [ENDL] set check to false [ENDL] break loop [ENDL] if check is equal to false [ENDL] continue loop [ENDL] else [ENDL] set ans to A [ i ] [ENDL] break loop [ENDL] print ans [ENDL] s = string", "c++": "string S ; int main() { int N ; string A [ 128 ] ; cin >> S >> N ; for ( int i = 0 ; i < N ; i ++ ) { cin >> A [ i ] ; } sort ( A , A + N ) ; string ans = S ; for ( int i = 0 ; i < N ; i ++ ) bool check = true ; for ( int j = 0 ; j < S . size ( ) ; j ++ ) if ( S [ j ] != A [ i ] [ j ] ) check = false ; break ; if ( check == false ) } } continue ; else ans = A [ i ] ; break ; cout << ans << endl ; } } string s ; return 0; }"}}
{"translation": {"en": "n = int [ENDL] read s , n [ENDL] trig = 0 [ENDL] c = 0 [ENDL] a = string of n char [ENDL] k = 0 [ENDL] j = 0 [ENDL] s2 = string [ENDL] z = length of s [ENDL] for i = 0 to n exclusive [ENDL] read s2 [ENDL] a [ i ] = s2 [ENDL] for i = 0 to length of s [ENDL] if s [ i ] ! = a [ j ] [ k ] [ENDL] trig = 1 [ENDL] increment c [ENDL] else [ENDL] increment k [ENDL] if z is k [ENDL] trig = 3 [ENDL] break [ENDL] if trig is 1 [ENDL] increment j [ENDL] i = - 1 [ENDL] k = 0 [ENDL] trig = 0 [ENDL] if c is n [ENDL] trig = 5 [ENDL] break [ENDL] if trig is 5 [ENDL] print s [ENDL] sort first n items of a [ENDL] t = \" \" [ENDL] if trig is 3 [ENDL] for i = 0 to n [ENDL] t = a [ i ] [ENDL] for ind = 0 to length of s exclusive [ENDL] if s [ ind ] ! = t [ ind ] [ENDL] a [ i ] = ' 0 ' [ENDL] break [ENDL] t = \" \" [ENDL] for i = 0 to n exclusive [ENDL] if a [ i ] is not \" 0 \" [ENDL] print a [ i ] [ENDL] print s [ENDL] p , s , ans = string", "c++": "int main() { int n ; cin >> s >> n ; int trig = 0 ; int c = 0 ; string * a = new string [ n ] ; int k = 0 ; int j = 0 ; string s2 ; int z = s . length ( ) ; for ( int i = 0 ; i < n ; i ++ ) cin >> s2 ; a [ i ] = s2 ; for ( int i = 0 ; i < s . length ( ) ; i ++ ) } if ( s [ i ] != a [ j ] [ k ] ) trig = 1 ; c ++ ; else k ++ ; if ( z == k ) } trig = 3 ; break ; if ( trig == 1 ) } j ++ ; i = - 1 ; k = 0 ; trig = 0 ; if ( c == n ) } trig = 5 ; break ; if ( trig == 5 ) } } cout << s << endl ; sort ( a , a + n ) ; return 0; } string t = \"  \" ; if ( trig == 3 ) for ( int i = 0 ; i < n ; i ++ ) t = a [ i ] ; for ( int ind = 0 ; ind < s . length ( ) ; ind ++ ) if ( s [ ind ] != t [ ind ] ) a [ i ] = ' 0 ' ; break ; t = \"  \" ; } } for ( int i = 0 ; i < n ; i ++ ) } } if ( a [ i ] != \" 0 \" ) cout << a [ i ] << endl ; cout << s << endl ; return 0; } } string p , s , ans ; return 0; }"}}
{"translation": {"en": "n = int [ENDL] read p then n [ENDL] set ans to \" \" [ENDL] loop n times [ENDL] read s [ENDL] if size of s as int is greater or equal to size of p as int [ENDL] aux = string with aux = substr of 0 and size of p as int on s [ENDL] if aux is p and ( s is less than ans or ans is \" \" ) set ans to s [ENDL] print p if ans is \" \" else print ans [ENDL] s , t = string", "c++": "int n ; cin >> p >> n ; int main() { ans = \"  \" ; while ( n -- ) cin >> s ; if ( ( int ) s . size ( ) >= ( int ) p . size ( ) ) string aux = s . substr ( 0 , ( int ) p . size ( ) ) ; if ( aux == p && ( s < ans || ans == \"  \" ) ) { ans = s ; } cout << ( ans == \"  \" ? p : ans ) << \" \\n \" ; } } string s , t ; }"}}
{"translation": {"en": "n , j = int with j = 0 [ENDL] read s then n [ENDL] ar = string array of size n [ENDL] slength = int with slength = length of s [ENDL] for i = 1 to n inclusive [ENDL] read t [ENDL] if t starts with s [ENDL] set ar [ j ] to t [ENDL] increment j [ENDL] if j is 0 [ENDL] print s [ENDL] else [ENDL] sort ar from position 0 to j [ENDL] print ar [ 0 ] [ENDL] create integer constants OO = 0x3f3f3f3f , NegOO = - 1 * OO , N = 2e5 + 5 and mod = 1e9 + 7", "c++": "int main() { int n , j = 0 ; cin >> s >> n ; string ar [ n ] ; int slength = s . size ( ) ; for ( int i = 1 ; i <= n ; i ++ ) cin >> t ; if ( t . substr ( 0 , slength ) == s ) ar [ j ] = t ; j ++ ; if ( j == 0 ) } } cout << s << ' \\n ' ; else sort ( ar , ar + j ) ; cout << ar [ 0 ] << ' \\n ' ; const int OO = 0x3f3f3f3f , NegOO = - 1 * OO , N = 2e5 + 5 , mod = 1e9 + 7 ; } return 0; }"}}
{"translation": {"en": "create new string variable x [ENDL] read variable x from the input [ENDL] create integer n [ENDL] read input to n [ENDL] arr is a new array of strings with size n [ENDL] for c from 0 to n exclusive , read standard input to arr [ c ] [ENDL] sort arr from 0 to n [ENDL] start for loop from c = 0 to n exclusive incrementing c [ENDL] declare boolean flag = 1 [ENDL] for integer i = 0 to the size of x exclusive [ENDL] change flag to 0 if i is less than size of arr [ c ] and x [ i ] ! = arr [ c ] [ i ] [ENDL] if flag is not 0 , return cout < < arr [ c ] < < \" \\ n \" , 0 [ENDL] print x and \" \\ n \" to the standard output [ENDL] create string s", "c++": "string x ; int main() { cin >> x ; int n ; cin >> n ; string arr [ n ] ; for ( int c = 0 ; c < n ; c ++ ) { cin >> arr [ c ] ; } sort ( arr , arr + n ) ; for ( int c = 0 ; c < n ; c ++ ) bool flag = 1 ; for ( int i = 0 ; i < ( ( int ) ( ( x ) . size ( ) ) ) ; i ++ ) if ( i < ( ( int ) ( ( arr [ c ] ) . size ( ) ) ) && x [ i ] != arr [ c ] [ i ] ) flag = 0 ; if ( flag ) return cout << arr [ c ] << \" \\n \" , 0 ; } cout << x << \" \\n \" ; } string s ; return 0; }"}}
{"translation": {"en": "read s [ENDL] make integer n [ENDL] read n [ENDL] make string vector a of size n [ENDL] for i = 0 to n exclusive , read a [ i ] [ENDL] let int opt = - 1 [ENDL] for i = 0 to n exclusive [ENDL] if ( int ) ( a [ i ] ) . size ( ) is less than ( int ) ( s ) . size ( ) , continue to next loop iteration [ENDL] if a [ i ] . substr ( 0 , ( int ) ( s ) . size ( ) ) is not equal to s , continue to next loop iteration [ENDL] if opt is equal to - 1 or a [ i ] is less than a [ opt ] , set opt to i [ENDL] if opt is not equal to - 1 [ENDL] print a [ opt ] [ENDL] else [ENDL] print s [ENDL] print new line [ENDL] create new constant integer variable N with value 110", "c++": "int main() { cin >> s ; int n ; cin >> n ; vector < string > a ( n ) ; for ( int i = 0 ; i < n ; ++ i ) { cin >> a [ i ] ; } int opt = - 1 ; for ( int i = 0 ; i < n ; ++ i ) if ( ( int ) ( a [ i ] ) . size ( ) < ( int ) ( s ) . size ( ) ) { continue ; } if ( a [ i ] . substr ( 0 , ( int ) ( s ) . size ( ) ) != s ) { continue ; } if ( opt == - 1 || a [ i ] < a [ opt ] ) { opt = i ; } if ( opt != - 1 ) } cout << a [ opt ] ; else cout << s ; cout << \" \\n \" ; } const int N = 110 ; }"}}
{"translation": {"en": "declare new string input and string array hist with size N [ENDL] declare vector of strings called prefixed [ENDL] declare new integer n [ENDL] boolean function comp with string arguments s1 and s2 [ENDL] return true if s1 is less than s2 in lexicographic order , or false otherwise [ENDL] isPref is a boolean function with string arguments s1 and s2 [ENDL] if length of s1 is less than length of s2 , return false [ENDL] for integer i = 0 to length of s2 exclusive [ENDL] if s1 [ i ] ! = s2 [ i ] , return false [ENDL] return true [ENDL] read input and n from the input [ENDL] for integer i = 0 to n exclusive incrementing i [ENDL] read hist [ i ] from the user input [ENDL] if isPref ( hist [ i ] , input ) returned true , push hist [ i ] into prefixed [ENDL] if prefixed is not emptu [ENDL] sort prefixed [ENDL] print first element of prefixed to the standard output [ENDL] else [ENDL] print input [ENDL] s is a new array of strings with size 101", "c++": "string hist [ N ] , input ; vector < string > prefixed ; int n ; bool comp ( string s1 , string s2 ) return strcmp ( s1 . c_str ( ) , s2 . c_str ( ) ) < 0 ; bool isPref ( string s1 , string s2 ) } if ( s1 . size ( ) < s2 . size ( ) ) return false ; for ( int i = 0 ; i < s2 . size ( ) ; i ++ ) if ( s1 [ i ] != s2 [ i ] ) return false ; return true ; cin >> input >> n ; } int main() { for ( int i = 0 ; i < n ; i ++ ) cin >> hist [ i ] ; if ( isPref ( hist [ i ] , input ) ) prefixed . push_back ( hist [ i ] ) ; if ( ! prefixed . empty ( ) ) } sort ( prefixed . begin ( ) , prefixed . end ( ) , comp ) ; cout << prefixed [ 0 ] << endl ; else cout << input << endl ; string s [ 101 ] ; }"}}
{"translation": {"en": "declare integer variable n [ENDL] declare new string t [ENDL] read t from the user input [ENDL] read standard input to n [ENDL] in a for loop , change i from 0 to n exclusive , reading s [ i ] on each loop [ENDL] sort s [ENDL] in a for loop , change i from 0 to n exclusive [ENDL] if length of s [ i ] is less than length of t , skip the rest of the loop [ENDL] declare integer j with value 0 [ENDL] while j < length of t [ENDL] if s [ i ] [ j ] ! = t [ j ] , break [ENDL] increment j by one [ENDL] if j = length of t [ENDL] print s [ i ] to the standard output [ENDL] print t [ENDL] s = string", "c++": "int main() { int n ; string t ; cin >> t ; cin >> n ; for ( int i = 0 ; i < n ; i ++ ) cin >> s [ i ] ; sort ( s , s + n ) ; for ( int i = 0 ; i < n ; i ++ ) if ( s [ i ] . length ( ) < t . length ( ) ) continue ; int j = 0 ; while ( j < ( int ) t . length ( ) ) if ( s [ i ] [ j ] != t [ j ] ) break ; j ++ ; if ( j == ( int ) t . length ( ) ) } cout << s [ i ] << endl ; cout << t << endl ; return 0; } } string s ; return 0; }"}}
{"translation": {"en": "n = integer [ENDL] in function Run that returns nothing [ENDL] while s can be read as a valid string [ENDL] ans , tmp = string [ENDL] for i = 1 to 110 inclusive and increase i at the start of the loop , then ans = ans + z , tmp = tmp + z [ENDL] read n [ENDL] t = string t [ENDL] for i = 1 to n inclusive [ENDL] read t [ENDL] if size of t < size of s , continue [ENDL] if contents of t from the beginning of t to size of s elements away is s , then ans = lower value between ans and t [ENDL] if ans is tmp , then ans = s [ENDL] print ans [ENDL] call Run [ENDL] in the function lexi_comp that takes const string reference a , b and returns bool", "c++": "int n ; inline void Run ( ) while ( cin >> s ) string ans = \"  \" , tmp = \"  \" ; for ( int i = 1 ; i <= 110 ; ++ i ) ans += ' z ' , tmp += ' z ' ; cin >> n ; string t ; for ( int i = 1 ; i <= n ; ++ i ) cin >> t ; if ( t . size ( ) < s . size ( ) ) continue ; if ( t . substr ( 0 , s . size ( ) ) == s ) ans = min ( ans , t ) ; if ( ans == tmp ) ans = s ; } cout << ans << endl ; Run ( ) ; } } int main() { bool lexi_comp ( const string & a , const string & b ) return 0; }"}}
{"translation": {"en": "n = integer with n = min of a . size ( ) and b . size ( ) [ENDL] for i = 0 to n exclusive [ENDL] if a [ i ] is not b [ i ] , return a [ i ] < b [ i ] [ENDL] return a . size ( ) < b . size ( ) [ENDL] in the function isPrefix that takes const string reference a , b and returns bool [ENDL] if b . size ( ) < a . size ( ) , return false [ENDL] for i = 0 to a . size ( ) exclusive [ENDL] if a [ i ] is not b [ i ] , return false [ENDL] return true [ENDL] a , b , ans = string [ENDL] n = integer [ENDL] read a , n [ENDL] ans = a + string on 100 an z [ENDL] ok = bool with ok = false [ENDL] for i = 0 to n exclusive [ENDL] read b [ENDL] if isPrefix on a and b [ENDL] ok = true [ENDL] if lexi_comp ( b , ans ) , swap b and ans [ENDL] if ok [ENDL] print ans [ENDL] else [ENDL] print a [ENDL] create string st and string array st1 of size 102", "c++": "int n = min ( a . size ( ) , b . size ( ) ) ; for ( int i = 0 ; i < n ; i ++ ) if ( a [ i ] != b [ i ] ) { return a [ i ] < b [ i ] ; } return a . size ( ) < b . size ( ) ; } bool isPrefix ( const string & a , const string & b ) } if ( b . size ( ) < a . size ( ) ) { return false ; } for ( int i = 0 ; i < a . size ( ) ; i ++ ) if ( a [ i ] != b [ i ] ) { return false ; } return true ; } string a , b , ans ; } int main() { int n ; cin >> a >> n ; ans = a + string ( 100 , ' z ' ) ; bool ok = false ; for ( int i = 0 ; i < n ; i ++ ) cin >> b ; if ( isPrefix ( a , b ) ) ok = true ; if ( lexi_comp ( b , ans ) ) { swap ( b , ans ) ; } if ( ok ) } } cout << ans << endl ; else cout << a << endl ; string st , st1 [ 102 ] ; } return 0; }"}}
{"translation": {"en": "let long long int n [ENDL] read st and n [ENDL] for i = 1 to n , read st1 [ i ] [ENDL] sort st1 + 1 using argument st1 + n + 1 [ENDL] for i = 1 to n [ENDL] if st [ i ] . find ( st ) is equal to 0 [ENDL] print st1 [ i ] [ENDL] print st [ENDL] a = pointer to string , s = string", "c++": "long long n ; cin >> st >> n ; int main() { for ( int i = 1 ; i <= n ; i ++ ) cin >> st1 [ i ] ; sort ( st1 + 1 , st1 + n + 1 ) ; for ( int i = 1 ; i <= n ; i ++ ) if ( st1 [ i ] . find ( st ) == 0 ) cout << st1 [ i ] << endl ; cout << st << endl ; return 0; } string * a , s ; return 0; }"}}
{"translation": {"en": "n = int [ENDL] read s [ENDL] a = array of n string [ENDL] for i = 0 to n exclusive read a [ i ] [ENDL] sort first n items of a [ENDL] for i = 0 to n exclusive [ENDL] if a [ i ] begins with s [ENDL] print a [ i ] [ENDL] print s [ENDL] s = string", "c++": "int main() { int n ; cin >> s >> n ; a = new string [ n ] ; for ( int i = 0 ; i < n ; i ++ ) { cin >> a [ i ] ; } sort ( a , a + n ) ; for ( int i = 0 ; i < n ; i ++ ) if ( a [ i ] . find ( s ) == 0 ) cout << a [ i ] << endl ; cout << s << endl ; return 0; } } string s ; return 0; }"}}
{"translation": {"en": "n = integer [ENDL] read s , n [ENDL] v = vector of string with v = n + 1 [ENDL] for i = 0 to n exclusive , read v [ i ] [ENDL] v [ n ] = s [ENDL] sort v . begin ( ) and v . end ( ) [ENDL] for i = 0 to n [ENDL] if v [ i ] is s [ENDL] if i < n and v [ i ] is v [ i + 1 ] . substring ( 0 , ( int ) v [ i ] . size ( ) ) [ENDL] print v [ i + 1 ] [ENDL] break loop [ENDL] else [ENDL] print v [ i ] [ENDL] break loop [ENDL] declare check taking in strings s and t and returning bool", "c++": "int main() { int n ; cin >> s >> n ; vector < string > v ( n + 1 ) ; for ( int i = 0 ; i < n ; i ++ ) { cin >> v [ i ] ; } v [ n ] = s ; sort ( v . begin ( ) , v . end ( ) ) ; for ( int i = 0 ; i <= n ; i ++ ) if ( v [ i ] == s ) if ( i < n && v [ i ] == v [ i + 1 ] . substr ( 0 , ( int ) v [ i ] . size ( ) ) ) cout << v [ i + 1 ] << endl ; break ; else cout << v [ i ] << endl ; break ; bool check ( string s , string t ) } } } return 0; }"}}
{"translation": {"en": "if length of s is less than length of t , return false [ENDL] if i = 0 to length of t exclusive [ENDL] if s [ i ] is not equal to t [ i ] , return false [ENDL] return true [ENDL] let string t [ENDL] read t [ENDL] create integer n [ENDL] read n [ENDL] let string array s of size 1000 [ENDL] for i = 1 to n , read s [ i ] [ENDL] create string min = \" \" [ENDL] for i = 1 to n [ENDL] if check ( s [ i ] , t ) is true [ENDL] if min is equal to \" \" or s [ i ] is less than min , set min to s [ i ] [ENDL] if min is equal to \" \" [ENDL] print t [ENDL] else [ENDL] print min [ENDL] var = string and str = pointer to a string", "c++": "if ( s . length ( ) < t . length ( ) ) return false ; for ( int i = 0 ; i < t . length ( ) ; i ++ ) if ( s [ i ] != t [ i ] ) return false ; return true ; string t ; } int main() { cin >> t ; int n ; cin >> n ; string s [ 1000 ] ; for ( int i = 1 ; i <= n ; i ++ ) cin >> s [ i ] ; string min = \"  \" ; for ( int i = 1 ; i <= n ; i ++ ) if ( check ( s [ i ] , t ) ) if ( min == \"  \" || s [ i ] < min ) min = s [ i ] ; if ( min == \"  \" ) cout << t << endl ; else cout << min << endl ; string * str , var ; return 0; }"}}
{"translation": {"en": "n = int [ENDL] read var then n [ENDL] set str to new string array of size n [ENDL] read n values into str [ENDL] sort str [ENDL] for i = 0 to n [ENDL] if str [ i ] starts with var [ENDL] print str [ i ] [ENDL] print var [ENDL] create integer n", "c++": "int main() { int n ; cin >> var >> n ; str = new string [ n ] ; for ( int i = 0 ; i < n ; i ++ ) cin >> str [ i ] ; sort ( str , str + n ) ; for ( int i = 0 ; i < n ; i ++ ) if ( str [ i ] . find ( var ) == 0 ) cout << str [ i ] << endl ; cout << var << endl ; return 0; } } int n ; return 0; }"}}
{"translation": {"en": "read n [ENDL] create vector of booleans called good with n elements filled with 1 [ENDL] for i from 0 to n exclusive [ENDL] for j from 0 to n exclusive [ENDL] declare integer x [ENDL] read input to x [ENDL] if x < = 0 [ENDL] go to the start of the loop [ENDL] else if x = 1 [ENDL] set good [ i ] to 0 [ENDL] else if x = 2 [ENDL] set good [ j ] to 0 [ENDL] else [ENDL] set good [ i ] and good [ j ] to 0 [ENDL] declare vector of integers called sol [ENDL] for i from 0 to n exclusive [ENDL] if good [ i ] is true , push i + 1 to sol [ENDL] print length of sol [ENDL] if length of sol > 0 [ENDL] for integer i = 0 to length of sol exclusive [ENDL] if i ! = 0 , print ' ' [ENDL] print sol [ i ] [ENDL] print new line [ENDL] n , i , j , k , flag = int , a = array of 100 by 100 int , b = array of 100 int filled with 0", "c++": "int main() { cin >> n ; vector < bool > good ( n , 1 ) ; for ( int i = 0 ; i < n ; i ++ ) for ( int j = 0 ; j < n ; j ++ ) int x ; cin >> x ; if ( x <= 0 ) continue ; else if ( x == 1 ) good [ i ] = 0 ; else if ( x == 2 ) good [ j ] = 0 ; else good [ i ] = good [ j ] = 0 ; vector < int > sol ; } } for ( int i = 0 ; i < n ; i ++ ) if ( good [ i ] ) sol . push_back ( i + 1 ) ; cout << sol . size ( ) << endl ; if ( sol . size ( ) > 0 ) for ( int i = 0 ; i < sol . size ( ) ; i ++ ) if ( i != 0 ) cout << '   ' ; cout << sol [ i ] ; cout << endl ; } int n , i , j , a [ 100 ] [ 100 ] , b [ 100 ] = { 0 } , k , flag ; } return 0; }"}}
{"translation": {"en": "read n [ENDL] for i = 0 to n exclusive [ENDL] for j = 0 to n exclusive read a [ i ] [ j ] [ENDL] k = 0 [ENDL] for i = 0 to n exclusive [ENDL] flag = 1 [ENDL] for j = 0 to n exclusive [ENDL] if i ! = j [ENDL] if a [ i ] [ j ] is 1 or 3 flag = 0 [ENDL] if flag b [ k ] = i + 1 , increment k [ENDL] if b [ 0 ] is 0 [ENDL] print \" 0 \" [ENDL] else [ENDL] print k [ENDL] for i = 0 to k - 1 excluisve print b [ i ] , space [ENDL] print b [ k - 1 ] [ENDL] vis = array of 105 int , f = array of 105 by 105 int", "c++": "int main() { cin >> n ; for ( i = 0 ; i < n ; i ++ ) for ( j = 0 ; j < n ; j ++ ) { cin >> a [ i ] [ j ] ; } k = 0 ; } for ( i = 0 ; i < n ; i ++ ) flag = 1 ; for ( j = 0 ; j < n ; j ++ ) if ( i != j ) if ( a [ i ] [ j ] == 1 || a [ i ] [ j ] == 3 ) flag = 0 ; if ( flag ) b [ k ++ ] = i + 1 ; } } if ( b [ 0 ] == 0 ) } cout << \" 0 \" << endl ; else cout << k << endl ; for ( i = 0 ; i < k - 1 ; i ++ ) { cout << b [ i ] << \"   \" ; } cout << b [ k - 1 ] << endl ; int vis [ 105 ] , f [ 105 ] [ 105 ] ; } return 0; }"}}
{"translation": {"en": "n = int [ENDL] read n [ENDL] for i = 1 to n inclusive [ENDL] for j = 1 to n inclusive [ENDL] read f [ i ] [ j ] [ENDL] if f [ i ] [ j ] is 1 [ENDL] vis [ i ] = 1 [ENDL] else if f [ i ] [ j ] is 2 [ENDL] vis [ j ] = 1 [ENDL] else if f [ i ] [ j ] is 3 [ENDL] vis [ i ] = vis [ j ] = 1 [ENDL] a = array of 105 int , top = 0 [ENDL] for i = 1 to n inclusive [ENDL] if not vis [ i ] a [ top ] = i , increment top [ENDL] print top [ENDL] for i = 0 to top exclusive [ENDL] if i is top - 1 [ENDL] print a [ i ] [ENDL] else [ENDL] print a [ i ] and space [ENDL] declare vector of integers vec", "c++": "int n ; int main() { cin >> n ; for ( int i = 1 ; i <= n ; i ++ ) for ( int j = 1 ; j <= n ; j ++ ) cin >> f [ i ] [ j ] ; if ( f [ i ] [ j ] == 1 ) vis [ i ] = 1 ; else if ( f [ i ] [ j ] == 2 ) vis [ j ] = 1 ; else if ( f [ i ] [ j ] == 3 ) vis [ i ] = vis [ j ] = 1 ; int a [ 105 ] , top = 0 ; } } for ( int i = 1 ; i <= n ; i ++ ) if ( ! vis [ i ] ) { a [ top ++ ] = i ; } cout << top << endl ; } for ( int i = 0 ; i < top ; i ++ ) if ( i == top - 1 ) cout << a [ i ] << endl ; else cout << a [ i ] << \"   \" ; vector < int > vec ; } return 0; }"}}
{"translation": {"en": "declare int variable n [ENDL] read input to n [ENDL] create 2d array of ints arr with size n by n [ENDL] for i from 0 to n exclusive [ENDL] for j from 0 to n exclusive , read input to arr [ i ] [ j ] [ENDL] declare int cnt = 0 [ENDL] for i from 0 to n exclusive [ENDL] create bool t = true [ENDL] for j = 0 to n exclusive [ENDL] if arr [ i ] [ j ] = 1 or arr [ i ] [ j ] = 3 [ENDL] set t to false [ENDL] stop the loop [ENDL] if t is true [ENDL] increment cnt by one [ENDL] push i + 1 into vec [ENDL] print cnt [ENDL] declare integer len = length of vec [ENDL] print all elements of vec except last with \" \" after each one [ENDL] if cnt is greater than 0 , print last element of vec [ENDL] define ints n , i , j", "c++": "int n ; int main() { cin >> n ; int arr [ n ] [ n ] ; for ( int i = 0 ; i < n ; i ++ ) for ( int j = 0 ; j < n ; j ++ ) { cin >> arr [ i ] [ j ] ; } int cnt = 0 ; } for ( int i = 0 ; i < n ; i ++ ) bool t = true ; for ( int j = 0 ; j < n ; j ++ ) if ( arr [ i ] [ j ] == 1 || arr [ i ] [ j ] == 3 ) t = false ; break ; if ( t ) } } cnt ++ ; vec . push_back ( i + 1 ) ; cout << cnt << endl ; } } int len = vec . size ( ) ; for ( int i = 0 ; i < len - 1 ; i ++ ) { cout << vec [ i ] << \"   \" ; } if ( cnt > 0 ) cout << vec [ vec . size ( ) - 1 ] << endl ; int n , i , j ; }"}}
{"translation": {"en": "define 2 - dimensional int array a to be of 105 x 105 elements , int array f to be of 105 elements , int t , and int array b to be of 105 elements [ENDL] read n [ENDL] assign zero to t [ENDL] for i by 1 from 0 to n ( exclusive ) , set f [ i ] to 1 [ENDL] for i from 0 to n ( exclusive ) by 1 [ENDL] for j from 0 to n ( exclusive ) by 1 [ENDL] read a [ i ] [ j ] [ENDL] if a [ i ] [ j ] is 1 [ENDL] set f [ i ] to 0 [ENDL] else if a [ i ] [ j ] is two [ENDL] zero f [ j ] [ENDL] otherwise if a [ i ] j ] = three [ENDL] zero f [ i ] and f [ j ] [ENDL] for i from 0 to n ( exclusive ) by 1 [ENDL] if f [ i ] , then set b [ t ] to i + 1 and then increment t [ENDL] print t and newline [ENDL] for i from 0 to t ( exclusive ) by 1 [ENDL] if i isn ' t t - 1 [ENDL] print b [ i ] and \" \" [ENDL] else [ENDL] print b [ i ] and newline [ENDL] n , d , s = int , dist = array of 105 int", "c++": "int main() { int a [ 105 ] [ 105 ] , f [ 105 ] , t , b [ 105 ] ; cin >> n ; t = 0 ; for ( i = 0 ; i < n ; i ++ ) f [ i ] = 1 ; for ( i = 0 ; i < n ; i ++ ) for ( j = 0 ; j < n ; j ++ ) cin >> a [ i ] [ j ] ; if ( a [ i ] [ j ] == 1 ) f [ i ] = 0 ; else if ( a [ i ] [ j ] == 2 ) f [ j ] = 0 ; else if ( a [ i ] [ j ] == 3 ) f [ i ] = f [ j ] = 0 ; for ( i = 0 ; i < n ; i ++ ) } } if ( f [ i ] ) b [ t ++ ] = i + 1 ; cout << t << endl ; } for ( i = 0 ; i < t ; i ++ ) if ( i != t - 1 ) cout << b [ i ] << \"   \" ; else cout << b [ i ] << endl ; int n , d , dist [ 105 ] , s ; } return 0; }"}}
{"translation": {"en": "read n [ENDL] s = n [ENDL] fill dist with 0 [ENDL] for i = 1 to n inclusive [ENDL] for j = 1 to n inclusive [ENDL] read d [ENDL] if d is 1 increment dist [ i ] [ENDL] if d is 2 increment dist [ j ] [ENDL] if d is 3 [ENDL] increment dist [ i ] [ENDL] increment dist [ j ] [ENDL] for i = 0 to n inclusive [ENDL] if dist [ i ] ! = 0 decrement s [ENDL] print s [ENDL] flot = 1 [ENDL] for i = 1 to n inclusive [ENDL] if dist [ i ] is 0 and flot [ENDL] print i [ENDL] flot = 0 [ENDL] else if dist [ i ] is 0 and not flot [ENDL] print space , i [ENDL] if s print newline [ENDL] define 2D int array r to be 200 x 200 , and define ints a , b , c , d , and e", "c++": "int main() { cin >> n ; s = n ; memset ( dist , 0 , sizeof ( dist ) ) ; for ( int i = 1 ; i <= n ; i ++ ) for ( int j = 1 ; j <= n ; j ++ ) cin >> d ; if ( d == 1 ) dist [ i ] ++ ; if ( d == 2 ) dist [ j ] ++ ; if ( d == 3 ) dist [ i ] ++ ; dist [ j ] ++ ; for ( int i = 0 ; i <= n ; i ++ ) } } } if ( dist [ i ] != 0 ) s -- ; cout << s << endl ; } int flot = 1 ; for ( int i = 1 ; i <= n ; i ++ ) if ( dist [ i ] == 0 && flot ) cout << i ; flot = 0 ; else if ( dist [ i ] == 0 && ! flot ) cout << \"   \" << i ; if ( s ) cout << endl ; } int r [ 200 ] [ 200 ] , a , b , c , d , e ; return 0; }"}}
{"translation": {"en": "while read into a [ENDL] define int dynamic array v2 [ENDL] define 200 - elt . array v [ENDL] for b from 1 to a by 1 [ENDL] set v [ b ] to 1 [ENDL] for c by 1 from 1 to a , read into r [ b ] [ c ] [ENDL] for b by 1 from 1 to a [ENDL] for c from 1 to a by 1 [ENDL] if b is c , then continue [ENDL] if r [ b ] [ c ] is one , then zero v [ b ] [ENDL] if r [ b ] [ c ] is two , then set v [ c ] to zero [ENDL] if r [ b ] [ c ] is three , then set v [ b ] and v [ c ] to zero [ENDL] assign zero to c [ENDL] for b from 1 to a by 1 [ENDL] if v [ b ] is one [ENDL] increment c [ENDL] append b onto v2 [ENDL] if c [ENDL] print c and newline [ENDL] for d from 1 to c by 1 [ENDL] if d is one [ENDL] print v2 [ d - 1 ] [ENDL] otherwise [ENDL] print \" \" and v2 [ d - 1 ] [ENDL] print newline [ENDL] else [ENDL] print c followed by newline [ENDL] clear out v2 [ENDL] create int n and a and int array ans of size 105", "c++": "int main() { while ( cin >> a ) vector < int > v2 ; int v [ 200 ] ; for ( b = 1 ; b <= a ; b ++ ) v [ b ] = 1 ; for ( c = 1 ; c <= a ; c ++ ) { cin >> r [ b ] [ c ] ; } for ( b = 1 ; b <= a ; b ++ ) } for ( c = 1 ; c <= a ; c ++ ) if ( b == c ) continue ; if ( r [ b ] [ c ] == 1 ) v [ b ] = 0 ; if ( r [ b ] [ c ] == 2 ) v [ c ] = 0 ; if ( r [ b ] [ c ] == 3 ) v [ b ] = 0 , v [ c ] = 0 ; c = 0 ; } } for ( b = 1 ; b <= a ; b ++ ) if ( v [ b ] == 1 ) c ++ ; v2 . push_back ( b ) ; if ( c ) } } cout << c << endl ; for ( d = 1 ; d <= c ; d ++ ) if ( d == 1 ) cout << v2 [ d - 1 ] ; else cout << \"   \" << v2 [ d - 1 ] ; cout << endl ; } } else cout << c << endl ; v2 . clear ( ) ; } int n , a , ans [ 105 ] ; } return 0; }"}}
{"translation": {"en": "while cin > > n is truthy [ENDL] set all contents of ans to 0 [ENDL] for i = 1 to n [ENDL] for j = 1 to n [ENDL] read a [ENDL] if a is equal to 1 or a is equal to 3 , set ans [ i ] to 1 [ENDL] let int cnt = 0 and int array b of size 105 [ENDL] for i = 1 to n [ENDL] if ans [ i ] is equal to 0 , set b [ cnt + + ] to i [ENDL] if cnt is truthy [ENDL] print cnt [ENDL] for i = 0 to cnt - 1 exclusive , print b [ i ] and ' ' [ENDL] print b [ cnt - 1 ] [ENDL] else [ENDL] print 0 [ENDL] declare 2d boolean array good with size 200", "c++": "int main() { while ( cin >> n ) memset ( ans , 0 , sizeof ( ans ) ) ; for ( int i = 1 ; i <= n ; i ++ ) for ( int j = 1 ; j <= n ; j ++ ) cin >> a ; if ( a == 1 || a == 3 ) ans [ i ] = 1 ; int cnt = 0 , b [ 105 ] ; } for ( int i = 1 ; i <= n ; i ++ ) if ( ans [ i ] == 0 ) b [ cnt ++ ] = i ; if ( cnt ) } cout << cnt << endl ; for ( int i = 0 ; i < cnt - 1 ; i ++ ) cout << b [ i ] << '   ' ; cout << b [ cnt - 1 ] << endl ; else cout << 0 << endl ; bool good [ 200 ] ; } return 0; }"}}
{"translation": {"en": "declare integer variable n [ENDL] declare 2d integer array a with size 300 by 300 [ENDL] read input to n [ENDL] for i = 1 to n inclusive [ENDL] for j = 1 to n inclusive , read a [ i ] [ j ] [ENDL] set sizeof ( good ) bytes at the pointer good to true [ENDL] declare integer variable sum = 0 [ENDL] for i from 1 to n inclusive [ENDL] for j from 1 to n inclusive [ENDL] if a [ i ] [ j ] = 1 or a [ i ] [ j ] = 3 [ENDL] assign false to good [ i ] [ENDL] stop the loop [ENDL] if good [ i ] is false , go to the start of the loop [ENDL] for j from 1 to n inclusive [ENDL] if a [ j ] [ i ] is equal to 2 or a [ j ] [ i ] is equal to 3 [ENDL] change good [ i ] to false [ENDL] break the loop [ENDL] if good [ i ] is true , increment sum [ENDL] print sum [ENDL] for i from 1 to n inclusive [ENDL] if good [ i ] is true [ENDL] if sum is equal to 1 [ENDL] print i [ENDL] else [ENDL] print i and ' ' [ENDL] decrement sum [ENDL] v is a vector of 6 integers", "c++": "int n ; int main() { int a [ 300 ] [ 300 ] ; cin >> n ; for ( int i = 1 ; i <= n ; i ++ ) for ( int j = 1 ; j <= n ; j ++ ) { cin >> a [ i ] [ j ] ; } memset ( good , true , sizeof ( good ) ) ; } int sum = 0 ; for ( int i = 1 ; i <= n ; i ++ ) for ( int j = 1 ; j <= n ; j ++ ) if ( a [ i ] [ j ] == 1 || a [ i ] [ j ] == 3 ) good [ i ] = false ; break ; if ( ! good [ i ] ) continue ; } } for ( int j = 1 ; j <= n ; j ++ ) if ( a [ j ] [ i ] == 2 || a [ j ] [ i ] == 3 ) good [ i ] = false ; break ; if ( good [ i ] ) sum ++ ; } } cout << sum << endl ; } for ( int i = 1 ; i <= n ; i ++ ) if ( good [ i ] ) if ( sum == 1 ) cout << i << endl ; else cout << i << '   ' ; sum -- ; vector < int > v ( 6 ) ; } } return 0; }"}}
{"translation": {"en": "for integer i = 0 to 6 exclusive read v [ i ] [ENDL] declare integer suma = 0 [ENDL] create integer minA with value min of v [ 1 ] and v [ 5 ] [ENDL] create integer maxA with value max of v [ 1 ] and v [ 5 ] [ENDL] declare integer inicial = v [ 0 ] * 2 + 1 [ENDL] for i = 0 to minA exclusive [ENDL] increase suma by inicial [ENDL] increase inicial by 2 [ENDL] decrement inicial if maxA ! = minA [ENDL] for i = minA to maxA exclusive , increase suma by inicial [ENDL] assign value of min of v [ 2 ] and v [ 4 ] to minA [ENDL] assign value of max of v [ 2 ] and v [ 4 ] to maxA [ENDL] inicial = v [ 3 ] * 2 + 1 [ENDL] for i = 0 to minA exclusive [ENDL] increase suma by inicial [ENDL] increase inicial by 2 [ENDL] decrement inicial if maxA ! = minA [ENDL] if v [ 1 ] = v [ 5 ] [ENDL] for integer i = minA to maxA exclusive , increase suma by inicial [ENDL] print suma [ENDL] sq is a function that returns an integer and receive integer x", "c++": "int main() { for ( int i = 0 ; i < 6 ; i ++ ) cin >> v [ i ] ; int suma = 0 ; int minA = min ( v [ 1 ] , v [ 5 ] ) ; int maxA = max ( v [ 1 ] , v [ 5 ] ) ; int inicial = v [ 0 ] * 2 + 1 ; for ( int i = 0 ; i < minA ; i ++ ) suma += inicial ; inicial += 2 ; if ( maxA != minA ) inicial -- ; } for ( int i = minA ; i < maxA ; i ++ ) { suma += inicial ; } minA = min ( v [ 2 ] , v [ 4 ] ) ; maxA = max ( v [ 2 ] , v [ 4 ] ) ; inicial = v [ 3 ] * 2 + 1 ; for ( int i = 0 ; i < minA ; i ++ ) suma += inicial ; inicial += 2 ; if ( maxA != minA ) inicial -- ; } if ( v [ 1 ] == v [ 5 ] ) for ( int i = minA ; i < maxA ; i ++ ) { suma += inicial ; } cout << suma << endl ; } inline int sq ( int x ) return 0; }"}}
{"translation": {"en": "return square of x [ENDL] a = array of integers of length 11 [ENDL] for ( integer i = 0 to 6 exclusive ) , read i th element of array a [ENDL] ans is an integer and equals square of ( a [ 0 ] + a [ 1 ] + a [ 2 ] ) [ENDL] decrement ans by square of a [ 0 ] ) + sq ( a [ 2 ] ) + sq ( a [ 4 ] [ENDL] print ans and a new line [ENDL] declare long long array a with size 6", "c++": "return x * x ; int a [ 11 ] ; } int main() { for ( int i = 0 ; i < 6 ; i ++ ) cin >> a [ i ] ; int ans = sq ( a [ 0 ] + a [ 1 ] + a [ 2 ] ) ; ans -= sq ( a [ 0 ] ) + sq ( a [ 2 ] ) + sq ( a [ 4 ] ) ; cout << ans << endl ; long long a [ 6 ] ; return 0; }"}}
{"translation": {"en": "read 6 elements into array a [ENDL] create long longs ans = 0 and c = 2 * a [ 0 ] - 1 [ENDL] for i = 0 to a [ 1 ] + a [ 2 ] exclusive [ENDL] if i < = a [ 1 ] & & i < = a [ 5 ] [ENDL] increase c by 2 [ENDL] else if i > a [ 1 ] & & i is greater than a [ 5 ] [ENDL] decrease c by 2 [ENDL] if a [ 1 ] = a [ 5 ] & & i = a [ 1 ] decrease c by 2 [ENDL] if i ! = a [ 1 ] & & i = a [ 5 ] decrease c by 1 [ENDL] if i = a [ 1 ] & & i ! = a [ 5 ] decrease c by 1 [ENDL] increase ans by c [ENDL] print ans [ENDL] a1 , a2 , a3 , a4 , a5 , a6 = integers", "c++": "for ( long long i = 0 ; i < 6 ; i ++ ) cin >> a [ i ] ; int main() { long long c = 2 * a [ 0 ] - 1 , ans = 0 ; for ( long long i = 0 ; i < a [ 1 ] + a [ 2 ] ; i ++ ) if ( i <= a [ 1 ] && i <= a [ 5 ] ) c += 2 ; else if ( i > a [ 1 ] && i > a [ 5 ] ) c -= 2 ; if ( a [ 1 ] == a [ 5 ] && i == a [ 1 ] ) c -= 2 ; if ( i != a [ 1 ] && i == a [ 5 ] ) c -- ; if ( i == a [ 1 ] && i != a [ 5 ] ) c -- ; ans += c ; cout << ans << endl ; } int a1 , a2 , a3 , a4 , a5 , a6 ; return 0; }"}}
{"translation": {"en": "Read a1 , a2 , a3 , a4 , a5 , a6 [ENDL] print ( a1 + a2 + a3 ) * ( a1 + a2 + a3 ) - a1 * a1 - a3 * a3 - a5 * a5 and a new line [ENDL] a , b , c , d , e , f , maxlevel = long", "c++": "int main() { cin >> a1 >> a2 >> a3 >> a4 >> a5 >> a6 ; cout << ( a1 + a2 + a3 ) * ( a1 + a2 + a3 ) - a1 * a1 - a3 * a3 - a5 * a5 << endl ; long a , b , c , d , e , f , maxlevel ; return 0; }"}}
{"translation": {"en": "read a , b , c , d , e , f [ENDL] maxlevel = b + c [ENDL] curr = long with curr = a * 2 - 1 [ENDL] sum = long with sum = 0 [ENDL] for i = 0 to maxlevel exclusive [ENDL] if b > 0 [ENDL] increment curr [ENDL] else if b < 0 [ENDL] decrement curr [ENDL] decrement b [ENDL] if f > 0 [ENDL] increment curr [ENDL] else if f < 0 [ENDL] decrement curr [ENDL] decrement f [ENDL] sum = sum + curr [ENDL] print sum [ENDL] create integer array a with 6 elements", "c++": "int main() { cin >> a >> b >> c >> d >> e >> f ; maxlevel = b + c ; long curr = a * 2 - 1 ; long sum = 0 ; for ( int i = 0 ; i < maxlevel ; i ++ ) if ( b > 0 ) curr ++ ; else if ( b < 0 ) curr -- ; b -- ; if ( f > 0 ) curr ++ ; else if ( f < 0 ) curr -- ; f -- ; sum += curr ; cout << sum << endl ; } int a [ 6 ] ; return 0; }"}}
{"translation": {"en": "read 6 elements into a [ENDL] create integer n = a [ 0 ] + a [ 1 ] [ENDL] declare integer arrays l and r with size n [ENDL] for i = 0 to a [ 1 ] exclusive , set l [ i ] to 1 [ENDL] for integer i = a [ 1 ] + 1 to n exclusive , set l [ i ] to - 1 [ENDL] for i = 0 to a [ 3 ] exclusive , set r [ i ] to 1 [ENDL] for i = a [ 3 ] + 1 to n exclusive , set r [ i ] to - 1 [ENDL] declare integers ans = 0 and step = 2 * a [ 2 ] - 1 [ENDL] for integer i = 0 to n exclusive [ENDL] increase step by l [ i ] + r [ i ] [ENDL] increase ans by step [ENDL] print ans [ENDL] create integer arrays a , b , with a size 10 , b size 5005", "c++": "int main() { for ( int i = 0 ; i < 6 ; ++ i ) cin >> a [ i ] ; int n = a [ 0 ] + a [ 1 ] ; int l [ n ] = { } , r [ n ] = { } ; for ( int i = 0 ; i < a [ 1 ] ; ++ i ) l [ i ] = 1 ; for ( int i = a [ 1 ] + 1 ; i < n ; ++ i ) l [ i ] = - 1 ; for ( int i = 0 ; i < a [ 3 ] ; ++ i ) r [ i ] = 1 ; for ( int i = a [ 3 ] + 1 ; i < n ; ++ i ) r [ i ] = - 1 ; int ans = 0 , step = 2 * a [ 2 ] - 1 ; for ( int i = 0 ; i < n ; ++ i ) step += l [ i ] + r [ i ] ; ans += step ; cout << ans << endl ; } int a [ 10 ] , b [ 5005 ] ; return 0; }"}}
{"translation": {"en": "set b [ 0 ] to 0 [ENDL] set b [ 1 ] to 1 [ENDL] for i = 2 to 5005 exclusive , set b [ i ] to i * i [ENDL] create integer len with len = 0 [ENDL] for i = 1 to 6 inclusive , read a [ i ] [ENDL] create integer m with m = a [ 1 ] + a [ 2 ] + a [ 3 ] [ENDL] set len to b [ m ] - ( b [ a [ 1 ] ] + b [ a [ 3 ] ] + b [ a [ 5 ] ] ) [ENDL] print len print newline [ENDL] declare long long variables a , b , c , d , e and f", "c++": "b [ 0 ] = 0 ; int main() { b [ 1 ] = 1 ; for ( int i = 2 ; i < 5005 ; i ++ ) { b [ i ] = i * i ; } int len = 0 ; for ( int i = 1 ; i <= 6 ; i ++ ) { cin >> a [ i ] ; } int m = a [ 1 ] + a [ 2 ] + a [ 3 ] ; len = b [ m ] - ( b [ a [ 1 ] ] + b [ a [ 3 ] ] + b [ a [ 5 ] ] ) ; cout << len << endl ; long long a , b , c , d , e , f ; return 0; }"}}
{"translation": {"en": "read a , b , c , d , e and f [ENDL] print ( c + d + e ) * ( c + d + e ) - ( a * a ) - ( c * c ) - ( e * e ) and \" \\ n \" [ENDL] create integers a , b , c , d , e , and f", "c++": "int main() { cin >> a >> b >> c >> d >> e >> f ; cout << ( c + d + e ) * ( c + d + e ) - ( a * a ) - ( c * c ) - ( e * e ) << \" \\n \" ; int a , b , c , d , e , f ; return 0; }"}}
{"translation": {"en": "print a b c d e and f [ENDL] set integer x equal to a + b + c [ENDL] let res be an integer equal to ( x * x ) - ( a * a ) - ( c * c ) - ( e * e ) [ENDL] print res and a new line [ENDL] let a , b , c , d , e , f be ints", "c++": "int main() { cin >> a >> b >> c >> d >> e >> f ; int x = a + b + c ; int res = ( x * x ) - ( a * a ) - ( c * c ) - ( e * e ) ; cout << res << endl ; int a , b , c , d , e , f ; return 0; }"}}
{"translation": {"en": "read a , b , c , d , e , f [ENDL] print ( a + b + c ) * ( a + b + c ) - a * a - c * c - e * e and one newline [ENDL] maxn = const int with maxn = 1e6", "c++": "cin >> a >> b >> c >> d >> e >> f ; int main() { cout << ( a + b + c ) * ( a + b + c ) - a * a - c * c - e * e << endl ; const int maxn = 1e6 ; }"}}
{"translation": {"en": "inf = const double with inf = 0x3f3f3f3f3f3f3f3f [ENDL] a , b , c , d , e , f = int [ENDL] while reading a then b then c then d then e then f print ( a + b + c ) * ( a + b + c ) - a * a - c * c - e * e [ENDL] a , b , c , d , e , f , ans , x , y and z are integers where ans , x , y and z = 0", "c++": "const double inf = 0x3f3f3f3f3f3f3f3f ; int a , b , c , d , e , f ; while ( cin >> a >> b >> c >> d >> e >> f ) { cout << ( a + b + c ) * ( a + b + c ) - a * a - c * c - e * e << endl ; } int main() { int a , b , c , d , e , f , ans = 0 , x = 0 , y = 0 , z = 0 ; return 0; }"}}
{"translation": {"en": "read a , b , c , d , e and f [ENDL] if b is greater than f [ENDL] increase ans by 2 * a * f + f * ( f + 1 ) - f [ENDL] set value of x to a + f [ENDL] else [ENDL] increase ans by 2 * a * b + b * ( b + 1 ) - b [ENDL] set value of x to a + b [ENDL] if c is greater than e [ENDL] increase ans by 2 * d * e + e * ( e + 1 ) - e [ENDL] assign value of c - e to y [ENDL] else [ENDL] increase ans by 2 * d * c + c * ( c + 1 ) - c [ENDL] y = e - c [ENDL] increase ans by 2 * x * y [ENDL] print ans and ' \\ n ' [ENDL] declare integers n and res where n = 6 and array of integers a with 10 elements", "c++": "int main() { cin >> a >> b >> c >> d >> e >> f ; if ( b > f ) ans += 2 * a * f + f * ( f + 1 ) - f ; x = a + f ; else ans += 2 * a * b + b * ( b + 1 ) - b ; x = a + b ; if ( c > e ) } ans += 2 * d * e + e * ( e + 1 ) - e ; y = c - e ; else ans += 2 * d * c + c * ( c + 1 ) - c ; y = e - c ; ans += 2 * x * y ; } cout << ans << ' \\n ' ; int n = 6 , res , a [ 10 ] ; return 0; }"}}
{"translation": {"en": "for i = 1 to n inclusive read a [ i ] [ENDL] declare integers root = a [ 1 ] * 2 + 1 and curr = root [ENDL] create integers first_layer , second_layer and third_layer = 0 [ENDL] if a [ 2 ] > = a [ n ] [ENDL] set first_layer = a [ n ] and second_layer = a [ 2 ] - a [ n ] [ENDL] else [ENDL] set first_layer = a [ 2 ] and second_layer = a [ n ] - a [ 2 ] [ENDL] for i = 1 to first_layer inclusive [ENDL] set value of res to res + curr [ENDL] curr = curr + 2 [ENDL] if first_layer = a [ 2 ] [ENDL] second_layer = min of second_layer and a [ 3 ] [ENDL] else [ENDL] second_layer = min of second_layer and a [ 5 ] [ENDL] for i = 1 to second_layer inclusive , increase res by curr - 1 [ENDL] set root = a [ 4 ] * 2 + 1 and curr = root [ENDL] for integer i = 1 to min of a [ 3 ] and a [ 5 ] inclusive [ENDL] res = res + curr [ENDL] set curr to curr + 2 [ENDL] print res and ' \\ n ' [ENDL] set ee and acc = 0", "c++": "for ( int i = 1 ; i <= n ; i ++ ) cin >> a [ i ] ; int main() { int root = a [ 1 ] * 2 + 1 , curr = root ; int first_layer = 0 , second_layer = 0 , third_layer = 0 ; if ( a [ 2 ] >= a [ n ] ) first_layer = a [ n ] , second_layer = a [ 2 ] - a [ n ] ; else first_layer = a [ 2 ] , second_layer = a [ n ] - a [ 2 ] ; for ( int i = 1 ; i <= first_layer ; i ++ ) res = res + curr ; curr = curr + 2 ; if ( first_layer == a [ 2 ] ) } second_layer = min ( second_layer , a [ 3 ] ) ; else second_layer = min ( second_layer , a [ 5 ] ) ; for ( int i = 1 ; i <= second_layer ; i ++ ) res = res + curr - 1 ; root = a [ 4 ] * 2 + 1 , curr = root ; for ( int i = 1 ; i <= min ( a [ 3 ] , a [ 5 ] ) ; i ++ ) res = res + curr ; curr = curr + 2 ; cout << res << ' \\n ' ; } int ee = 0 , acc = 0 ; return 0; }"}}
{"translation": {"en": "for i = 0 to 6 exclusive [ENDL] create int e [ENDL] read e [ENDL] if i is even , assign acc + e * e to acc [ENDL] if i is less than 3 , ee = ee + e [ENDL] set ans equal to ee * ee - acc [ENDL] print ans [ENDL] a1 , a2 , a3 , a4 , a5 , a6 , result = integers with result = 0", "c++": "int main() { for ( int i = 0 ; i < 6 ; i ++ ) int e ; cin >> e ; if ( i % 2 == 0 ) acc += e * e ; if ( i < 3 ) ee += e ; int ans = ee * ee - acc ; } cout << ans << endl ; int a1 , a2 , a3 , a4 , a5 , a6 , result = 0 ; }"}}
{"translation": {"en": "Read a1 , a2 , a3 , a4 , a5 , a6 [ENDL] set result to ( ( a1 + a2 + a3 ) * ( a1 + a2 + a3 ) ) - ( a1 * a1 ) - ( a3 * a3 ) - ( a5 * a5 ) [ENDL] print result and a new line [ENDL] create integers a , b , c , d , e and f", "c++": "int main() { cin >> a1 >> a2 >> a3 >> a4 >> a5 >> a6 ; result = ( ( a1 + a2 + a3 ) * ( a1 + a2 + a3 ) ) - ( a1 * a1 ) - ( a3 * a3 ) - ( a5 * a5 ) ; cout << result << endl ; int a , b , c , d , e , f ; return 0; }"}}
{"translation": {"en": "read a , b , c , d , e and f [ENDL] if e > c then swap e and c and swap f and b [ENDL] print 2 * c * ( d + e ) - e * e + 2 * a * b + b * b [ENDL] create int a , b , c , d , e , f", "c++": "int main() { cin >> a >> b >> c >> d >> e >> f ; if ( e > c ) swap ( e , c ) , swap ( f , b ) ; cout << 2 * c * ( d + e ) - e * e + 2 * a * b + b * b << endl ; long long a , b , c , d , e , f ; }"}}
{"translation": {"en": "read a , b , c , d , e and f [ENDL] print ( a + b + c ) * ( a + b + c ) - a * a - c * c - e * e [ENDL] maxn = constant integer with value of 105", "c++": "int main() { cin >> a >> b >> c >> d >> e >> f ; cout << ( a + b + c ) * ( a + b + c ) - a * a - c * c - e * e << endl ; const int maxn = 105 ; return 0; }"}}
{"translation": {"en": "a , b , c , d , e , f = integers [ENDL] read a , b , c , d , e , and f [ENDL] print ( a + b + c ) * ( a + b + c ) - a * a - c * c - e * e [ENDL] declare int array side with size 7", "c++": "int a , b , c , d , e , f ; int main() { cin >> a >> b >> c >> d >> e >> f ; cout << ( a + b + c ) * ( a + b + c ) - a * a - c * c - e * e << endl ; int side [ 7 ] ; }"}}
{"translation": {"en": "for integer i = 1 to 6 inclusive read side [ i ] [ENDL] create integer h1 = min of side [ 2 ] and side [ 6 ] [ENDL] create integer h2 = min of side [ 3 ] and side [ 5 ] [ENDL] declare int h3 = side [ 2 ] + side [ 3 ] - h1 - h2 [ENDL] create int ans = 0 [ENDL] for integer i = side [ 1 ] + 1 to side [ 1 ] + h1 inclusive , increase ans by 2 * i - 1 [ENDL] for integer i = side [ 4 ] + 1 to side [ 4 ] + h2 inclusive , increase ans by 2 * i - 1 [ENDL] for i = 1 to h3 inclusive , increase ans by ( side [ 1 ] + h1 ) * 2 [ENDL] print ans [ENDL] create long longs a , b , c , d , e , f", "c++": "for ( int i = 1 ; i <= 6 ; ++ i ) cin >> side [ i ] ; int main() { int h1 = min ( side [ 2 ] , side [ 6 ] ) ; int h2 = min ( side [ 3 ] , side [ 5 ] ) ; int h3 = side [ 2 ] + side [ 3 ] - h1 - h2 ; int ans = 0 ; for ( int i = side [ 1 ] + 1 ; i <= side [ 1 ] + h1 ; ++ i ) ans += 2 * i - 1 ; for ( int i = side [ 4 ] + 1 ; i <= side [ 4 ] + h2 ; ++ i ) ans += 2 * i - 1 ; for ( int i = 1 ; i <= h3 ; ++ i ) ans += ( side [ 1 ] + h1 ) * 2 ; cout << ans << endl ; long long a , b , c , d , e , f ; return 0; }"}}
{"translation": {"en": "read a read b read c read d read e read f [ENDL] create long long ans with ans = ( a + b + c ) * ( a + b + c ) - a * a - c * c - e * e [ENDL] print ans print newline [ENDL] in function sq taking an int a and returning an int", "c++": "int main() { cin >> a >> b >> c >> d >> e >> f ; long long ans = ( a + b + c ) * ( a + b + c ) - a * a - c * c - e * e ; cout << ans << endl ; int sq ( int a ) return 0; }"}}
{"translation": {"en": "return a * a [ENDL] i , j , k , a , b , c = int and A = int array of size 6 [ENDL] read 6 values into A [ENDL] set a to A [ 0 ] + A [ 1 ] + A [ 2 ] [ENDL] set b to sq of a [ENDL] set c to sq of A [ 0 ] + sq of A [ 2 ] + sq of A [ 4 ] [ENDL] set j to b - c [ENDL] print j [ENDL] a = integer array of size 7", "c++": "return a * a ; int A [ 6 ] , i , j , k , a , b , c ; } int main() { for ( i = 0 ; i < 6 ; i ++ ) { cin >> A [ i ] ; } a = A [ 0 ] + A [ 1 ] + A [ 2 ] ; b = sq ( a ) ; c = sq ( A [ 0 ] ) + sq ( A [ 2 ] ) + sq ( A [ 4 ] ) ; j = b - c ; cout << j << endl ; int a [ 7 ] ; return 0; }"}}
{"translation": {"en": "in the function p that takes integer x and returns integer [ENDL] return x * x [ENDL] for i = 1 to 6 , read a [ i ] [ENDL] ans = integer with ans = p ( a [ 1 ] + a [ 2 ] + a [ 3 ] ) - p ( a [ 1 ] ) - p ( a [ 3 ] ) - p ( a [ 5 ] ) [ENDL] print ans [ENDL] declare ints i , j , l , test , ans and len with test = 0", "c++": "int p ( int x ) return x * x ; for ( int i = 1 ; i <= 6 ; i ++ ) { cin >> a [ i ] ; } } int main() { int ans = p ( a [ 1 ] + a [ 2 ] + a [ 3 ] ) - p ( a [ 1 ] ) - p ( a [ 3 ] ) - p ( a [ 5 ] ) ; cout << ans << \" \\n \" ; int i , j , l , test = 0 , ans , len ; return 0; }"}}
{"translation": {"en": "declare character ch and array of characters str with 1003 elements [ENDL] declare doubles maps and k where maps = 0 [ENDL] read l [ENDL] for i from 0 to l exclusive [ENDL] read input to str [ENDL] if str is \" ABSINTH \" [ENDL] increment test [ENDL] if str is \" BEER \" [ENDL] increment test by one [ENDL] if str is \" BRANDY \" [ENDL] increment test by one [ENDL] if str is \" CHAMPAGNE \" [ENDL] increment test by one [ENDL] if str is \" GIN \" [ENDL] increment test by one [ENDL] if str is \" RUM \" [ENDL] increment test [ENDL] if str is \" SAKE \" [ENDL] increment test by one [ENDL] if str is \" TEQUILA \" [ENDL] increment test by one [ENDL] if str is \" VODKA \" [ENDL] increment test by one [ENDL] if str is \" WHISKEY \" [ENDL] increment test [ENDL] if str is \" WINE \" [ENDL] increment test by one [ENDL] else if str [ 0 ] > = 48 and str [ 0 ] < = 57 [ENDL] assign length of str to len [ENDL] set k to 0 [ENDL] set maps to 0 [ENDL] for j = len - 1 to 0 inclusive counting down [ENDL] change str [ j ] to str [ j ] - ' 0 ' [ENDL] assign maps + ( str [ j ] * pow ( 10 . 0 , k ) ) to maps [ENDL] increment k [ENDL] change ans to maps [ENDL] if ans is less than 18 , increment test [ENDL] print test [ENDL] mp = map of string and int", "c++": "int main() { char str [ 1003 ] , ch ; double maps = 0 , k ; cin >> l ; for ( i = 0 ; i < l ; i ++ ) cin >> str ; if ( strcmp ( str , \" ABSINTH \" ) == 0 ) test ++ ; else if ( strcmp ( str , \" BEER \" ) == 0 ) test ++ ; else if ( strcmp ( str , \" BRANDY \" ) == 0 ) test ++ ; else if ( strcmp ( str , \" CHAMPAGNE \" ) == 0 ) test ++ ; else if ( strcmp ( str , \" GIN \" ) == 0 ) test ++ ; else if ( strcmp ( str , \" RUM \" ) == 0 ) test ++ ; else if ( strcmp ( str , \" SAKE \" ) == 0 ) test ++ ; else if ( strcmp ( str , \" TEQUILA \" ) == 0 ) test ++ ; else if ( strcmp ( str , \" VODKA \" ) == 0 ) test ++ ; else if ( strcmp ( str , \" WHISKEY \" ) == 0 ) test ++ ; else if ( strcmp ( str , \" WINE \" ) == 0 ) test ++ ; else if ( str [ 0 ] >= 48 && str [ 0 ] <= 57 ) len = strlen ( str ) ; k = 0 ; maps = 0 ; for ( j = len - 1 ; j >= 0 ; j -- ) str [ j ] = str [ j ] - ' 0 ' ; maps = maps + ( str [ j ] * pow ( 10.0 , k ) ) ; k ++ ; ans = ( int ) maps ; } if ( ans < 18 ) { test ++ ; } cout << test << endl ; } } map < string , int > mp ; }"}}
{"translation": {"en": "set mp [ \" ABSINTH \" ] and mp [ \" BEER \" ] and mp [ \" BRANDY \" ] and mp [ \" CHAMPAGNE \" ] to 1 [ENDL] set mp [ \" GIN \" ] and mp [ \" RUM \" ] and mp [ \" SAKE \" ] and mp [ \" TEQUILA \" ] and mp [ \" VODKA \" ] to 1 [ENDL] set mp [ \" WHISKEY \" ] and mp [ \" WINE \" ] to 1 [ENDL] n = int [ENDL] read n [ENDL] cnt = int with cnt = 0 [ENDL] loop n times [ENDL] s = string [ENDL] read s [ENDL] if mp [ s ] is not 0 [ENDL] increment cnt [ENDL] else if s [ 0 ] is numeric char [ENDL] geek = stringstream initialized with s [ENDL] x = int with x = 0 [ENDL] read into x from geek [ENDL] if x is less than 18 then increment cnt [ENDL] print cnt [ENDL] s = string", "c++": "int main() { mp [ \" ABSINTH \" ] = mp [ \" BEER \" ] = mp [ \" BRANDY \" ] = mp [ \" CHAMPAGNE \" ] = 1 ; mp [ \" GIN \" ] = mp [ \" RUM \" ] = mp [ \" SAKE \" ] = mp [ \" TEQUILA \" ] = mp [ \" VODKA \" ] = 1 ; mp [ \" WHISKEY \" ] = mp [ \" WINE \" ] = 1 ; int n ; cin >> n ; int cnt = 0 ; while ( n -- ) string s ; cin >> s ; if ( mp [ s ] ) cnt ++ ; else if ( s [ 0 ] >= ' 0 ' && s [ 0 ] <= ' 9 ' ) stringstream geek ( s ) ; int x = 0 ; geek >> x ; if ( x < 18 ) cnt ++ ; cout << cnt << endl ; } } string s ; return 0; }"}}
{"translation": {"en": "ans = integer with ans = 0 [ENDL] in the function make [ENDL] len = integer with len = s . length ( ) [ENDL] if s [ 0 ] < = 9 and s [ 0 ] > = 0 [ENDL] year = integer with year = 0 [ENDL] for i = 0 to len exclusive , year = year * 10 + s [ i ] - 0 [ENDL] if year < 18 , increment ans [ENDL] else [ENDL] if s is BRANDY [ENDL] increment ans [ENDL] else if s is BEER [ENDL] increment ans [ENDL] else if s is ABSINTH [ENDL] increment ans [ENDL] else if s is CHAMPAGNE [ENDL] increment ans [ENDL] else if s is GIN [ENDL] increment ans [ENDL] else if s is RUM [ENDL] increment ans [ENDL] else if s is SAKE [ENDL] increment ans [ENDL] else if s is TEQUILA [ENDL] increment ans [ENDL] else if s is VODKA [ENDL] increment ans [ENDL] else if s is WHISKEY [ENDL] increment ans [ENDL] else if s is WINE [ENDL] increment ans [ENDL] n = integer [ENDL] read n [ENDL] for i = 1 to n [ENDL] read s [ENDL] call make [ENDL] print ans [ENDL] declare integers i , j , l , test , ans and len where test = 0", "c++": "int ans = 0 ; void make ( ) int len = s . length ( ) ; if ( s [ 0 ] <= ' 9 ' && s [ 0 ] >= ' 0 ' ) int year = 0 ; for ( int i = 0 ; i < len ; i ++ ) { year = year * 10 + s [ i ] - ' 0 ' ; } if ( year < 18 ) { ans ++ ; } else if ( s == \" BRANDY \" ) ans ++ ; else if ( s == \" BEER \" ) ans ++ ; else if ( s == \" ABSINTH \" ) ans ++ ; else if ( s == \" CHAMPAGNE \" ) ans ++ ; else if ( s == \" GIN \" ) ans ++ ; else if ( s == \" RUM \" ) ans ++ ; else if ( s == \" SAKE \" ) ans ++ ; else if ( s == \" TEQUILA \" ) ans ++ ; else if ( s == \" VODKA \" ) ans ++ ; else if ( s == \" WHISKEY \" ) ans ++ ; else if ( s == \" WINE \" ) ans ++ ; int n ; } } } int main() { cin >> n ; for ( int i = 1 ; i <= n ; i ++ ) cin >> s ; make ( ) ; cout << ans << endl ; } int i , j , l , test = 0 , ans , len ; return 0; }"}}
{"translation": {"en": "declare character array str with size 1003 and a character variable ch [ENDL] declare double variables maps = 0 and k [ENDL] read input to l [ENDL] loop i from 0 to l exclusive [ENDL] read str [ENDL] if str is \" ABSINTH \" [ENDL] increment test [ENDL] else if str is \" BEER \" [ENDL] increment test [ENDL] else if str is \" BRANDY \" [ENDL] increment test by one [ENDL] else if str is \" CHAMPAGNE \" [ENDL] increment test by one [ENDL] else if str is \" GIN \" [ENDL] increment test by one [ENDL] else if str is \" RUM \" [ENDL] increment test [ENDL] else if str is \" SAKE \" [ENDL] increment test [ENDL] else if str is \" TEQUILA \" [ENDL] increment test [ENDL] else if str is \" VODKA \" [ENDL] increment test [ENDL] else if str is \" WHISKEY \" [ENDL] increment test by one [ENDL] else if str is \" WINE \" [ENDL] increment test [ENDL] else if str [ 0 ] > = 48 and str [ 0 ] < = 57 [ENDL] change len to length of str [ENDL] change k to 0 [ENDL] change maps to 0 [ENDL] loop j from len - 1 to 0 inclusive counting down [ENDL] assign str [ j ] - ' 0 ' to str [ j ] [ENDL] change maps to maps + ( str [ j ] * ( 10 . 0 in power k ) ) [ENDL] increment k by one [ENDL] change ans to maps [ENDL] if ans is less than 18 , increment test by one [ENDL] print test [ENDL] declare const int maxn = 1e6", "c++": "int main() { char str [ 1003 ] , ch ; double maps = 0 , k ; cin >> l ; for ( i = 0 ; i < l ; i ++ ) cin >> str ; if ( strcmp ( str , \" ABSINTH \" ) == 0 ) test ++ ; else if ( strcmp ( str , \" BEER \" ) == 0 ) test ++ ; else if ( strcmp ( str , \" BRANDY \" ) == 0 ) test ++ ; else if ( strcmp ( str , \" CHAMPAGNE \" ) == 0 ) test ++ ; else if ( strcmp ( str , \" GIN \" ) == 0 ) test ++ ; else if ( strcmp ( str , \" RUM \" ) == 0 ) test ++ ; else if ( strcmp ( str , \" SAKE \" ) == 0 ) test ++ ; else if ( strcmp ( str , \" TEQUILA \" ) == 0 ) test ++ ; else if ( strcmp ( str , \" VODKA \" ) == 0 ) test ++ ; else if ( strcmp ( str , \" WHISKEY \" ) == 0 ) test ++ ; else if ( strcmp ( str , \" WINE \" ) == 0 ) test ++ ; else if ( str [ 0 ] >= 48 && str [ 0 ] <= 57 ) len = strlen ( str ) ; k = 0 ; maps = 0 ; for ( j = len - 1 ; j >= 0 ; j -- ) str [ j ] = str [ j ] - ' 0 ' ; maps = maps + ( str [ j ] * pow ( 10.0 , k ) ) ; k ++ ; ans = ( int ) maps ; } if ( ans < 18 ) { test ++ ; } cout << test << endl ; } } const int maxn = 1e6 ; }"}}
{"translation": {"en": "create an array of integers prime with maxn + 1 elements [ENDL] function getPrime [ENDL] set first sizeof ( prime ) bytes at the pointer prime to 0 [ENDL] for i from 2 to maxn inclusive [ENDL] if prime [ i ] is 0 , increment prime [ 0 ] and set prime [ prime [ 0 ] ] to i [ENDL] for j from 1 to prime [ 0 ] inclusive while prime [ j ] < = maxn / i , incrementing j [ENDL] prime [ prime [ j ] * i ] = 1 [ENDL] if i % prime [ j ] is equal to 0 , break the loop [ENDL] call getPrime ( ) [ENDL] declare int variable n [ENDL] loop , reading n from the input [ENDL] declare vector of integers v [ENDL] clear v [ENDL] declare integer variables key = prime [ 1 ] and id = 1 [ENDL] loop i from 1 to n inclusive [ENDL] create int key = prime [ i ] [ENDL] while key < = n [ENDL] push key into v [ENDL] multiply key by prime [ i ] [ENDL] print length of v [ENDL] for integer i = 0 to length of v exclusive , print v [ i ] and \" \\ n \" if i = length of v - 1 or \" \" if it is not [ENDL] maxn = const integer with maxn = 1010", "c++": "int prime [ maxn + 1 ] ; void getPrime ( ) memset ( prime , 0 , sizeof ( prime ) ) ; for ( int i = 2 ; i <= maxn ; i ++ ) if ( ! prime [ i ] ) prime [ ++ prime [ 0 ] ] = i ; for ( int j = 1 ; j <= prime [ 0 ] && prime [ j ] <= maxn / i ; j ++ ) prime [ prime [ j ] * i ] = 1 ; if ( i % prime [ j ] == 0 ) break ; getPrime ( ) ; } } } int main() { int n ; while ( cin >> n ) vector < int > v ; v . clear ( ) ; int key = prime [ 1 ] , id = 1 ; for ( int i = 1 ; prime [ i ] <= n ; i ++ ) int key = prime [ i ] ; while ( key <= n ) v . push_back ( key ) ; key *= prime [ i ] ; cout << v . size ( ) << endl ; } } for ( int i = 0 ; i < v . size ( ) ; i ++ ) cout << v [ i ] << ( i == v . size ( ) - 1 ? \" \\n \" : \"   \" ) ; const int maxn = 1010 ; } }"}}
{"translation": {"en": "v = vector of integer [ENDL] is_prime = bool array of size maxn [ENDL] prime = integer array of size maxn [ENDL] k = integer [ENDL] in the function Euler that takes integer n [ENDL] i , j = integers [ENDL] k = 0 [ENDL] for i = 2 to n exclusive [ENDL] if is_prime [ i ] is false , prime [ increment k ] = i [ENDL] for j < k and i * prime [ j ] < n [ENDL] is_prime [ i * prime [ j ] ] = true [ENDL] if i modulo prime [ j ] is 0 , break loop [ENDL] n , x = integer [ENDL] Euler of maxn [ENDL] ans = integer with ans = ( 0 ) [ENDL] read n [ENDL] for i = 0 to k exclusive [ENDL] if prime [ i ] < = n [ENDL] p = integer with p = prime [ i ] [ENDL] while p < = n [ENDL] append p in v [ENDL] p = p * prime [ i ] [ENDL] print v . size ( ) [ENDL] if v . size ( ) > 0 [ENDL] for i = 0 to v . size ( ) - 1 exclusive , print v [ i ] [ENDL] print v [ v . size ( ) - 1 ] [ENDL] create integer array a with size 1005", "c++": "vector < int > v ; bool is_prime [ maxn ] ; int prime [ maxn ] ; int k ; void Euler ( int n ) int i , j ; k = 0 ; for ( i = 2 ; i < n ; i ++ ) if ( is_prime [ i ] == false ) prime [ k ++ ] = i ; for ( j = 0 ; j < k && i * prime [ j ] < n ; j ++ ) is_prime [ i * prime [ j ] ] = true ; if ( i % prime [ j ] == 0 ) break ; int n , x ; } } } int main() { Euler ( maxn ) ; int ans ( 0 ) ; cin >> n ; for ( int i = 0 ; i < k ; i ++ ) if ( prime [ i ] <= n ) int p = prime [ i ] ; while ( p <= n ) v . push_back ( p ) ; p *= prime [ i ] ; cout << v . size ( ) << endl ; } } } if ( v . size ( ) > 0 ) for ( int i = 0 ; i < v . size ( ) - 1 ; i ++ ) cout << v [ i ] << '   ' ; cout << v [ v . size ( ) - 1 ] << endl ; int a [ 1005 ] ; } return 0; }"}}
{"translation": {"en": "declare zhi with integer n as argument , returning boolean [ENDL] for i = 2 to n exclusive [ENDL] if n % i is 0 , return false from function [ENDL] return true from function [ENDL] create integer n [ENDL] while read n [ENDL] if n is 1 [ENDL] print 0 print newline [ENDL] break current loop iteration [ENDL] set bytes from a to size of a to value 0 [ENDL] create integer j with j = 0 [ENDL] for i = 2 to n inclusive [ENDL] if result of run zhi with i as argument is true [ENDL] set a [ j ] to i [ENDL] increment j [ENDL] create integer t with t = i [ENDL] set t to t * i [ENDL] while t is less than or equal to n [ENDL] set a [ j ] to t [ENDL] increment j [ENDL] set t to t * i [ENDL] print j print newline [ENDL] for i = 0 to j - 1 exclusive , print a [ i ] print \" \" [ENDL] print a [ j - 1 ] print newline [ENDL] declare double variables a , b and c", "c++": "bool zhi ( int n ) for ( int i = 2 ; i < n ; i ++ ) if ( n % i == 0 ) return false ; return true ; } int n ; } int main() { while ( cin >> n ) if ( n == 1 ) cout << 0 << endl ; continue ; memset ( a , 0 , sizeof ( a ) ) ; } int j = 0 ; for ( int i = 2 ; i <= n ; i ++ ) if ( zhi ( i ) ) a [ j ] = i ; j ++ ; int t = i ; t *= i ; while ( t <= n ) a [ j ] = t ; j ++ ; t *= i ; cout << j << endl ; } } } for ( int i = 0 ; i < j - 1 ; i ++ ) { cout << a [ i ] << \"   \" ; } cout << a [ j - 1 ] << endl ; double a , b , c ; } }"}}
{"translation": {"en": "read a , b and c [ENDL] print b / ( b + c ) * a [ENDL] a , b , r = integers", "c++": "int main() { cin >> a >> b >> c ; cout << b / ( b + c ) * a << endl ; double l , p , q ; return 0; }"}}
{"translation": {"en": "Read l , p , q [ENDL] print l / ( q + p ) * p and a new line [ENDL] double integers = l , p , q", "c++": "cin >> l >> p >> q ; int main() { cout << l / ( q + p ) * p << endl ; double l , p , q ; return 0; }"}}
{"translation": {"en": "read l , p , q [ENDL] output l / ( p + q ) * p [ENDL] create constant integer maxn with maxn = integer casted 1e5 + 5", "c++": "int main() { cin >> l >> p >> q ; cout << l / ( p + q ) * p << \" \\n \" ; const int maxn = ( int ) 1e5 + 5 ; return 0; }"}}
{"translation": {"en": "create constant long long mod with mod = 1e9 + 7 [ENDL] create doubles l , p , q [ENDL] read l read p read q [ENDL] create double t1 with t1 = ( ( 2 * l ) / ( p + q ) ) [ENDL] create double t2 with t2 = l / ( p + q ) [ENDL] create double ans with ans = p * ( t1 - t2 ) [ENDL] print ans print newline [ENDL] define floating point numbers m , a , s", "c++": "const long long mod = 1e9 + 7 ; double l , p , q ; int main() { cin >> l >> p >> q ; double t1 = ( ( 2 * l ) / ( p + q ) ) ; double t2 = l / ( p + q ) ; double ans = p * ( t1 - t2 ) ; cout << ans << endl ; double m , a , s ; return 0; }"}}
{"translation": {"en": "define doubles i , j [ENDL] while read m , i , j [ENDL] set a to i + j [ENDL] assign m / a to s [ENDL] print s * i and a newline [ENDL] create int l , p and q", "c++": "int main() { double i , j ; while ( cin >> m >> i >> j ) a = i + j ; s = m / a ; cout << s * i << endl ; int l , p , q ; } return 0; }"}}
{"translation": {"en": "read l , p and q [ENDL] print l * p / ( p + q ) [ENDL] double integers = d , n , m", "c++": "int main() { cin >> l >> p >> q ; cout << l * p / ( double ) ( p + q ) << endl ; double d , n , m ; return 0; }"}}
{"translation": {"en": "read d , n , m [ENDL] output ( d * n ) / ( n + m ) [ENDL] inf = const integer with inf = 0x3f3f3f3f", "c++": "int main() { cin >> d >> n >> m ; cout << ( d * n ) / ( n + m ) << endl ; const int inf = 0x3f3f3f3f ; }"}}
{"translation": {"en": "mod1 = const integer with mod1 = 1e9 + 7 [ENDL] mod = const long long with mod = 1e16 [ENDL] maxn = const integer with maxn = 1000 [ENDL] dx , dy = integer array of size 5 with dx = { 0 , 1 , 0 , - 1 , 0 } , dy = { 1 , 0 , - 1 , 0 , 0 } [ENDL] dir = integer array of size [ 4 ] [ 2 ] with dir = { { 1 , 0 } , { - 1 , 0 } , { 0 , 1 } , { 0 , - 1 } } [ENDL] n , x , y = double [ENDL] read n , x , y [ENDL] d = double with d = n / ( x + y ) [ENDL] e = double with e = d * x [ENDL] print e [ENDL] create integer array h with size 3", "c++": "const int mod1 = 1e9 + 7 ; const long long mod = 1e16 ; const int maxn = 1000 ; int dx [ 5 ] = { 0 , 1 , 0 , - 1 , 0 } , dy [ 5 ] = { 1 , 0 , - 1 , 0 , 0 } ; int dir [ 4 ] [ 2 ] = { { 1 , 0 } , { - 1 , 0 } , { 0 , 1 } , { 0 , - 1 } } ; double n , x , y ; int main() { cin >> n >> x >> y ; double d = n / ( x + y ) ; double e = d * x ; cout << e << endl ; int h [ 3 ] ; return 0; }"}}
{"translation": {"en": "create long long doubles a , b , c [ENDL] read a read b read c [ENDL] create long long double f with f = b + c [ENDL] create long long double t with t = a / f [ENDL] print b * t print ' \\ n ' [ENDL] create doubles l , p and q", "c++": "long double a , b , c ; int main() { cin >> a >> b >> c ; long double f = b + c ; long double t = a / f ; cout << b * t << ' \\n ' ; double l , p , q ; return 0; }"}}
{"translation": {"en": "read input to l , p and q [ENDL] declare double variable t_total = 3 * l / ( p + q ) [ENDL] declare double t1 = l / ( p + q ) [ENDL] print ( t_total - 2 * t1 ) * p [ENDL] l , x , y = double", "c++": "int main() { cin >> l >> p >> q ; double t_total = 3 * l / ( p + q ) ; double t1 = l / ( p + q ) ; cout << ( t_total - 2 * t1 ) * p << endl ; double l , x , y ; }"}}
{"translation": {"en": "read l [ENDL] read x , y [ENDL] if y > x [ENDL] print l - ( ( l / ( x + y ) ) * the greatest value between x and y ) [ENDL] else [ENDL] print ( ( l / ( x + y ) ) * the greatest value between x and y ) [ENDL] N = const long long with N = 1e5", "c++": "int main() { cin >> l ; cin >> x >> y ; if ( y > x ) cout << l - ( ( l / ( x + y ) ) * max ( x , y ) ) << endl ; else cout << ( l / ( x + y ) ) * max ( x , y ) << endl ; const long long N = 1e5 ; } return 0; }"}}
{"translation": {"en": "l , p , q = flaot [ENDL] read l then p then q [ENDL] print l / ( p + q ) * p [ENDL] print newline [ENDL] set a , b and c to 0", "c++": "float l , p , q ; cin >> l >> p >> q ; int main() { cout << l / ( p + q ) * p ; cout << \" \\n \" ; double a = 0 , b = 0 , c = 0 ; return 0; }"}}
{"translation": {"en": "print a , b and c [ENDL] if b equal to c [ENDL] print 0 . 5 * a [ENDL] print b / ( c + b ) * a and a newline [ENDL] create constant integer N with N = 5000 + 100", "c++": "int main() { cin >> a >> b >> c ; if ( b == c ) cout << 0.5 * a << endl ; cout << b / ( c + b ) * a << endl ; return 0; } const int N = 5000 + 100 ; }"}}
{"translation": {"en": "create doubles l , q , p , t , ans [ENDL] while read l is true [ENDL] read p read q [ENDL] set t to l / ( p + q ) [ENDL] set ans to p * t [ENDL] print ans print newline [ENDL] l , p , q = double", "c++": "double l , q , p , t , ans ; int main() { while ( cin >> l ) cin >> p >> q ; t = l / ( p + q ) ; ans = p * t ; cout << ans << endl ; double l , p , q ; } return 0; }"}}
{"translation": {"en": "read l , p , q [ENDL] print result of p * l / ( p + q ) [ENDL] let l , p , q be double values", "c++": "int main() { cin >> l >> p >> q ; cout << p * l / ( p + q ) << endl ; double l , p , q ; }"}}
{"translation": {"en": "read l , p , q [ENDL] print ( l * p ) / ( p + q ) and newline [ENDL] set float a , s , c , d , e all to 0 and set float for i , j , k , l , f", "c++": "int main() { cin >> l >> p >> q ; cout << ( l * p ) / ( p + q ) << endl ; float a = 0 , s = 0 , c = 0 , d = 0 , e = 0 , i , j , k , l , f ; return 0; }"}}
{"translation": {"en": "read k , l , f [ENDL] set s to ( l + f ) / 2 [ENDL] set s to k / s [ENDL] set s to s / 2 [ENDL] set a to l * s [ENDL] output a [ENDL] create doubles l , p and q", "c++": "int main() { cin >> k >> l >> f ; s = ( l + f ) / 2 ; s = k / s ; s = s / 2 ; a = l * s ; cout << a << endl ; double l , p , q ; return 0; }"}}
{"translation": {"en": "read l , p and q [ENDL] print ( l / ( p + q ) ) * p and \" \\ n \" [ENDL] a , b , c , tt = long long integers", "c++": "int main() { cin >> l >> p >> q ; cout << ( l / ( p + q ) ) * p << \" \\n \" ; long long int a , b , c , tt ; return 0; }"}}
{"translation": {"en": "read a , b , c [ENDL] output ( float ) a / ( b + c ) * b [ENDL] MOD = const long long integer with MOD = 1000000007", "c++": "cin >> a >> b >> c ; int main() { cout << ( float ) a / ( b + c ) * b << endl ; const long long int MOD = 1000000007 ; }"}}
{"translation": {"en": "N , M , K , H , W , L , R = long long integer [ENDL] a , b , c = long double [ENDL] read a , b , c [ENDL] a = a / ( b + c ) [ENDL] a = a * b [ENDL] print a [ENDL] declare int variables l , p and q", "c++": "long long int N , M , K , H , W , L , R ; long double a , b , c ; int main() { cin >> a >> b >> c ; a /= ( b + c ) ; a *= b ; cout << a << endl ; int l , p , q ; return 0; }"}}
{"translation": {"en": "create doubles sum and su [ENDL] read l , p and q and keep looping [ENDL] change sum to l / ( 2 * ( p + q ) ) [ENDL] assign l - sum * q * 2 to su [ENDL] print su [ENDL] create doubles l , a , b", "c++": "int main() { double sum , su ; while ( cin >> l >> p >> q ) sum = ( double ) l / ( 2 * ( p + q ) ) ; su = ( double ) l - sum * q * 2 ; cout << su << endl ; double l , a , b ; } }"}}
{"translation": {"en": "read l read a read b [ENDL] print l / ( a + b ) * a print newline [ENDL] declare doubles d , a and b", "c++": "int main() { cin >> l >> a >> b ; cout << l / ( a + b ) * a << endl ; double d , a , b ; return 0; }"}}
{"translation": {"en": "read d , a and b [ENDL] create double t = d / ( a + b ) [ENDL] print t * a [ENDL] let a double", "c++": "int main() { cin >> d >> a >> b ; double t = d / ( a + b ) ; cout << t * a << endl ; double a ; }"}}
{"translation": {"en": "let l , p , q doubles [ENDL] read l , p , and q [ENDL] set a to l * p / ( p + q ) [ENDL] print a [ENDL] declare floats l , p and q", "c++": "int main() { double l , p , q ; cin >> l >> p >> q ; a = l * p / ( p + q ) ; cout << a << endl ; float l , p , q ; return 0; }"}}
{"translation": {"en": "read input to l , p and q [ENDL] print l / ( p + q ) * p [ENDL] declare constant double PI with PI = acosign of - 1 . 0", "c++": "int main() { cin >> l >> p >> q ; cout << l / ( p + q ) * p << endl ; const double PI = acos ( - 1.0 ) ; return 0; }"}}
{"translation": {"en": "declare fast_in_out with no arguments , returning void [ENDL] declare pause with no arguments , returning void [ENDL] run fast_in_out [ENDL] declare ar as integer array = { 2 , 4 , 8 , 16 , 32 , 64 , 128 , 256 , 512 } [ENDL] declare integers n , b , q [ENDL] read n and b and q [ENDL] declare integers x = 0 , y = n * q [ENDL] for i = 8 to 0 inclusive , decrementing i [ENDL] if n is less than ar [ i ] , break current loop iteration [ENDL] declare integer k with k = ar [ i ] [ENDL] let n be n - k [ENDL] increment n by k / 2 [ENDL] increment i [ENDL] let k = k * b + ( k / 2 ) [ENDL] increment x by k [ENDL] print x , \" \" , y , ' \\ n ' [ENDL] run pause [ENDL] create ints n , b , p , x = 0 , and y", "c++": "void fast_in_out ( ) { } void pause ( ) { } fast_in_out ( ) ; int main() { int ar [ ] = { 2 , 4 , 8 , 16 , 32 , 64 , 128 , 256 , 512 } ; int n , b , q ; cin >> n >> b >> q ; int x = 0 , y = n * q ; for ( int i = 8 ; i >= 0 ; i -- ) if ( n < ar [ i ] ) continue ; int k = ar [ i ] ; n = n - k ; n += k / 2 ; i ++ ; k = k * b + ( k / 2 ) ; x += k ; cout << x << \"   \" << y << ' \\n ' ; } pause ( ) ; int n , b , p , x = 0 , y ; return 0; }"}}
{"translation": {"en": "read n , b , and p [ENDL] set b to 2 * b + 1 [ENDL] set y to n * p [ENDL] while n is greater than 1 [ENDL] create integer k = 1 [ENDL] while 2 * k is less than or equal to n , set k to k * 2 [ENDL] set x to x + b * k / 2 [ENDL] set n to n - k / 2 [ENDL] print x , \" \" , and y [ENDL] INF = const long long int with INF = ( 1LL bitshift left by 60 ) - 1", "c++": "cin >> n >> b >> p ; int main() { b = 2 * b + 1 ; y = n * p ; while ( n > 1 ) int k = 1 ; while ( 2 * k <= n ) k *= 2 ; x += b * k / 2 ; n -= k / 2 ; cout << x << \"   \" << y << ' \\n ' ; } const long long int INF = ( 1LL << 60 ) - 1 ; return 0; }"}}
{"translation": {"en": "MAX = const long long int with MAX = 2000001 [ENDL] in function fast_exp taking three long long ints base , exp and m and returning a long long int [ENDL] res = long long int with res = 1 [ENDL] loop while exp is greater than 0 [ENDL] if exp is uneven set res to ( res * base ) mod m [ENDL] set base to ( base * base ) mod m [ENDL] set exp to exp / 2 [ENDL] return res mod m [ENDL] n , b , p = int [ENDL] read n then b then p [ENDL] bottle , towel = int with bottle = 0 and towel = 0 [ENDL] set towel to p * n [ENDL] loop while n is greater than 1 [ENDL] k = int with k = 1 [ENDL] loop while k is less or equal to n set k to k * 2 [ENDL] set k to k / 2 [ENDL] set n to ( n - k ) + k / 2 [ENDL] increment bottle by ( k / 2 ) * ( 2 * b + 1 ) [ENDL] print bottle and towel [ENDL] n , m , p = int", "c++": "const long long int MAX = 2000001 ; long long int fast_exp ( long long int base , long long int exp , long long int m ) long long int res = 1 ; while ( exp > 0 ) if ( exp % 2 == 1 ) { res = ( res * base ) % m ; } base = ( base * base ) % m ; exp /= 2 ; return res % m ; } int n , b , p ; } int main() { cin >> n >> b >> p ; int bottle = 0 , towel = 0 ; towel = p * n ; while ( n > 1 ) int k = 1 ; while ( k <= n ) { k *= 2 ; } k /= 2 ; n = ( n - k ) + k / 2 ; bottle += ( k / 2 ) * ( 2 * b + 1 ) ; cout << bottle << \"   \" << towel << endl ; } int n , m , p ; return 0; }"}}
{"translation": {"en": "read n , m , p [ENDL] ans = 0 [ENDL] c = n [ENDL] while n is not 1 [ENDL] add n / 2 to ans [ENDL] subtract n / 2 from n [ENDL] print ans * ( m * 2 + 1 ) , space , c * p [ENDL] create const ints N = 1e6 + 5 , MAX = 3e7 and MOD = 1e9 + 7", "c++": "int main() { cin >> n >> m >> p ; int ans = 0 ; int c = n ; while ( n != 1 ) ans += n / 2 ; n -= n / 2 ; cout << ans * ( m * 2 + 1 ) << \"   \" << c * p << endl ; } const int N = 1e6 + 5 , MAX = 3e7 , MOD = 1e9 + 7 ; }"}}
{"translation": {"en": "declare ints n , p , b , x and y [ENDL] read n , p and b [ENDL] set y to b * n [ENDL] while n is not 0 [ENDL] if n / 2 is true [ENDL] increase x by ( n - n % 2 ) * p + n / 2 [ENDL] else [ENDL] break the loop [ENDL] assign n / 2 + n % 2 to n [ENDL] print x , \" \" , y and \" \\ n \" [ENDL] create integers m , b , p , total and total_p where total = 0", "c++": "int n , p , b , x , y ; cin >> n >> p >> b ; int main() { y = b * n ; while ( n ) if ( n / 2 ) x += ( ( n - n % 2 ) * p + n / 2 ) ; else break ; n = n / 2 + n % 2 ; cout << x << \"   \" << y << \" \\n \" ; } int m , b , p , total = 0 , total_p ; }"}}
{"translation": {"en": "read variables m , b and p from the input [ENDL] assign m * p to total_p [ENDL] start infinite loop [ENDL] declare integer variable k = [ ] ( int n ) - > int [ENDL] declare ints i = 1 and res = pow ( 2 , 0 ) [ENDL] looping infinitely [ENDL] declare new integer variable temp = 2 in the power of i [ENDL] if temp is greater than n , break [ENDL] set res to temp [ENDL] increment i by one [ENDL] return res [ENDL] ( m ) [ENDL] create integer variable with name matches and value = k / 2 [ENDL] change total to sum of total and matches * ( 2 * b ) [ENDL] increase total by matches [ENDL] assign ( k / 2 ) + ( m - k ) to m [ENDL] if matches = 0 , break the loop [ENDL] print total , \" \" and total_p [ENDL] n , agua , toalha = int with toalha = 0", "c++": "int main() { cin >> m >> b >> p ; total_p = m * p ; while ( 1 ) int k = [ ] ( int n ) -> int int i = 1 , res = pow ( 2 , 0 ) ; while ( 1 ) int temp = pow ( 2 , i ) ; if ( temp > n ) break ; res = temp ; i ++ ; return res ; } ( m ) ; int matches = k / 2 ; total += matches * ( 2 * b ) ; total += matches ; m = ( k / 2 ) + ( m - k ) ; if ( matches == 0 ) break ; cout << total << \"   \" << total_p << endl ; } int n , agua , toalha = 0 ; return 0; }"}}
{"translation": {"en": "read n then agua then toalha [ENDL] nrod , tagua , ttoalha = int with ttoalha = 0 [ENDL] set nrod to n - 1 [ENDL] set tagua to nrod + nrod * agua * 2 [ENDL] set ttoalha to toalha * n [ENDL] print tagua and ttoalha [ENDL] let n , b , p be integers", "c++": "int main() { cin >> n >> agua >> toalha ; int nrod , tagua , ttoalha = 0 ; nrod = n - 1 ; tagua = nrod + nrod * agua * 2 ; ttoalha = toalha * n ; cout << tagua << \"   \" << ttoalha << endl ; int n , b , p ; return 0; }"}}
{"translation": {"en": "read n , b , p [ENDL] let bottles , towels be integers with bottles = 0 , towels = n * p [ENDL] while n is greater than 1 [ENDL] let matches be a integer with matches = ( 1 < < ( int ) log2 ( n ) ) / 2 [ENDL] increment bottles by matches * ( 2 * b + 1 ) [ENDL] decrement n by matches [ENDL] print bottles and space and towels and newline [ENDL] create ints n , b , and p", "c++": "int main() { cin >> n >> b >> p ; int bottles = 0 , towels = n * p ; while ( n > 1 ) int matches = ( 1 << ( int ) log2 ( n ) ) / 2 ; bottles += matches * ( 2 * b + 1 ) ; n -= matches ; cout << bottles << \"   \" << towels << endl ; } int n , b , p ; return 0; }"}}
{"translation": {"en": "read n , b , and p [ENDL] set b to b * 2 + 1 [ENDL] create integer now = 1 [ENDL] while now is less than or equal to n , shift the bits of now one place to the left [ENDL] shift the bits of now one place to the right [ENDL] create int t = n [ENDL] let long long integer ans = 0 [ENDL] while t is greater than 1 [ENDL] set ans to ans + 1LL * now / 2 * b [ENDL] set t to t - now / 2 [ENDL] while now is truthy and now > t is true , shift the bits of now one place to the right [ENDL] print ans , \" \" , and n * p [ENDL] declare g taking in int n and returning integer", "c++": "cin >> n >> b >> p ; int main() { b = b * 2 + 1 ; int now = 1 ; while ( now <= n ) { now <<= 1 ; } now >>= 1 ; int t = n ; long long ans = 0 ; while ( t > 1 ) ans += 1LL * now / 2 * b ; t -= now / 2 ; while ( now && now > t ) { now >>= 1 ; } cout << ans << \"   \" << n * p << endl ; } int g ( int n ) return 0; }"}}
{"translation": {"en": "while _builtin_popcount ( n ) is greater than 1 , set n to n & ( n - 1 ) [ENDL] return n [ENDL] let ints n , b , p , r = 0 , and m [ENDL] read n , b , and p [ENDL] set m to n [ENDL] while n is greater than 1 [ENDL] create int x = g ( n ) [ENDL] set r to r + x * ( b ) [ENDL] set r to r + x / 2 [ENDL] set n to n - x / 2 [ENDL] print r , \" \" , and p * m [ENDL] create ints participants , bottles , and towels", "c++": "while ( __builtin_popcount ( n ) > 1 ) n = n & ( n - 1 ) ; return n ; int n , b , p , r = 0 , m ; } int main() { cin >> n >> b >> p ; m = n ; while ( n > 1 ) int x = g ( n ) ; r += x * ( b ) ; r += x / 2 ; n -= x / 2 ; cout << r << \"   \" << p * m << endl ; } int participants , bottles , towels ; return 0; }"}}
{"translation": {"en": "let ints total_b = 0 , total_t = 0 , and matches [ENDL] read participants , bottles , and towels [ENDL] set total_t to the result of participants * towels [ENDL] while participants is not 1 [ENDL] set matches to participants / 2 [ENDL] if participants modulo 2 is equal to 1 [ENDL] set total_ b to total_b + ( participants - 1 ) * bottles + matches [ENDL] set participants to participants / 2 + 1 [ENDL] otherwise do [ENDL] set total_b to total_b + participants * bottles + matches [ENDL] set participants to the result of participants / 2 [ENDL] print total_b , \" \" , and total_t [ENDL] create map m1 from long long ints to long long ints", "c++": "int main() { int total_b = 0 , total_t = 0 , matches ; cin >> participants >> bottles >> towels ; total_t = participants * towels ; while ( participants != 1 ) matches = participants / 2 ; if ( participants % 2 == 1 ) total_b += ( participants - 1 ) * bottles + matches ; participants = participants / 2 + 1 ; else total_b += participants * bottles + matches ; participants = participants / 2 ; cout << total_b << \"   \" << total_t << endl ; } } map < long long int , long long int > m1 ; return 0; }"}}
{"translation": {"en": "create map iterator itr from long long ints to long long ints [ENDL] create long long int n , b , and p [ENDL] read n , b , and p [ENDL] make long long int ans2 = n * p [ENDL] make long long int ans1 = 0 [ENDL] while n is greater than 1 [ENDL] let long long int i [ENDL] for i = 0 , loop indefinitely [ENDL] if pow ( 2 , i ) is greater than n , break loop [ENDL] decrease i [ENDL] create long long integer z = pow ( 2 , i ) [ENDL] set ans1 to ans1 + ( z / 2 ) * ( 2 * b + 1 ) [ENDL] set n to n - z / 2 [ENDL] print ans1 , \" \" , and ans2 [ENDL] N = int", "c++": "map < long long int , long long int > :: iterator itr ; long long int n , b , p ; int main() { cin >> n >> b >> p ; long long int ans2 = n * p ; long long int ans1 = 0 ; while ( n > 1 ) long long int i ; for ( i = 0 ; ; i ++ ) if ( pow ( 2 , i ) > n ) break ; i -- ; } long long int z = pow ( 2 , i ) ; ans1 += ( z / 2 ) * ( 2 * b + 1 ) ; n = n - z / 2 ; cout << ans1 << \"   \" << ans2 << endl ; } int N ; return 0; }"}}
{"translation": {"en": "A = int [ENDL] T = int [ENDL] values = two dimensional int array of sizes 1001 and 1001 [ENDL] pagamento = int array of size 1001 [ENDL] aguinha = int [ENDL] in function strlen taking char array of size 1001 t and returning int [ENDL] ret = int with ret = 0 [ENDL] loop while t [ ret ] is not ' \\ 0 ' increment ret [ENDL] return ret [ENDL] in function maxfunc taking int t1 , int t2 and returning int [ENDL] ret = int with ret = t1 [ENDL] if t2 > t1 set ret to t2 [ENDL] return ret [ENDL] in function minfunc taking int t1 , int t2 and returning int [ENDL] ret = int with ret = t1 [ENDL] if t2 < t1 set ret to t2 [ENDL] return ret [ENDL] in function epar taking int x and returning int [ENDL] ret = int with ret = 0 [ENDL] if x is even set ret to 1 [ENDL] return ret [ENDL] in function atoifunc taking char x and returning int [ENDL] return x - ' 0 ' [ENDL] result = int with result = = [ENDL] size = int [ENDL] set N to 0 [ENDL] N = int [ENDL] A = int [ENDL] T = int [ENDL] read N then A then T [ENDL] set aguinha to A * 2 + 1 [ENDL] njogos = int with njogos = 0 [ENDL] resta = int with resta = N [ENDL] loop while resta is not 1 [ENDL] increment njogos by resta / 2 [ENDL] if epar of resta [ENDL] set resta to resta / a [ENDL] else [ENDL] set resta to resta / 2 + 1 [ENDL] print njogos * aguinha and N * T [ENDL] n , b , p = int", "c++": "int A ; int T ; int values [ 1001 ] [ 1001 ] ; int pagamento [ 1001 ] ; int aguinha ; int strlen ( char t [ 1001 ] ) int ret = 0 ; while ( t [ ret ] != ' \\0 ' ) { ret ++ ; } return ret ; int maxfunc ( int t1 , int t2 ) } int ret = t1 ; if ( t2 > t1 ) { ret = t2 ; } return ret ; int minfunc ( int t1 , int t2 ) } int ret = t1 ; if ( t2 < t1 ) { ret = t2 ; } return ret ; int epar ( int x ) } int ret = 0 ; if ( ( x % 2 ) == 0 ) { ret = 1 ; } return ret ; int atoifunc ( char x ) } return x - ' 0 ' ; int result = 0 ; } int main() { int size ; N = 0 ; int N ; int A ; int T ; cin >> N >> A >> T ; aguinha = A * 2 + 1 ; int njogos = 0 ; int resta = N ; while ( resta != 1 ) njogos += resta / 2 ; if ( epar ( resta ) ) resta = ( resta / 2 ) ; else resta = ( resta / 2 ) + 1 ; cout << njogos * aguinha << '   ' << N * T << endl ; } } int n , b , p ; return 0; }"}}
{"translation": {"en": "read n then b then p [ENDL] fp = int with fp = n * p [ENDL] m = int with m = 0 [ENDL] loop while n > 1 [ENDL] po = int with po = floor of log2 of n [ENDL] compete = int with compete = pow of 2 , po [ENDL] diff = int with diff = n - pow of 2 , po [ENDL] increment m by compete / 2 [ENDL] set n to compete / 2 + diff [ENDL] fb = int with fb = m * 2 * b + m [ENDL] print fb and fp [ENDL] let n , b , p be integers", "c++": "int main() { cin >> n >> b >> p ; int fp = n * p ; int m = 0 ; while ( n > 1 ) int po = floor ( log2 ( n ) ) ; int compete = pow ( 2 , po ) ; int diff = n - pow ( 2 , po ) ; m += compete / 2 ; n = compete / 2 + diff ; int fb = m * 2 * b + m ; } cout << fb << \"   \" << fp << endl ; int n , b , p ; return 0; }"}}
{"translation": {"en": "read n , b , p [ENDL] let ats1 , ats2 be integers with ats1 = 0 , ats2 = p * n [ENDL] while n is not equal to 1 [ENDL] let k be a integer with k = 1 [ENDL] while 2 * k < = n , k is equal to k * 2 [ENDL] increment ats1 by k * b + k / 2 [ENDL] decrement n by k / 2 [ENDL] print ats1 and space and ats2 and newline [ENDL] create integer variables p , b , t and x", "c++": "int main() { cin >> n >> b >> p ; int ats1 = 0 , ats2 = p * n ; while ( n != 1 ) int k = 1 ; while ( 2 * k <= n ) k *= 2 ; ats1 += k * b + k / 2 ; n -= k / 2 ; cout << ats1 << \"   \" << ats2 << \" \\n \" ; } int p , b , t , x ; }"}}
{"translation": {"en": "read input to p , b and t [ENDL] create new integer match with value 0 [ENDL] change x to p [ENDL] while p ! = 1 [ENDL] change match to match + ( p / 2 ) [ENDL] set p to ( p / 2 ) + ( p % 2 ) [ENDL] print match + ( 2 * match * b ) , \" \" and x * t to the standard output [ENDL] n , p , b = integers", "c++": "int main() { cin >> p >> b >> t ; int match = 0 ; x = p ; while ( p != 1 ) match += ( p / 2 ) ; p = ( p / 2 ) + ( p % 2 ) ; cout << match + ( 2 * match * b ) << \"   \" << x * t << endl ; } int n , p , b ; }"}}
{"translation": {"en": "read n , p , b [ENDL] print ( n - 1 ) * p * 2 + ( n - 1 ) [ENDL] print b * n [ENDL] in the function solve", "c++": "int main() { cin >> n >> p >> b ; cout << ( n - 1 ) * p * 2 + ( n - 1 ) << \"   \" ; cout << b * n << endl ; void solve ( ) return 0; }"}}
{"translation": {"en": "n , b , p = integers [ENDL] read n , b , p [ENDL] br = integer with br = 0 [ENDL] tr = integer with tr = n * p ; [ENDL] while n > 1 [ENDL] x = integer with x = 1 [ENDL] while 2 * x < n , x = x * 2 [ENDL] br = br + x * ( 2 * b + 1 [ENDL] n = n - x [ENDL] print br , \" \" , tr [ENDL] call solve [ENDL] n , b , p , k , ptot , btot = int", "c++": "int n , b , p ; cin >> n >> b >> p ; int br = 0 ; int tr = n * p ; while ( n > 1 ) int x = 1 ; while ( 2 * x < n ) { x *= 2 ; } br += x * ( 2 * b + 1 ) ; n -= x ; cout << br << \"   \" << tr << endl ; } solve ( ) ; } int main() { int n , b , p , k , ptot , btot ; }"}}
{"translation": {"en": "read n then b then p [ENDL] set ptot to p * n [ENDL] set btot to 0 [ENDL] loop while n is greater than 1 [ENDL] set k to 1 bitshift left by ( floor of log2 of n ) as int [ENDL] decrement n by k / 2 [ENDL] increment btot by ( k * b ) + ( k / 2 ) [ENDL] print btot and ptot [ENDL] declare gcd with long longs a , b as arguments , returning long long", "c++": "int main() { cin >> n >> b >> p ; ptot = p * n ; btot = 0 ; while ( n > 1 ) k = 1 << ( ( int ) floor ( log2 ( n ) ) ) ; n = n - ( k / 2 ) ; btot += ( ( k * b ) + ( k / 2 ) ) ; cout << btot << \"   \" << ptot << \" \\n \" ; } long long gcd ( long long a , long long b ) return 0; }"}}
{"translation": {"en": "if b is 0 , return a from function [ENDL] return result of gcd ( b , a % b ) [ENDL] declare long long lcm with long longs a , b as arguments [ENDL] return a * b / gcd ( a , b ) from function [ENDL] declare long long f with long longs n , b as arguments [ENDL] if n is less than or equal to 1 , return 0 [ENDL] declare i as long long = 1 [ENDL] while i * 2 is less than or equal to n , let i be i * 2 [ENDL] return result of run f with ( n - i + i / 2 , b ) as arguments + i / 2 * ( 2 * b + 1 ) [ENDL] declare long longs n , b , p [ENDL] read n read b read p [ENDL] print result of run f ( n , b ) , print \" \" , n * p , newline [ENDL] n , b , p , m = int", "c++": "if ( b == 0 ) return a ; return gcd ( b , a % b ) ; long long lcm ( long long a , long long b ) } return a * b / gcd ( a , b ) ; long long f ( long long n , long long b ) } if ( n <= 1 ) return 0 ; long long i = 1 ; while ( i * 2 <= n ) i *= 2 ; return f ( n - i + i / 2 , b ) + i / 2 * ( 2 * b + 1 ) ; long long n , b , p ; } int main() { cin >> n >> b >> p ; cout << f ( n , b ) << \"   \" << n * p << endl ; int n , b , p , m ; }"}}
{"translation": {"en": "read n then b then p [ENDL] set p to p * n [ENDL] for m = 0 to n is greater or equal to 2 setting m to m + n / 2 and n to n / 2 + n mod 2 [ENDL] noop [ENDL] print ( b * 2 + 1 ) * m and p [ENDL] declare integer array p2 = { 1 , 2 , 4 , 8 , 16 , 32 , 64 , 128 , 256 }", "c++": "int main() { cin >> n >> b >> p ; p = p * n ; for ( m = 0 ; n >= 2 ; m = m + n / 2 , n = n / 2 + n % 2 ) ; cout << ( b * 2 + 1 ) * m << \"   \" << p << endl ; int p2 [ ] = { 1 , 2 , 4 , 8 , 16 , 32 , 64 , 128 , 256 } ; return 0; }"}}
{"translation": {"en": "declare integers n , b , p , k , m [ENDL] declare integer bn = 0 [ENDL] read n , b , p [ENDL] let m be n [ENDL] while m is greater than 1 [ENDL] for k = 8 to 0 inclusive , decrementing k [ENDL] if p2 [ k ] is less than or equal to m [ENDL] increment bn by p2 [ k ] / 2 + p2 [ k ] * b [ENDL] end loop [ENDL] let m be p2 [ k ] / 2 + ( m - p2 [ k ] ) [ENDL] print bn and \" \" and n * p and newline [ENDL] declare new integer water", "c++": "int n , b , p , k , m ; int main() { int bn = 0 ; cin >> n >> b >> p ; m = n ; while ( m > 1 ) for ( k = 8 ; k >= 0 ; k -- ) if ( p2 [ k ] <= m ) bn += p2 [ k ] / 2 + p2 [ k ] * b ; break ; m = p2 [ k ] / 2 + ( m - p2 [ k ] ) ; } } cout << bn << \"   \" << n * p << endl ; } int water ; return 0; }"}}
{"translation": {"en": "create integers s , n , b and p [ENDL] read from the input to n , b and p [ENDL] declare new integer called k = n [ENDL] set water to 0 [ENDL] while n is not 1 [ENDL] change s to n / 2 [ENDL] if n is even [ENDL] set n to n divided by 2 [ENDL] else [ENDL] change n to n / 2 + 1 [ENDL] change water to sum of water and s * ( 2 * b + 1 ) [ENDL] print water , \" \" and k * p to the standard output [ENDL] function read ( no args , return long long )", "c++": "int s , n , b , p ; cin >> n >> b >> p ; int main() { int k = n ; water = 0 ; while ( n != 1 ) s = n / 2 ; if ( n % 2 == 0 ) n /= 2 ; else n = n / 2 + 1 ; water += s * ( 2 * b + 1 ) ; } cout << water << \"   \" << k * p << endl ; } inline long long read ( ) }"}}
{"translation": {"en": "c = getchar ( ) [ENDL] while c is not ' - ' and ( c < ' 0 ' or c > ' 9 ' ) c = getchar ( ) [ENDL] k = 0 , kk = 1 [ENDL] if c is ' - ' c = getchar ( ) , kk = - 1 [ENDL] while c > = ' 0 ' and c < = ' 9 ' k = k * 10 + c - ' 0 ' , c = getchar ( ) [ENDL] return kk * k [ENDL] function write ( get long long x , return nothing ) [ENDL] if x < 0 x = - x , putchar ( ' - ' ) [ENDL] if x / 10 write ( w / 10 ) [ENDL] putchar ( x modulo 10 + ' 0 ' ) [ENDL] function writlne ( get long long x , return nothing ) [ENDL] write ( x ) [ENDL] puts ( \" \" ) [ENDL] n , b , p = long long [ENDL] n = read ( ) [ENDL] b = read ( ) [ENDL] p = read ( ) [ENDL] write ( ( b + b + 1 ) * ( n - 1 ) ) [ENDL] putchar ( ' ' ) [ENDL] writeln ( p * n ) [ENDL] in function solve that returns nothing", "c++": "char c = getchar ( ) ; while ( c != ' - ' && ( c < ' 0 ' || c > ' 9 ' ) ) c = getchar ( ) ; long long k = 0 , kk = 1 ; if ( c == ' - ' ) c = getchar ( ) , kk = - 1 ; while ( c >= ' 0 ' && c <= ' 9 ' ) k = k * 10 + c - ' 0 ' , c = getchar ( ) ; return kk * k ; void write ( long long x ) } if ( x < 0 ) x = - x , putchar ( ' - ' ) ; if ( x / 10 ) write ( x / 10 ) ; putchar ( x % 10 + ' 0 ' ) ; void writeln ( long long x ) } write ( x ) ; puts ( \"  \" ) ; long long n , b , p ; } n = read ( ) ; int main() { b = read ( ) ; p = read ( ) ; write ( ( b + b + 1 ) * ( n - 1 ) ) ; putchar ( '   ' ) ; writeln ( p * n ) ; void solve ( ) ; }"}}
{"translation": {"en": "in function speed_up that returns nothing [ENDL] call speed_up [ENDL] call solve [ENDL] in function solve that returns nothing [ENDL] n , b , p = long long [ENDL] read n , b , p [ENDL] y = long long = n * p [ENDL] sor = long long = 0 [ENDL] while n > 1 [ENDL] st = long long = 2 [ENDL] while st * 2 < = n , then st = st * 2 [ENDL] sor = sor + ( st / 2 ) * ( b * 2 + 1 ) [ENDL] n = n - st / 2 [ENDL] print sor y [ENDL] declare ints n , b and p", "c++": "void speed_up ( ) { } speed_up ( ) ; int main() { solve ( ) ; void solve ( ) return 0; } long long n , b , p ; cin >> n >> b >> p ; long long y = n * p ; long long sor = 0 ; while ( n > 1 ) long long st = 2 ; while ( st * 2 <= n ) st *= 2 ; sor += ( st / 2 ) * ( b * 2 + 1 ) ; n -= st / 2 ; cout << sor << \"   \" << y << \" \\n \" ; } int n , b , p ; }"}}
{"translation": {"en": "read variables n , b and p from the input [ENDL] create ints bowl = 0 and towl = n * p [ENDL] while n > 1 [ENDL] new integer k = pow ( 2 , ( log ( n ) / log ( 2 ) ) ) [ENDL] increase bowl by k / 2 * ( 2 * b + 1 ) [ENDL] change n to n - k / 2 [ENDL] print bowl , ' ' and towl to the standard output [ENDL] declare new integers n , agua and toalha with toalha = 0", "c++": "int main() { cin >> n >> b >> p ; int bowl = 0 , towl = n * p ; while ( n > 1 ) int k = pow ( 2 , ( int ) ( log ( n ) / log ( 2 ) ) ) ; bowl += k / 2 * ( 2 * b + 1 ) ; n -= k / 2 ; cout << bowl << '   ' << towl << endl ; } int n , agua , toalha = 0 ; return 0; }"}}
{"translation": {"en": "read user input to n , agua and toalha [ENDL] declare integers nrod , tagua and ttoalha with ttoalha = 0 [ENDL] assign n - 1 to nrod [ENDL] change tagua to nrod + nrod * agua * 2 [ENDL] assign toalha * n to ttoalha [ENDL] print tagua , \" \" and ttoalha [ENDL] n , b , p = int", "c++": "int main() { cin >> n >> agua >> toalha ; int nrod , tagua , ttoalha = 0 ; nrod = n - 1 ; tagua = nrod + nrod * agua * 2 ; ttoalha = toalha * n ; cout << tagua << \"   \" << ttoalha << endl ; int n , b , p ; return 0; }"}}
{"translation": {"en": "read n then b then p [ENDL] bottles = int with bottles = 0 [ENDL] towels = int with towels = n * p [ENDL] loop while n is greater than 1 [ENDL] k = int with k = 0 [ENDL] for i = 32 - 1 to 0 inclusive decrementing i [ENDL] if n bitwise - and ( 1 bitshift left by i ) is 1 [ENDL] set k to 1 bitshift left by i [ENDL] break [ENDL] set n to ( n - k ) + k / 2 [ENDL] increment bottles by b * k + k / 2 [ENDL] print bottles and towels [ENDL] let m , b , p , total , total_p be integers with total = 0", "c++": "int main() { cin >> n >> b >> p ; int bottles = 0 ; int towels = n * p ; while ( n > 1 ) int k = 0 ; for ( int i = 32 - 1 ; i >= 0 ; i -- ) if ( n & ( 1 << i ) ) k = ( 1 << i ) ; break ; n = ( n - k ) + k / 2 ; } } bottles += b * k + k / 2 ; cout << bottles << \"   \" << towels << \" \\n \" ; } int m , b , p , total = 0 , total_p ; }"}}
{"translation": {"en": "read m , b , p [ENDL] the value of total_p = m * p [ENDL] while 1 is an infinite loop since condition is always true [ENDL] le k be a integer with k = [ ] ( int n ) - > int [ENDL] let i , res be integers with i = 1 , res = 2 ^ 0 [ENDL] while 1 is an infinite loop since condition is always true [ENDL] let temp be a integer with temp = 2 ^ i [ENDL] if temp is greater than n , stop [ENDL] the value of res = temp [ENDL] increment i by 1 [ENDL] return the value of res [ENDL] m [ENDL] let matches be a integer with matches = k / 2 [ENDL] increment total by matches * ( 2 * b ) [ENDL] increment total by matches [ENDL] the value of m = ( k / 2 ) + ( m - k ) [ENDL] if matches is equal to 0 , stop [ENDL] print total and space and total_p and newline [ENDL] i , b , p , j , n , m , k = int", "c++": "int main() { cin >> m >> b >> p ; total_p = m * p ; while ( 1 ) int k = [ ] ( int n ) -> int int i = 1 , res = pow ( 2 , 0 ) ; while ( 1 ) int temp = pow ( 2 , i ) ; if ( temp > n ) break ; res = temp ; i ++ ; return res ; } ( m ) ; int matches = k / 2 ; total += matches * ( 2 * b ) ; total += matches ; m = ( k / 2 ) + ( m - k ) ; if ( matches == 0 ) break ; cout << total << \"   \" << total_p << endl ; } int i , b , p , j , n , m , k ; return 0; }"}}
{"translation": {"en": "read n , b , p [ENDL] print ( 2 * b + 1 ) * ( n - 1 ) and space and n * p [ENDL] declare new long longs n , b and p", "c++": "int main() { cin >> n >> b >> p ; cout << ( 2 * b + 1 ) * ( n - 1 ) << \"   \" << n * p << endl ; long long n , b , p ; }"}}
{"translation": {"en": "read variables n , b and p from the input [ENDL] B is a new long long = 0 [ENDL] declare new long long called T = n * p [ENDL] while n > 1 [ENDL] create long long variable with name now = 1 [ENDL] while now * 2 < = n [ENDL] change B to B + ( now / 2 ) * ( 2 * b + 1 ) [ENDL] set n to now / 2 + ( n - now ) [ENDL] print B , \" \" and T [ENDL] declare new integers N , B and P", "c++": "int main() { cin >> n >> b >> p ; long long B = 0 ; long long T = n * p ; while ( n > 1 ) long long now = 1 ; while ( now * 2 <= n ) now *= 2 ; B += ( now / 2 ) * ( 2 * b + 1 ) ; n = now / 2 + ( n - now ) ; cout << B << \"   \" << T << endl ; } int N , B , P ; return 0; }"}}
{"translation": {"en": "read from the input to N , B and P [ENDL] Ile is a new integer variable with value 0 [ENDL] create new integer variable Reczniki with value N * P [ENDL] while N > 1 [ENDL] declare integer variable Potega with value 1 [ENDL] while Potega * 2 < = N [ENDL] declare new integer IleMeczy = Potega / 2 [ENDL] add IleMeczy * 2 * B + IleMeczy to Ile [ENDL] change N to ( N - Potega ) + IleMeczy [ENDL] print Ile , \" \" , Reczniki and \" \\ n \" [ENDL] create int n , b , p", "c++": "int main() { cin >> N >> B >> P ; int Ile = 0 ; int Reczniki = N * P ; while ( N > 1 ) int Potega = 1 ; while ( Potega * 2 <= N ) { Potega *= 2 ; } int IleMeczy = Potega / 2 ; Ile += IleMeczy * 2 * B + IleMeczy ; N = ( N - Potega ) + IleMeczy ; cout << Ile << \"   \" << Reczniki << \" \\n \" ; } int n , b , p ; }"}}
{"translation": {"en": "read n , b , p [ENDL] print ( n - 1 ) * ( 2 * b + 1 ) , \" \" , n * p and a newline [ENDL] P = array of 9 int filled with 1 , 2 , 4 , 8 , 16 , 32 , 64 , 128 , 256", "c++": "int main() { cin >> n >> b >> p ; cout << ( n - 1 ) * ( 2 * b + 1 ) << \"   \" << n * p << \" \\n \" ; int P [ 9 ] = { 1 , 2 , 4 , 8 , 16 , 32 , 64 , 128 , 256 } ; return 0; }"}}
{"translation": {"en": "n , b , p = int [ENDL] read n , b , p [ENDL] B = 0 [ENDL] N = n [ENDL] while n > 1 [ENDL] k = int [ENDL] for i = 8 down to - 1 exclusive [ENDL] if P [ i ] < = n [ENDL] k = P [ i ] [ENDL] break [ENDL] add k * ( 2 * b + 1 ) / 2 to B [ENDL] subtract k / 2 from n [ENDL] print B , space , N * p [ENDL] declare fast with no arguments , returning void", "c++": "int main() { int n , b , p ; cin >> n >> b >> p ; int B = 0 ; int N = n ; while ( n > 1 ) int k ; for ( int i = 8 ; i > - 1 ; i -- ) if ( P [ i ] <= n ) k = P [ i ] ; break ; B += k * ( 2 * b + 1 ) / 2 ; } } n -= k / 2 ; cout << B << \"   \" << N * p << endl ; } void fast ( ) { } return 0; }"}}
{"translation": {"en": "declare mn = 1e9 as long long [ENDL] declare lucky with long longs a , c , integer b as arguments , returning void [ENDL] if a is greater than 1e11 , return from function [ENDL] if a is greater than or equal to b and c is 0 , let mn be minimum of mn and a [ENDL] run lucky with a * 10 + 7 , c - 1 , b as arguments [ENDL] run lucky with a * 10 + 4 , c + 1 , b as arguments [ENDL] declare integer n [ENDL] declare fff with string s , integer c as arguments , returning void [ENDL] if size of s is 2 * n [ENDL] if c is 0 , print s and newline [ENDL] return from function [ENDL] run fff with s + \" ( \" , c + 1 as arguments [ENDL] if c is greater than 0 , run fff with s + \" ) \" , c - 1 as arguments [ENDL] declare toint with string s as argument , returning long long [ENDL] declare a = 0 , c = 1 as long longs [ENDL] end statement [ENDL] for i = 0 to size of s exclusive [ENDL] increment a by ( s [ size of s - i - 1 ] - ' 0 ' ) * c [ENDL] let c be c * 10 [ENDL] return a from function [ENDL] run fast [ENDL] declare a , b = 0 , c = 0 , d = 1 , sum = 0 , x = 0 as long longs [ENDL] declare strings s , ss = \" \" [ENDL] read a , b , c [ENDL] let d be a [ENDL] while a is greater than 1 [ENDL] let x be a / 2 [ENDL] decrement a by x [ENDL] while decrement x is ture , increment sum by ( ( 2 * b ) + 1 ) [ENDL] print sum and \" \" and d * c and \" \\ n \" [ENDL] n , b , p = long long int", "c++": "long long mn = 1e9 ; void lucky ( long long a , long long c , int b ) if ( a > 1e11 ) return ; if ( a >= b && c == 0 ) mn = min ( mn , a ) ; lucky ( a * 10 + 7 , c - 1 , b ) ; lucky ( a * 10 + 4 , c + 1 , b ) ; int n ; } void fff ( string s , int c ) if ( s . size ( ) == 2 * n ) if ( c == 0 ) cout << s << endl ; return ; fff ( s + \" ( \" , c + 1 ) ; } if ( c > 0 ) fff ( s + \" ) \" , c - 1 ) ; long long toint ( string s ) } long long a = 0 , c = 1 ; ; for ( int i = 0 ; i < s . size ( ) ; i ++ ) a += ( s [ s . size ( ) - i - 1 ] - ' 0 ' ) * c ; c *= 10 ; return a ; } fast ( ) ; } int main() { long long a , b = 0 , c = 0 , d = 1 , sum = 0 , x = 0 ; string s , ss = \"  \" ; cin >> a >> b >> c ; d = a ; while ( a > 1 ) x = a / 2 ; a -= x ; while ( x -- ) sum += ( ( 2 * b ) + 1 ) ; cout << sum << \"   \" << d * c << \" \\n \" ; } long long int n , b , p ; return 0; }"}}
{"translation": {"en": "read n , b , p [ENDL] bByGame = long long integer with bByGame = b * 2 + 1 [ENDL] towels = long long integer with towels = p * n [ENDL] bottles = long long integer with bottles = 0 [ENDL] while n > 1 [ENDL] num = long long integer with num = log2 ( n ) [ENDL] bottles = bottles + num * bByGame [ENDL] n = n - num [ENDL] print bottles , \" \" , towels [ENDL] function min with int arguments a and b that returns integer", "c++": "cin >> n >> b >> p ; int main() { long long int bByGame = b * 2 + 1 ; long long int towels = p * n ; long long int bottles = 0 ; while ( n > 1 ) long long int num = log2 ( n ) ; bottles += num * bByGame ; n -= num ; cout << bottles << \"   \" << towels << endl ; } int min ( int a , int b ) return 0; }"}}
{"translation": {"en": "return a if a < b , or b otherwise [ENDL] max is an integer function with int arguments a and b [ENDL] return a if a > b , or b otherwise [ENDL] declare integer variables n , b , p and matches with the value of matches = 0 [ENDL] create integer variable with name x = 256 [ENDL] read n , b and p [ENDL] declare integer N with value n [ENDL] while n ! = 1 [ENDL] if x is greater than n [ENDL] change the value of x to x divided by 2 [ENDL] skip the rest of the loop [ENDL] subtract x / 2 from n [ENDL] add x / 2 to matches [ENDL] print matches * ( 1 + 2 * b ) , \" \" and N * p to the standard output [ENDL] n , b , p = long long", "c++": "return a < b ? a : b ; int max ( int a , int b ) } return a > b ? a : b ; int n , b , p , matches = 0 ; } int main() { int x = 256 ; cin >> n >> b >> p ; int N = n ; while ( n != 1 ) if ( x > n ) x /= 2 ; continue ; n -= x / 2 ; } matches += x / 2 ; cout << matches * ( 1 + 2 * b ) << \"   \" << N * p << endl ; } long long n , b , p ; }"}}
{"translation": {"en": "read n then b then p [ENDL] s1 , s2 = long long with s1 = 0LL and s2 = p * n [ENDL] loop while n > 1 [ENDL] k = long long with k = 1 [ENDL] loop while k < n set k to k * 2 [ENDL] if k > n set k to k / 2 [ENDL] increment s1 by ( k / 2 ) * ( 2 * b + 1 ) [ENDL] m = long long with m = n - k [ENDL] l = long long with l = k / 2 [ENDL] set n to l + m [ENDL] print s1 and s2 [ENDL] create new constant integer maxn with value 1e6 + 5", "c++": "int main() { cin >> n >> b >> p ; long long s1 = 0LL , s2 = p * n ; while ( n > 1 ) long long k = 1 ; while ( k < n ) k *= 2 ; if ( k > n ) k /= 2 ; s1 += ( k / 2 ) * ( 2 * b + 1 ) ; long long m = n - k ; long long l = k / 2 ; n = l + m ; cout << s1 << \"   \" << s2 << ' \\n ' ; } const int maxn = 1e6 + 5 ; return 0; }"}}
{"translation": {"en": "create constant integer variable mod = 1e9 + 7 [ENDL] create long long arrays fac and y with size maxn [ENDL] declare long long variables n and k [ENDL] long long function qpow with long long arguments a , b and c [ENDL] declare long long variable with name ans with value 1 [ENDL] change a to the remainder of a divided by c [ENDL] change b to b modulo c [ENDL] while b > 0 [ENDL] if b is even , set ans to ( ans * a ) modulo c [ENDL] change b to b / 2 [ENDL] change a to a squared modulo c [ENDL] return ans [ENDL] integer function pow_2 with integer argument m [ENDL] create new integer called res with value 1 [ENDL] declare new integer variable left = 1 [ENDL] looping infinitely [ENDL] if res < < left < = m and res < < ( left + 1 ) > m , return res [ENDL] increment left [ENDL] create ints n , b and p [ENDL] declare new integer called ans with value 0 [ENDL] read standard input to n , b and p [ENDL] declare integer tow with value n * p [ENDL] declare new integer called left with value 0 [ENDL] while n > 1 [ENDL] create integer k with value pow_2 of n [ENDL] set left to n - k [ENDL] add b * k + k / 2 to ans [ENDL] change n to k / 2 + left [ENDL] print ans , ' ' , tow and ' \\ n ' to standard output [ENDL] let participants , bottles , towels be integers", "c++": "const int mod = 1e9 + 7 ; long long fac [ maxn ] , y [ maxn ] ; long long n , k ; long long qpow ( long long a , long long b , long long c ) long long ans = 1 ; a %= c ; b %= c ; while ( b > 0 ) if ( b % 2 == 1 ) ans = ( ans * a ) % c ; b = b / 2 ; a = ( a * a ) % c ; return ans ; } int pow_2 ( int m ) } int res = 1 ; int left = 1 ; while ( true ) if ( res << left <= m && res << ( left + 1 ) > m ) return res << left ; left ++ ; int n , b , p ; } } int main() { int ans = 0 ; cin >> n >> b >> p ; int tow = n * p ; int left = 0 ; while ( n > 1 ) int k = pow_2 ( n ) ; left = n - k ; ans += b * k + k / 2 ; n = k / 2 + left ; cout << ans << '   ' << tow << ' \\n ' ; } int participants , bottles , towels ; return 0; }"}}
{"translation": {"en": "let total_b , total_t , matches be integers with total_b = 0 , total_t = 0 [ENDL] read participants , bottles , towels [ENDL] the value of total_t = participants * towels [ENDL] while participants is not equal to 1 [ENDL] the value of matches = participants / 2 [ENDL] if participants modulo 2 is equal to 1 [ENDL] total_b is equal to total_b + ( participants - 1 ) * bottles + matches [ENDL] the value of participants = participants / 2 + 1 [ENDL] else do the following [ENDL] total_b is equal to total_b + participants * bottles + matches [ENDL] the value of participants = participants / 2 [ENDL] print total_b and space and total_t and newline [ENDL] n , b , p = int", "c++": "int main() { int total_b = 0 , total_t = 0 , matches ; cin >> participants >> bottles >> towels ; total_t = participants * towels ; while ( participants != 1 ) matches = participants / 2 ; if ( participants % 2 == 1 ) total_b += ( participants - 1 ) * bottles + matches ; participants = participants / 2 + 1 ; else total_b += participants * bottles + matches ; participants = participants / 2 ; cout << total_b << \"   \" << total_t << endl ; } } int n , b , p ; return 0; }"}}
{"translation": {"en": "read n then b then p [ENDL] print ( n - 1 ) * ( b * 2 + 1 ) and p * n [ENDL] N , B , P = int", "c++": "int main() { cin >> n >> b >> p ; cout << ( n - 1 ) * ( b * 2 + 1 ) << \"   \" << p * n << ' \\n ' ; int N , B , P ; return 0; }"}}
{"translation": {"en": "qplays = int [ENDL] qplayers = int [ENDL] qoutplayers = int [ENDL] tplays = int [ENDL] tplayers = int [ENDL] in function calc taking int n [ENDL] k = int with k = 1 [ENDL] loop while k < n set k to k bithsift left by 1 [ENDL] if k > n set k to k bitshift right by 1 [ENDL] set qplays to k - 1 [ENDL] set qoutplayers to n - k [ENDL] set qplayers to 0 [ENDL] loop while k > = 1 [ENDL] increment qplayers by k [ENDL] set k to k bitshift right by 1 [ENDL] decrement qplayers [ENDL] read N then B then P [ENDL] set tplays to 0 [ENDL] set tplayers to 0 [ENDL] set qoutplayers to 0 [ENDL] n = int with n = N [ENDL] do [ENDL] call calc of n [ENDL] increment tplayers by qplayers [ENDL] increment tplays by qplays [ENDL] set n to 1 + qoutplayers [ENDL] while qoutplayers > 0 [ENDL] print ( ( tplayers * B ) + tplays ) and N * P [ENDL] n , b , p , x , ans = long long", "c++": "int qplays ; int qplayers ; int qoutplayers ; int tplays ; int tplayers ; void calc ( int n ) int k = 1 ; while ( k < n ) k <<= 1 ; if ( k > n ) k >>= 1 ; qplays = k - 1 ; qoutplayers = n - k ; qplayers = 0 ; while ( k >= 1 ) qplayers += k ; k >>= 1 ; -- qplayers ; } cin >> N >> B >> P ; } int main() { tplays = 0 ; tplayers = 0 ; qoutplayers = 0 ; int n = N ; do calc ( n ) ; tplayers += qplayers ; tplays += qplays ; n = 1 + qoutplayers ; while ( qoutplayers > 0 ) ; cout << ( ( tplayers * B ) + tplays ) << \"   \" << ( N * P ) << \" \\n \" ; long long n , b , p , x , ans ; return 0; }"}}
{"translation": {"en": "l = bool with l = true [ENDL] read n , b , p [ENDL] x = n [ENDL] while n > 1 [ENDL] ans = ans + ( n / 2 ) * ( b * 2 + 1 ) [ENDL] n = ceil ( n / 2 . 0 ) [ENDL] print ans , \" \" , x * p [ENDL] create integers n , m , p", "c++": "bool l = true ; cin >> n >> b >> p ; int main() { x = n ; while ( n > 1 ) ans += ( n / 2 ) * ( b * 2 + 1 ) ; n = ceil ( n / 2.0 ) ; cout << ans << \"   \" << x * p << endl ; } int n , m , p ; return 0; }"}}
{"translation": {"en": "get n , m , p [ENDL] create integer ans with ans = 0 [ENDL] create integer c with c = n [ENDL] while n not equal to 1 do the following [ENDL] add n / 2 to ans [ENDL] subtract n / 2 from n [ENDL] compute and print two expressions ans * ( m * 2 + 1 ) and c * p with a blank space between [ENDL] p2 = int array with the values 1 , 2 , 4 , 8 , 16 , 32 , 64 , 128 , 256", "c++": "int main() { cin >> n >> m >> p ; int ans = 0 ; int c = n ; while ( n != 1 ) ans += n / 2 ; n -= n / 2 ; cout << ans * ( m * 2 + 1 ) << \"   \" << c * p << endl ; } int p2 [ ] = { 1 , 2 , 4 , 8 , 16 , 32 , 64 , 128 , 256 } ; }"}}
{"translation": {"en": "n , b , p , k , m = int [ENDL] bn = int with bn = 0 [ENDL] read n then b then p [ENDL] set m to n [ENDL] loop while m is greater than 1 [ENDL] for k = 8 to 0 inclusive decrementing k [ENDL] if p2 [ k ] is less or equal to m [ENDL] increment bn by p2 [ k ] / 2 + p2 [ k ] * b [ENDL] break [ENDL] set m to p2 [ k ] / 2 + ( m - p2 [ k ] ) [ENDL] print bn and n * p [ENDL] n , p = int", "c++": "int n , b , p , k , m ; int main() { int bn = 0 ; cin >> n >> b >> p ; m = n ; while ( m > 1 ) for ( k = 8 ; k >= 0 ; k -- ) if ( p2 [ k ] <= m ) bn += p2 [ k ] / 2 + p2 [ k ] * b ; break ; m = p2 [ k ] / 2 + ( m - p2 [ k ] ) ; } } cout << bn << \"   \" << n * p << endl ; } int n , p ; return 0; }"}}
{"translation": {"en": "str = string array of size 45 [ENDL] sum , now = long long [ENDL] read n then p [ENDL] set sum and now to 0 [ENDL] for i = n - 1 to 0 inclusive decrementing i read str [ i ] [ENDL] for i = 0 to n - 1 inclusive [ENDL] if str [ i ] is \" half \" [ENDL] increment sum by now * p [ENDL] set now to now * 2 [ENDL] else [ENDL] increment sum by now * p + p / 2 [ENDL] set now to now * 2 + 1 [ENDL] print sum [ENDL] create long longs n , p", "c++": "int main() { string str [ 45 ] ; long long sum , now ; cin >> n >> p ; sum = 0 , now = 0 ; for ( int i = n - 1 ; i >= 0 ; i -- ) cin >> str [ i ] ; for ( int i = 0 ; i <= n - 1 ; i ++ ) if ( str [ i ] == \" half \" ) sum += now * p ; now = now * 2 ; else sum += now * p + p / 2 ; now = now * 2 + 1 ; cout << sum << endl ; } } long long n , p ; return 0; }"}}
{"translation": {"en": "read n read p [ENDL] create string array str with size n [ENDL] create long long i [ENDL] create long longs ans , fans with fans = 0 [ENDL] for i = 0 to n exclusive , read str [ i ] [ENDL] reverse sort elements from str to str + n [ENDL] if str [ 0 ] is \" half \" [ENDL] set ans to 2 [ENDL] else [ENDL] set ans to 1 [ENDL] increment fans by ans * p / 2 [ENDL] for i = 1 to n exclusive [ENDL] if str [ i ] is \" half \" [ENDL] set ans to ans * 2 [ENDL] else [ENDL] set ans to ans * 2 + 1 [ENDL] increment fans by ans * p / 2 [ENDL] print fans print newline [ENDL] declare solve", "c++": "int main() { cin >> n >> p ; string str [ n ] ; long long i ; long long ans , fans = 0 ; for ( i = 0 ; i < n ; i ++ ) cin >> str [ i ] ; reverse ( str , str + n ) ; if ( str [ 0 ] == \" half \" ) ans = 2 ; else ans = 1 ; fans += ans * p / 2 ; for ( i = 1 ; i < n ; i ++ ) if ( str [ i ] == \" half \" ) ans *= 2 ; else ans = ans * 2 + 1 ; fans += ans * p / 2 ; cout << fans << endl ; } void solve ( ) }"}}
{"translation": {"en": "create ints n and p [ENDL] read n and p [ENDL] let long double ans = 0 [ENDL] let int cnt = 0 [ENDL] create string vector v [ENDL] for i = 0 to n exclusive [ENDL] let string s [ENDL] read s [ENDL] append s to vector v [ENDL] reverse order of contents of vector v [ENDL] for i = 0 to n exclusive [ENDL] if v [ i ] is equal to \" halfplus \" [ENDL] set ans to ans + 0 . 5 [ENDL] set ans to ans * 2 [ENDL] increment cnt [ENDL] otherwise do : [ENDL] set ans to ans * 2 [ENDL] print the result of ( long long ) ( ans ) * p - cnt * ( p / 2 ) [ENDL] call solve ( ) [ENDL] str = string array of size 41", "c++": "int n , p ; cin >> n >> p ; long double ans = 0 ; int cnt = 0 ; vector < string > v ; for ( int i = 0 ; i < n ; i ++ ) string s ; cin >> s ; v . push_back ( s ) ; reverse ( v . begin ( ) , v . end ( ) ) ; } for ( int i = 0 ; i < n ; i ++ ) if ( v [ i ] == \" halfplus \" ) ans += 0.5 ; ans *= 2 ; cnt ++ ; else ans *= 2 ; cout << ( long long ) ( ans ) * p - cnt * ( p / 2 ) << endl ; } } solve ( ) ; } int main() { string str [ 41 ] ; return 0; }"}}
{"translation": {"en": "n , p , i , flag = int with flag = 0 [ENDL] a = long long with a = 0 [ENDL] read n then p [ENDL] for i = 1 to n inclusive read str [ i ] [ENDL] if str [ i - 1 ] is \" halfplus \" [ENDL] increment a by p / 2 [ENDL] increment flag [ENDL] for j = i - 2 to 0 decrementing j [ENDL] if str [ j ] is \" halfplus \" [ENDL] set a to a + ( a + flag * p / 2 + p / 2 ) [ENDL] increment flag [ENDL] if str [ j ] is \" half \" increment a by a + flag * p / 2 [ENDL] print a [ENDL] op = array of strings 444", "c++": "int main() { int n , p , i , flag = 0 ; long long a = 0 ; cin >> n >> p ; for ( i = 1 ; i <= n ; i ++ ) { cin >> str [ i ] ; } if ( str [ i - 1 ] == \" halfplus \" ) a += p / 2 ; flag ++ ; for ( int j = i - 2 ; j > 0 ; j -- ) } if ( str [ j ] == \" halfplus \" ) a = a + ( a + flag * p / 2 + p / 2 ) ; flag ++ ; if ( str [ j ] == \" half \" ) { a = a + ( a + flag * p / 2 ) ; } } cout << a << endl ; } string op [ 444 ] ; }"}}
{"translation": {"en": "let n , p be long integers [ENDL] read n and p [ENDL] the value of p = p / 2 [ENDL] for i = 1 to n inclusive , read op [ i ] [ENDL] let ans , send be long integers with ans = 0 , send = 0 [ENDL] for i is equal to n , i > = 1 , decrement i by 1 [ENDL] send = send * 2 [ENDL] if op [ i ] is equal to halfplus , increment send by 1 [ENDL] increment ans by send [ENDL] print ans * p and newline [ENDL] in the function GCD that takes integer a , b", "c++": "long long n , p ; int main() { cin >> n >> p ; p /= 2 ; for ( int i = 1 ; i <= n ; i ++ ) { cin >> op [ i ] ; } long long ans = 0 , send = 0 ; for ( int i = n ; i >= 1 ; i -- ) send *= 2 ; if ( op [ i ] == \" halfplus \" ) { send ++ ; } ans += send ; cout << ans * p << endl ; } int GCD ( int a , int b ) return 0; }"}}
{"translation": {"en": "if a < b , swap a and b [ENDL] a = a modulo b [ENDL] if a is 0 [ENDL] return b [ENDL] else [ENDL] return GCD of a and b [ENDL] INF = const integer with INF = 1000000000 [ENDL] INF64 = const long long with INF64 = 1e18 ; [ENDL] N = const integer with N = 2020 [ENDL] M = const integer with M = 2000 [ENDL] MOD = const integer with MOD = 1000000007 [ENDL] n , p = long long [ENDL] read n , p [ENDL] a = vector of integer with a = n [ENDL] for i = 0 to cast to int ( n ) [ENDL] s = string [ENDL] read s [ENDL] if s is half [ENDL] a [ i ] = 0 [ENDL] else [ENDL] a [ i ] = 1 [ENDL] k = long long with k = 0 [ENDL] half = long long with half = 0 [ENDL] for i = n - 1 down to 0 [ENDL] k = k * 2 + a [ i ] [ENDL] half = half + a [ i ] [ENDL] res = long long with res = k * p - half * ( p / 2 ) [ENDL] print res [ENDL] set maxn to 5005", "c++": "if ( a < b ) swap ( a , b ) ; a %= b ; if ( a == 0 ) return b ; else return GCD ( a , b ) ; const int INF = 1000000000 ; } const long long INF64 = 1e18 ; const int N = 2020 ; const int M = 2000 ; const int MOD = 1000000007 ; long long n , p ; int main() { cin >> n >> p ; vector < int > a ( n ) ; for ( int i = 0 ; i < int ( n ) ; i ++ ) string s ; cin >> s ; if ( s == \" half \" ) a [ i ] = 0 ; else a [ i ] = 1 ; long long k = 0 ; } long long half = 0 ; for ( int i = n - 1 ; i >= 0 ; i -- ) k = k * 2 + a [ i ] ; half += a [ i ] ; long long res = k * p - half * ( p / 2 ) ; } cout << res << endl ; const int maxn = 5005 ; }"}}
{"translation": {"en": "assign 0x3f3f3f3f to inf [ENDL] create int a and b [ENDL] read a , b [ENDL] create string s of size 50 [ENDL] for i = 1 to a inclusive , read s [ i ] [ENDL] set ans to b / 2 and num to 1 [ENDL] for i = a - 1 to 1 inclusive [ENDL] if s [ i ] = halfplus [ENDL] set ans to ans + ( num + 0 . 5 ) * b [ENDL] assign num * 2 + 1 to num [ENDL] else [ENDL] set ans to ans + bum * b [ENDL] num = num * 2 [ENDL] print ans [ENDL] create string array s with size 2525", "c++": "const int inf = 0x3f3f3f3f ; int a , b ; int main() { cin >> a >> b ; string s [ 50 ] ; for ( int i = 1 ; i <= a ; i ++ ) { cin >> s [ i ] ; } long long ans = b / 2 , num = 1 ; for ( int i = a - 1 ; i >= 1 ; i -- ) if ( s [ i ] == \" halfplus \" ) ans += ( num + 0.5 ) * b ; num = num * 2 + 1 ; else ans += num * b ; num *= 2 ; cout << ans << endl ; } } string s [ 2525 ] ; return 0; }"}}
{"translation": {"en": "create long longs n , p , m , l , with m = 0 , l = 0 [ENDL] read n read p [ENDL] for i = 1 to n inclusive , read s [ i ] [ENDL] for i = n to 1 inclusive , decrementing i [ENDL] set m to m * 2 [ENDL] if s [ i ] is \" halfplus \" increment m [ENDL] increment l by m [ENDL] print l * p / 2 print newline [ENDL] declare integers n , p and halfs where halfs = 0", "c++": "long long n , p , m = 0 , l = 0 ; int main() { cin >> n >> p ; for ( int i = 1 ; i <= n ; i ++ ) cin >> s [ i ] ; for ( int i = n ; i >= 1 ; i -- ) m *= 2 ; if ( s [ i ] == \" halfplus \" ) m ++ ; l += m ; cout << l * p / 2 << endl ; } int n , p , halfs = 0 ; return 0; }"}}
{"translation": {"en": "create long long current = 0 [ENDL] read n and p from the user input [ENDL] create new stack of strings s [ENDL] create string variable temp [ENDL] for i from 0 to n exclusive [ENDL] read standard input to temp [ENDL] push temp to the stack s [ENDL] if temp is equal to \" halfplus \" , increment halfs [ENDL] if top element of s is equal to \" halfplus \" [ENDL] assign 1 to current [ENDL] remove top element from s [ENDL] loop while s is not empty [ENDL] change the value of current to current multiplied by 2 [ENDL] if value of the top element of s is \" halfplus \" , increment current by one [ENDL] remove top element from s [ENDL] change current to current * p - ( 0 . 5 * p * halfs ) [ENDL] print current [ENDL] let ret an array of long longs of length 50", "c++": "int main() { long long current = 0 ; cin >> n >> p ; stack < string > s ; string temp ; for ( int i = 0 ; i < n ; i ++ ) cin >> temp ; s . push ( temp ) ; if ( temp == \" halfplus \" ) halfs ++ ; if ( s . top ( ) == \" halfplus \" ) } current = 1 ; s . pop ( ) ; while ( ! s . empty ( ) ) } current *= 2 ; if ( s . top ( ) == \" halfplus \" ) current ++ ; s . pop ( ) ; current = current * p - ( 0.5 * p * halfs ) ; } cout << current << endl ; long long ret [ 50 ] ; return 0; }"}}
{"translation": {"en": "let n , p ints [ENDL] read n and p [ENDL] let ans , temp be long longs with ans = 1 , tmp = 0 [ENDL] for i = 0 to n exclusive [ENDL] let s a string [ENDL] read s [ENDL] if s is half [ENDL] set ret [ i ] to 1 [ENDL] otherwise [ENDL] set ret [ i ] to 2 and increment tmp [ENDL] for i = n - 2 down to 0 inclusive [ENDL] if ret [ i ] is 1 [ENDL] multiply ans by 2 [ENDL] otherwise [ENDL] set ans to ans * 2 + 1 [ENDL] set ans to ans * p - tmp * ( p / 2 ) [ENDL] print ans [ENDL] create long long ints n , p , count = 0 , and y = 0", "c++": "int n , p ; int main() { cin >> n >> p ; long long ans = 1 , tmp = 0 ; for ( int i = 0 ; i < n ; i ++ ) string s ; cin >> s ; if ( s == \" half \" ) ret [ i ] = 1 ; else ret [ i ] = 2 , tmp ++ ; for ( int i = n - 2 ; i >= 0 ; i -- ) } if ( ret [ i ] == 1 ) ans = ans * 2 ; else ans = ans * 2 + 1 ; ans = ans * p - tmp * ( p / 2 ) ; } cout << ans << endl ; long long n , p , count = 0 , y = 0 ; return 0; }"}}
{"translation": {"en": "let string x [ENDL] read n and p [ENDL] make string vector a [ENDL] for i = 0 to n exclusive [ENDL] read x [ENDL] append x to vector a [ENDL] for i = n - 1 to 0 [ENDL] if a [ i ] is equal to \" halfplus \" [ENDL] set count to count * 2 + 1 [ENDL] increment y [ENDL] if a [ i ] is equal to \" half \" , set count to 2 * count [ENDL] let long long int ans = p * count - ( p * y ) / 2 [ENDL] print ans [ENDL] declare long longs p , he and shu", "c++": "int main() { string x ; cin >> n >> p ; vector < string > a ; for ( int i = 0 ; i < n ; i ++ ) cin >> x ; a . push_back ( x ) ; for ( int i = n - 1 ; i >= 0 ; i -- ) } if ( a [ i ] == \" halfplus \" ) count = count * 2 + 1 ; y ++ ; if ( a [ i ] == \" half \" ) { count = 2 * count ; } } long long ans = p * count - ( p * y ) / 2 ; } cout << ans << endl ; long long p , he , shu ; return 0; }"}}
{"translation": {"en": "declare integer n [ENDL] declare an array of strings s with 50 elements [ENDL] read input to n and p [ENDL] divide p by 2 [ENDL] for i = 1 to n inclusive , read s [ i ] [ENDL] for integer i = n to 1 inclusive counting down [ENDL] set shu to shu * 2 [ENDL] if s [ i ] ! = \" half \" , increase shu by 1 [ENDL] add shu to he [ENDL] print he * p [ENDL] set N to 1e6 + 5 , MAX to 3e7 and MOD = 1e9 + 7", "c++": "int n ; string s [ 50 ] ; cin >> n >> p ; int main() { p /= 2 ; for ( int i = 1 ; i <= n ; i ++ ) cin >> s [ i ] ; for ( int i = n ; i >= 1 ; i -- ) shu = shu * 2 ; if ( s [ i ] != \" half \" ) shu += 1 ; he += shu ; cout << he * p << endl ; } const int N = 1e6 + 5 , MAX = 3e7 , MOD = 1e9 + 7 ; return 0; }"}}
{"translation": {"en": "create int n and p [ENDL] create string a [ N ] [ENDL] let ans be ans ans [ENDL] read n and p [ENDL] for i = 0 to n exclusive , read a [ i ] [ENDL] curr = 0 [ENDL] for i = n - 1 to 0 inclusive [ENDL] if a [ i ] = half [ENDL] set ans to ans + curr * p [ENDL] assign curr * 2 to curr [ENDL] else [ENDL] assign ans + curr * p to ans [ENDL] set ans to ans + p / 2 [ENDL] set curr = curr * 2 [ENDL] increment curr [ENDL] print ans and a newline [ENDL] let n and p be long long integers", "c++": "int n , p ; string a [ N ] ; long long ans ; cin >> n >> p ; int main() { for ( int i = 0 ; i < n ; i ++ ) cin >> a [ i ] ; long long curr = 0 ; for ( int i = n - 1 ; i >= 0 ; i -- ) if ( a [ i ] == \" half \" ) ans += curr * p ; curr *= 2 ; else ans += curr * p ; ans += p / 2 ; curr *= 2 ; curr ++ ; cout << ans << \" \\n \" ; } } long long int n , p ; }"}}
{"translation": {"en": "read n and p [ENDL] let cost be a long long in with value 0 [ENDL] arr with n elements = string [ENDL] read i long long elements into arr from 0 to n exclusive [ENDL] let num = long long int with value 0 [ENDL] for i from n - 1 to 0 inclusive decreasing [ENDL] if arr at element i equals halfplus [ENDL] num equals num times 2 plus 1 [ENDL] else [ENDL] num equals itself times 2 [ENDL] for i from 0 to n exclusive [ENDL] if arr at i equals halfplus [ENDL] cost equals cost plus ( num / 2 ) * p + ( p / 2 ) [ENDL] num equals num minus half of num minus 1 [ENDL] else [ENDL] cost equals cost plus ( num / 2 ) * p [ENDL] num equals num minus half of num [ENDL] print cost [ENDL] create constant long long mod with mod = 1e9 + 7", "c++": "int main() { cin >> n >> p ; long long int cost = 0 ; string arr [ n ] ; for ( long long int i = 0 ; i < n ; i ++ ) { cin >> arr [ i ] ; } long long int num = 0 ; for ( long long int i = n - 1 ; i >= 0 ; i -- ) if ( arr [ i ] == \" halfplus \" ) num = ( num * 2 ) + 1 ; else num = ( num * 2 ) ; for ( long long int i = 0 ; i < n ; i ++ ) } if ( arr [ i ] == \" halfplus \" ) cost += ( num / 2 ) * p + ( p / 2 ) ; num = num - ( num / 2 ) - 1 ; else cost += ( num / 2 ) * p ; num = num - ( num / 2 ) ; cout << cost << endl ; } } const long long mod = 1e9 + 7 ; }"}}
{"translation": {"en": "create constant double esp with esp = 1e - 5 [ENDL] create long longs n , p [ENDL] create string array a with size 50 [ENDL] while read n read p is true [ENDL] for i = 1 to n inclusive , read a [ i ] [ENDL] create long longs num , t , with num = 1 , t = 1 [ENDL] for i = n - 1 to 1 inclusive , decrementing i [ENDL] if a [ i ] is \" halfplus \" [ENDL] set num to ( num + 0 . 5 ) * 2 [ENDL] increment t [ENDL] else [ENDL] set num to num * 2 [ENDL] create long long ans with ans = 0 [ENDL] set ans to num * p - t * ( p / 2 ) [ENDL] print ans print newline [ENDL] create string array s with size 41", "c++": "const double esp = 1e-5 ; long long n , p ; int main() { string a [ 50 ] ; while ( cin >> n >> p ) for ( long long i = 1 ; i <= n ; i ++ ) cin >> a [ i ] ; long long num = 1 , t = 1 ; for ( int i = n - 1 ; i >= 1 ; i -- ) if ( a [ i ] == \" halfplus \" ) num = ( num + 0.5 ) * 2 ; t ++ ; else num = num * 2 ; long long ans = 0 ; } } ans = num * p - t * ( p / 2 ) ; cout << ans << endl ; string s [ 41 ] ; } }"}}
{"translation": {"en": "create long longs n , p , sum [ENDL] create double curr [ENDL] read n read p [ENDL] for i = 0 to n exclusive , read s [ i ] [ENDL] for i = n - 1 to 0 inclusive , decrementing i [ENDL] if s [ i ] is \" halfplus \" , increment curr by 0 . 5 [ENDL] increment sum by curr * p [ENDL] set curr to curr * 2 [ENDL] print sum print newline [ENDL] declare constant int N = 1e6", "c++": "long long n , p , sum ; double curr ; cin >> n >> p ; int main() { for ( int i = 0 ; i < n ; i ++ ) cin >> s [ i ] ; for ( int i = n - 1 ; i >= 0 ; i -- ) if ( s [ i ] == \" halfplus \" ) curr += 0.5 ; sum += curr * p ; curr *= 2 ; cout << sum << endl ; } const int N = 1e6 ; return 0; }"}}
{"translation": {"en": "create integer array aa with size N + 2 [ENDL] declare integers n and p [ENDL] read n and p [ENDL] for i from 1 to n inclusive [ENDL] declare string s [ENDL] read input to s [ENDL] if s is equal to \" half \" [ENDL] set aa [ i ] to 0 [ENDL] else [ENDL] set aa [ i ] to 1 [ENDL] declare long longs app and ans where ans = 0 [ENDL] for integer i = n to 1 inclusive decrementing i [ENDL] if i = n [ENDL] set app to 1 [ENDL] else [ENDL] set app to app * 2 + aa [ i ] [ENDL] add ( ( app / 2 ) * 1LL ) * p to ans [ENDL] if app is odd , increase ans by p / 2 [ENDL] print ans [ENDL] create ints n and p", "c++": "int aa [ N + 2 ] ; int n , p ; int main() { cin >> n >> p ; for ( int i = 1 ; i <= n ; i ++ ) string s ; cin >> s ; if ( s == \" half \" ) aa [ i ] = 0 ; else aa [ i ] = 1 ; long long app , ans = 0 ; } for ( int i = n ; i >= 1 ; i -- ) if ( i == n ) app = 1 ; else app = app * 2 + aa [ i ] ; ans += ( ( app / 2 ) * 1LL ) * p ; if ( app % 2 ) ans += ( p / 2 ) ; cout << ans << endl ; } int n , p ; return 0; }"}}
{"translation": {"en": "read n [ENDL] read p [ENDL] create long double apples = 0 [ENDL] let long long answer = 0 [ENDL] create string vector data [ENDL] for i = 0 to n exclusive [ENDL] create string temp [ENDL] read temp [ENDL] append temp to data [ENDL] for i = n - 1 to 0 [ENDL] if data [ i ] is equal to \" halfplus \" [ENDL] set apples to apples + 0 . 5 [ENDL] set apples to apples * 2 [ENDL] set answer to answer + ( apples / 2 . 0 ) * p [ENDL] else [ENDL] set apples to apples * 2 [ENDL] set answer to answer + ( apples / 2 . 0 ) * p [ENDL] print answer [ENDL] read n [ENDL] declare string array op size 444", "c++": "int main() { cin >> n ; cin >> p ; long double apples = 0 ; long long answer = 0 ; vector < string > data ; for ( int i = 0 ; i < n ; i ++ ) string temp ; cin >> temp ; data . push_back ( temp ) ; for ( int i = n - 1 ; i >= 0 ; i -- ) } if ( data [ i ] == \" halfplus \" ) apples += 0.5 ; apples *= 2 ; answer += ( apples / 2.0 ) * p ; else apples *= 2 ; answer += ( apples / 2.0 ) * p ; cout << answer << endl ; } } cin >> n ; string op [ 444 ] ; }"}}
{"translation": {"en": "declare long longs n , p [ENDL] read n , p [ENDL] let p be p / 2 [ENDL] for i = 1 to n inclusive , read op [ i ] [ENDL] declare long longs ans = 0 , send = 0 [ENDL] for i = n to 1 inclusive , decrementing i [ENDL] let send be send * 2 [ENDL] if op [ i ] is \" halfplus \" , increment send [ENDL] increment ans by send [ENDL] print ans * p , newline [ENDL] create long longs n , p , k with k = 0", "c++": "long long n , p ; int main() { cin >> n >> p ; p /= 2 ; for ( int i = 1 ; i <= n ; i ++ ) { cin >> op [ i ] ; } long long ans = 0 , send = 0 ; for ( int i = n ; i >= 1 ; i -- ) send *= 2 ; if ( op [ i ] == \" halfplus \" ) { send ++ ; } ans += send ; cout << ans * p << endl ; } long long n , p , k = 0 ; return 0; }"}}
{"translation": {"en": "read n read p [ENDL] create boolean vector a initialized with n [ENDL] for i = 0 to n exclusive [ENDL] create string t [ENDL] read t [ENDL] set a [ i ] to length of t is greater than 4 [ENDL] increment k by a [ i ] [ENDL] create double ans with ans = 0 [ENDL] create long long sum with sum = 0 [ENDL] reverse sort elements from beginning of a to end of a [ENDL] for i = 0 to n exclusive [ENDL] if a [ i ] is true [ENDL] set ans to ans * 2 + 0 . 5 [ENDL] increment sum by ans * p [ENDL] else [ENDL] set ans to ans * 2 [ENDL] increment sum by ans * p [ENDL] print sum print newline [ENDL] N = int", "c++": "cin >> n >> p ; int main() { vector < bool > a ( n ) ; for ( int i = 0 ; i < n ; ++ i ) string t ; cin >> t ; a [ i ] = t . length ( ) > 4 ; k += a [ i ] ; double ans = 0 ; } long long sum = 0 ; reverse ( a . begin ( ) , a . end ( ) ) ; for ( int i = 0 ; i < n ; ++ i ) if ( a [ i ] ) ans = ans * 2 + 0.5 ; sum += ans * p ; else ans *= 2 ; sum += ans * p ; cout << sum << endl ; } } int N ; return 0; }"}}
{"translation": {"en": "P = long long [ENDL] S = array of 2000010 string [ENDL] read N , P [ENDL] for i = 1 to N inclusive read S [ i ] [ENDL] fans = 0 [ENDL] for i = N down to 1 inclusive [ENDL] if S [ i ] is \" halfplus \" [ENDL] add 0 . 5 to fans [ENDL] multiply fans by 2 [ENDL] else [ENDL] multiply fans by 2 [ENDL] cost = 0 [ENDL] for i = 1 to N inclusive [ENDL] add ( fans / 2 ) * P to cost [ENDL] if S [ i ] is \" half \" [ENDL] divide fans by 2 [ENDL] else [ENDL] divide fans by 2 [ENDL] subtract 0 . 5 from fans [ENDL] print cost with 0 decimal digits [ENDL] c array of size 500005 ] , s , bit array size of 100 , origin array size of 100 = long long integers", "c++": "long long P ; string S [ 2000010 ] ; cin >> N >> P ; int main() { for ( int i = 1 ; i <= N ; i ++ ) { cin >> S [ i ] ; } long double fans = 0 ; for ( int i = N ; i >= 1 ; i -- ) if ( S [ i ] == \" halfplus \" ) fans += 0.5 ; fans *= 2.00000000 ; else fans *= 2.00000000 ; long double cost = 0 ; } } for ( int i = 1 ; i <= N ; i ++ ) cost += ( fans / 2.00000 ) * ( P ) ; if ( S [ i ] == \" half \" ) fans /= 2.000 ; else fans /= 2.000 ; fans -= 0.500 ; cout << fixed << setprecision ( 0 ) << cost << endl ; } } long long c [ 500005 ] , s , bit [ 100 ] , origin [ 100 ] ; return 0; }"}}
{"translation": {"en": "integers = n [ENDL] read n [ENDL] for i = 0 to less than n do the following [ENDL] ong a , b = long long integers [ENDL] read a , b [ENDL] set s ^ = a , c [ i ] to a ^ b [ENDL] set integer cnt to 0 [ENDL] for i = 0 to less than n do the following [ENDL] for j = 0 to less than cnt do the following [ENDL] if c [ i ] & bit [ j ] is true [ENDL] set if ( c [ i ] ) is true then origin [ cnt ] equals c [ i ] , bit [ cnt ] equals c [ i ] and - c [ i ] , and add 1 to cnt [ENDL] for j = 0 to less than cnt do the following [ENDL] if s & bit [ j ] is true [ENDL] if s is true [ENDL] output 1 / 1 [ENDL] else [ENDL] output ( 1ll , cnt ) - 1 , / , ( 1ll < < cnt ) [ENDL] create integer n", "c++": "int n ; int main() { cin >> n ; for ( int i = 0 ; i < n ; ++ i ) long long a , b ; cin >> a >> b ; s ^= a , c [ i ] = a ^ b ; int cnt = 0 ; } for ( int i = 0 ; i < n ; ++ i ) for ( int j = 0 ; j < cnt ; ++ j ) if ( c [ i ] & bit [ j ] ) c [ i ] ^= origin [ j ] ; if ( c [ i ] ) origin [ cnt ] = c [ i ] , bit [ cnt ] = c [ i ] & - c [ i ] , ++ cnt ; for ( int j = 0 ; j < cnt ; ++ j ) } if ( s & bit [ j ] ) s ^= origin [ j ] ; if ( s ) cout << \" 1/1 \" << endl ; else cout << ( 1ll << cnt ) - 1 << ' / ' << ( 1ll << cnt ) << endl ; int n ; return 0; }"}}
{"translation": {"en": "create vector of integers T with 1001 element filled with 1 [ENDL] create vector of chararcters rla [ENDL] read n [ENDL] for i = 0 to n - 1 exclusive [ENDL] create character c [ENDL] read c [ENDL] push c to rla [ENDL] for integer i = 0 to n - 1 exclusive [ENDL] if rla [ i ] is ' R ' [ENDL] T [ i + 1 ] = max ( T [ i + 1 ] , T [ i ] + 1 ) [ENDL] else if rla [ i ] is ' = ' [ENDL] T [ i + 1 ] = T [ i ] [ENDL] for i = n - 2 to 0 [ENDL] if rla [ i ] is ' L ' [ENDL] assign value of max of T [ i ] and T [ i + 1 ] + 1 to T [ i ] [ENDL] else if rla [ i ] is ' = ' [ENDL] set T [ i ] to T [ i + 1 ] [ENDL] for i = 0 to n exclusive print T [ i ] , \" \\ n \" and [ i = = n - 1 ] [ENDL] print flush [ENDL] vector_in is a int vector function with int argument n", "c++": "int main() { vector < int > T ( 1001 , 1 ) ; vector < char > rla ; cin >> n ; for ( int i = 0 ; i < n - 1 ; i ++ ) char c ; cin >> c ; rla . push_back ( c ) ; for ( int i = 0 ; i < n - 1 ; i ++ ) } if ( rla [ i ] == ' R ' ) T [ i + 1 ] = max ( T [ i + 1 ] , T [ i ] + 1 ) ; else if ( rla [ i ] == ' = ' ) T [ i + 1 ] = T [ i ] ; for ( int i = n - 2 ; i >= 0 ; i -- ) } } if ( rla [ i ] == ' L ' ) T [ i ] = max ( T [ i ] , T [ i + 1 ] + 1 ) ; else if ( rla [ i ] == ' = ' ) T [ i ] = T [ i + 1 ] ; for ( int i = 0 ; i < n ; i ++ ) { cout << T [ i ] << \"  \\n \" [ i == n - 1 ] ; } } } cout << flush ; vector < int > vector_in ( int n ) return 0; }"}}
{"translation": {"en": "create vector of integers v with n elements [ENDL] loop i from 0 to n exclusive , reading v [ i ] [ENDL] return v [ENDL] function vector_out with vector of ints argument v [ENDL] for i from 0 to length of v exclusive , print v [ i ] and \" \" [ENDL] print new line [ENDL] function vector_sum with vector of ints argument v that returns integer [ENDL] create integer sum [ENDL] for i = 0 to length of v exclusive , increase sum by v [ i ] [ENDL] return sum [ENDL] declare int n [ENDL] create vector of integers T with 1001 element filled with 1 [ENDL] create characters vector rla [ENDL] read input to n [ENDL] loop i from 0 to n - 1 exclusive [ENDL] declare character variable c [ENDL] read c [ENDL] push c into rla [ENDL] for i from 0 to n - 1 exclusive [ENDL] if rla [ i ] = ' R ' [ENDL] set T [ i + 1 ] to max of T [ i + 1 ] and T [ i ] + 1 [ENDL] else if rla [ i ] is ' = ' [ENDL] change T [ i + 1 ] to T [ i ] [ENDL] for integer i = n - 2 to 0 inclusive counting down [ENDL] if rla [ i ] is equal to ' L ' [ENDL] assign max of T [ i ] and T [ i + 1 ] + 1 to T [ i ] [ENDL] else if rla [ i ] is ' = ' [ENDL] set T [ i ] to T [ i + 1 ] [ENDL] for i from 0 to n exclusive , print T [ i ] and \" \\ n \" [ i = n - 1 ] [ENDL] print flush [ENDL] n = long long integers", "c++": "vector < int > v ( n ) ; for ( int i = 0 ; i < n ; i ++ ) cin >> v [ i ] ; return v ; void vector_out ( vector < int > v ) } for ( int i = 0 ; i < v . size ( ) ; i ++ ) cout << v [ i ] << \"   \" ; cout << endl ; int vector_sum ( vector < int > v ) } int sum ; for ( int i = 0 ; i < v . size ( ) ; i ++ ) sum += v [ i ] ; return sum ; int n ; } int main() { vector < int > T ( 1001 , 1 ) ; vector < char > rla ; cin >> n ; for ( int i = 0 ; i < n - 1 ; i ++ ) char c ; cin >> c ; rla . push_back ( c ) ; for ( int i = 0 ; i < n - 1 ; i ++ ) } if ( rla [ i ] == ' R ' ) T [ i + 1 ] = max ( T [ i + 1 ] , T [ i ] + 1 ) ; else if ( rla [ i ] == ' = ' ) T [ i + 1 ] = T [ i ] ; for ( int i = n - 2 ; i >= 0 ; i -- ) } } if ( rla [ i ] == ' L ' ) T [ i ] = max ( T [ i ] , T [ i + 1 ] + 1 ) ; else if ( rla [ i ] == ' = ' ) T [ i ] = T [ i + 1 ] ; for ( int i = 0 ; i < n ; i ++ ) { cout << T [ i ] << \"  \\n \" [ i == n - 1 ] ; } } } cout << flush ; long long int n ; return 0; }"}}
{"translation": {"en": "integers = answer array with size of 2000 [ENDL] read n [ENDL] set integer small to 1 [ENDL] create character variable s [ENDL] read n values into array s [ENDL] make n values of array answer = 1 [ENDL] for i = n - 2 to greater than or equal to 0 then do [ENDL] if s [ i ] is L then do the following [ENDL] set answer [ i ] to answer [ i + 1 ] + 1 [ENDL] else if s [ i ] is = then do the following [ENDL] set answer [ i ] to answer [ i + 1 ] [ENDL] for i = 0 to less than n - 1 do the following [ENDL] if s [ i ] = R and answer [ i ] is greater than or equal to answer [ i + 1 ] then do the following [ENDL] set answer [ i + 1 ] to answer [ i ] + 1 [ENDL] else if s [ i ] is = then do the following [ENDL] set answer [ i + 1 ] to answer [ i ] [ENDL] output n values from array answer [ENDL] mod = const long long with mod = 1000000007", "c++": "int answer [ 2000 ] ; cin >> n ; int main() { int small = 1 ; char s [ n ] ; for ( int i = 0 ; i < n - 1 ; i ++ ) cin >> s [ i ] ; for ( int i = 0 ; i < n ; i ++ ) answer [ i ] = 1 ; for ( int i = n - 2 ; i >= 0 ; i -- ) if ( s [ i ] == ' L ' ) answer [ i ] = answer [ i + 1 ] + 1 ; else if ( s [ i ] == ' = ' ) answer [ i ] = answer [ i + 1 ] ; for ( int i = 0 ; i < n - 1 ; i ++ ) } if ( s [ i ] == ' R ' && answer [ i ] >= answer [ i + 1 ] ) answer [ i + 1 ] = answer [ i ] + 1 ; else if ( s [ i ] == ' = ' ) answer [ i + 1 ] = answer [ i ] ; for ( int i = 0 ; i < n ; i ++ ) cout << answer [ i ] << \"  \\n \" [ i == n - 1 ] ; } long long const mod = 1000000007 ; }"}}
{"translation": {"en": "in function powmod taking two long longs a and b and returning a long long [ENDL] res = long long with res = 1 [ENDL] set a to a mod mod [ENDL] call assert on b is greater or equal to 0 [ENDL] loop while b is not 0 setting b to b bitwise rightshift 1 each time [ENDL] if b bitwise and 1 is 1 then set re to res * a modulo mod [ENDL] set a to a * a modulo mod [ENDL] return res [ENDL] in = ifstream of \" txt . in \" [ENDL] out = ofstream of \" txt . out \" [ENDL] call fixed and setprecision of 12 on cout [ENDL] a , b = long long [ENDL] read a then b [ENDL] n = long long [ENDL] read n [ENDL] mx = double with mx = 2e9 [ENDL] for i = 1 to n inclusive [ENDL] x , y , k = long long [ENDL] read x then y then k [ENDL] dis = double with dis = result of sqrt of ( x - a ) * ( x - a ) + ( y - b ) * ( y - b ) / k [ENDL] mx = min of mx and dis [ENDL] print mx [ENDL] create integers n and i and an arrays of integers a and b with size 100000", "c++": "long long powmod ( long long a , long long b ) long long res = 1 ; a %= mod ; assert ( b >= 0 ) ; for ( ; b ; b >>= 1 ) if ( b & 1 ) res = res * a % mod ; a = a * a % mod ; return res ; } ifstream in ( \" txt.in \" ) ; } ofstream out ( \" txt.out \" ) ; cout << fixed << setprecision ( 12 ) ; int main() { long long a , b ; cin >> a >> b ; long long n ; cin >> n ; double mx = 2e9 ; for ( int i = 1 ; i <= n ; ++ i ) long long x , y , k ; cin >> x >> y >> k ; double dis = sqrt ( ( x - a ) * ( x - a ) + ( y - b ) * ( y - b ) ) / k ; mx = min ( mx , dis ) ; cout << mx << ' \\n ' ; } int n , i , a [ 100000 ] , b [ 100000 ] ; return 0; }"}}
{"translation": {"en": "read n [ENDL] read n elements into a [ENDL] for i = 0 to n - 1 exclusive , set value of b [ i ] to a [ i ] + a [ i + 1 ] [ENDL] set value of b [ n - 1 ] to a [ n - 1 ] [ENDL] for i = 0 to n - 1 exclusive print b [ i ] and \" \" [ENDL] print b [ n - 1 ] [ENDL] declare integers n , z and a", "c++": "int main() { cin >> n ; for ( i = 0 ; i < n ; i ++ ) { cin >> a [ i ] ; } for ( i = 0 ; i < n - 1 ; i ++ ) { b [ i ] = a [ i ] + a [ i + 1 ] ; } b [ n - 1 ] = a [ n - 1 ] ; for ( i = 0 ; i < n - 1 ; i ++ ) { cout << b [ i ] << \"   \" ; } cout << b [ n - 1 ] << endl ; int n , z , a ; return 0; }"}}
{"translation": {"en": "read n [ENDL] for integer i = 1 to n inclusive [ENDL] read a [ENDL] if i ! = 1 , print a + z and \" \" [ENDL] set z to a [ENDL] print a [ENDL] declare integer variable n", "c++": "cin >> n ; int main() { for ( int i = 1 ; i <= n ; i ++ ) cin >> a ; if ( i != 1 ) { cout << a + z << \"   \" ; } z = a ; cout << a << endl ; } int n ; return 0; }"}}
{"translation": {"en": "read n [ENDL] create long long array a with 100050 elements [ENDL] for integer i = 0 to n exclusive , read a [ i ] [ENDL] for integer i = 1 to n exclusive , print a [ i ] + a [ i - 1 ] and \" \" [ENDL] print a [ n - 1 ] [ENDL] create long long integers n , i", "c++": "int main() { cin >> n ; long long a [ 100050 ] ; for ( int i = 0 ; i < n ; i ++ ) cin >> a [ i ] ; for ( int i = 1 ; i < n ; i ++ ) cout << a [ i ] + a [ i - 1 ] << \"   \" ; cout << a [ n - 1 ] << endl ; long long int n , i ; return 0; }"}}
{"translation": {"en": "read n [ENDL] create long long integer array arr of size n [ENDL] for i = 0 to n exclusive , read arr [ i ] [ENDL] for i = 0 to n exclusive [ENDL] if i is n - 1 [ENDL] print arr [ n - 1 ] print newline [ENDL] else [ENDL] print arr [ i ] + arr [ i + 1 ] print \" \" [ENDL] a = int array of size 100005", "c++": "int main() { cin >> n ; long long int arr [ n ] ; for ( i = 0 ; i < n ; i ++ ) { cin >> arr [ i ] ; } for ( i = 0 ; i < n ; i ++ ) if ( i == n - 1 ) cout << arr [ n - 1 ] << endl ; else cout << arr [ i ] + arr [ i + 1 ] << \"   \" ; int a [ 100005 ] ; } } }"}}
{"translation": {"en": "n = int [ENDL] while reading n [ENDL] for i = i to n inclusive rad a [ i ] [ENDL] for i = 1 to n print a [ i ] + a [ i + 1 ] [ENDL] print a [ n ] [ENDL] n = integer", "c++": "int n ; int main() { while ( cin >> n ) for ( int i = 1 ; i <= n ; i ++ ) { cin >> a [ i ] ; } for ( int i = 1 ; i < n ; i ++ ) { cout << a [ i ] + a [ i + 1 ] << '   ' ; } cout << a [ n ] << endl ; int n ; } }"}}
{"translation": {"en": "x , k = integers with k = 0 [ENDL] Read n [ENDL] for i = 0 to n exclusive [ENDL] Read x [ENDL] if i is not equal to 1 , then print NO and a new line [ENDL] set k to x [ENDL] print x and a new line [ENDL] x , y = long long arrays of size 100005 each", "c++": "int main() { int k = 0 , x ; cin >> n ; for ( int i = 1 ; i <= n ; i ++ ) cin >> x ; if ( i != 1 ) cout << x + k << \"   \" ; k = x ; cout << x << endl ; } long long x [ 100005 ] , y [ 100005 ] ; return 0; }"}}
{"translation": {"en": "a , b = long long [ENDL] read a [ENDL] set x to all 0 [ENDL] set y to all 0 [ENDL] for b = 0 to a read x [ b ] [ENDL] for b = 0 to a set y [ b ] to x [ b ] + x [ b + 1 ] [ENDL] for b = 0 to a - 1 print y [ b ] and ' ' [ENDL] print y [ a - 1 ] [ENDL] n = integer", "c++": "long long a , b ; int main() { cin >> a ; memset ( x , 0 , sizeof ( x ) ) ; memset ( y , 0 , sizeof ( y ) ) ; for ( b = 0 ; b < a ; b ++ ) cin >> x [ b ] ; for ( b = 0 ; b < a ; b ++ ) y [ b ] = x [ b ] + x [ b + 1 ] ; for ( b = 0 ; b < a - 1 ; b ++ ) cout << y [ b ] << '   ' ; cout << y [ a - 1 ] << endl ; int n ; return 0; }"}}
{"translation": {"en": "read n [ENDL] arr = integer array of size n [ENDL] for i = 0 to n exclusive read arr [ i ] [ENDL] for i = 0 to n - 1 exclusive [ENDL] increase arr [ i ] by arr [ i + 1 ] [ENDL] print arr [ i ] followed by a space [ENDL] print arr [ n - 1 ] [ENDL] create integer n , create integer array arr with size 100010", "c++": "int main() { cin >> n ; int arr [ n ] ; for ( int i = 0 ; i < n ; i ++ ) { cin >> arr [ i ] ; } for ( int i = 0 ; i < n - 1 ; i ++ ) arr [ i ] += arr [ i + 1 ] ; cout << arr [ i ] << \"   \" ; cout << arr [ n - 1 ] << \" \\n \" ; } int n , arr [ 100010 ] ; }"}}
{"translation": {"en": "read n [ENDL] for i = 0 to n exclusive , read arr [ i1 ] [ENDL] for i = 1 to n exclusive , print arr [ i ] + arr [ i - 1 ] print \" \" [ENDL] print arr [ n - 1 ] print newline [ENDL] create integer n create integer array ara with size 100000", "c++": "int main() { cin >> n ; for ( int i = 0 ; i < n ; i ++ ) { cin >> arr [ i ] ; } for ( int i = 1 ; i < n ; i ++ ) { cout << arr [ i ] + arr [ i - 1 ] << \"   \" ; } cout << arr [ n - 1 ] << endl ; int n , ara [ 100000 ] ; return 0; }"}}
{"translation": {"en": "read n [ENDL] for i = 0 to n exclusive , read ara [ i ] [ENDL] for i = 0 to n - 1 exclusive , print ara [ i ] + ara [ i + 1 ] print ' ' [ENDL] print ara [ n - 1 ] print newline [ENDL] create integers n , k1 , k2 , i", "c++": "int main() { cin >> n ; for ( int i = 0 ; i < n ; i ++ ) { cin >> ara [ i ] ; } for ( int i = 0 ; i < n - 1 ; i ++ ) { cout << ara [ i ] + ara [ i + 1 ] << '   ' ; } cout << ara [ n - 1 ] << endl ; int n , k1 , k2 , i ; }"}}
{"translation": {"en": "read n [ENDL] read k1 [ENDL] for i = 1 to n exclusive [ENDL] read k2 [ENDL] print k2 + k1 print \" \" [ENDL] set k1 to k2 [ENDL] print k1 print newline [ENDL] create int n , r , s i , j and arrays a and b of length 100001", "c++": "int main() { cin >> n ; cin >> k1 ; for ( i = 1 ; i < n ; i ++ ) cin >> k2 ; cout << k2 + k1 << \"   \" ; k1 = k2 ; cout << k1 << endl ; } int n , a [ 100001 ] , r , s , b [ 100001 ] , i , j = 0 ; return 0; }"}}
{"translation": {"en": "read n [ENDL] for i = 1 to n inclusive , read a [ i ] [ENDL] increment j [ENDL] b [ j ] = a [ n ] [ENDL] for i = n to 1 exclusive [ENDL] set r = a [ i ] + a [ i - 1 ] [ENDL] add 1 to j [ENDL] assign r to b [ j ] [ENDL] for i = j to 0 exclusive [ENDL] print b [ i ] [ENDL] if i different fro 1 , print \" \" [ENDL] print a newline [ENDL] n = integer", "c++": "int main() { cin >> n ; for ( i = 1 ; i <= n ; i ++ ) cin >> a [ i ] ; j ++ ; b [ j ] = a [ n ] ; for ( i = n ; i > 1 ; i -- ) r = a [ i ] + a [ i - 1 ] ; j ++ ; b [ j ] = r ; for ( i = j ; i > 0 ; i -- ) } cout << b [ i ] ; if ( i != 1 ) cout << \"   \" ; cout << endl ; } int n ; return 0; }"}}
{"translation": {"en": "x , k = integers with k = 0 [ENDL] Read n [ENDL] for i = 1 to n exclusive [ENDL] Read x [ENDL] if i is not 1 , then print x + k and a new line [ENDL] set k to x [ENDL] print x and a new line [ENDL] create int number , i , temp , flag , index and result , set index , result to 0", "c++": "int main() { int k = 0 , x ; cin >> n ; for ( int i = 1 ; i <= n ; i ++ ) cin >> x ; if ( i != 1 ) cout << x + k << \"   \" ; k = x ; cout << x << endl ; } int number , i , temp , flag , index = 0 , result = 0 ; return 0; }"}}
{"translation": {"en": "create string str [ENDL] read number [ENDL] read str [ENDL] set arr [ number ] to 0 [ENDL] for i = 0 to number exclusive [ENDL] assign 0 to flag [ENDL] set temp to 0 [ENDL] while str [ i ] = B [ENDL] increment i [ENDL] assign 1 to flag [ENDL] increment temp [ENDL] if flag = 1 [ENDL] decrement i [ENDL] add 1 to result [ENDL] assign temp to arr [ index ] [ENDL] increment index [ENDL] print result [ENDL] for i = 0 to result exclusive [ENDL] if i = result - 1 [ENDL] print arr [ i ] [ENDL] break [ENDL] print arr [ i ] , \" \" [ENDL] create int n", "c++": "int main() { string str ; cin >> number ; cin >> str ; int arr [ number ] = { 0 } ; for ( i = 0 ; i < number ; i ++ ) flag = 0 ; temp = 0 ; while ( str [ i ] == ' B ' ) i ++ ; flag = 1 ; temp ++ ; if ( flag == 1 ) } i -- ; result ++ ; arr [ index ] = temp ; index ++ ; cout << result << endl ; } } for ( i = 0 ; i < result ; i ++ ) if ( i == result - 1 ) cout << arr [ i ] << endl ; break ; cout << arr [ i ] << \"   \" ; } int n ; } return 0; }"}}
{"translation": {"en": "create string s [ENDL] read n and s [ENDL] declare integer variable cnt = - 1 and an array of integers ans with 100 elements filled with 0 [ENDL] create character p = ' W ' [ENDL] loop i from 0 to n exclusive [ENDL] declare character variable c = s [ i ] [ENDL] if c = ' B ' [ENDL] if p = ' W ' [ENDL] increase ans [ cnt ] [ENDL] set p to c [ENDL] print cnt + 1 [ENDL] if cnt + 1 is greater than 0 [ENDL] declare boolean first = true [ENDL] loop i from 0 to cnt inclusive [ENDL] if first is true [ENDL] set first to false [ENDL] else [ENDL] print \" \" [ENDL] print ans [ i ] [ENDL] print new line [ENDL] n = int", "c++": "int main() { string s ; cin >> n >> s ; int cnt = - 1 , ans [ 100 ] = { 0 } ; char p = ' W ' ; for ( int i = 0 ; i < n ; ++ i ) char c = s [ i ] ; if ( c == ' B ' ) if ( p == ' W ' ) { ++ cnt ; } ++ ans [ cnt ] ; p = c ; } cout << cnt + 1 << endl ; } if ( cnt + 1 > 0 ) bool first = true ; for ( int i = 0 ; i <= cnt ; ++ i ) if ( first ) first = false ; else cout << \"   \" ; cout << ans [ i ] ; cout << endl ; } int n ; } return 0; }"}}
{"translation": {"en": "a = char array of size 100005 [ENDL] b = int array of size 100005 [ENDL] loop while reading n [ENDL] set all values of a to 0 [ENDL] set all values of b to 0 [ENDL] read a [ENDL] j , count = int with j = 1 and count = 0 [ENDL] for i = 0 to n [ENDL] if a [ i ] is ' B ' [ENDL] increment b [ j ] [ENDL] else if a [ i ] is ' W ' and a [ i + 1 ] is ' B ' [ENDL] increment j [ENDL] for i = 1 to j inclusive [ENDL] if b [ i ] is not 0 then increment count [ENDL] print count [ENDL] if count is not 0 [ENDL] for i = 1 to j [ENDL] if b [ i ] is not 0 print b [ i ] and \" \" [ENDL] print b [ j ] [ENDL] let a , b be long integers", "c++": "int main() { char a [ 100005 ] ; int b [ 100005 ] ; while ( cin >> n ) memset ( a , 0 , sizeof ( a ) ) ; memset ( b , 0 , sizeof ( b ) ) ; cin >> a ; int j = 1 , count = 0 ; for ( int i = 0 ; i < n ; i ++ ) if ( a [ i ] == ' B ' ) b [ j ] ++ ; else if ( a [ i ] == ' W ' && a [ i + 1 ] == ' B ' ) j ++ ; for ( int i = 1 ; i <= j ; i ++ ) } if ( b [ i ] != 0 ) count ++ ; cout << count << endl ; if ( count != 0 ) for ( int i = 1 ; i < j ; i ++ ) if ( b [ i ] != 0 ) cout << b [ i ] << \"   \" ; cout << b [ j ] << endl ; long long a , b ; } } return 0; }"}}
{"translation": {"en": "ans = array of long integers of length 100 [ENDL] let flag be a integer with flag = 0 [ENDL] let k be a integer [ENDL] let void dfs ( long long a , int i ) be a dfs function [ENDL] if flag or a greater than b , return the value [ENDL] the value of ans [ i ] = a [ENDL] if a is equal to b [ENDL] flag is equal to 1 [ENDL] k value is assigned to i [ENDL] return [ENDL] depth first search of a * 2 , i + 1 [ENDL] depth first search of a * 10 + 1 , i + 1 [ENDL] read a , b [ENDL] depth first search of a , 0 [ENDL] if flag is equal to 0 [ENDL] print NO and newline [ENDL] else do the following [ENDL] print YES and newline [ENDL] print k + 1 and newline [ENDL] print ans [ 0 ] [ENDL] for i = 1 to k inclusive , print space and ans [ i ] [ENDL] print newline [ENDL] let a , b integers", "c++": "long long ans [ 100 ] ; int flag = 0 ; int k ; void dfs ( long long a , int i ) if ( flag || a > b ) { return ; } ans [ i ] = a ; if ( a == b ) flag = 1 ; k = i ; return ; dfs ( a * 2 , i + 1 ) ; } dfs ( a * 10 + 1 , i + 1 ) ; cin >> a >> b ; } int main() { dfs ( a , 0 ) ; if ( flag == 0 ) cout << \" NO \" << endl ; else cout << \" YES \" << endl ; cout << k + 1 << endl ; cout << ans [ 0 ] ; for ( int i = 1 ; i <= k ; i ++ ) { cout << '   ' << ans [ i ] ; } cout << endl ; int a , b ; } return 0; }"}}
{"translation": {"en": "read a and b [ENDL] let v be a vector of ints [ENDL] let ok be an int with value 1 [ENDL] while b > a [ENDL] append b to v [ENDL] if b & 1 is 0 [ENDL] set b to b / 2 [ENDL] else if b mod 10 is 1 [ENDL] set b to b / 10 [ENDL] else [ENDL] set ok to 0 [ENDL] break [ENDL] if b is different from a [ENDL] set ok to 0 [ENDL] else [ENDL] append a to v [ENDL] if not ok [ENDL] print NO [ENDL] else [ENDL] print YES [ENDL] print the size of v [ENDL] for i = size of v - 1 to 0 exclusive , print v [ i ] [ENDL] print v [ 0 ] [ENDL] declare long long variables a , b and n", "c++": "cin >> a >> b ; int main() { vector < int > v ; int ok = 1 ; while ( b > a ) v . push_back ( b ) ; if ( ( b & 1 ) == 0 ) b = b / 2 ; else if ( b % 10 == 1 ) b = b / 10 ; else ok = 0 ; break ; if ( b != a ) } } ok = 0 ; else v . push_back ( a ) ; if ( ! ok ) cout << \" NO \" << endl ; else cout << \" YES \" << endl ; cout << v . size ( ) << endl ; for ( int i = v . size ( ) - 1 ; i > 0 ; i -- ) cout << v [ i ] << \"   \" ; cout << v [ 0 ] << endl ; long long a , b , n ; } return 0; }"}}
{"translation": {"en": "declare long long array ans with size 1010 [ENDL] declare boolean flag [ENDL] function dfs with long long arguments x , y and step [ENDL] change ans [ step ] to x [ENDL] if flag is true or x > y , return [ENDL] if x = y [ENDL] assign step to n [ENDL] set flag to true [ENDL] return [ENDL] call dfs ( x * 2 , y , step + 1 ) [ENDL] if flag is false , call dfs ( x * 10 + 1 , y , step + 1 ) [ENDL] loop , reading a and b from the input [ENDL] change flag to false [ENDL] call dfs ( a , b , 1 ) [ENDL] if flag is true [ENDL] print \" YES \" [ENDL] print n [ENDL] loop i from 1 to n inclusive , print ans [ i ] and ' \\ n ' if i = n , or ' ' [ENDL] else [ENDL] print \" NO \" [ENDL] create integer stack S", "c++": "long long ans [ 1010 ] ; bool flag ; void dfs ( long long x , long long y , long long step ) ans [ step ] = x ; if ( flag || x > y ) return ; if ( x == y ) n = step ; flag = true ; return ; dfs ( x * 2 , y , step + 1 ) ; } if ( ! flag ) dfs ( x * 10 + 1 , y , step + 1 ) ; while ( cin >> a >> b ) } int main() { flag = false ; dfs ( a , b , 1 ) ; if ( flag ) cout << \" YES \" << endl ; cout << n << endl ; for ( int i = 1 ; i <= n ; i ++ ) cout << ans [ i ] << ( i == n ? ' \\n ' : '   ' ) ; else cout << \" NO \" << endl ; stack < int > S ; } } return 0; }"}}
{"translation": {"en": "declare funcion with long longs a , b as arguments , returning integer [ENDL] create integer [ENDL] if a is b , return 1 from function [ENDL] if a is less than b [ENDL] set r to result of run funcion with 2 * a , b as arguments [ENDL] if r is 1 [ENDL] add element 1 to end of S [ENDL] return 1 from function [ENDL] set r to result of run funcion with ( 10 * a ) + 1 , b as arguments [ENDL] if r is 1 [ENDL] add element 2 to end of S [ENDL] return 1 from function [ENDL] else [ENDL] create long longs a , b [ENDL] create integers op , ans [ENDL] read a read b [ENDL] set ans to result of run funcion with a , b as arguments [ENDL] if ans is 0 [ENDL] print \" NO \" print ' \\ n ' [ENDL] else [ENDL] print \" YES \" print ' \\ n ' [ENDL] print size of S + 1 print ' \\ n ' [ENDL] print a [ENDL] while S is not empty [ENDL] set op to top of S [ENDL] remove element from top of S [ENDL] if op is 1 [ENDL] set a to a * 2 [ENDL] else [ENDL] set a to a * 10 [ENDL] increment a [ENDL] print \" \" print a [ENDL] print ' \\ n ' [ENDL] ASS = array of integers of length 50", "c++": "int funcion ( long long a , long long b ) int r ; if ( a == b ) return 1 ; if ( a < b ) r = funcion ( 2 * a , b ) ; if ( r == 1 ) S . push ( 1 ) ; return 1 ; r = funcion ( ( 10 * a ) + 1 , b ) ; } if ( r == 1 ) S . push ( 2 ) ; return 1 ; else } long long a , b ; return 0; } int main() { int op , ans ; cin >> a >> b ; ans = funcion ( a , b ) ; if ( ans == 0 ) cout << \" NO \" << ' \\n ' ; else cout << \" YES \" << ' \\n ' ; cout << S . size ( ) + 1 << ' \\n ' ; cout << a ; while ( ! S . empty ( ) ) op = S . top ( ) ; S . pop ( ) ; if ( op == 1 ) a *= 2 ; else a *= 10 ; a ++ ; cout << \"   \" << a ; } cout << ' \\n ' ; } int ASS [ 50 ] ; } }"}}
{"translation": {"en": "let sum be a integer [ENDL] let flag be a boolean value [ENDL] let int digui ( int a , int b ) accepts integer values [ENDL] if a is less than b [ENDL] set the value of flag to 1 [ENDL] if a is equal to b , return 0 [ENDL] if a modulo 2 is equal to 0 [ENDL] increase sum by 1 [ENDL] let ASS [ sum - 1 ] is equal to a / 2 [ENDL] return digui of a / 2 , b [ENDL] else if a modulo 10 is equal to 1 [ENDL] increase sum by 1 [ENDL] let ASS [ sum - 1 ] is equal to ( a - 1 ) / 10 [ENDL] return digui of ( a - 1 ) / 10 , b [ENDL] else do the following [ENDL] set the value of flag to 1 [ENDL] let m , n be integers [ENDL] read m and n [ENDL] digui of n , m [ENDL] if flag is equal to 0 [ENDL] print YES and newline and sum + 1 and newline [ENDL] for integer i = sum - 1 , i > = 0 , decrease i by 1 , print ASS [ i ] and space [ENDL] print n and new line [ENDL] else do the following [ENDL] print NO and newline [ENDL] let k and flag be long ints with flag = 0", "c++": "int sum ; bool flag ; int digui ( int a , int b ) if ( a < b ) flag = 1 ; if ( a == b ) return 0 ; return 0; } if ( a % 2 == 0 ) sum ++ ; ASS [ sum - 1 ] = a / 2 ; return digui ( a / 2 , b ) ; else if ( a % 10 == 1 ) sum ++ ; ASS [ sum - 1 ] = ( a - 1 ) / 10 ; return digui ( ( a - 1 ) / 10 , b ) ; else flag = 1 ; int m , n ; } int main() { cin >> m >> n ; digui ( n , m ) ; if ( flag == 0 ) cout << \" YES \" << endl << sum + 1 << endl ; for ( int i = sum - 1 ; i >= 0 ; i -- ) cout << ASS [ i ] << \"   \" ; cout << n << endl ; else cout << \" NO \" << endl ; long int k , flag = 0 ; return 0; }"}}
{"translation": {"en": "declare vector of long long integers ans [ENDL] function dfs with long long int arguments n and level [ENDL] if n is equal to k , assign 1 to flag [ENDL] if 2 * n < = k and flag = 0 , call dfs ( 2 * n , level + 1 ) [ENDL] if 10 * n + 1 < = k and flag = 0 , call dfs ( 10 * n + 1 , level + 1 ) [ENDL] if flag = 1 , push n to ans [ENDL] return [ENDL] create long long int n [ENDL] read n and k [ENDL] call dfs ( n , 1 ) [ENDL] if flag is 1 [ENDL] print \" YES \" [ENDL] declare int sz = length of ans [ENDL] print sz [ENDL] for i = sz - 1 to 1 inclusive decrementing i , print ans [ i ] and \" \" [ENDL] if sz > = 1 , print ans [ 0 ] [ENDL] else [ENDL] print \" NO \" [ENDL] N = const integer with N = 1e5 + 50", "c++": "vector < long long int > ans ; void dfs ( long long int n , long long int level ) if ( n == k ) { flag = 1 ; } if ( 2 * n <= k && flag == 0 ) { dfs ( 2 * n , level + 1 ) ; } if ( 10 * n + 1 <= k && flag == 0 ) { dfs ( 10 * n + 1 , level + 1 ) ; } if ( flag == 1 ) { ans . push_back ( n ) ; } return ; long long int n ; } int main() { cin >> n >> k ; dfs ( n , 1 ) ; if ( flag == 1 ) cout << \" YES \" << endl ; int sz = ans . size ( ) ; cout << sz << endl ; for ( long long int i = sz - 1 ; i >= 1 ; i -- ) { cout << ans [ i ] << \"   \" ; } if ( sz >= 1 ) cout << ans [ 0 ] << endl ; else return 0; cout << \" NO \" << endl ; const int N = 1e5 + 50 ; } return 0; }"}}
{"translation": {"en": "a , b , cnt = long long [ENDL] ans = long long array of size N [ENDL] i , j , k , t , m , n = integers [ENDL] in the function dfs that takes long long st , step [ENDL] if st > b , return [ENDL] ans [ step ] = st [ENDL] if st is b [ENDL] cnt = step [ENDL] print YES [ENDL] print cnt + 1 [ENDL] print ans [ 0 ] [ENDL] for i = 1 to cnt exclusive , print \" \" , ans [ i ] [ENDL] print new line [ENDL] return [ENDL] if st * 2 < = b , dfs on st * 2 and step + 1 [ENDL] if st * 10 + 1 < = b , dfs on st * 10 + 1 and step + 1 [ENDL] read a and b [ENDL] cnt = 0 [ENDL] dfs on a and 0 [ENDL] if not cnt , print NO [ENDL] a , b , jum = long long", "c++": "long long a , b , cnt ; long long ans [ N ] ; int i , j , k , t , m , n ; void dfs ( long long st , long long step ) if ( st > b ) return ; ans [ step ] = st ; if ( st == b ) cnt = step ; cout << \" YES \" << ' \\n ' ; cout << cnt + 1 << ' \\n ' ; cout << ans [ 0 ] ; for ( i = 1 ; i < cnt + 1 ; i ++ ) cout << \"   \" << ans [ i ] ; cout << ' \\n ' ; return ; if ( st * 2 <= b ) dfs ( st * 2 , step + 1 ) ; } if ( st * 10 + 1 <= b ) dfs ( st * 10 + 1 , step + 1 ) ; cin >> a >> b ; } int main() { cnt = 0 ; dfs ( a , 0 ) ; if ( ! cnt ) cout << \" NO \" << ' \\n ' ; long long a , b , jum ; return 0; }"}}
{"translation": {"en": "v = long long vector [ENDL] read a then b [ENDL] loop while b is greater than 0 [ENDL] increment jum [ENDL] append b to v [ENDL] if a is b then break loop [ENDL] if a b is less than a [ENDL] print \" NO \" [ENDL] else if b is even [ENDL] set b to b / 2 [ENDL] else if b is uneven [ENDL] decrement b [ENDL] if b is a multiple of 10 [ENDL] set b to b / 10 [ENDL] else [ENDL] print \" NO \" [ENDL] sort v [ENDL] print \" YES \" and jum [ENDL] for i = 0 to jum [ENDL] print v [ i ] [ENDL] if i is less than jum - 1 [ENDL] print \" \" [ENDL] else [ENDL] print newline [ENDL] declare long integer array perm with size 2 * 100000 + 5", "c++": "vector < long long > v ; cin >> a >> b ; int main() { while ( b >= 1 ) jum ++ ; v . push_back ( b ) ; if ( a == b ) { break ; } if ( b < a ) cout << \" NO \" << endl ; else if ( b % 2 == 0 ) return 0; b = b / 2 ; else if ( b % 2 == 1 ) b -- ; if ( b % 10 == 0 ) b = b / 10 ; else cout << \" NO \" << endl ; sort ( v . begin ( ) , v . end ( ) ) ; return 0; } } } cout << \" YES \" << endl << jum << endl ; for ( int i = 0 ; i < jum ; i ++ ) cout << v [ i ] ; if ( i < jum - 1 ) cout << \"   \" ; else cout << endl ; long int perm [ 2 * 100000 + 5 ] ; } }"}}
{"translation": {"en": "declare long integer variables n , x , cycle , v , k and xo where cycle = 0 and xo = 1 [ENDL] read n [ENDL] for integer i = 1 to n inclusive , read perm [ i ] [ENDL] for i = 0 to n exclusive [ENDL] read x [ENDL] xo ^ = x [ENDL] for integer i = 1 to n inclusive [ENDL] continue loop from the start if if perm [ i ] is false [ENDL] increase cycle [ENDL] assign value of i to v [ENDL] while perm [ v ] is true [ENDL] assign value of perm [ v ] to k [ENDL] set perm [ v ] to 0 [ENDL] set v to k [ENDL] if cycle = 1 , change cycle to 0 [ENDL] print cycle + xo [ENDL] let n be a integer", "c++": "long int n , x , cycle = 0 , v , k , xo = 1 ; int main() { cin >> n ; for ( int i = 1 ; i <= n ; i ++ ) cin >> perm [ i ] ; for ( int i = 0 ; i < n ; i ++ ) cin >> x ; xo ^= x ; for ( int i = 1 ; i <= n ; i ++ ) } if ( ! perm [ i ] ) continue ; cycle ++ ; v = i ; while ( perm [ v ] ) k = perm [ v ] ; perm [ v ] = 0 ; v = k ; if ( cycle == 1 ) cycle = 0 ; } } cout << cycle + xo << endl ; int n ; return 0; }"}}
{"translation": {"en": "p = array of integers of length 200100 [ENDL] b = array of integers of length 200100 [ENDL] vis = array of integers of length 200200 [ENDL] let dfs be a function which accepts integer x value [ENDL] the xth element of array vis is equal to 1 [ENDL] if ( not vis [ xth element of array p ] , dfs ( xth element of array p ) [ENDL] read n [ENDL] for ( i = 1 to n inclusive ) , read ith element of array p [ENDL] let cnt be a integer with cnt value as 0 [ENDL] for ( i = 1 to n inclusive ) [ENDL] read ith element of array b [ENDL] if ( ith element of array b is equal to 1 ) , increase cnt by 1 [ENDL] let ans be a integer with ans value is equal to 0 [ENDL] if ( cnt modulus 2 is equal to 0 ) , increase ans by 1 [ENDL] let the value of cnt is equal to 0 [ENDL] for ( i = 1 to n inclusive ) [ENDL] if ( not ith element of array vis ) [ENDL] increase cnt value by 1 [ENDL] dfs of i [ENDL] if ( cnt is equal to 1 ) , cnt is equal to 0 [ENDL] print ans + cnt and newline [ENDL] create constant integer N with N = 6e5 + 10", "c++": "int p [ 200100 ] ; int b [ 200100 ] ; int vis [ 200200 ] ; void dfs ( int x ) vis [ x ] = 1 ; if ( ! vis [ p [ x ] ] ) dfs ( p [ x ] ) ; cin >> n ; } int main() { for ( int i = 1 ; i <= n ; i ++ ) cin >> p [ i ] ; int cnt = 0 ; for ( int i = 1 ; i <= n ; i ++ ) cin >> b [ i ] ; if ( b [ i ] == 1 ) cnt ++ ; int ans = 0 ; } if ( cnt % 2 == 0 ) ans ++ ; cnt = 0 ; for ( int i = 1 ; i <= n ; i ++ ) if ( ! vis [ i ] ) cnt ++ ; dfs ( i ) ; if ( cnt == 1 ) cnt = 0 ; } } cout << ans + cnt << endl ; const int N = 6e5 + 10 ; return 0; }"}}
{"translation": {"en": "create integer arrays v , A , B with v size N , A size N , B size N [ENDL] create integer n [ENDL] declare dfs with integer x as argument [ENDL] if v [ x ] is true , return from function [ENDL] set v [ x ] to 1 [ENDL] run dfs with A [ x ] as argument [ENDL] read n [ENDL] create integer ans with ans = 0 [ENDL] for i = 1 to n inclusive , read A [ i ] [ENDL] for i = 1 to n inclusive , read B [ i ] [ENDL] for i = 1 to n inclusive [ENDL] if v [ i ] is 0 , run dfs with i as argument , increment ans [ENDL] create integer t with t = 1 [ENDL] for i = 1 to n inclusive [ENDL] if B [ i ] is true , set t to t ^ 1 [ENDL] if ans is 1 , decrement ans [ENDL] print ans + t print newline [ENDL] declare constant integer N = 2e5 + 5", "c++": "int v [ N ] , A [ N ] , B [ N ] ; int n ; void dfs ( int x ) if ( v [ x ] ) return ; v [ x ] = 1 ; dfs ( A [ x ] ) ; cin >> n ; } int main() { int ans = 0 ; for ( int i = 1 ; i <= n ; ++ i ) cin >> A [ i ] ; for ( int i = 1 ; i <= n ; ++ i ) cin >> B [ i ] ; for ( int i = 1 ; i <= n ; ++ i ) if ( v [ i ] == 0 ) dfs ( i ) , ++ ans ; int t = 1 ; } for ( int i = 1 ; i <= n ; ++ i ) if ( B [ i ] ) t ^= 1 ; if ( ans == 1 ) -- ans ; } cout << ans + t << endl ; const int N = 2e5 + 5 ; }"}}
{"translation": {"en": "create integer arrays Prv and vis with N elements [ENDL] dfs is a void function with integer argument u [ENDL] if vis [ u ] is not 0 , return [ENDL] set value of vis [ u ] to true [ENDL] call function dfs with arguments Prv [ u ] [ENDL] declare integer variable n [ENDL] read n [ENDL] for integer i = 1 to n inclusive read Prv [ i ] [ENDL] create integer now = 1 [ENDL] for integer i = 1 to n inclusive [ENDL] create integer x [ENDL] read x [ENDL] increase now by x [ENDL] declare integer Res = 0 [ENDL] for integer i = 1 to n inclusive [ENDL] if vis [ i ] is 0 [ENDL] call function dfs with argument i [ENDL] increment Res [ENDL] decrement Res if Res = 1 [ENDL] print Res + ( now % 2 ) and \" \\ n \" [ENDL] create int i , j and n", "c++": "int Prv [ N ] , vis [ N ] ; void dfs ( int u ) if ( vis [ u ] ) return ; vis [ u ] = true ; dfs ( Prv [ u ] ) ; int n ; } int main() { cin >> n ; for ( int i = 1 ; i <= n ; i ++ ) cin >> Prv [ i ] ; int now = 1 ; for ( int i = 1 ; i <= n ; i ++ ) int x ; cin >> x ; now += x ; int Res = 0 ; } for ( int i = 1 ; i <= n ; i ++ ) if ( ! vis [ i ] ) dfs ( i ) ; Res ++ ; if ( Res == 1 ) Res -- ; } } cout << ( Res + ( now % 2 ) ) << \" \\n \" ; int i , j , n ; return 0; }"}}
{"translation": {"en": "set int arrays p , b and status of length 200000 to all 0 [ENDL] set count and result to 0 [ENDL] read n [ENDL] for i = 0 to n exclusive [ENDL] read p [ i ] [ENDL] decrement p [ i ] [ENDL] for i = 0 to n exclusive [ENDL] read b [ i ] [ENDL] if b [ i ] = 1 , increment count [ENDL] if count is even , increment result [ENDL] count = 0 [ENDL] if i = 0 to n exclusive [ENDL] if status [ i ] equal to 0 [ENDL] assign 1 to status [ i ] [ENDL] set t to p [ i ] [ENDL] while t different from 1 [ENDL] status [ t ] = 1 [ENDL] t = p [ t ] [ENDL] add 1 to count [ENDL] if count greater than 1 , set result to result + count [ENDL] print result [ENDL] n , m , k = static long long", "c++": "int main() { int p [ 200000 ] , b [ 200000 ] , status [ 200000 ] = { 0 } ; int count = 0 , result = 0 ; cin >> n ; for ( i = 0 ; i < n ; i ++ ) cin >> p [ i ] ; p [ i ] -- ; for ( i = 0 ; i < n ; i ++ ) } cin >> b [ i ] ; if ( b [ i ] == 1 ) count ++ ; if ( count % 2 == 0 ) result ++ ; } count = 0 ; for ( i = 0 ; i < n ; i ++ ) if ( status [ i ] == 0 ) status [ i ] = 1 ; int t = p [ i ] ; while ( t != i ) status [ t ] = 1 ; t = p [ t ] ; count ++ ; } if ( count > 1 ) result += count ; } } cout << result << endl ; static long long n , m , k ; return 0; }"}}
{"translation": {"en": "n = int [ENDL] read n [ENDL] p = vector of n int [ENDL] for i = 0 to n exclusive read p [ i ] [ENDL] res = 0 [ENDL] for i = 0 to n exclusive [ENDL] x = int [ENDL] read x [ENDL] add x to res [ENDL] res = ( res + 1 ) modulo 2 [ENDL] visited = vector of n bool [ENDL] count = - 1 [ENDL] for i = 0 to n exclusive [ENDL] if visited [ i ] continue [ENDL] increment count [ENDL] j = i [ENDL] while not visited [ j ] [ENDL] visited [ j ] = true [ENDL] j = p [ j ] - 1 [ENDL] if count > 0 increment res [ENDL] add count to res [ENDL] print res [ENDL] create integer n", "c++": "int n ; int main() { cin >> n ; vector < int > p ( n ) ; for ( int i = 0 ; i < n ; i ++ ) cin >> p [ i ] ; int res = 0 ; for ( int i = 0 ; i < n ; i ++ ) int x ; cin >> x ; res += x ; res = ( res + 1 ) % 2 ; } vector < bool > visited ( n ) ; int count = - 1 ; for ( int i = 0 ; i < n ; i ++ ) if ( visited [ i ] ) continue ; count ++ ; int j = i ; while ( ! visited [ j ] ) visited [ j ] = true ; j = p [ j ] - 1 ; if ( count > 0 ) res ++ ; } } res += count ; cout << res << endl ; int n ; }"}}
{"translation": {"en": "create constant integer MAXN with MAXN = 200005 [ENDL] create integer array p with size MAXN [ENDL] create boolean array vis with size MAXN [ENDL] declare dfs with integer idx as argument , returning void [ENDL] set vis [ idx ] to true [ENDL] if not vis [ p [ idx ] ] , run dfs with p [ idx ] as argument [ENDL] read n [ENDL] for i = 1 to n inclusive , read p [ i ] [ENDL] create integer counter with counter = 0 [ENDL] for i = 1 to n inclusive [ENDL] create integer b [ENDL] read b [ENDL] if b is 1 , increment counter [ENDL] create integer cycle with cycle = 0 [ENDL] for i = 1 to n inclusive [ENDL] if not vis [ i ] [ENDL] run dfs with i as argument [ENDL] increment cycle [ENDL] if cycle is 1 [ENDL] print 1 - counter % 2 print \" \\ n \" [ENDL] else [ENDL] print cycle + 1 - counter % 2 print \" \\ n \" [ENDL] create strings s1 and s2", "c++": "const int MAXN = 200005 ; int p [ MAXN ] ; bool vis [ MAXN ] ; void dfs ( int idx ) vis [ idx ] = true ; if ( ! vis [ p [ idx ] ] ) dfs ( p [ idx ] ) ; cin >> n ; } int main() { for ( int i = 1 ; i <= n ; i ++ ) cin >> p [ i ] ; int counter = 0 ; for ( int i = 1 ; i <= n ; i ++ ) int b ; cin >> b ; if ( b == 1 ) counter ++ ; int cycle = 0 ; } for ( int i = 1 ; i <= n ; i ++ ) if ( ! vis [ i ] ) dfs ( i ) ; cycle ++ ; if ( cycle == 1 ) } cout << 1 - counter % 2 << \" \\n \" ; else cout << cycle + 1 - counter % 2 << \" \\n \" ; string s1 , s2 ; return 0; }"}}
{"translation": {"en": "read s1 and s2 [ENDL] if s1 is equal to s2 [ENDL] print \" - 1 \\ n \" [ENDL] else [ENDL] print the max of s1 . size ( ) and s2 . size ( ) [ENDL] dx = int array with the values 0 , 1 , 0 , - 1 , 1 , 1 , - 1 , - 1", "c++": "int main() { cin >> s1 >> s2 ; if ( s1 == s2 ) cout << \" -1\\n \" ; else cout << max ( s1 . size ( ) , s2 . size ( ) ) << ' \\n ' ; int dx [ ] = { 0 , 1 , 0 , - 1 , 1 , 1 , - 1 , - 1 } ; } return 0; }"}}
{"translation": {"en": "dy = int array with the values 1 , 0 , - 1 , 0 , 1 , - 1 , 1 , - 1 [ENDL] define empty function fast [ENDL] call fast [ENDL] s , t = string [ENDL] read s then t [ENDL] print - 1 if s is t else print max of size of s and size of t [ENDL] create strings a and b", "c++": "int dy [ ] = { 1 , 0 , - 1 , 0 , 1 , - 1 , 1 , - 1 } ; void fast ( ) { } fast ( ) ; int main() { string s , t ; cin >> s >> t ; cout << ( s == t ? - 1 : ( int ) max ( s . size ( ) , t . size ( ) ) ) << \" \\n \" ; string a , b ; }"}}
{"translation": {"en": "read standard input to a and b [ENDL] if a = b , print - 1 to the standard output and exit the program [ENDL] print max of length of a and length of b [ENDL] declare constant long long N = 1e8 + 3", "c++": "int main() { cin >> a >> b ; if ( a == b ) cout << - 1 << endl , exit ( 0 ) ; cout << max ( a . size ( ) , b . size ( ) ) << endl ; const long long N = 1e8 + 3 ; }"}}
{"translation": {"en": "declare constant long long MN = 1e9 + 7 [ENDL] declare constant long long MX = - 1e9 - 7 [ENDL] declare long longs n , m , cnt , mx = MX [ENDL] declare a , b as strings [ENDL] declare pair of long long , long long pr [ENDL] declare string vector v [ENDL] declare map from string to long long mp [ENDL] declare long long set st [ENDL] declare long long set iterator it [ENDL] read a , b [ENDL] if maximum of ( size of a and size of b ) is greater than minimum of ( size of a and size of b ) [ENDL] print maximum of ( size of a and size of b ) [ENDL] else [ENDL] while true [ENDL] if a is not b [ENDL] print size of a [ENDL] end loop [ENDL] let a be substring of a from 0 to size of a - 1 [ENDL] let b be substring of b from 0 to size of b - 1 [ENDL] if size of a is 0 [ENDL] print - 1 [ENDL] end loop [ENDL] print \" \\ n \" [ENDL] declare character array s1 with size 100006 s2 with size 100003", "c++": "const long long MN = 1e9 + 7 ; const long long MX = - 1e9 - 7 ; long long n , m , cnt , mx = MX ; string a , b ; pair < long long , long long > pr ; vector < string > v ; map < string , long long > mp ; set < long long > st ; set < long long > :: iterator it ; cin >> a >> b ; int main() { if ( max ( a . size ( ) , b . size ( ) ) > min ( a . size ( ) , b . size ( ) ) ) cout << max ( a . size ( ) , b . size ( ) ) ; else while ( true ) if ( a != b ) cout << a . size ( ) ; break ; a = a . substr ( 0 , a . size ( ) - 1 ) ; } b = b . substr ( 0 , b . size ( ) - 1 ) ; if ( a . size ( ) == 0 ) cout << - 1 ; break ; cout << \" \\n \" ; } } } char s1 [ 100006 ] , s2 [ 100003 ] ; return 0; }"}}
{"translation": {"en": "while read s1 , s2 [ENDL] declare p as integer = string comparison between s1 and s2 [ENDL] declare len1 as integer = string length of s1 [ENDL] declare len2 as integer = string length of s2 [ENDL] if p is 0 [ENDL] print \" - 1 \" print newline [ENDL] if len1 is greater than len2 [ENDL] print len1 , newline [ENDL] else [ENDL] print len2 , newline [ENDL] s , ss = string", "c++": "int main() { while ( cin >> s1 >> s2 ) int p = strcmp ( s1 , s2 ) ; int len1 = strlen ( s1 ) ; int len2 = strlen ( s2 ) ; if ( p == 0 ) cout << \" -1 \" << endl ; if ( len1 > len2 ) return 0; } cout << len1 << endl ; else cout << len2 << endl ; string s , ss ; } }"}}
{"translation": {"en": "read s then ss [ENDL] if s is ss [ENDL] print - 1 [ENDL] else [ENDL] print max of length of ss and length of s [ENDL] i , res = 0", "c++": "int main() { cin >> s >> ss ; if ( s == ss ) cout << - 1 << \" \\n \" ; else cout << max ( ss . length ( ) , s . length ( ) ) << \" \\n \" ; long long i = 0 , res = 0 ; return 0; }"}}
{"translation": {"en": "s1 , s2 = string [ENDL] read s1 , s2 [ENDL] if s1 = = s2 [ENDL] res = - 1 [ENDL] else [ENDL] res = max ( size of s1 , size of s2 ) [ENDL] print res [ENDL] declare strings a and b", "c++": "int main() { string s1 , s2 ; cin >> s1 >> s2 ; if ( s1 == s2 ) res = - 1 ; else res = max ( s1 . size ( ) , s2 . size ( ) ) ; cout << res << endl ; string a , b ; return 0; }"}}
{"translation": {"en": "read standard input to a and b [ENDL] declare integer variables l = length of a , and ll = length of b [ENDL] if l ! = ll [ENDL] print max of l and ll to the standard output [ENDL] else if a = b [ENDL] print - 1 to the standard output [ENDL] else [ENDL] print length of a to the standard output [ENDL] a , b = string", "c++": "int main() { cin >> a >> b ; int l = a . size ( ) , ll = b . size ( ) ; if ( l != ll ) cout << max ( l , ll ) << endl ; else if ( a == b ) cout << - 1 << endl ; else cout << a . size ( ) << endl ; string a , b ; } return 0; }"}}
{"translation": {"en": "read a then b [ENDL] if a is not b [ENDL] print max of size of a , size of b [ENDL] else [ENDL] print \" - 1 \" [ENDL] create string A", "c++": "cin >> a >> b ; int main() { if ( a != b ) cout << max ( a . size ( ) , b . size ( ) ) << endl ; else return 0; cout << \" -1 \" << endl ; string A ; return 0; } }"}}
{"translation": {"en": "read A [ENDL] let string B [ENDL] read B [ENDL] if A is equal to B [ENDL] print - 1 [ENDL] print max of A . size ( ) and B . size ( ) [ENDL] create new constant long long integer INF with value 8e18", "c++": "int main() { cin >> A ; string B ; cin >> B ; if ( A == B ) cout << - 1 << \" \\n \" ; cout << max ( A . size ( ) , B . size ( ) ) << \" \\n \" ; return 0; } const long long int INF = ( long long int ) ( 8e18 ) ; return 0; }"}}
{"translation": {"en": "create new constant long long integer called MOD = 998244353 [ENDL] declare string variables a and b [ENDL] read input to a and b [ENDL] if length of a ! = length of b [ENDL] print max of length of a and length of b and ' \\ n ' [ENDL] else if a ! = b [ENDL] print length of a and ' \\ n ' [ENDL] else [ENDL] print - 1 and ' \\ n ' [ENDL] let a , b be strings", "c++": "const long long int MOD = 998244353 ; string a , b ; int main() { cin >> a >> b ; if ( a . length ( ) != b . length ( ) ) cout << max ( a . length ( ) , b . length ( ) ) << ' \\n ' ; else if ( a != b ) cout << a . length ( ) << ' \\n ' ; else cout << - 1 << ' \\n ' ; string a , b ; return 0; }"}}
{"translation": {"en": "let c be a integer with c = 0 [ENDL] read a , b [ENDL] let len1 be a integer with len1 is equal to length of a [ENDL] let len2 be a integer with len2 is equal to length of b [ENDL] if a is equal to b [ENDL] print - 1 and newline [ENDL] else do the following [ENDL] print maximum of len1 , len2 and newline [ENDL] INF is a new constant integer = 0x3f3f3f3f", "c++": "int main() { int c = 0 ; cin >> a >> b ; int len1 = a . size ( ) ; int len2 = b . size ( ) ; if ( a == b ) cout << - 1 << endl ; else cout << max ( len1 , len2 ) << endl ; const int INF = 0x3f3f3f3f ; } return 0; }"}}
{"translation": {"en": "create new constant integer mod with value 998244353 [ENDL] declare character arrays a and b with 100005 elements [ENDL] read input to a and b [ENDL] if content of a and b matches [ENDL] return puts ( \" - 1 \" ) [ENDL] else [ENDL] print max of length of a and length of b to the standard output [ENDL] s , s1 = string", "c++": "const int mod = 998244353 ; char a [ 100005 ] , b [ 100005 ] ; cin >> a >> b ; int main() { if ( strcmp ( a , b ) == 0 ) return puts ( \" -1 \" ) , 0 ; else cout << max ( strlen ( a ) , strlen ( b ) ) << endl ; string s , s1 ; return 0; }"}}
{"translation": {"en": "read s then s1 [ENDL] if s is s1 [ENDL] print - 1 [ENDL] else [ENDL] print max of size of s , size of s1 [ENDL] declare strings n , n2", "c++": "int main() { cin >> s >> s1 ; if ( s == s1 ) cout << - 1 << endl ; else cout << max ( s . size ( ) , s1 . size ( ) ) << endl ; string n , n2 ; }"}}
{"translation": {"en": "declare compare with strings s1 , s2 , integer length as arguments , returning boolean [ENDL] for i = 0 to length exclusive [ENDL] if s1 [ i ] is not s2 [ i ] , return false from function [ENDL] return true from function [ENDL] read n , n2 [ENDL] declare l1 , l2 , greater as integers [ENDL] let l1 be greater = length of n [ENDL] let l2 be length of n2 [ENDL] if l2 is greater than l1 , let greater be l2 [ENDL] if l1 is l2 [ENDL] declare x as boolean = result of run compare with n , n2 , l1 as arguments [ENDL] if x is true [ENDL] print - 1 and newline [ENDL] else [ENDL] print l1 print newline [ENDL] print greater print newline [ENDL] a , b = string", "c++": "bool compare ( string s1 , string s2 , int length ) for ( int i = 0 ; i < length ; i ++ ) if ( s1 [ i ] != s2 [ i ] ) { return false ; } return true ; } cin >> n >> n2 ; } int main() { int l1 , l2 , greater ; l1 = greater = n . length ( ) ; l2 = n2 . length ( ) ; if ( l2 > l1 ) { greater = l2 ; } if ( l1 == l2 ) bool x = compare ( n , n2 , l1 ) ; if ( x ) cout << - 1 << endl ; else return 0; cout << l1 << endl ; cout << greater << endl ; return 0; } } string a , b ; return 0; }"}}
{"translation": {"en": "read a then b [ENDL] sz1 , sz2 = int with sz1 = size of a and sz2 = size of b [ENDL] if a is b [ENDL] print - 1 [ENDL] else [ENDL] print max of sz1 , sz2 [ENDL] declare string variables s1 and s2", "c++": "int main() { cin >> a >> b ; int sz1 = a . size ( ) , sz2 = b . size ( ) ; if ( a == b ) cout << - 1 << endl ; else cout << max ( sz1 , sz2 ) << endl ; string s1 , s2 ; return 0; }"}}
{"translation": {"en": "read from the input to s1 and s2 [ENDL] if s1 is equal to s2 [ENDL] print - 1 and a new line [ENDL] else [ENDL] print max of length of s1 and length of s2 to the standard output [ENDL] let a , b strings", "c++": "int main() { cin >> s1 >> s2 ; if ( s1 == s2 ) cout << - 1 << endl ; else cout << max ( s1 . length ( ) , s2 . length ( ) ) << endl ; string a , b ; }"}}
{"translation": {"en": "read in a and b [ENDL] if a same as b [ENDL] print - 1 to stdout [ENDL] otherwise [ENDL] print max ( length of a , length of b ) [ENDL] N , INF = const int with N = 1e5 + 10 and INF = 1e9 + 7", "c++": "int main() { cin >> a >> b ; if ( a == b ) puts ( \" -1 \" ) ; else cout << max ( a . length ( ) , b . length ( ) ) << endl ; const int N = 1e5 + 10 , INF = 1e9 + 7 ; return 0; }"}}
{"translation": {"en": "a , b = string [ENDL] read a then b [ENDL] if a is b [ENDL] print - 1 [ENDL] else [ENDL] print max of size of a and size of b [ENDL] a , b = string", "c++": "string a , b ; cin >> a >> b ; int main() { if ( a == b ) cout << - 1 << ' \\n ' ; else cout << max ( ( int ) a . size ( ) , ( int ) b . size ( ) ) << ' \\n ' ; string a , b ; return 0; }"}}
{"translation": {"en": "read a then b [ENDL] if a is not b [ENDL] print max of length of a and length of b [ENDL] else [ENDL] print \" - 1 \" [ENDL] E = exp ( 1 )", "c++": "int main() { cin >> a >> b ; if ( a != b ) cout << max ( a . length ( ) , b . length ( ) ) << endl ; else cout << \" -1\\n \" ; const double E = exp ( 1 ) ; }"}}
{"translation": {"en": "maxn = 1000010 [ENDL] ch = array of maxn char [ENDL] ch1 = array of maxn char [ENDL] read ch [ENDL] read ch1 [ENDL] l1 = length of ch [ENDL] l2 = length of ch1 [ENDL] if ch and ch1 are equal [ENDL] print - 1 [ENDL] else [ENDL] print max ( l1 , l2 ) [ENDL] create strings s and second", "c++": "const int maxn = 1e6 + 10 ; char ch [ maxn ] ; char ch1 [ maxn ] ; cin >> ch ; int main() { cin >> ch1 ; int l1 = strlen ( ch ) ; int l2 = strlen ( ch1 ) ; if ( strcmp ( ch , ch1 ) == 0 ) cout << - 1 << endl ; else cout << max ( l1 , l2 ) << endl ; string s , second ; return 0; }"}}
{"translation": {"en": "read user input to s and second [ENDL] declare long long variables p and q = 0 [ENDL] create new long long called xx with value 0 [ENDL] create new long long variable cnt = 0 [ENDL] if s = second [ENDL] print \" - 1 \" to the standard output [ENDL] if length of s is greater than length of second [ENDL] print length of s to the standard output [ENDL] else [ENDL] print length of second [ENDL] s1 , s2 = string", "c++": "int main() { cin >> s >> second ; long long p = 0 , q = 0 ; long long xx = 0 ; long long cnt = 0 ; if ( s == second ) cout << \" -1 \" << endl ; if ( s . size ( ) > second . size ( ) ) return 0; } cout << s . size ( ) << endl ; else cout << second . size ( ) << endl ; string s1 , s2 ; return 0; }"}}
{"translation": {"en": "Read s1 and s2 [ENDL] if s1 = s2 [ENDL] print - 1 [ENDL] else [ENDL] print max of s1 and s2 [ENDL] create strings a and b", "c++": "int main() { cin >> s1 >> s2 ; if ( s1 == s2 ) cout << - 1 << endl ; else cout << max ( s1 . size ( ) , s2 . size ( ) ) << endl ; string a , b ; } return 0; }"}}
{"translation": {"en": "read a and b [ENDL] let ints l = a . size ( ) and ll = b . size ( ) [ENDL] if l is not equal to ll [ENDL] print max ( l , ll ) [ENDL] else if a is equal to b [ENDL] print - 1 [ENDL] else [ENDL] print a . size ( ) [ENDL] a , b = string", "c++": "int main() { cin >> a >> b ; int l = a . size ( ) , ll = b . size ( ) ; if ( l != ll ) cout << max ( l , ll ) << endl ; else if ( a == b ) cout << - 1 << endl ; else cout << a . size ( ) << endl ; string a , b ; } return 0; }"}}
{"translation": {"en": "read a then b [ENDL] if size of a is not size of b [ENDL] print max of size of a and size of b [ENDL] else if compare of b on a is 0 [ENDL] print \" - 1 \" [ENDL] else [ENDL] s = int with s = size of a [ENDL] mp = string and int map [ENDL] x = int with x = s [ENDL] loop while x is greater than 0 [ENDL] for i = 0 to s and i + x is less or equal to s [ENDL] st = string with st = substring of a starting at i and a length of x [ENDL] set mp [ st ] to 1 [ENDL] for i = 0 to s and i + x is less or equal to s [ENDL] st = string with st = substring of b starting at i and a length of x [ENDL] if mp [ st ] is 0 [ENDL] print size of st [ENDL] decrement x [ENDL] create strings a and b", "c++": "int main() { cin >> a >> b ; if ( a . size ( ) != b . size ( ) ) cout << max ( a . size ( ) , b . size ( ) ) << endl ; else if ( a . compare ( b ) == 0 ) cout << \" -1 \" << endl ; else int s = a . size ( ) ; map < string , int > mp ; int x = s ; while ( x > 0 ) for ( int i = 0 ; i < s && i + x <= s ; i ++ ) string st ( a , i , x ) ; mp [ st ] = 1 ; for ( int i = 0 ; i < s && i + x <= s ; i ++ ) } string st ( b , i , x ) ; if ( mp [ st ] == 0 ) cout << st . size ( ) << endl ; x -- ; return 0; } } string a , b ; } } }"}}
{"translation": {"en": "read a and b [ENDL] if the length of a is not equal to the length of b [ENDL] print the max of length of a and length of b [ENDL] else [ENDL] if a is equal to b [ENDL] print - 1 [ENDL] else [ENDL] print the length of a [ENDL] dx = int array with the values 0 , 1 , 0 , - 1 , 1 , 1 , - 1 , - 1", "c++": "int main() { cin >> a >> b ; if ( a . length ( ) != b . length ( ) ) cout << max ( a . length ( ) , b . length ( ) ) << endl ; else if ( a == b ) cout << - 1 << endl ; else cout << a . length ( ) << endl ; int dx [ ] = { 0 , 1 , 0 , - 1 , 1 , 1 , - 1 , - 1 } ; } } return 0; }"}}
{"translation": {"en": "dy = int array with the values 1 , 0 , - 1 , 0 , 1 , - 1 , 1 , - 1 [ENDL] define empty function fast [ENDL] call fast [ENDL] s , t = string [ENDL] read s then t [ENDL] print - 1 if s is t else print max of size of s , size of t [ENDL] let n , c1 , c2 be long integers", "c++": "int dy [ ] = { 1 , 0 , - 1 , 0 , 1 , - 1 , 1 , - 1 } ; void fast ( ) { } fast ( ) ; int main() { string s , t ; cin >> s >> t ; cout << ( s == t ? - 1 : ( int ) max ( s . size ( ) , t . size ( ) ) ) << \" \\n \" ; long long n , c1 , c2 ; }"}}
{"translation": {"en": "let solve accepts long integer g [ENDL] t1 , t2 , left , res be long integers with t1 = ceiling of ( double ) n / g , t2 = n / g , left = n , res = 0 [ENDL] for t2 * g is not equal to left and left is greater than 0 , decrement left by t1 , decrement g by 1 , res = res + ( c1 + c2 * ( t1 - 1 ) * ( t1 - 1 ) ) [ENDL] for g is greater than 0 , decrement left by t2 , decrement g by 1 , the value of res = res + ( c1 + c2 * ( t2 - 1 ) * ( t2 - 1 ) ) [ENDL] return the value of res [ENDL] let t be a character [ENDL] read n , c1 , c2 [ENDL] let p , r , i be long integers with p = 0 , r = 0 [ENDL] for i = 0 to n exclusive [ENDL] read t [ENDL] if t is equal to 1 increment p by 1 else increment r by 1 [ENDL] let lo , hi be long integers with lo = 1 , hi = p [ENDL] while lo is less than hi [ENDL] let diff be a long integer with diff = hi - lo [ENDL] let p1 , p2 be long integers with p1 = lo + diff / 3 , p2 = lo + ( 2 * diff + 2 ) / 3 [ENDL] let s1 , s2 be a long integers with s1 = solve ( p1 ) , s2 = solve ( p2 ) [ENDL] if s1 is equal to s2 [ENDL] lo is equal to p1 + 1 , hi is equal to p2 - 1 [ENDL] else if s1 is greater than s2 [ENDL] the value of lo = p1 + 1 [ENDL] else do the following [ENDL] the value of hi = p2 - 1 [ENDL] print solve ( lo ) and newline [ENDL] declare long longs n , c1 , c2", "c++": "long long solve ( long long g ) long long t1 = ceil ( ( double ) n / g ) , t2 = n / g , left = n , res = 0 ; for ( ; t2 * g != left && left > 0 ; left -= t1 , g -- ) res += ( c1 + c2 * ( t1 - 1 ) * ( t1 - 1 ) ) ; for ( ; g > 0 ; left -= t2 , g -- ) res += ( c1 + c2 * ( t2 - 1 ) * ( t2 - 1 ) ) ; return res ; char t ; } int main() { cin >> n >> c1 >> c2 ; long long p = 0 , r = 0 , i ; for ( i = 0 ; i < n ; i ++ ) cin >> t ; ( t == ' 1 ' ) ? p ++ : r ++ ; long long lo = 1 , hi = p ; } while ( lo < hi ) long long diff = hi - lo ; long long p1 = lo + diff / 3 , p2 = lo + ( 2 * diff + 2 ) / 3 ; long long s1 = solve ( p1 ) , s2 = solve ( p2 ) ; if ( s1 == s2 ) lo = p1 + 1 , hi = p2 - 1 ; else if ( s1 > s2 ) lo = p1 + 1 ; else hi = p2 - 1 ; cout << solve ( lo ) << endl ; } long long n , c1 , c2 ; }"}}
{"translation": {"en": "declare solve with long long g as argument , returning long long [ENDL] declare long longs t1 = round up ( double casted ( n ) / g ) , t2 = n / g , left = n , res = 0 [ENDL] for t2 * g is not left and left is greater than 0 , decrementing left by t1 , decrementing g , increment res by ( c1 + c2 * ( t1 - 1 ) * ( t1 - 1 ) ) [ENDL] for g is greater than 0 , decrementing left by t2 , decrementing g , increment res by ( c1 + c2 * ( t2 - 1 ) * ( t2 - 1 ) ) [ENDL] return res from function [ENDL] declare t as character [ENDL] read n , c1 , c2 [ENDL] declare long longs p = 0 , r = 0 , i [ENDL] for i = 0 to n exclusive [ENDL] read t [ENDL] increment p if t is ' 1 ' , else increment r [ENDL] declare long long lo = 1 , hi = p [ENDL] while lo is less than hi [ENDL] declare long long diff = hi - lo [ENDL] declare long longs p1 = lo + diff / 3 , p2 = lo + ( 2 * diff + 2 ) / 3 [ENDL] declare long longs s1 = result of run solve with p1 as argument , s2 = result of run solve ( p2 ) [ENDL] if s1 is s2 [ENDL] let lo be p1 + 1 , hi be p2 - 1 [ENDL] else if s1 is greater than s2 [ENDL] let lo be p1 + 1 [ENDL] else [ENDL] let hi be p2 - 1 [ENDL] print result of run solve with lo as argument , newline [ENDL] create integer n", "c++": "long long solve ( long long g ) long long t1 = ceil ( ( double ) n / g ) , t2 = n / g , left = n , res = 0 ; for ( ; t2 * g != left && left > 0 ; left -= t1 , g -- ) res += ( c1 + c2 * ( t1 - 1 ) * ( t1 - 1 ) ) ; for ( ; g > 0 ; left -= t2 , g -- ) res += ( c1 + c2 * ( t2 - 1 ) * ( t2 - 1 ) ) ; return res ; char t ; } int main() { cin >> n >> c1 >> c2 ; long long p = 0 , r = 0 , i ; for ( i = 0 ; i < n ; i ++ ) cin >> t ; ( t == ' 1 ' ) ? p ++ : r ++ ; long long lo = 1 , hi = p ; } while ( lo < hi ) long long diff = hi - lo ; long long p1 = lo + diff / 3 , p2 = lo + ( 2 * diff + 2 ) / 3 ; long long s1 = solve ( p1 ) , s2 = solve ( p2 ) ; if ( s1 == s2 ) lo = p1 + 1 , hi = p2 - 1 ; else if ( s1 > s2 ) lo = p1 + 1 ; else hi = p2 - 1 ; cout << solve ( lo ) << endl ; } int n ; }"}}
{"translation": {"en": "create long longs c1 , c2 [ENDL] read n read c1 read c2 [ENDL] create integer cnt with cnt = 0 [ENDL] for i = 1 to n inclusive [ENDL] create character c [ENDL] read c [ENDL] if c is ' 1 ' increment cnt [ENDL] create long long ans with ans = 1e18 [ENDL] for i = 1 to cnt inclusive [ENDL] create long longs p , mod with p = n / i , mod = n % i [ENDL] create long long now with now = ( p - 1 ) * ( p - 1 ) * c2 * ( i - mod ) + c1 * i + p * p * mod * c2 [ENDL] set ans to minimum of ans and now [ENDL] print ans print newline [ENDL] create long longs n , m , i , j , p , q , cnt , c1 , c2 , x , y , mn", "c++": "int main() { long long c1 , c2 ; cin >> n >> c1 >> c2 ; int cnt = 0 ; for ( int i = 1 ; i <= n ; i ++ ) char c ; cin >> c ; if ( c == ' 1 ' ) cnt ++ ; long long ans = 1e18 ; } for ( int i = 1 ; i <= cnt ; i ++ ) long long p = n / i , mod = n % i ; long long now = ( p - 1 ) * ( p - 1 ) * c2 * ( i - mod ) + c1 * i + p * p * mod * c2 ; ans = min ( ans , now ) ; cout << ans << endl ; } long long n , m , i , j , p , q , cnt , c1 , c2 , x , y , mn ; return 0; }"}}
{"translation": {"en": "create string s [ENDL] while read n read c1 read c2 is true [ENDL] read charaacter [ENDL] read s [ENDL] set cnt to 0 [ENDL] set mn to LONG_LONG_MAX [ENDL] for i = 0 to size of s exclusive [ENDL] if s [ i ] is ' 1 ' , increment cnt [ENDL] for i = 1 to cnt inclusive [ENDL] set x to n / i [ENDL] set y to n % i [ENDL] set p to ( c1 + c2 * ( x - 1 ) * ( x - 1 ) ) * ( i - y ) [ENDL] set q to ( c1 + ( c2 * x * x ) ) * y [ENDL] set m to p + q [ENDL] set mn to minimum of mn and m [ENDL] print mn print newline [ENDL] declare constant int MAX_N = 2e5 + 10", "c++": "int main() { string s ; while ( cin >> n >> c1 >> c2 ) getchar ( ) ; cin >> s ; cnt = 0 ; mn = LONG_LONG_MAX ; for ( i = 0 ; i < s . size ( ) ; i ++ ) if ( s [ i ] == ' 1 ' ) cnt ++ ; for ( i = 1 ; i <= cnt ; i ++ ) } x = n / i ; y = n % i ; p = ( c1 + c2 * ( x - 1 ) * ( x - 1 ) ) * ( i - y ) ; q = ( c1 + ( c2 * x * x ) ) * y ; m = p + q ; mn = min ( mn , m ) ; cout << mn << endl ; } const int MAX_N = 2e5 + 10 ; } }"}}
{"translation": {"en": "declare constant int MAX_LOG = 62 [ENDL] declare constant long long INF = 1e18 + 1 [ENDL] declare constant long long MOD = 1e9 + 7 [ENDL] declare long long variables n , c1 , c2 and ans with ans = INF [ENDL] create string s [ENDL] declare integer variable m [ENDL] read input to n , c1 and c2 [ENDL] read s [ENDL] for i from 0 to n exclusive [ENDL] if s [ i ] = ' 1 ' , increment m [ENDL] for i from 1 to m inclusive [ENDL] create long long k = n / i [ENDL] create long long r = n % i [ENDL] declare long long variable tmp = r * ( c1 + c2 * k * k ) [ENDL] add ( i - r ) * ( c1 + c2 * ( k - 1 ) * ( k - 1 ) ) to tmp [ENDL] set ans to min of ans and tmp [ENDL] print ans [ENDL] n = long long", "c++": "const int MAX_LOG = 62 ; const long long INF = 1e18 + 1 ; const long long MOD = 1e9 + 7 ; long long n , c1 , c2 , ans = INF ; string s ; int m ; cin >> n >> c1 >> c2 ; int main() { cin >> s ; for ( int i = 0 ; i < n ; i ++ ) if ( s [ i ] == ' 1 ' ) m ++ ; for ( int i = 1 ; i <= m ; i ++ ) long long k = n / i ; long long r = n % i ; long long tmp = r * ( c1 + c2 * ( k ) * k ) ; tmp += ( i - r ) * ( c1 + c2 * ( k - 1 ) * ( k - 1 ) ) ; ans = min ( ans , tmp ) ; cout << ans << endl ; } long long n ; }"}}
{"translation": {"en": "read n [ENDL] if n is 1 print 4 [ENDL] if n is 2 print 22 [ENDL] if n is 3 print 27 [ENDL] if n is 4 print 58 [ENDL] if n is 5 print 85 [ENDL] if n is 6 print 94 [ENDL] if n is 7 print 121 [ENDL] if n is 8 print 166 [ENDL] if n is 9 print 202 [ENDL] if n is 10 print 265 [ENDL] if n is 11 print 274 [ENDL] if n is 12 print 319 [ENDL] if n is 13 print 346 [ENDL] if n is 14 print 355 [ENDL] if n is 15 print 378 [ENDL] if n is 16 print 382 [ENDL] if n is 17 print 391 [ENDL] if n is 18 print 438 [ENDL] if n is 19 print 454 [ENDL] if n is 20 print 483 [ENDL] if n is 21 print 517 [ENDL] if n is 22 print 526 [ENDL] if n is 23 print 535 [ENDL] if n is 24 print 562 [ENDL] if n is 25 print 576 [ENDL] if n is 26 print 588 [ENDL] if n is 27 print 627 [ENDL] if n is 28 print 634 [ENDL] if n is 29 print 636 [ENDL] if n is 30 print 645 [ENDL] print a new line [ENDL] in the function es_primo that takes integer n and returns bool", "c++": "cin >> n ; int main() { if ( n == 1 ) cout << 4 ; if ( n == 2 ) cout << 22 ; if ( n == 3 ) cout << 27 ; if ( n == 4 ) cout << 58 ; if ( n == 5 ) cout << 85 ; if ( n == 6 ) cout << 94 ; if ( n == 7 ) cout << 121 ; if ( n == 8 ) cout << 166 ; if ( n == 9 ) cout << 202 ; if ( n == 10 ) cout << 265 ; if ( n == 11 ) cout << 274 ; if ( n == 12 ) cout << 319 ; if ( n == 13 ) cout << 346 ; if ( n == 14 ) cout << 355 ; if ( n == 15 ) cout << 378 ; if ( n == 16 ) cout << 382 ; if ( n == 17 ) cout << 391 ; if ( n == 18 ) cout << 438 ; if ( n == 19 ) cout << 454 ; if ( n == 20 ) cout << 483 ; if ( n == 21 ) cout << 517 ; if ( n == 22 ) cout << 526 ; if ( n == 23 ) cout << 535 ; if ( n == 24 ) cout << 562 ; if ( n == 25 ) cout << 576 ; if ( n == 26 ) cout << 588 ; if ( n == 27 ) cout << 627 ; if ( n == 28 ) cout << 634 ; if ( n == 29 ) cout << 636 ; if ( n == 30 ) cout << 645 ; cout << endl ; bool es_primo ( int n ) return 0; }"}}
{"translation": {"en": "if n < 4 , return true [ENDL] for i = 2 to i * i < = n [ENDL] if n modulo i is 0 , return false [ENDL] return true [ENDL] in the function sum_digitos that takes integer n and returns int [ENDL] sum = integer with sum = 0 [ENDL] while n > 0 [ENDL] sum = sum + n modulo 10 [ENDL] n = n / 10 [ENDL] return sum [ENDL] in the function sum_factores that takes integer n and returns integer [ENDL] sum = integer with sum = 0 [ENDL] for i = 2 to i * i < = n [ENDL] while n modulo i is 0 [ENDL] sum = sum + sum_digitos ( i ) [ENDL] n = n / i [ENDL] if n > 1 , sum = sum + sum_digitos ( n ) [ENDL] return sum [ENDL] in the function busca_sig that takes integer n and returns integer [ENDL] do increment n , while es_primo ( n ) or sum_digitos ( n ) is not sum_factores ( n ) [ENDL] return n [ENDL] n = integer [ENDL] read n [ENDL] act = integer with act = 0 [ENDL] for i = 1 to n , act = busca_sig ( act ) [ENDL] print act [ENDL] declare integer variable n", "c++": "if ( n < 4 ) return true ; for ( int i = 2 ; i * i <= n ; i ++ ) if ( n % i == 0 ) return false ; return true ; } int sum_digitos ( int n ) } int sum = 0 ; while ( n > 0 ) sum += n % 10 ; n /= 10 ; return sum ; } int sum_factores ( int n ) } int sum = 0 ; for ( int i = 2 ; i * i <= n ; i ++ ) while ( n % i == 0 ) sum += sum_digitos ( i ) ; n /= i ; if ( n > 1 ) { sum += sum_digitos ( n ) ; } } } return sum ; int busca_sig ( int n ) } do { n ++ ; } while ( es_primo ( n ) || sum_digitos ( n ) != sum_factores ( n ) ) ; return n ; int n ; } int main() { cin >> n ; int act = 0 ; for ( int i = 1 ; i <= n ; i ++ ) { act = busca_sig ( act ) ; } cout << act << \" \\n \" ; int n ; return 0; }"}}
{"translation": {"en": "declare string t [ENDL] declare int k [ENDL] create int ans_len [ENDL] create char array str with 20 * 100010 elements [ENDL] create int array chars s with size 80 * 100010 [ENDL] function push_up with int argument rt [ENDL] chars [ rt ] = chars [ rt < < 1 ] + chars [ rt < < 1 | 1 ] [ENDL] void function update with int arguments L , R , left , right and rt [ENDL] if chars [ rt ] > = right - left + 1 , return [ENDL] if left is equal to right [ENDL] create char array s with rt elements [ENDL] set str [ left ] to t [ left - L ] [ENDL] return [ENDL] if L > right or R < left , return [ENDL] int mid = ( left + right ) > > 1 [ENDL] if mid > = R [ENDL] call update with arguments L , R , left , mid and rt < < 1 [ENDL] else if mid is less than L [ENDL] call update with arguments L , R , mid + 1 , right and rt < < 1 | 1 [ENDL] else [ENDL] call update with arguments L , R , left , mid and rt < < 1 [ENDL] call update with arguments L , R , mid + 1 , right and rt < < 1 | 1 [ENDL] call push_up ( rt ) [ENDL] create int pos [ENDL] declare integer endpos [ENDL] read n and loop further [ENDL] change ans_len to 0 [ENDL] for i from 1 to 2000010 exclusive , assign ' a ' to str [ i ] [ENDL] set sizeof ( chars ) bytes at the pointer chars to 0 [ENDL] for i from 1 to n inclusive [ENDL] read input to t and k [ENDL] loop j from 1 to k inclusive [ENDL] read pos [ENDL] set endpos to pos + length of t - 1 [ENDL] call update with arguments pos , endpos , 1 , 2000010 and 1 [ENDL] if j = k [ENDL] change ans_len to endpos if endpos is greater than ans_len [ENDL] for i from 1 to ans_len inclusive , print str [ i ] [ENDL] print new line [ENDL] create long long n , k , p", "c++": "string t ; int k ; int ans_len ; char str [ 20 * 100010 ] ; int chars [ 80 * 100010 ] ; void push_up ( int rt ) chars [ rt ] = chars [ rt << 1 ] + chars [ rt << 1 | 1 ] ; void update ( int L , int R , int left , int right , int rt ) } if ( chars [ rt ] >= right - left + 1 ) return ; if ( left == right ) chars [ rt ] = 1 ; str [ left ] = t [ left - L ] ; return ; if ( L > right || R < left ) return ; } int mid = ( left + right ) >> 1 ; if ( mid >= R ) update ( L , R , left , mid , rt << 1 ) ; else if ( mid < L ) update ( L , R , mid + 1 , right , rt << 1 | 1 ) ; else update ( L , R , left , mid , rt << 1 ) ; update ( L , R , mid + 1 , right , rt << 1 | 1 ) ; push_up ( rt ) ; } int pos ; } int main() { int endpos ; while ( cin >> n ) ans_len = 0 ; for ( int i = 1 ; i < 2000010 ; i ++ ) str [ i ] = ' a ' ; memset ( chars , 0 , sizeof ( chars ) ) ; for ( int i = 1 ; i <= n ; i ++ ) cin >> t >> k ; for ( int j = 1 ; j <= k ; j ++ ) cin >> pos ; endpos = pos + t . length ( ) - 1 ; update ( pos , endpos , 1 , 2000010 , 1 ) ; if ( j == k ) if ( endpos > ans_len ) ans_len = endpos ; for ( int i = 1 ; i <= ans_len ; i ++ ) cout << str [ i ] ; } } } cout << endl ; long long n , k , p ; } }"}}
{"translation": {"en": "read n read k read p [ENDL] create long long arrays pe , ke , with pe size 1001 , ke size 2002 [ENDL] for a = 0 to n exclusive , read pe [ a ] [ENDL] for a = 0 to k exclusive , read ke [ a ] [ENDL] sort elements from pe to pe + n [ENDL] sort elements from ke to pe + k [ENDL] create long long mins with mins = 99999999999999 [ENDL] for a = 0 to k - n + 1 exclusive [ENDL] create long long tmp with tmp = 0 [ENDL] for b = 0 to n exclusive , set tmp to maximum of tmp and absolute value of ( pe [ b ] - ke [ a + b ] ) + absolute value of ( ke [ a + b ] - p ) [ENDL] set mins to minimum of tmp and mins [ENDL] print mins print newline [ENDL] mod = const int with mod = 1000000007", "c++": "int main() { cin >> n >> k >> p ; long long pe [ 1001 ] , ke [ 2002 ] ; for ( int a = 0 ; a < n ; a ++ ) cin >> pe [ a ] ; for ( int a = 0 ; a < k ; a ++ ) cin >> ke [ a ] ; sort ( pe , pe + n ) ; sort ( ke , ke + k ) ; long long mins = 99999999999999 ; for ( int a = 0 ; a < k - n + 1 ; a ++ ) long long tmp = 0 ; for ( int b = 0 ; b < n ; b ++ ) tmp = max ( tmp , abs ( pe [ b ] - ke [ a + b ] ) + abs ( ke [ a + b ] - p ) ) ; mins = min ( tmp , mins ) ; cout << mins << endl ; } const int mod = 1000000007 ; return 0; }"}}
{"translation": {"en": "inf = const long long with inf = 1000000000000 [ENDL] n , k , p = int [ENDL] read n then k then p [ENDL] A , B = vector of long longs [ENDL] for i = 0 to n [ENDL] x = long long [ENDL] read x [ENDL] append x to A [ENDL] for i = 0 to k [ENDL] x = long long [ENDL] read x [ENDL] append x to B [ENDL] sort vector A [ENDL] sort vector B [ENDL] ans = long long with ans = inf [ENDL] for i = 0 to k - n inclusive [ENDL] temp = long long with temp = 0 [ENDL] index = int with index = i [ENDL] for j = 0 to n [ENDL] temp2 = long long with temp2 = 0 [ENDL] set temp2 to the sum the absolute value of A [ j ] - B [ index ] and the absolute value of B [ index ] - p [ENDL] set temp to max between temp and temp2 [ENDL] increment index [ENDL] set ans to min between ans and temp [ENDL] print ans [ENDL] N = constant integer with value of 2e5 + 50", "c++": "const long long inf = 1000000000000 ; int n , k , p ; int main() { cin >> n >> k >> p ; vector < long long > A , B ; for ( int i = 0 ; i < n ; i ++ ) long long x ; cin >> x ; A . push_back ( x ) ; for ( int i = 0 ; i < k ; i ++ ) } long long x ; cin >> x ; B . push_back ( x ) ; sort ( A . begin ( ) , A . end ( ) ) ; } sort ( B . begin ( ) , B . end ( ) ) ; long long ans = inf ; for ( int i = 0 ; i <= k - n ; i ++ ) long long temp = 0 ; int index = i ; for ( int j = 0 ; j < n ; j ++ ) long long temp2 = 0 ; temp2 = abs ( A [ j ] - B [ index ] ) + abs ( B [ index ] - p ) ; temp = max ( temp , temp2 ) ; index ++ ; ans = min ( ans , temp ) ; } cout << ans << ' \\n ' ; } const int N = 2e5 + 50 ; return 0; }"}}
{"translation": {"en": "M = constant integer with value of 1e6 [ENDL] oo = constant long long with value of 1e18 [ENDL] mod = constant integer with value of 1e9 + 7 [ENDL] a , b = long long arrays with a length of 1010 and b length of 2010 [ENDL] n , k , p = long long [ENDL] in function can that takes long long variable md and returns a boolean [ENDL] id = long long with value of 0 [ENDL] for i = 0 to k exclusive [ENDL] if the absolute value of ( a [ id ] - b [ i ] ) plus the absolute value of ( b [ i ] - p ) is greater than md then continue [ENDL] add 1 to id [ENDL] if id equals n return 1 [ENDL] read n , k , and p [ENDL] for i = 0 to n exclusive read a [ i ] [ENDL] for i = 0 to k exclusive read b [ i ] [ENDL] sort the first n elements of a [ENDL] sort the first k elements of b [ENDL] md , lo , hi , and ans = long long with lo value of 0 and hi value of 2e9 and ans value of 0 [ENDL] while lo is less than or equal to hi [ENDL] set md to half of lo plus hi [ENDL] if call can with argument of md is true [ENDL] set hi to md minus 1 [ENDL] set ans to md [ENDL] else [ENDL] set lo to md plus 1 [ENDL] print ans [ENDL] N = const long long with N = 1000 + 5", "c++": "const int M = 1e6 ; const long long oo = 1e18 ; const int mod = 1e9 + 7 ; long long a [ 1010 ] , b [ 2010 ] ; long long n , k , p ; bool can ( long long md ) long long id = 0 ; for ( int i = 0 ; i < k ; i ++ ) if ( abs ( a [ id ] - b [ i ] ) + abs ( b [ i ] - p ) > md ) continue ; id ++ ; if ( id == n ) return 1 ; cin >> n >> k >> p ; } return 0; } int main() { for ( int i = 0 ; i < n ; i ++ ) cin >> a [ i ] ; for ( int i = 0 ; i < k ; i ++ ) cin >> b [ i ] ; sort ( a , a + n ) ; sort ( b , b + k ) ; long long md , lo = 0 , hi = 2e9 , ans = 0 ; while ( lo <= hi ) md = ( lo + hi ) / 2 ; if ( can ( md ) ) hi = md - 1 ; ans = md ; else lo = md + 1 ; cout << ans << endl ; } const long long N = 1000 + 5 ; }"}}
{"translation": {"en": "N = const long long with K = 2000 + 5 [ENDL] n , m , fi = long long [ENDL] p = array of N long long [ENDL] k = array of K long long [ENDL] in the function di that takes long long a and b and returns long long [ENDL] return abs of a - b [ENDL] in the function ok that takes long long t and returns bool [ENDL] set poz to 1 [ENDL] for i = 1 to n inclusive [ENDL] if poz > m return 0 [ENDL] while 1 [ENDL] tot = long long with tot = di of p [ i ] and k [ poz ] + di of k [ poz ] and fi [ENDL] if tot < = t break loop [ENDL] increment poz [ENDL] if poz > m return 0 [ENDL] increment poz [ENDL] return 1 [ENDL] read n , m , fi [ENDL] for i = 1 to n inclusive read p [ i ] [ENDL] for i = 1 to m inclusive read k [ i ] [ENDL] sort p + 1 and p + n + 1 [ENDL] sort k + 1 and k + m + 1 [ENDL] r , pas = long long with r = - 1 , pas = 1LL < < 60 [ENDL] while pas [ENDL] if ok ( r + pas ) is 0 r = r + pas [ENDL] pas = pas > > 1 [ENDL] increment r [ENDL] print r [ENDL] create long longs n , k , p", "c++": "const long long K = 2000 + 5 ; long long n , m , fi ; long long p [ N ] ; long long k [ K ] ; long long di ( long long a , long long b ) return abs ( a - b ) ; bool ok ( long long t ) } long long poz = 1 ; for ( long long i = 1 ; i <= n ; i ++ ) if ( poz > m ) return 0 ; while ( 1 ) long long tot = di ( p [ i ] , k [ poz ] ) + di ( k [ poz ] , fi ) ; if ( tot <= t ) break ; poz ++ ; if ( poz > m ) return 0 ; poz ++ ; } return 1 ; } cin >> n >> m >> fi ; } int main() { for ( long long i = 1 ; i <= n ; i ++ ) { cin >> p [ i ] ; } for ( long long i = 1 ; i <= m ; i ++ ) { cin >> k [ i ] ; } sort ( p + 1 , p + n + 1 ) ; sort ( k + 1 , k + m + 1 ) ; long long r = - 1 , pas = ( 1LL << 60 ) ; while ( pas ) if ( ok ( r + pas ) == 0 ) { r += pas ; } pas >>= 1 ; r ++ ; } cout << r << \" \\n \" ; long long n , k , p ; return 0; }"}}
{"translation": {"en": "create long long arrays a , b , with a size 1005 , b size 2005 [ENDL] declare moze with long long x as argument , returning boolean [ENDL] create long long h with h = 0 [ENDL] for i = 0 to n exclusive [ENDL] if h is k , return false from function [ENDL] create boolean sat with sat = false [ENDL] while h is less than k [ENDL] create long long d with d = absolute value of ( a [ i ] - b [ h ] ) + absolute value of ( b [ h ] - p ) [ENDL] increment h [ENDL] if d is less than or equal to x [ENDL] set sat to true [ENDL] break loop [ENDL] if not sat , return false from function [ENDL] return true from function [ENDL] read n read k read p [ENDL] for i = 0 to n exclusive , read a [ i ] [ENDL] for i = 0 to k exclusive , read b [ i ] [ENDL] sort elements from a to a + n [ENDL] sort elements from b to b + n [ENDL] create long longs l , r , o , with l = 0 , r = 4e9 , o = - 1 [ENDL] while l is less than or equal to r [ENDL] create long long m with m = ( l + r ) bitshift right 1 [ENDL] if result of run moze with m as argument is true [ENDL] set o to m [ENDL] set r to m - 1 [ENDL] else [ENDL] set l to m + 1 [ENDL] print o print ' \\ n ' [ENDL] MOD = const int with MOD = 1e9 + 7", "c++": "long long a [ 1005 ] , b [ 2005 ] ; bool moze ( long long x ) long long h = 0 ; for ( long long i = 0 ; i < n ; i ++ ) if ( h == k ) return false ; bool sat = false ; while ( h < k ) long long d = abs ( a [ i ] - b [ h ] ) + abs ( b [ h ] - p ) ; h ++ ; if ( d <= x ) sat = true ; break ; if ( ! sat ) return false ; } } return true ; } cin >> n >> k >> p ; } int main() { for ( int i = 0 ; i < n ; i ++ ) cin >> a [ i ] ; for ( int i = 0 ; i < k ; i ++ ) cin >> b [ i ] ; sort ( a , a + n ) ; sort ( b , b + k ) ; long long l = 0 , r = 4e9 , o = - 1 ; while ( l <= r ) long long m = ( l + r ) >> 1 ; if ( moze ( m ) ) o = m ; r = m - 1 ; else l = m + 1 ; cout << o << ' \\n ' ; } } const int MOD = 1e9 + 7 ; }"}}
{"translation": {"en": "INF = const long long int with INF = 1e18 [ENDL] keya , per = vectors of long long int [ENDL] ans = long long int with ans = INF [ENDL] i , j , k , n , p , x = integers [ENDL] read n , k , p [ENDL] for i = 0 to n exclusive [ENDL] read x [ENDL] append x in per [ENDL] for i = 0 to k exclusive [ENDL] read x [ENDL] append x in key [ENDL] sort begin of per and end of per [ENDL] sort begin of key and end of key [ENDL] for j = 0 to j + n - 1 < k [ENDL] now = long long int with now = 0 [ENDL] for i = 0 to n exclusive now = max of now and abs ( per [ i ] - key [ j + i ] ) + abs ( key [ j + i ] - p ) [ENDL] ans = min of ans and now [ENDL] print ans [ENDL] create long longs n , k , p", "c++": "const long long int INF = 1e18 ; vector < long long int > key , per ; long long int ans = INF ; int i , j , k , n , p , x ; int main() { cin >> n >> k >> p ; for ( i = 0 ; i < n ; i ++ ) cin >> x ; per . push_back ( x ) ; for ( i = 0 ; i < k ; i ++ ) } cin >> x ; key . push_back ( x ) ; sort ( per . begin ( ) , per . end ( ) ) ; } sort ( key . begin ( ) , key . end ( ) ) ; for ( j = 0 ; j + n - 1 < k ; j ++ ) long long int now = 0 ; for ( i = 0 ; i < n ; i ++ ) { now = max ( now , abs ( per [ i ] - key [ j + i ] ) + abs ( key [ j + i ] - p ) ) ; } ans = min ( ans , now ) ; cout << ans << ' \\n ' ; } long long n , k , p ; return 0; }"}}
{"translation": {"en": "read n read k read p [ENDL] create long long arrays pe , ke , with pe size 1001 , ke size 2002 [ENDL] for a = 0 to n exclusive , read pe [ a ] [ENDL] for a = 0 to k exclusive , read ke [ a ] [ENDL] sort elements from pe to pe + n [ENDL] sort elements from ke to ke + n [ENDL] create long long mins with mins = 99999999999999 [ENDL] for a = 0 to k - n + 1 exclusive [ENDL] create long long tmp with tmp = 0 [ENDL] for b = 0 to n exclusive , set tmp to maximum of ( tmp and absolute value of ( pe [ b ] - ke [ a + b ] ) + absolute value of ( ke [ a + b ] - p ) ) [ENDL] set mins to minimum of tmp and mins [ENDL] print mins print newline [ENDL] n , k , p = integer", "c++": "int main() { cin >> n >> k >> p ; long long pe [ 1001 ] , ke [ 2002 ] ; for ( int a = 0 ; a < n ; a ++ ) cin >> pe [ a ] ; for ( int a = 0 ; a < k ; a ++ ) cin >> ke [ a ] ; sort ( pe , pe + n ) ; sort ( ke , ke + k ) ; long long mins = 99999999999999 ; for ( int a = 0 ; a < k - n + 1 ; a ++ ) long long tmp = 0 ; for ( int b = 0 ; b < n ; b ++ ) tmp = max ( tmp , abs ( pe [ b ] - ke [ a + b ] ) + abs ( ke [ a + b ] - p ) ) ; mins = min ( tmp , mins ) ; cout << mins << endl ; } int n , k , p ; return 0; }"}}
{"translation": {"en": "person = long long array of size 1005 , key = long long array of size 2005 [ENDL] ans , tmp = long long [ENDL] while read n , k , p [ENDL] ans = 99999999999999LL [ENDL] for i = 0 to n exclusive , read person [ i ] [ENDL] for i = 0 to k exclusive , read key [ i ] [ENDL] sort person and person + n [ENDL] sort key and key + k [ENDL] for i = 0 to i + n < = k [ENDL] tmp = 0 [ENDL] for j = 0 to n exclusive , tmp = max of tmp and abs of key [ i + j ] - person [ j ] + abs of p - key [ i + j ] [ENDL] ans = min of tmp and ans [ENDL] print ans [ENDL] create 64 bit integer infint64_t with infint64_t = 9223372036854775807LL", "c++": "long long person [ 1005 ] , key [ 2005 ] ; long long ans , tmp ; while ( cin >> n >> k >> p ) int main() { ans = 99999999999999LL ; for ( int i = 0 ; i < n ; i ++ ) { cin >> person [ i ] ; } for ( int i = 0 ; i < k ; i ++ ) { cin >> key [ i ] ; } sort ( person , person + n ) ; sort ( key , key + k ) ; for ( int i = 0 ; i + n <= k ; i ++ ) tmp = 0 ; for ( int j = 0 ; j < n ; j ++ ) { tmp = max ( tmp , abs ( key [ i + j ] - person [ j ] ) + abs ( p - key [ i + j ] ) ) ; } ans = min ( tmp , ans ) ; cout << ans << endl ; } const int64_t infint64_t = 9223372036854775807LL ; } return 0; }"}}
{"translation": {"en": "declare solve with no arguments , returning void [ENDL] create 64 bit integers n , k , p [ENDL] read n read k read p [ENDL] create 64 bit integer vector a initialized with n [ENDL] for i = 0 to n exclusive , read a [ i ] [ENDL] sort elements from beginning of a to end of a [ENDL] create 64 bit integer vector b initialized with k [ENDL] for i = 0 to k exclusive , read b [ i ] [ENDL] sort elements from beginning of b to end of b [ENDL] create 64 bit integer best with best = infint64_t [ENDL] for i = 0 to k - n inclusive [ENDL] create 64 bit integer curWorst with curWorst = 0 [ENDL] for j = 0 to n exclusive [ENDL] create 64 bit integer cur with cur = absolute value of ( b [ i + j ] - p ) + absolute value of ( b [ i + j ] - a [ j ] ) [ENDL] set curWorst to maximum of curWorst and cur [ENDL] set best to minimum of best and curWorst [ENDL] print best print newline [ENDL] run solve [ENDL] create long long t", "c++": "void solve ( ) int64_t n , k , p ; cin >> n >> k >> p ; vector < int64_t > a ( n ) ; for ( int64_t i = 0 ; i < n ; i ++ ) { cin >> a [ i ] ; } sort ( a . begin ( ) , a . end ( ) ) ; vector < int64_t > b ( k ) ; for ( int64_t i = 0 ; i < k ; i ++ ) { cin >> b [ i ] ; } sort ( b . begin ( ) , b . end ( ) ) ; int64_t best = infint64_t ; for ( int64_t i = 0 ; i <= k - n ; i ++ ) int64_t curWorst = 0 ; for ( int64_t j = 0 ; j < n ; j ++ ) int64_t cur = abs ( b [ i + j ] - p ) + abs ( b [ i + j ] - a [ j ] ) ; curWorst = max ( curWorst , cur ) ; best = min ( best , curWorst ) ; } cout << best << endl ; } solve ( ) ; } int main() { long long t ; return 0; }"}}
{"translation": {"en": "read t [ENDL] decrement t and loop further , while t > 0 [ENDL] declare long longs a and b [ENDL] read a and b [ENDL] long long c = pow ( a * b , 1 . 0 / 3 . 0 ) [ENDL] increment c while c * c * c < a * b [ENDL] decrement c while c * c * c > a * b [ENDL] if c * c * c = a * b & & a % c = 0 & & b % c = 0 [ENDL] print \" Yes \\ n \" [ENDL] else [ENDL] print \" No \\ n \" [ENDL] let q be a long integer", "c++": "int main() { cin >> t ; while ( t -- ) long long a , b ; cin >> a >> b ; long long c = pow ( a * b , 1.0 / 3.0 ) ; while ( c * c * c < a * b ) c ++ ; while ( c * c * c > a * b ) c -- ; if ( c * c * c == a * b && a % c == 0 && b % c == 0 ) cout << \" Yes\\n \" ; else cout << \" No\\n \" ; long long q ; } } return 0; }"}}
{"translation": {"en": "read q [ENDL] while q value is decreased by 1 [ENDL] let a , b be long integers [ENDL] read a and b [ENDL] let prod be long integer with prod = a * b [ENDL] let round1 be long integer with round1 = round ( cbrt ( prod ) ) [ENDL] if a modulus round1 is equal to 0 and b modulus round1 is equal to 0 [ENDL] if round1 is equal to 1 [ENDL] if a is equal to 1 and b is equal to 1 [ENDL] print Yes [ENDL] print newline [ENDL] else do the following [ENDL] print No [ENDL] print newline [ENDL] else do the following [ENDL] print Yes [ENDL] print newline [ENDL] else do the following [ENDL] print No [ENDL] print newline [ENDL] q = long long", "c++": "int main() { cin >> q ; while ( q -- ) long long a , b ; cin >> a >> b ; long long prod = a * b ; long long round1 = round ( cbrt ( prod ) ) ; if ( a % round1 == 0 && b % round1 == 0 ) if ( round1 == 1 ) if ( a == 1 && b == 1 ) cout << \" Yes \" << \" \\n \" ; else cout << \" No \" << \" \\n \" ; else cout << \" Yes \" << \" \\n \" ; else cout << \" No \" << \" \\n \" ; long long q ; } return 0; }"}}
{"translation": {"en": "read q [ENDL] while q is not 0 subtract 1 from q do [ENDL] a , b = long long [ENDL] read a and b [ENDL] prod = long long with value of a * b [ENDL] round1 = long long with value of the cubic root of prod rounded to the nearest whole number [ENDL] if a mod round1 equals 0 and b mod round1 equals 0 [ENDL] if round1 equals 1 [ENDL] if a and b equal 1 [ENDL] print Yes [ENDL] print a new line [ENDL] else [ENDL] print No [ENDL] print a new line [ENDL] else [ENDL] print Yes [ENDL] print a new line [ENDL] else [ENDL] print No [ENDL] print a new line [ENDL] in function maxx taking two references to long long ints a and b and returning a long long int", "c++": "int main() { cin >> q ; while ( q -- ) long long a , b ; cin >> a >> b ; long long prod = a * b ; long long round1 = round ( cbrt ( prod ) ) ; if ( a % round1 == 0 && b % round1 == 0 ) if ( round1 == 1 ) if ( a == 1 && b == 1 ) cout << \" Yes \" << \" \\n \" ; else cout << \" No \" << \" \\n \" ; else cout << \" Yes \" << \" \\n \" ; else cout << \" No \" << \" \\n \" ; long long int maxx ( long long int & a , long long int & b ) } return 0; }"}}
{"translation": {"en": "return a if it is greater than b else return b [ENDL] in function minn taking two references to long long ints a and b and returning a long long int [ENDL] return b if a is greater than b else return a [ENDL] define empty function boostISO [ENDL] in function gcd taking two long long ints a and b and returning a long long int [ENDL] return a if b is 0 else return gcd of b and a mod b [ENDL] in function int_gcd taking two ints a and b and returning an int [ENDL] returna if b is 0 else return int_gcd of b and a mod b [ENDL] in function lcm taking two long long ints a and b and returning a long long int [ENDL] return a / gcd of a and b * b [ENDL] in function poww taking three long long ints base , exp and mod and returning a long long int [ENDL] set base to base modulo mod [ENDL] result = long long int with result = 1 [ENDL] loop while exp is greater than 0 [ENDL] if exp bitwise - and 1 is 1 then set result to ( result * base ) modulo mod [ENDL] set base to ( base * base ) modulo mod [ENDL] set exp to exp bitshift right by 1 [ENDL] return result [ENDL] in function cube_root taking a long long int x and returning an int [ENDL] l , r = long long int with l = 1 and r = 1e6 + 10 [ENDL] loop while l is less than r [ENDL] mid = long long int with mid = ( l + r ) bitshift right by 1 [ENDL] if mid * mid * mid is greater or equal to x [ENDL] set r to mid [ENDL] else [ENDL] set l ti mid + 1 [ENDL] if l * l * l is x then return l [ENDL] return - 1 [ENDL] call boostISO [ENDL] t = int [ENDL] read t [ENDL] loop t times [ENDL] a , b = long long int [ENDL] read a then b [ENDL] value = int with value = cube_root of a * b [ENDL] if value is not - 1 [ENDL] g = long long int with g = gcd of a and b [ENDL] if g is a multiple of value [ENDL] print \" YES \" [ENDL] continue loop [ENDL] print \" NO \" [ENDL] create const integer MAX = 2e5 + 7", "c++": "return a > b ? a : b ; long long int minn ( long long int & a , long long int & b ) } return a > b ? b : a ; void boostIO ( ) { } } long long int gcd ( long long int a , long long int b ) return b == 0 ? a : gcd ( b , a % b ) ; int int_gcd ( int a , int b ) } return b == 0 ? a : int_gcd ( b , a % b ) ; long long int lcm ( long long int a , long long int b ) } return a / gcd ( a , b ) * b ; long long int poww ( long long int base , long long int exp , long long int mod ) } base %= mod ; long long int result = 1 ; while ( exp > 0 ) if ( exp & 1 ) result = ( result * base ) % mod ; base = ( base * base ) % mod ; exp >>= 1 ; return result ; } int cube_root ( long long int x ) } long long int l = 1 , r = 1e6 + 10 ; while ( l < r ) long long int mid = ( l + r ) >> 1 ; if ( mid * mid * mid >= x ) r = mid ; else l = mid + 1 ; if ( l * l * l == x ) { return l ; } } } return - 1 ; boostIO ( ) ; } int main() { int t ; cin >> t ; while ( t -- ) long long int a , b ; cin >> a >> b ; int value = cube_root ( a * b ) ; if ( value != - 1 ) long long int g = gcd ( a , b ) ; if ( g % value == 0 ) puts ( \" Yes \" ) ; continue ; puts ( \" No \" ) ; } } const int MAX = 2e5 + 7 ; } }"}}
{"translation": {"en": "create const integer INF = 0x3f3f3f3f [ENDL] declare integer variables N , M and K [ENDL] declare an arrays of integers prea and preb with size MAX [ENDL] integer function cal with integer arguments a and b and char argument c [ENDL] if c = ' & ' , return a & b [ENDL] if c = ' | ' , return a | b [ENDL] return a ^ b [ENDL] read N and loop further [ENDL] create integers x = 0 and y = 1023 [ENDL] for i from 0 to N exclusive [ENDL] declare character c [ENDL] declare integer a [ENDL] read c and a [ENDL] set x to cal ( x , c , a ) [ENDL] set y to cal ( y , c , a ) [ENDL] declare integers a and b = 0 and c = 1023 [ENDL] for integer i = 0 to 10 exclusive [ENDL] integer p = 1 < < i [ENDL] if x & p ! = 0 [ENDL] if y & p ! = 0 [ENDL] a | = p [ENDL] else [ENDL] b | = p [ENDL] else [ENDL] if y & p = 0 , set c to c ^ p [ENDL] print 3 [ENDL] print \" | \" and a [ENDL] print \" ^ \" and b [ENDL] print \" & \" and c [ENDL] n , xx = long long", "c++": "const int INF = 0x3f3f3f3f ; int N , M , K ; int prea [ MAX ] , preb [ MAX ] ; int cal ( int a , char c , int b ) if ( c == ' & ' ) return a & b ; if ( c == ' | ' ) return a | b ; return a ^ b ; while ( cin >> N ) } int main() { int x = 0 , y = 1023 ; for ( int i = 0 ; i < N ; i ++ ) char c ; int a ; cin >> c >> a ; x = cal ( x , c , a ) ; y = cal ( y , c , a ) ; int a = 0 , b = 0 , c = 1023 ; } for ( int i = 0 ; i < 10 ; i ++ ) int p = 1 << i ; if ( x & p ) if ( y & p ) a |= p ; else b |= p ; else if ( ! ( y & p ) ) c ^= p ; cout << 3 << endl ; } } cout << \" |  \" << a << endl ; cout << \" ^  \" << b << endl ; cout << \" &  \" << c << endl ; long long n , xx ; } return 0; }"}}
{"translation": {"en": "read n [ENDL] m1 = 0 , m2 = 1023 [ENDL] rr and ss = array of 1024 long long [ENDL] for i = 0 to 1024 exclusive [ENDL] rr [ i ] = i [ENDL] ss [ i ] = i [ENDL] while decremented value of n is not 0 [ENDL] r = char [ENDL] read r , xx [ENDL] if r is ' | ' [ENDL] m1 = m1 or xx [ENDL] m2 = m2 or xx [ENDL] for i = 0 to 1024 exclusive rr [ i ] = rr [ i ] or xx [ENDL] else if r is ' ^ ' [ENDL] m1 = m1 xor xx [ENDL] m2 = m2 xor xx [ENDL] for i = 0 to 1024 exclusive rr [ i ] = rr [ i ] xor xx [ENDL] else [ENDL] m1 = m1 and xx [ENDL] m2 = m2 and xx [ENDL] for i = 0 to 1024 exclusive rr [ i ] = rr [ i ] and xx [ENDL] x , a , o = 0 [ENDL] for i = 0 to 10 exclusive [ENDL] u = m1 and ( 2 ^ ( i + 1 ) ) [ENDL] v = m2 and ( 2 ^ ( i + 1 ) ) [ENDL] if m1 and ( 2 ^ ( i + 1 ) ) and v is 0 [ENDL] x = x or ( 2 ^ ( i + 1 ) ) [ENDL] a = a or ( 2 ^ ( i + 1 ) ) [ENDL] else if u is 0 and m2 and ( 2 ^ ( i + 1 ) ) [ENDL] a = a or ( 2 ^ ( i + 1 ) ) [ENDL] else if m1 and ( 2 ^ ( i + 1 ) ) and m2 and ( 2 ^ ( i + 1 ) ) [ENDL] a = a or ( 2 ^ ( i + 1 ) ) [ENDL] o = o or ( 2 ^ ( i + 1 ) ) [ENDL] print \" 3 \" [ENDL] print \" | \" and o [ENDL] print \" ^ \" and x [ENDL] print \" & \" and a [ENDL] create long longs n , M , M2 , s , with s = 0", "c++": "int main() { cin >> n ; long long m1 = 0 , m2 = 1023 ; long long rr [ 1024 ] , ss [ 1024 ] ; for ( long long i = 0 ; i < 1024 ; i ++ ) rr [ i ] = i ; ss [ i ] = i ; while ( n -- ) } char r ; cin >> r >> xx ; if ( r == ' | ' ) m1 = m1 | xx ; m2 = m2 | xx ; for ( long long i = 0 ; i < 1024 ; i ++ ) { rr [ i ] = rr [ i ] | xx ; } else if ( r == ' ^ ' ) m1 = m1 ^ xx ; m2 = m2 ^ xx ; for ( long long i = 0 ; i < 1024 ; i ++ ) { rr [ i ] = rr [ i ] ^ xx ; } else m1 = m1 & xx ; m2 = m2 & xx ; for ( long long i = 0 ; i < 1024 ; i ++ ) { rr [ i ] = rr [ i ] & xx ; } long long x = 0 , a = 0 , o = 0 ; } } for ( long long i = 0 ; i < 10 ; i ++ ) long long u = m1 & ( 1 << i ) ; long long v = m2 & ( 1 << i ) ; if ( m1 & ( 1 << i ) && v == 0 ) x = x | ( 1 << i ) ; a = a | ( 1 << i ) ; else if ( u == 0 && m2 & ( 1 << i ) ) a = a | ( 1 << i ) ; else if ( m1 & ( 1 << i ) && m2 & ( 1 << i ) ) a = a | ( 1 << i ) ; o = o | ( 1 << i ) ; cout << \" 3 \" << ' \\n ' ; } } cout << \" |  \" << o << ' \\n ' ; cout << \" ^  \" << x << ' \\n ' ; cout << \" &  \" << a << ' \\n ' ; long long n , M , M2 , s = 0 ; }"}}
{"translation": {"en": "create long long array t with size 100005 [ENDL] create long long array t2 with size 100005 [ENDL] read n [ENDL] for i = 0 to n exclusive [ENDL] read t [ i ] [ENDL] increment s by t [ i ] [ENDL] for i = 0 to n exclusive , read t2 [ i ] [ENDL] sort elements from t2 to t2 + n [ENDL] if s is less than or equal to t2 [ n - 1 ] + t2 [ n - 2 ] [ENDL] print \" YES \" print newline [ENDL] else [ENDL] print \" NO \" print newline [ENDL] create long longs n , sum with sum = 0", "c++": "int main() { long long t [ 100005 ] ; long long t2 [ 100005 ] ; cin >> n ; for ( long long i = 0 ; i < n ; i ++ ) cin >> t [ i ] ; s += t [ i ] ; for ( long long i = 0 ; i < n ; i ++ ) { cin >> t2 [ i ] ; } } sort ( t2 , t2 + n ) ; if ( s <= t2 [ n - 1 ] + t2 [ n - 2 ] ) cout << \" YES \" << endl ; else cout << \" NO \" << endl ; long long n , sum = 0 ; return 0; }"}}
{"translation": {"en": "read n [ENDL] create long long array a with size n [ENDL] create long long array b with size n [ENDL] for i = 0 to n exclusive [ENDL] read a [ i ] [ENDL] increment sum by a [ i ] [ENDL] for i = 0 to n exclusive , read b [ i ] [ENDL] sort elements from b to b + n [ENDL] print \" YES \" if b [ n - 2 ] + b [ n - 1 ] is greater than or equal to sum , else \" NO \" , print ' \\ n ' [ENDL] create long long array num with 100010 elements", "c++": "int main() { cin >> n ; long long a [ n ] ; long long b [ n ] ; for ( long long i = 0 ; i < n ; i ++ ) cin >> a [ i ] ; sum += a [ i ] ; for ( long long i = 0 ; i < n ; i ++ ) { cin >> b [ i ] ; } } sort ( b , b + n ) ; cout << ( b [ n - 2 ] + b [ n - 1 ] >= sum ? \" YES \" : \" NO \" ) << ' \\n ' ; long long num [ 100010 ] ; return 0; }"}}
{"translation": {"en": "function cmp with integer arguments a and b that returns boolean [ENDL] return a > b [ENDL] declare long long variable sum = 0 [ENDL] declare integer n [ENDL] read n [ENDL] for integer i = 0 to n exclusive [ENDL] declare integer a [ENDL] read a [ENDL] increase sum by a [ENDL] read n elements into num [ENDL] sort num using cmp as comparator function [ENDL] if num [ 0 ] + num [ 1 ] > = sum [ENDL] print \" YES \" [ENDL] else [ENDL] print \" NO \" [ENDL] declare long long variables cans , sum and aux , with sum = 0", "c++": "bool cmp ( int a , int b ) return a > b ; long long sum = 0 ; } int main() { int n ; cin >> n ; for ( int i = 0 ; i < n ; i ++ ) int a ; cin >> a ; sum += a ; for ( int i = 0 ; i < n ; i ++ ) { cin >> num [ i ] ; } } sort ( num , num + n , cmp ) ; if ( num [ 0 ] + num [ 1 ] >= sum ) cout << \" YES \" << endl ; else cout << \" NO \" << endl ; long long cans , sum = 0 , aux ; }"}}
{"translation": {"en": "read cans [ENDL] val is an array of long longs with size cans + 2 [ENDL] for i = 0 to cans exclusive [ENDL] read aux [ENDL] increase sum by aux [ENDL] read val cans times [ENDL] sort val [ENDL] if sum < = val [ cans - 1 ] + val [ cans - 2 ] [ENDL] print \" YES \\ n \" [ENDL] else [ENDL] print \" NO \\ n \" [ENDL] let n , sum be long integers with sum is equal to 0", "c++": "int main() { cin >> cans ; long long val [ cans + 2 ] ; for ( int i = 0 ; i < cans ; i ++ ) cin >> aux ; sum += aux ; for ( int i = 0 ; i < cans ; i ++ ) cin >> val [ i ] ; } sort ( val , val + cans ) ; if ( sum <= val [ cans - 1 ] + val [ cans - 2 ] ) cout << \" YES\\n \" ; else cout << \" NO\\n \" ; long long n , sum = 0 ; return 0; }"}}
{"translation": {"en": "read n [ENDL] b = array of long inters of length n [ENDL] for long integer i = 0 to n exclusive [ENDL] let x be a long integer [ENDL] read x [ENDL] sum is equal to sum + x [ENDL] for long integer i = 0 to n exclusive , read ith element of b array [ENDL] sorting the data of b , b + n [ENDL] print YES if ( b [ n - 2 ] + b [ n - 1 ] > = sum ) else print NO [ENDL] create constant integer N with N = 1e5 + 10", "c++": "int main() { cin >> n ; long long b [ n ] ; for ( long long i = 0 ; i < n ; i ++ ) long long x ; cin >> x ; sum += x ; for ( long long i = 0 ; i < n ; i ++ ) { cin >> b [ i ] ; } } sort ( b , b + n ) ; cout << ( b [ n - 2 ] + b [ n - 1 ] >= sum ? \" YES \" : \" NO \" ) << ' \\n ' ; const int N = 1e5 + 10 ; return 0; }"}}
{"translation": {"en": "create integer n [ENDL] read n [ENDL] create integer arrays a , b , with a size N , b size N [ENDL] create long long sum with sum = 0 [ENDL] for i = 0 to n exclusive [ENDL] read a [ i ] [ENDL] increment sum by a [ i ] [ENDL] for i = 0 to n exclusive , read b [ i ] [ENDL] sort elements from b to b + n using integer greater to compare [ENDL] if sum is less than or equal to ( b [ 0 ] + b [ 1 ] ) [ENDL] print \" YES \" print newline [ENDL] else [ENDL] print \" NO \" print newline [ENDL] declare constant integer N = 1e5 + 10", "c++": "int n ; int main() { cin >> n ; int a [ N ] , b [ N ] ; long long sum = 0 ; for ( int i = 0 ; i < n ; i ++ ) cin >> a [ i ] ; sum += a [ i ] ; for ( int i = 0 ; i < n ; i ++ ) cin >> b [ i ] ; } sort ( b , b + n , greater < int > ( ) ) ; if ( sum <= ( b [ 0 ] + b [ 1 ] ) ) cout << \" YES \" << endl ; else cout << \" NO \" << endl ; const int N = 1e5 + 10 ; return 0; }"}}
{"translation": {"en": "declare integer variable n [ENDL] read n [ENDL] create long long arrays a and b with N elements [ENDL] declare long long sum = 0 [ENDL] for integer i = 0 to n exclusive [ENDL] read a [ i ] [ENDL] increase sum by a [ i ] [ENDL] for i = 0 to n exclusive read b [ i ] [ENDL] sort b using greater function as comparer [ENDL] if sum < = ( b [ 0 ] + b [ 1 ] ) [ENDL] print \" YES \" [ENDL] else [ENDL] print \" NO \" [ENDL] let a , b , i , n be integers where a and b are arrays of length 100001", "c++": "int n ; int main() { cin >> n ; long long a [ N ] , b [ N ] ; long long sum = 0 ; for ( int i = 0 ; i < n ; i ++ ) cin >> a [ i ] ; sum += a [ i ] ; for ( int i = 0 ; i < n ; i ++ ) cin >> b [ i ] ; } sort ( b , b + n , greater < int > ( ) ) ; if ( sum <= ( b [ 0 ] + b [ 1 ] ) ) cout << \" YES \" << endl ; else cout << \" NO \" << endl ; int a [ 100001 ] , b [ 100001 ] , i , n ; return 0; }"}}
{"translation": {"en": "let s be a long integer [ENDL] read n [ENDL] for i = 1 to n inclusive [ENDL] read ith element of array a [ENDL] s is equal to s + ith element of array a [ENDL] for i = 1 to n inclusive , read ith element of array b [ENDL] sort the values b + 1 , b + n + 1 [ENDL] if ( nth term of array b + [ n - 1 ] th term of array b is greater than or equal to s ) [ENDL] print YES and newline [ENDL] else do the following [ENDL] print NO and newline [ENDL] function gcd with long long arguments a and b that returns long long", "c++": "long long s ; cin >> n ; int main() { for ( i = 1 ; i <= n ; i ++ ) cin >> a [ i ] ; s += a [ i ] ; for ( i = 1 ; i <= n ; i ++ ) cin >> b [ i ] ; } sort ( b + 1 , b + n + 1 ) ; if ( b [ n ] + b [ n - 1 ] >= s ) cout << \" YES \" << endl ; else cout << \" NO \" << endl ; long long gcd ( long long a , long long b ) return 0; }"}}
{"translation": {"en": "if b = 0 , return a [ENDL] return gcd ( b , a % b ) [ENDL] function lcm with long long arguments a and b that returns long long [ENDL] return a * b / gcd ( a , b ) [ENDL] create long longs i and j [ENDL] declare long long n [ENDL] read n [ENDL] create vectors of long long a and b with n elements each [ENDL] read n elements into a [ENDL] read n elements into b [ENDL] declare long long variable sum = 0 [ENDL] add all elements of a to the sum one by one [ENDL] sort array b [ENDL] if sum is greater than b [ n - 1 ] + b [ n - 2 ] [ENDL] print \" NO \" and a new line [ENDL] else [ENDL] print \" YES \" and a new line [ENDL] create long long integers n and k , array c with 2 elements filled with 0 , and arrays a and b with size 100000", "c++": "if ( b == 0 ) return a ; return gcd ( b , a % b ) ; long long lcm ( long long a , long long b ) } return a * b / gcd ( a , b ) ; long long i , j ; } int main() { long long n ; cin >> n ; vector < long long > a ( n ) , b ( n ) ; for ( long long i = 0 ; i < ( n ) ; i ++ ) cin >> a [ i ] ; for ( long long i = 0 ; i < ( n ) ; i ++ ) cin >> b [ i ] ; long long sum = 0 ; for ( long long i = 0 ; i < ( n ) ; i ++ ) sum += a [ i ] ; sort ( b . begin ( ) , b . end ( ) ) ; if ( sum > b [ n - 1 ] + b [ n - 2 ] ) cout << \" NO \" << endl ; else cout << \" YES \" << endl ; long long int n , a [ 100000 ] , b [ 100000 ] , c [ 2 ] = { 0 } , k ; } }"}}
{"translation": {"en": "declare long long integer variables i , j and sum where sum = 0 [ENDL] read n [ENDL] for i = 0 to n exclusive [ENDL] read a [ i ] [ENDL] set sum to sum + a [ i ] [ENDL] for i = 0 to n exclusive [ENDL] read b [ i ] [ENDL] if b [ i ] is greater than c [ 0 ] [ENDL] c [ 0 ] = b [ i ] [ENDL] k = i [ENDL] for i = 0 to n exclusive [ENDL] if c [ 1 ] < b [ i ] and b [ i ] < = c [ 0 ] and i ! = k , set c [ 1 ] to b [ i ] [ENDL] if c [ 1 ] + c [ 0 ] > = sum [ENDL] print \" YES \" [ENDL] else [ENDL] print \" NO \" [ENDL] create long long arrays a , b , with a size 100010 , b size 100010", "c++": "int main() { long long int i , j , sum = 0 ; cin >> n ; for ( i = 0 ; i < n ; i ++ ) cin >> a [ i ] ; sum = sum + a [ i ] ; for ( i = 0 ; i < n ; i ++ ) } cin >> b [ i ] ; if ( b [ i ] > c [ 0 ] ) c [ 0 ] = b [ i ] ; k = i ; for ( i = 0 ; i < n ; i ++ ) } } if ( c [ 1 ] < b [ i ] && b [ i ] <= c [ 0 ] && i != k ) c [ 1 ] = b [ i ] ; if ( c [ 1 ] + c [ 0 ] >= sum ) } cout << \" YES \" << endl ; else cout << \" NO \" << endl ; long long a [ 100010 ] , b [ 100010 ] ; } return 0; }"}}
{"translation": {"en": "declare cmp with integers a , b as arguments , returning boolean [ENDL] return a is greater than b [ENDL] create integers n , i , j [ENDL] while read n is true [ENDL] set bytes from a to size of a to value 0 [ENDL] set bytes from b to size of b to value 0 [ENDL] create double sum with sum = 0 [ENDL] for i = 0 to n exclusive [ENDL] read a [ i ] [ENDL] increment sum by a [ i ] [ENDL] for i = 0 to n exclusive , read b [ i ] [ENDL] sort elements from b to b + i using cmp to compare [ENDL] if b [ 0 ] + b [ 1 ] is greater than or equal to sum [ENDL] print \" YES \" print newline [ENDL] else [ENDL] print \" NO \" print newline [ENDL] n , M , M2 , s = long long and set s to 0", "c++": "bool cmp ( int a , int b ) return a > b ; int n , i , j ; } int main() { while ( cin >> n ) memset ( a , 0 , sizeof ( a ) ) ; memset ( b , 0 , sizeof ( b ) ) ; double sum = 0 ; for ( i = 0 ; i < n ; i ++ ) cin >> a [ i ] ; sum += a [ i ] ; for ( i = 0 ; i < n ; i ++ ) { cin >> b [ i ] ; } } sort ( b , b + i , cmp ) ; if ( b [ 0 ] + b [ 1 ] >= sum ) cout << \" YES \" << endl ; else cout << \" NO \" << endl ; long long n , M , M2 , s = 0 ; } return 0; }"}}
{"translation": {"en": "t = long long array of size 100005 [ENDL] t2 = long long array of size 100005 [ENDL] read n [ENDL] for long long i = 0 to n exclusive [ENDL] read t [ i ] [ENDL] increase s by t [ i ] [ENDL] for long long i = 0 to n exclusive read t2 [ i ] [ENDL] sort the first n elements of t2 [ENDL] if s < = t2 [ n - 1 ] + t2 [ n - 2 ] [ENDL] print YES [ENDL] else [ENDL] print NO [ENDL] create constant long long Mod with value 1e9 + 7", "c++": "int main() { long long t [ 100005 ] ; long long t2 [ 100005 ] ; cin >> n ; for ( long long i = 0 ; i < n ; i ++ ) cin >> t [ i ] ; s += t [ i ] ; for ( long long i = 0 ; i < n ; i ++ ) { cin >> t2 [ i ] ; } } sort ( t2 , t2 + n ) ; if ( s <= t2 [ n - 1 ] + t2 [ n - 2 ] ) cout << \" YES \" << endl ; else cout << \" NO \" << endl ; const long long Mod = 1e9 + 7 ; return 0; }"}}
{"translation": {"en": "create constant double pi with value 2 * acos ( 0 . 0 ) [ENDL] create constant double N with value 2e5 + 5 [ENDL] arr is an integer array with size N [ENDL] create long longs n , x and s , with s = 0 [ENDL] read n [ENDL] for integer i = 0 to n exclusive [ENDL] read x [ENDL] increase s by x [ENDL] for integer i = 0 to n exclusive read arr [ i ] [ENDL] sort arr [ENDL] if arr [ n - 1 ] + arr [ n - 2 ] > = s [ENDL] print \" YES \" and a new line [ENDL] else [ENDL] print \" NO \" and a new line [ENDL] declare integer variable n", "c++": "const double pi = 2 * acos ( 0.0 ) ; const int N = 2e5 + 5 ; int arr [ N ] ; long long n , x , s = 0 ; int main() { cin >> n ; for ( int i = 0 ; i < n ; i ++ ) cin >> x ; s += x ; for ( int i = 0 ; i < n ; i ++ ) cin >> arr [ i ] ; } sort ( arr , arr + n ) ; if ( arr [ n - 1 ] + arr [ n - 2 ] >= s ) cout << \" YES \" << endl ; else cout << \" NO \" << endl ; int n ; return 0; }"}}
{"translation": {"en": "read n [ENDL] let sum and cur be long longs where sum = 0 [ENDL] for size_t = 0 to n exclusive [ENDL] read cur [ENDL] increase sum by cur [ENDL] create long longs Max1 and Max2 = - 1 [ENDL] for size_t = 0 to n exclusive [ENDL] read cur [ENDL] if cur is greater than Max1 [ENDL] set Max2 to Max1 [ENDL] set value of Max1 to cur [ENDL] else if cur is greater than Max2 [ENDL] Max2 = cur [ENDL] print \" YES \\ n \" if Max2 + Max1 > = sum , else pring \" NO \\ n \" [ENDL] create integer x", "c++": "int main() { cin >> n ; long long sum = 0 , cur ; for ( size_t i = 0 ; i < n ; i ++ ) cin >> cur ; sum += cur ; long long Max1 = - 1 , Max2 = - 1 ; } for ( size_t i = 0 ; i < n ; i ++ ) cin >> cur ; if ( cur > Max1 ) Max2 = Max1 ; Max1 = cur ; else if ( cur > Max2 ) Max2 = cur ; cout << ( ( Max2 + Max1 >= sum ) ? \" YES\\n \" : \" NO\\n \" ) ; } } int x ; return 0; }"}}
{"translation": {"en": "create long long integer k with k = 0 [ENDL] read x [ENDL] create long long integer vector v [ENDL] create integer arrays a , b , with a size x , b size x [ENDL] for i = 0 to x exclusive [ENDL] create integer s [ENDL] read s [ENDL] increment k by s [ENDL] for i = 0 to x exclusive [ENDL] create long long integer d [ENDL] read d [ENDL] add element d to end of v [ENDL] sort elements from beginning of v to end of v [ENDL] create long long integer s with s = v [ x - 1 ] + v [ x - 2 ] [ENDL] if s is greater than or equal to k [ENDL] print \" YES \" print newline [ENDL] else [ENDL] print \" NO \" print newline [ENDL] declare gcd with long longs a , b as arguments , returning long long", "c++": "int main() { long long int k = 0 ; cin >> x ; vector < long long int > v ; int a [ x ] , b [ x ] ; for ( int i = 0 ; i < x ; i ++ ) int s ; cin >> s ; k += s ; for ( int i = 0 ; i < x ; i ++ ) } long long int d ; cin >> d ; v . push_back ( d ) ; sort ( v . begin ( ) , v . end ( ) ) ; } long int s = v [ x - 1 ] + v [ x - 2 ] ; if ( s >= k ) cout << \" YES \" << endl ; else cout << \" NO \" << endl ; long long gcd ( long long a , long long b ) } return 0; }"}}
{"translation": {"en": "while b is true , swap values of ( set a to a % b , and b ) [ENDL] return a [ENDL] create long long n [ENDL] read n [ENDL] create long long vector nums initialized with n [ENDL] create long long sum with sum = 0 [ENDL] for i = 0 to n exclusive [ENDL] create long long a [ENDL] read a [ENDL] increment sum by a [ENDL] create long longs mx1 , mx2 with mx1 = 0 , mx2 = 0 [ENDL] for i = 0 to n exclusive [ENDL] read nums [ i ] [ENDL] if nums [ i ] is greater than mx1 [ENDL] set mx2 to mx1 , set mx1 to nums [ i ] [ENDL] else if nums [ i ] is less than or equal to mx1 and nums [ i ] is greater than mx2 [ENDL] set mx2 to nums [ i ] [ENDL] if sum is less than or equal to mx1 + mx2 [ENDL] print \" YES \" print newline [ENDL] else [ENDL] print \" NO \" print newline [ENDL] n , j , minnum and ans are integers with minnum = 1000000002 and ans = 100002", "c++": "while ( b ) swap ( a %= b , b ) ; return a ; long long n ; } int main() { cin >> n ; vector < long long > nums ( n ) ; long long sum = 0 ; for ( long long i = 0 ; i < n ; ++ i ) long long a ; cin >> a ; sum += a ; long long mx1 = 0 , mx2 = 0 ; } for ( long long i = 0 ; i < n ; ++ i ) cin >> nums [ i ] ; if ( nums [ i ] > mx1 ) mx2 = mx1 , mx1 = nums [ i ] ; else if ( nums [ i ] <= mx1 && nums [ i ] > mx2 ) mx2 = nums [ i ] ; if ( sum <= mx1 + mx2 ) } cout << \" YES \" << endl ; else cout << \" NO \" << endl ; int n , j , minnum = 1000000002 , ans = 100002 ; }"}}
{"translation": {"en": "create an arrays of ints a and flag with size 100005 [ENDL] read n [ENDL] for i from 1 to n inclusive [ENDL] read a [ i ] [ENDL] if minnum is greater than a [ i ] , change minnum to a [ i ] [ENDL] for i from 1 to n inclusive [ENDL] if a [ i ] = minnum [ENDL] increment j [ENDL] change flag [ j ] to i [ENDL] for integer i = 1 to j exclusive [ENDL] if flag [ i + 1 ] - flag [ i ] is less than ans , set ans to flag [ i + 1 ] - flag [ i ] [ENDL] print ans [ENDL] n , a , mink , pr , mind = integers with a = integer array of size 100001 , mink = 2e9 , pr = - 1 , mind = 2e9", "c++": "int a [ 100005 ] , flag [ 100005 ] ; cin >> n ; int main() { for ( int i = 1 ; i <= n ; i ++ ) cin >> a [ i ] ; if ( minnum > a [ i ] ) minnum = a [ i ] ; for ( int i = 1 ; i <= n ; i ++ ) } if ( a [ i ] == minnum ) j ++ ; flag [ j ] = i ; for ( int i = 1 ; i < j ; i ++ ) } } if ( flag [ i + 1 ] - flag [ i ] < ans ) ans = flag [ i + 1 ] - flag [ i ] ; cout << ans << endl ; int n , a [ 100001 ] , mink = 2e9 , pr = - 1 , mind = 2e9 ; return 0; }"}}
{"translation": {"en": "read n [ENDL] for i = 0 to n exclusive [ENDL] read a [ i ] [ENDL] mink = min of mink and a [ i ] [ENDL] for i = 0 to n exclusive [ENDL] if pr is not - 1 and a [ i ] is mink , mind = min ( mind , i - pr ) [ENDL] if a [ i ] is mink , pr = i [ENDL] print mind [ENDL] create constant int maxn = 1e7 + 10", "c++": "cin >> n ; int main() { for ( int i = 0 ; i < n ; i ++ ) cin >> a [ i ] ; mink = min ( mink , a [ i ] ) ; for ( int i = 0 ; i < n ; i ++ ) } if ( pr != - 1 && a [ i ] == mink ) { mind = min ( mind , i - pr ) ; } if ( a [ i ] == mink ) { pr = i ; } cout << mind << endl ; } const int maxn = 1e7 + 10 ; }"}}
{"translation": {"en": "let int array a of size maxn [ENDL] let int n [ENDL] let integer mini = 1e9 + 10 [ENDL] read n [ENDL] for i = 0 to n exclusive [ENDL] read a [ i ] [ENDL] if a [ i ] is less than mini , set mini to a [ i ] [ENDL] create int vector vec [ENDL] for i = 0 to n exclusive [ENDL] if mini is equal to a [ i ] , append i to vec [ENDL] set mini to n [ENDL] for i = 0 to the size of vec exclusive , set mini to the min of mini and vec [ i + 1 ] - vec [ i ] [ENDL] print mini [ENDL] v = long long vector", "c++": "int a [ maxn ] ; int n ; int mini = 1e9 + 10 ; cin >> n ; int main() { for ( int i = 0 ; i < n ; i ++ ) cin >> a [ i ] ; if ( a [ i ] < mini ) mini = a [ i ] ; vector < int > vec ; } for ( int i = 0 ; i < n ; i ++ ) if ( mini == a [ i ] ) { vec . push_back ( i ) ; } mini = n ; } for ( int i = 0 ; i < vec . size ( ) - 1 ; i ++ ) { mini = min ( mini , vec [ i + 1 ] - vec [ i ] ) ; } cout << mini << endl ; vector < long long > v ; return 0; }"}}
{"translation": {"en": "v1 = long long vector [ENDL] i , j , n , ans , min , t , flag = long long with min = 1000000002 [ENDL] read n [ENDL] for i = 0 to n [ENDL] x = long long [ENDL] read x [ENDL] append x to v [ENDL] if x is less than min set min to x [ENDL] for i = 0 to n [ENDL] if min is v [ i ] append i to v1 [ENDL] set min to 1000000002 [ENDL] for i = 1 to size of v1 [ENDL] if ( v1 [ i ] - v1 [ i - 1 ] ) < min set min to v1 [ i ] - v1 [ i - 1 ] [ENDL] print min [ENDL] a = array of integers of length 100010", "c++": "int main() { vector < long long > v1 ; long long i , j , n , ans , min = 1000000002 , t , flag ; cin >> n ; for ( i = 0 ; i < n ; i ++ ) long long x ; cin >> x ; v . push_back ( x ) ; if ( x < min ) { min = x ; } for ( i = 0 ; i < n ; i ++ ) } if ( min == v [ i ] ) { v1 . push_back ( i ) ; } min = 1000000002 ; } for ( i = 1 ; i < v1 . size ( ) ; i ++ ) if ( ( v1 [ i ] - v1 [ i - 1 ] ) < min ) { min = ( v1 [ i ] - v1 [ i - 1 ] ) ; } cout << min << endl ; } int a [ 100010 ] ; }"}}
{"translation": {"en": "let n , m , j , k , l , i , o , p be integers with j = INT_MAX , l = INT_MAX [ENDL] read n [ENDL] for i = 1 to n inclusive [ENDL] read a [ i ] [ENDL] l is equal to minimum of l , a [ i ] [ENDL] k is equal to distance ( a , find ( a + 1 , a + n + 1 , l ) ) [ENDL] for i = k + 1 to n inclusive [ENDL] if a [ i ] is equal to l [ENDL] j is equal to minimum of j , i - k [ENDL] k is equal to i [ENDL] print j and newline [ENDL] n , a , Min , pre , ans = integers with a = array of size 100005 , ans = 100005", "c++": "int n , m , j = INT_MAX , k , l = INT_MAX , i , o , p ; int main() { cin >> n ; for ( i = 1 ; i <= n ; i ++ ) cin >> a [ i ] ; l = min ( l , a [ i ] ) ; k = distance ( a , find ( a + 1 , a + n + 1 , l ) ) ; } for ( i = k + 1 ; i <= n ; i ++ ) if ( a [ i ] == l ) j = min ( j , i - k ) ; k = i ; cout << j << endl ; } } int n , a [ 100005 ] , Min , pre , ans = 100005 ; return 0; }"}}
{"translation": {"en": "read n [ENDL] for i = 1 to n , read a [ i ] [ENDL] Min = a [ 1 ] [ENDL] for i = 2 to n , Min = min of Min and a [ i ] [ENDL] for i = 1 to n [ENDL] if a [ i ] is Min [ENDL] if not pre [ENDL] pre = i [ENDL] else [ENDL] ans = min ( ans , i - pre ) , pre = i [ENDL] print ans [ENDL] let int s = 9999999999", "c++": "cin >> n ; int main() { for ( int i = 1 ; i <= n ; i ++ ) cin >> a [ i ] ; Min = a [ 1 ] ; for ( int i = 2 ; i <= n ; i ++ ) Min = min ( Min , a [ i ] ) ; for ( int i = 1 ; i <= n ; i ++ ) if ( a [ i ] == Min ) if ( ! pre ) pre = i ; else ans = min ( ans , i - pre ) , pre = i ; cout << ans << endl ; } int s = 9999999999 ; return 0; }"}}
{"translation": {"en": "let int n [ENDL] read n [ENDL] create pair array a of int and int of size n [ENDL] for i = 0 to n exclusive [ENDL] read a [ i ] . first [ENDL] set a [ i ] . second to i + 1 [ENDL] sort array a [ENDL] for i = 0 to n - 1 exclusive [ENDL] if a [ i ] . first equals a [ i + 1 ] . first and a [ 0 ] . first equals a [ i ] . first , set s to min of s and a [ i + 1 ] . second - a [ i ] . second [ENDL] print s [ENDL] size = int and in = int array of size 100005", "c++": "int main() { int n ; cin >> n ; pair < int , int > a [ n ] ; for ( int i = 0 ; i < n ; i ++ ) cin >> a [ i ] . first ; a [ i ] . second = i + 1 ; sort ( a , a + n ) ; } for ( int i = 0 ; i < n - 1 ; i ++ ) if ( a [ i ] . first == a [ i + 1 ] . first && a [ 0 ] . first == a [ i ] . first ) { s = min ( s , a [ i + 1 ] . second - a [ i ] . second ) ; } cout << s << endl ; } int size , in [ 100005 ] ; return 0; }"}}
{"translation": {"en": "d1 = int vector [ENDL] read size [ENDL] read size values into in [ENDL] mn = int with mn = 1e9 [ENDL] for i = 0 to size [ENDL] if in [ i ] < mn set mn to in [ i ] [ENDL] for i = 0 to size [ENDL] if mn is in [ i ] append i to d1 [ENDL] mns = int with mns = 1e9 [ENDL] for i = 0 to size of d1 - 1 [ENDL] if absolute of d1 [ i ] - d1 [ i + 1 ] < mns set mns to ansolute of d1 [ i ] - d1 [ i + 1 ] [ENDL] print mns [ENDL] n = integer", "c++": "int main() { vector < int > d1 ; cin >> size ; for ( int i = 0 ; i < size ; i ++ ) { cin >> in [ i ] ; } int mn = 1e9 ; for ( int i = 0 ; i < size ; i ++ ) if ( in [ i ] < mn ) { mn = in [ i ] ; } for ( int i = 0 ; i < size ; i ++ ) } if ( mn == in [ i ] ) { d1 . push_back ( i ) ; } int mns = 1e9 ; } for ( int i = 0 ; i < d1 . size ( ) - 1 ; i ++ ) if ( abs ( d1 [ i ] - d1 [ i + 1 ] ) < mns ) { mns = abs ( d1 [ i ] - d1 [ i + 1 ] ) ; } cout << mns << endl ; } int n ; return 0; }"}}
{"translation": {"en": "while read n [ENDL] v = vector of integer with v = n [ENDL] s = vector of integer with s = n [ENDL] for i = 0 to n exclusive [ENDL] read v [ i ] [ENDL] s [ i ] = v [ i ] [ENDL] sort s . begin ( ) and s . end ( ) [ENDL] a , b = integers [ENDL] a = s [ 0 ] [ENDL] b = s [ 1 ] [ENDL] x , y , d = integers [ENDL] d = x = y = 1000000100 [ENDL] sw = bool with sw = true [ENDL] for i = 0 to n exclusive [ENDL] if a is v [ i ] [ENDL] x = i [ENDL] break loop [ENDL] for i = x + 1 to n exclusive [ENDL] if b is v [ i ] [ENDL] y = i [ENDL] d = min of d and abs ( x - y ) [ENDL] x = i [ENDL] print d [ENDL] n , menor , pos , ans , i = int", "c++": "int main() { while ( cin >> n ) vector < int > v ( n ) ; vector < int > s ( n ) ; for ( int i = 0 ; i < n ; i ++ ) cin >> v [ i ] ; s [ i ] = v [ i ] ; sort ( s . begin ( ) , s . end ( ) ) ; } int a , b ; a = s [ 0 ] ; b = s [ 1 ] ; int x , y , d ; d = x = y = 1000000100 ; bool sw = true ; for ( int i = 0 ; i < n ; i ++ ) if ( a == v [ i ] ) x = i ; break ; for ( int i = x + 1 ; i < n ; i ++ ) } } if ( b == v [ i ] ) y = i ; d = min ( d , abs ( x - y ) ) ; x = i ; cout << d << \" \\n \" ; } } int n , menor , pos , ans , i ; } return 0; }"}}
{"translation": {"en": "read n [ENDL] V = int vector of size n [ENDL] read n values into V [ENDL] set menor to 2000000000 [ENDL] for i = 0 to n set menor to min of menor and V [ i ] [ENDL] for i = 0 to n [ENDL] if V [ i ] = menor [ENDL] set pos to i [ENDL] break [ENDL] set ans to 1000000 [ENDL] for i = pos + 1 to n [ENDL] if V [ i ] = menor [ENDL] if i - pos < ans set ans to i - pos [ENDL] set pos to i [ENDL] print ans [ENDL] create long long array a of length 100005", "c++": "int main() { cin >> n ; vector < int > V ( n ) ; for ( i = 0 ; i < n ; i ++ ) { cin >> V [ i ] ; } menor = 2000000000 ; for ( i = 0 ; i < n ; i ++ ) { menor = min ( menor , V [ i ] ) ; } for ( i = 0 ; i < n ; i ++ ) if ( V [ i ] == menor ) pos = i ; break ; ans = 1000000 ; } } for ( i = pos + 1 ; i < n ; i ++ ) if ( V [ i ] == menor ) if ( i - pos < ans ) ans = i - pos ; pos = i ; cout << ans << ' \\n ' ; } } long long a [ 100005 ] ; }"}}
{"translation": {"en": "create long long a and mi , set mi to 1000000007 [ENDL] read n [ENDL] for i = 1 to n + 1 exclusive [ENDL] read a [ i ] [ENDL] set mi to min of mi and a [ i ] [ENDL] set j to - 1000000007 and ans to 1000000007 [ENDL] for i = 1 to n + 1 exclusive [ENDL] if a [ i ] = mi [ENDL] set ans to min of ans and i - j [ENDL] assign i to j [ENDL] print ans [ENDL] declare integer n", "c++": "long long n , mi = 1000000007 ; int main() { cin >> n ; for ( long long i = 1 ; i < n + 1 ; i ++ ) cin >> a [ i ] ; mi = min ( mi , a [ i ] ) ; long long j = - 1000000007 , ans = 1000000007 ; } for ( long long i = 1 ; i < n + 1 ; i ++ ) if ( a [ i ] == mi ) ans = min ( ans , i - j ) ; j = i ; cout << ans << endl ; } } int n ; return 0; }"}}
{"translation": {"en": "read n [ENDL] declare integer pointer a = new integer array size n [ENDL] declare long long integer min = 99999999999999999 [ENDL] for i = 0 to n exclusive [ENDL] read a [ i ] [ENDL] if a [ i ] is less than min , let min = a [ i ] [ENDL] declare integer array p size 100000 [ENDL] declare integer c = 0 [ENDL] for i = 0 to n exclusive [ENDL] if a [ i ] is min [ENDL] let p [ c ] be i [ENDL] increment c [ENDL] let min be 99999999999999999 [ENDL] for i = 1 to c exclusive [ENDL] declare integer r = p [ i ] - p [ i - 1 ] [ENDL] if r is less than min , let min be r [ENDL] print min , newline [ENDL] let maxn be a constant integer with maxn = 1e6 + 7", "c++": "int main() { cin >> n ; int * a = new int [ n ] ; long long int min = 99999999999999999 ; for ( int i = 0 ; i < n ; i ++ ) cin >> a [ i ] ; if ( a [ i ] < min ) { min = a [ i ] ; } int p [ 100000 ] ; } int c = 0 ; for ( int i = 0 ; i < n ; i ++ ) if ( a [ i ] == min ) p [ c ] = i ; c ++ ; min = 99999999999999999 ; } } for ( int i = 1 ; i < c ; i ++ ) int r = p [ i ] - p [ i - 1 ] ; if ( r < min ) { min = r ; } cout << min << endl ; } const int maxn = 1e6 + 7 ; }"}}
{"translation": {"en": "let mod be a constant integer with mod = 998244353 [ENDL] read the integer data [ENDL] let c , Nig , x be integers with Nig = 1 , x = 0 [ENDL] while not isdigit of c , c = getchar ( ) [ENDL] if c is equal to - , Nig = - 1 , c = getchar ( ) [ENDL] while isdigit of c , x is equal to ( ( x < < 1 ) + ( x < < 3 ) ) + ( c ^ ' 0 ' ) , c is equal to getchar ( ) [ENDL] return the value of Nig * x [ENDL] a = array of integers of length maxn [ENDL] read from n [ENDL] for i = 1 to n inclusive , read a [ i ] [ENDL] let minl be a integer with minl = * min_element ( a + 1 , a + 1 + n ) [ENDL] let pos , ans be integers with pos = - 1 , ans = 0x3f3f3f3f [ENDL] for i = 1 to n inclusive [ENDL] if a [ i ] is equal to minl [ENDL] if ~ pos [ENDL] ans is equal to minimum of ans and i - pos , pos is equal to i [ENDL] else do the following [ENDL] pos is equal to i [ENDL] print ans and new line [ENDL] create new array of long longs a with 200050 elements", "c++": "const int mod = 998244353 ; int read ( ) int c = getchar ( ) , Nig = 1 , x = 0 ; while ( ! isdigit ( c ) ) c = getchar ( ) ; if ( c == ' - ' ) Nig = - 1 , c = getchar ( ) ; while ( isdigit ( c ) ) x = ( ( x << 1 ) + ( x << 3 ) ) + ( c ^ ' 0 ' ) , c = getchar ( ) ; return Nig * x ; int a [ maxn ] ; } int n = read ( ) ; int main() { for ( int i = 1 ; i <= n ; i ++ ) { a [ i ] = read ( ) ; } int minl = * min_element ( a + 1 , a + 1 + n ) ; int pos = - 1 , ans = 0x3f3f3f3f ; for ( int i = 1 ; i <= n ; i ++ ) if ( a [ i ] == minl ) if ( ~ pos ) ans = min ( ans , i - pos ) , pos = i ; else pos = i ; cout << ans << endl ; } } long long a [ 200050 ] ; return 0; }"}}
{"translation": {"en": "create new array of long longs b with size 200050 [ENDL] declare integer variable len with value 0 [ENDL] declare new integer called n [ENDL] read n [ENDL] for i from 0 to n exclusive , read standard input to a [ i ] [ENDL] create long long minn with value 1000000009 [ENDL] for integer i = 0 to n exclusive , set minn to min of minn and a [ i ] [ENDL] for integer i = 0 to n exclusive incrementing i [ENDL] if a [ i ] = minn [ENDL] assign i to b [ len ] [ENDL] increment len by one [ENDL] declare new long long called minnn = 200000050 [ENDL] in a for loop , change i from 1 to len exclusive , assigning min of minnn and b [ i ] - b [ i - 1 ] to minnn on each loop [ENDL] print minnn to the standard output [ENDL] a , b , n , mini , ans = long long int with ans = 0", "c++": "long long b [ 200050 ] ; int len = 0 ; int n ; int main() { cin >> n ; for ( int i = 0 ; i < n ; i ++ ) cin >> a [ i ] ; long long minn = 1000000009 ; for ( int i = 0 ; i < n ; i ++ ) { minn = min ( minn , a [ i ] ) ; } for ( int i = 0 ; i < n ; i ++ ) if ( a [ i ] == minn ) b [ len ] = i ; len ++ ; long long minnn = 200000050 ; } } for ( int i = 1 ; i < len ; i ++ ) { minnn = min ( minnn , b [ i ] - b [ i - 1 ] ) ; } cout << minnn << endl ; long long int a , b , n , mini , ans = 0 ; return 0; }"}}
{"translation": {"en": "read n [ENDL] for i = 0 to n [ENDL] read a [ENDL] increment ans [ENDL] if i is 0 or a is less than mini [ENDL] set mini to a [ENDL] set ans to 0 [ENDL] set b to 0 [ENDL] else if a is mini [ENDL] if ans is less than b or b is 0 set b to ans [ENDL] set ans to 0 [ENDL] print b [ENDL] let ints n , min = INT_MAX , cnt = 0 , first , last , and selisih and int array num of size 100005", "c++": "int main() { cin >> n ; for ( int i = 0 ; i < n ; i ++ ) cin >> a ; ans ++ ; if ( i == 0 || a < mini ) mini = a ; ans = 0 ; b = 0 ; else if ( a == mini ) if ( ( ans < b ) || ( b == 0 ) ) { b = ans ; } ans = 0 ; cout << b << endl ; } } int n , num [ 100005 ] , min = INT_MAX , cnt = 0 , first , last , selisih ; return 0; }"}}
{"translation": {"en": "create int has = INT_MAX and int array arrpos of size 100005 [ENDL] read n [ENDL] for x = 1 to n [ENDL] read num [ x ] [ENDL] if num [ x ] is less than min , set min to num [ x ] [ENDL] for x = 1 to n [ENDL] if num [ x ] equals min [ENDL] if cnt is equal to 0 [ENDL] set arrpos [ x ] to x [ENDL] set first to x [ENDL] if cnt equals 1 [ENDL] set arrpos [ x ] to x [ENDL] set last to x [ENDL] if cnt is greater than or equal to 2 [ENDL] set first to last [ENDL] set last to x [ENDL] set arrpos [ x ] to x [ENDL] increment cnt [ENDL] if cnt is greater than or equal to 2 [ENDL] set selisih to the result of arrpos [ last ] - arrpos [ first ] [ENDL] if selisih is less than has , set has to selisih [ENDL] print has [ENDL] a is a new array of integers with size 1e5 + 5", "c++": "int main() { int arrpos [ 100005 ] , has = INT_MAX ; cin >> n ; for ( int x = 1 ; x <= n ; x ++ ) cin >> num [ x ] ; if ( num [ x ] < min ) { min = num [ x ] ; } for ( int x = 1 ; x <= n ; x ++ ) } if ( num [ x ] == min ) if ( cnt == 0 ) arrpos [ x ] = x ; first = x ; if ( cnt == 1 ) } arrpos [ x ] = x ; last = x ; if ( cnt >= 2 ) } first = last ; last = x ; arrpos [ x ] = x ; cnt ++ ; } if ( cnt >= 2 ) } selisih = arrpos [ last ] - arrpos [ first ] ; if ( selisih < has ) { has = selisih ; } cout << has << endl ; } } int a [ ( int ) 1e5 + 5 ] ; return 0; }"}}
{"translation": {"en": "function min with long long arguments a and b that returns long long [ENDL] if a is greater than b [ENDL] return b [ENDL] else [ENDL] return a [ENDL] declare integer variable n [ENDL] read n from the user input [ENDL] declare long long m with value 1e9 + 1 [ENDL] for integer i = 1 to n inclusive incrementing i [ENDL] read input to a [ i ] [ENDL] change m to min of m and a [ i ] [ENDL] declare vector of integers called ans [ENDL] for i = 1 to n inclusive [ENDL] if a [ i ] is equal to m , push i into ans [ENDL] create new integer called mins = 1e9 [ENDL] declare integer size with value length of ans - 1 [ENDL] for i from 1 to size inclusive , assign min of mins and ans [ i ] - ans [ i - 1 ] to mins [ENDL] print mins to the standard output [ENDL] t , n , i , x , pp , count , flag , dis , min , sum = integers with flag = 0 , dis = 0 , min = 0", "c++": "long long min ( long long a , long long b ) if ( a > b ) return b ; else return a ; int n ; } } int main() { cin >> n ; long long m = 1e9 + 1 ; for ( int i = 1 ; i <= n ; i ++ ) cin >> a [ i ] ; m = min ( m , a [ i ] ) ; vector < int > ans ; } for ( int i = 1 ; i <= n ; i ++ ) if ( a [ i ] == m ) { ans . push_back ( i ) ; } int mins = 1e9 ; } int size = ans . size ( ) - 1 ; for ( int i = 1 ; i <= size ; i ++ ) { mins = min ( mins , ans [ i ] - ans [ i - 1 ] ) ; } cout << mins << endl ; int t , n , i , x , pp , count , flag = 0 , dis = 0 , min = 0 , sum ; return 0; }"}}
{"translation": {"en": "v = vector of integer [ENDL] it = iterator vector of integer [ENDL] read n [ENDL] while decrement n [ENDL] read x [ENDL] append x in v [ENDL] t = pointer min_element on v . begin ( ) and v . end ( ) [ENDL] for i = 0 to v . size ( ) exclusive [ENDL] if v [ i ] is t [ENDL] if flag is not 0 [ENDL] dis = i - pp [ENDL] if min is 0 and dis is not 0 [ENDL] min = dis [ENDL] else if min is not 0 and min > dis [ENDL] min = dis [ENDL] increment flag [ENDL] pp = i [ENDL] print min [ENDL] create integer x", "c++": "int main() { vector < int > v ; vector < int > :: iterator it ; cin >> n ; while ( n -- ) cin >> x ; v . push_back ( x ) ; t = * min_element ( v . begin ( ) , v . end ( ) ) ; } for ( i = 0 ; i < v . size ( ) ; i ++ ) if ( v [ i ] == t ) if ( flag != 0 ) dis = i - pp ; if ( min == 0 && dis != 0 ) min = dis ; else if ( min != 0 && min > dis ) min = dis ; flag ++ ; } pp = i ; cout << min << endl ; } } int x ; return 0; }"}}
{"translation": {"en": "read x from the input [ENDL] create new array of integers ara with x elements [ENDL] create new integer maxn [ENDL] create new set of integers s [ENDL] set maxn to 1000000009 [ENDL] declare new integer variable d with value 1000000009 [ENDL] create boolean variable with name b with value 0 [ENDL] in the for loop , change integer w from 0 to x exclusive [ENDL] read variable ara [ w ] from the input [ENDL] if ara [ w ] is less than maxn , change maxn to ara [ w ] [ENDL] for w from 0 to x exclusive [ENDL] if ara [ w ] = maxn , insert w into set s [ENDL] i is a new iterator for the set of integers [ENDL] j is a new iterator for the set of integers pointed to the end of s [ENDL] decrement j [ENDL] declare ints l and m [ENDL] move i through s in a for loop [ENDL] if i is equal to j , skip the rest of the loop [ENDL] change m to the value pointed by i [ENDL] increment i [ENDL] change l to the value pointed by i [ENDL] decrement i [ENDL] if l - m is less than d , set d to ( l - m ) [ENDL] print d to the standard output [ENDL] a is a new array of integers with 300000 elements", "c++": "int main() { cin >> x ; int ara [ x ] ; int maxn ; set < int > s ; maxn = 1000000009 ; int d = 1000000009 ; bool b = 0 ; for ( int w = 0 ; w < x ; w ++ ) cin >> ara [ w ] ; if ( ara [ w ] < maxn ) { maxn = ara [ w ] ; } for ( int w = 0 ; w < x ; w ++ ) } if ( ara [ w ] == maxn ) { s . insert ( w ) ; } set < int > :: iterator i ; } set < int > :: iterator j = s . end ( ) ; j -- ; int l , m ; for ( i = s . begin ( ) ; i != s . end ( ) ; i ++ ) if ( i == j ) continue ; m = * i ; i ++ ; l = * i ; i -- ; if ( l - m < d ) d = ( l - m ) ; cout << d << endl ; } int a [ 300000 ] ; return 0; }"}}
{"translation": {"en": "create ints n , m1 , m2 , minn and minn2 with m1 and m2 = 0 , minn2 = 9999999 and minn = 9999999999 [ENDL] read standard input to n [ENDL] for i from 1 to n inclusive incrementing i [ENDL] read input to a [ i ] [ENDL] if minn is greater than a [ i ] , assign a [ i ] to minn [ENDL] start for loop from i = 1 to n inclusive on each loop [ENDL] if a [ i ] is equal to minn [ENDL] if m1 is equal to 0 [ENDL] change m1 to i [ENDL] else if m2 = 0 [ENDL] assign i to m2 [ENDL] if minn2 is greater than m2 - m1 , change minn2 to m2 - m1 [ENDL] else [ENDL] change m1 to m2 [ENDL] assign i to m2 [ENDL] if minn2 is greater than m2 - m1 , change minn2 to m2 - m1 [ENDL] print minn2 to the standard output [ENDL] nums is a new vector of integers", "c++": "int n , m1 = 0 , m2 = 0 , minn = 9999999999 , minn2 = 9999999 ; int main() { cin >> n ; for ( int i = 1 ; i <= n ; i ++ ) cin >> a [ i ] ; if ( minn > a [ i ] ) minn = a [ i ] ; for ( int i = 1 ; i <= n ; i ++ ) } if ( a [ i ] == minn ) if ( m1 == 0 ) m1 = i ; else if ( m2 == 0 ) m2 = i ; if ( minn2 > m2 - m1 ) minn2 = m2 - m1 ; else m1 = m2 ; m2 = i ; if ( minn2 > m2 - m1 ) minn2 = m2 - m1 ; cout << minn2 << endl ; } } } vector < int > nums ; return 0; }"}}
{"translation": {"en": "declare int variables n , a , last and dist [ENDL] create integer variable min with value INT_MAX [ENDL] mindist is a new integer with value INT_MAX [ENDL] read n from the user input [ENDL] for i from 0 to n exclusive [ENDL] read input to a [ENDL] push a to the end of nums [ENDL] if a is less than min , set min to a [ENDL] in a for loop , change i from 0 to n exclusive [ENDL] if nums [ i ] = min [ENDL] change last to i [ENDL] break [ENDL] for i from last + 1 to n exclusive incrementing i [ENDL] if nums [ i ] = min [ENDL] change dist to i - last [ENDL] if dist is less than mindist , change mindist to dist [ENDL] assign i to last [ENDL] print mindist to the standard output [ENDL] declare integer variable n and an array of integers ar with size 100010", "c++": "int n , a , last , dist ; int main() { int min = INT_MAX ; int mindist = INT_MAX ; cin >> n ; for ( int i = 0 ; i < n ; i ++ ) cin >> a ; nums . push_back ( a ) ; if ( a < min ) min = a ; for ( int i = 0 ; i < n ; i ++ ) } if ( nums [ i ] == min ) last = i ; break ; for ( int i = last + 1 ; i < n ; i ++ ) } } if ( nums [ i ] == min ) dist = i - last ; if ( dist < mindist ) mindist = dist ; last = i ; cout << mindist << endl ; } } int n , ar [ 100010 ] ; }"}}
{"translation": {"en": "read n [ENDL] read input into ar n times [ENDL] declare integer variable mn = ar [ 0 ] [ENDL] for i from 0 to n exclusive [ENDL] if mn is greater than ar [ i ] , assign ar [ i ] to mn [ENDL] declare integers p1 , p2 and d with p1 and p2 = - 1 [ENDL] create int mnd = n [ENDL] for integer i = 0 to n exclusive [ENDL] if ar [ i ] = mn [ENDL] assign i to p1 [ENDL] if p2 ! = - 1 [ENDL] if mnd is greater than ( p1 - p2 ) , change mnd to p1 - p2 [ENDL] assign p1 to p2 [ENDL] print mnd [ENDL] n , mn , skr , mnd = integers with mn = 1e9 + 7 , skr = 1e9 + 7 , mnd = 1e6", "c++": "int main() { cin >> n ; for ( int i = 0 ; i < n ; i ++ ) { cin >> ar [ i ] ; } int mn = ar [ 0 ] ; for ( int i = 0 ; i < n ; i ++ ) if ( mn > ar [ i ] ) mn = ar [ i ] ; int p1 = - 1 , p2 = - 1 , d ; } int mnd = n ; for ( int i = 0 ; i < n ; i ++ ) if ( ar [ i ] == mn ) p1 = i ; if ( p2 != - 1 ) if ( mnd > ( p1 - p2 ) ) { mnd = p1 - p2 ; } p2 = p1 ; } cout << mnd << endl ; } } int n , mn = 1e9 + 7 , skr = 1e9 + 7 , mnd = 1e6 ; return 0; }"}}
{"translation": {"en": "in the function masuk that takes integer idx [ENDL] if idx < n [ENDL] ai = integer [ENDL] read ai [ENDL] mn = min of mn and ai [ENDL] masuk of idx + 1 [ENDL] if ai is mn [ENDL] mnd = min of mnd and skr - idx [ENDL] skr = idx [ENDL] read n [ENDL] masuk of 0 [ENDL] print mnd [ENDL] t , n , i , x , pp , count , sum = int , flag , dis , min = 0", "c++": "void masuk ( int idx ) if ( idx < n ) int ai ; cin >> ai ; mn = min ( mn , ai ) ; masuk ( idx + 1 ) ; if ( ai == mn ) mnd = min ( mnd , skr - idx ) ; skr = idx ; cin >> n ; } } } int main() { masuk ( 0 ) ; cout << mnd << ' \\n ' ; int t , n , i , x , pp , count , flag = 0 , dis = 0 , min = 0 , sum ; return 0; }"}}
{"translation": {"en": "v = vector of int [ENDL] it = iterator on vector of int [ENDL] read n [ENDL] while decremented value of n is not zero [ENDL] read x [ENDL] put x at end of v [ENDL] t = item of v with min value [ENDL] for i = 0 to size of v exclusive [ENDL] if v [ i ] is t [ENDL] if flag ! = 0 [ENDL] dis = i - pp [ENDL] if min is 0 and dis is not 0 [ENDL] min = dis [ENDL] else if min is not 0 and min > dis [ENDL] min = dis [ENDL] increment flag [ENDL] pp = i [ENDL] print min [ENDL] create int n , minix , p , q", "c++": "int main() { vector < int > v ; vector < int > :: iterator it ; cin >> n ; while ( n -- ) cin >> x ; v . push_back ( x ) ; t = * min_element ( v . begin ( ) , v . end ( ) ) ; } for ( i = 0 ; i < v . size ( ) ; i ++ ) if ( v [ i ] == t ) if ( flag != 0 ) dis = i - pp ; if ( min == 0 && dis != 0 ) min = dis ; else if ( min != 0 && min > dis ) min = dis ; flag ++ ; } pp = i ; cout << min << endl ; } } int n , minix , p , q ; return 0; }"}}
{"translation": {"en": "read n [ENDL] create vector int v ( n ) [ENDL] minix = INT_MAX [ENDL] for i = 0 to n exclusive [ENDL] read v [ i ] [ENDL] set minix to min of minix and v [ i ] [ENDL] assign - 999999 to p [ENDL] set q to INT_MAX [ENDL] for i = 0 to n exclusive [ENDL] if v [ i ] = minix [ENDL] set q = min of q and i - p [ENDL] p = i [ENDL] print q [ENDL] create const int oo = 1e9", "c++": "int main() { cin >> n ; vector < int > v ( n ) ; minix = INT_MAX ; for ( int i = 0 ; i < n ; i ++ ) cin >> v [ i ] ; minix = min ( minix , v [ i ] ) ; p = - 999999 ; } q = INT_MAX ; for ( int i = 0 ; i < n ; i ++ ) if ( v [ i ] == minix ) q = min ( q , i - p ) ; p = i ; cout << q << endl ; } } const int oo = 1e9 ; return 0; }"}}
{"translation": {"en": "declare int variable n [ENDL] read n [ENDL] declare vector of integers called a with n elements [ENDL] read n elements from the input into a [ENDL] create int mn = pointer to the min element of a [ENDL] create integer ans = oo [ENDL] for i = 0 and prev = - oo while i < n , incrementing i [ENDL] if a [ i ] is equal to mn [ENDL] set ans to min of ans and i - prev [ENDL] set prev to i [ENDL] print ans and ' \\ n ' [ENDL] declare vector of long longs v", "c++": "int n ; int main() { cin >> n ; vector < int > a ( n ) ; for ( int i = 0 ; i < n ; i ++ ) cin >> a [ i ] ; int mn = * min_element ( a . begin ( ) , a . end ( ) ) ; int ans = oo ; for ( int i = 0 , prev = - oo ; i < n ; i ++ ) if ( a [ i ] == mn ) ans = min ( ans , i - prev ) ; prev = i ; cout << ans << ' \\n ' ; } vector < long long > v ; return 0; }"}}
{"translation": {"en": "create new vector of long longs v1 [ENDL] declare long longs i , j , n , ans , min , t and flag with min = 1000000002 [ENDL] read input to n [ENDL] for i = 0 to n exclusive [ENDL] declare long long variable x [ENDL] read from the input to x [ENDL] push x to the back of v [ENDL] if x is less than min , set min to x [ENDL] for i from 0 to n exclusive [ENDL] if min = v [ i ] , push i into v1 [ENDL] assign 1000000002 to min [ENDL] start for loop from i = 1 to length of v1 exclusive [ENDL] if ( v1 [ i ] - v1 [ i - 1 ] ) is less than min , assign v1 [ i ] - v1 [ i - 1 ] to min [ENDL] print min to the standard output [ENDL] arr = array of integers of length 1000000", "c++": "int main() { vector < long long > v1 ; long long i , j , n , ans , min = 1000000002 , t , flag ; cin >> n ; for ( i = 0 ; i < n ; i ++ ) long long x ; cin >> x ; v . push_back ( x ) ; if ( x < min ) { min = x ; } for ( i = 0 ; i < n ; i ++ ) } if ( min == v [ i ] ) { v1 . push_back ( i ) ; } min = 1000000002 ; } for ( i = 1 ; i < v1 . size ( ) ; i ++ ) if ( ( v1 [ i ] - v1 [ i - 1 ] ) < min ) { min = ( v1 [ i ] - v1 [ i - 1 ] ) ; } cout << min << endl ; } int arr [ 1000000 ] ; }"}}
{"translation": {"en": "let n be a integer [ENDL] read n [ENDL] let minimum , answer be integers wih answer = ( int ) 1e9 [ENDL] create a vector of integers with name occurrences [ENDL] for i = 0 to n exclusive [ENDL] read arr [ i ] [ENDL] if not i , minimum is equal to arr [ 0 ] [ENDL] minimum is equal to minimum of minimum , arr [ i ] [ENDL] for i = 0 to n exclusive [ENDL] if arr [ i ] is equal to minimum , push i into occurrences from back [ENDL] for i = 1 to length of occurrences exclusive , answer = minimum of answer , occurrences [ i ] - occurrences [ i - 1 ] [ENDL] print answer and newline [ENDL] n , i = int", "c++": "int n ; int main() { cin >> n ; int minimum , answer = ( int ) 1e9 ; vector < int > occurrences ; for ( int i = 0 ; i < n ; i ++ ) cin >> arr [ i ] ; if ( ! i ) minimum = arr [ 0 ] ; minimum = min ( minimum , arr [ i ] ) ; for ( int i = 0 ; i < n ; i ++ ) } if ( arr [ i ] == minimum ) occurrences . push_back ( i ) ; for ( int i = 1 ; i < occurrences . size ( ) ; i ++ ) answer = min ( answer , occurrences [ i ] - occurrences [ i - 1 ] ) ; cout << answer << endl ; int n , i ; return 0; }"}}
{"translation": {"en": "a = int array of size 100005 [ENDL] loop while reading n [ENDL] Min = int with Min = 0x7fffffff [ENDL] for i = 1 to n inclusive [ENDL] read a [ i ] [ENDL] set Min to min of a [ i ] and Min [ENDL] ans = int with ans = 0x7fffffff [ENDL] t = int with t = - 1 [ENDL] for i = 1 to n inclusive [ENDL] if a [ i ] is Min [ENDL] set t to i [ENDL] break [ENDL] for i = t + 1 to n inclusive [ENDL] if a [ i ] is Min [ENDL] set ans to min of i - t and ans [ENDL] set t to i [ENDL] print ans [ENDL] declare new constant integer called maxn = 1e7 + 10", "c++": "int main() { int a [ 100005 ] ; while ( cin >> n ) int Min = 0x7fffffff ; for ( i = 1 ; i <= n ; i ++ ) cin >> a [ i ] ; Min = min ( a [ i ] , Min ) ; int ans = 0x7fffffff ; } int t = - 1 ; for ( i = 1 ; i <= n ; i ++ ) if ( a [ i ] == Min ) t = i ; break ; for ( i = t + 1 ; i <= n ; i ++ ) } } if ( a [ i ] == Min ) ans = min ( i - t , ans ) ; t = i ; cout << ans << endl ; } } const int maxn = 1e7 + 10 ; } return 0; }"}}
{"translation": {"en": "a is a new array of integers with maxn elements [ENDL] n is a new integer variable [ENDL] create new integer variable mini = 1e9 + 10 [ENDL] read from the input to n [ENDL] start for loop from i = 0 to n exclusive [ENDL] read from the input to a [ i ] [ENDL] if a [ i ] is less than mini , assign a [ i ] to mini [ENDL] create new vector of integers vec [ENDL] start for loop from i = 0 to n exclusive [ENDL] if mini = a [ i ] , add i to the end of vec [ENDL] assign n to mini [ENDL] for i from 0 to length of vec - 1 exclusive , assign min of mini and vec [ i + 1 ] - vec [ i ] to mini [ENDL] print mini [ENDL] r , c = integers", "c++": "int a [ maxn ] ; int n ; int mini = 1e9 + 10 ; cin >> n ; int main() { for ( int i = 0 ; i < n ; i ++ ) cin >> a [ i ] ; if ( a [ i ] < mini ) mini = a [ i ] ; vector < int > vec ; } for ( int i = 0 ; i < n ; i ++ ) if ( mini == a [ i ] ) { vec . push_back ( i ) ; } mini = n ; } for ( int i = 0 ; i < vec . size ( ) - 1 ; i ++ ) { mini = min ( mini , vec [ i + 1 ] - vec [ i ] ) ; } cout << mini << endl ; int r , c ; return 0; }"}}
{"translation": {"en": "flag = integer with flag = - 1 [ENDL] read r , c [ENDL] v = 2d character array of size [ r ] [ c ] [ENDL] empt , wolf , sheep = integers with empt = 0 , wolf = 0 , sheep = 0 [ENDL] p = character [ENDL] for i = 0 to r exclusive [ENDL] for j = 0 to c exclusive [ENDL] read p [ENDL] if p is . [ENDL] v [ i ] [ j ] = D [ENDL] else [ENDL] v [ i ] [ j ] = p [ENDL] for i = 0 to r exclusive [ENDL] for j = 0 to c exclusive [ENDL] if v [ i ] [ j ] is S [ENDL] if v [ i - 1 ] [ j ] is W and i - 1 > = 0 , flag = 0 [ENDL] if v [ i + 1 ] [ j ] is W and i + 1 < r , flag = 0 [ENDL] if v [ i ] [ j + 1 ] is W and j + 1 < c , flag = 0 [ENDL] if v [ i ] [ j - 1 ] is W and j - 1 > = 0 , flag = 0 [ENDL] if flag is 0 [ENDL] print NO [ENDL] else [ENDL] print YES [ENDL] for i = 0 to r exclusive [ENDL] for j = 0 to c exclusive , print v [ i ] [ j ] [ENDL] print new line [ENDL] create long long a and b", "c++": "int main() { int flag = - 1 ; cin >> r >> c ; char v [ r ] [ c ] ; int empt = 0 , wolf = 0 , sheep = 0 ; char p ; for ( int i = 0 ; i < r ; i ++ ) for ( int j = 0 ; j < c ; j ++ ) cin >> p ; if ( p == ' . ' ) v [ i ] [ j ] = ' D ' ; else v [ i ] [ j ] = p ; for ( int i = 0 ; i < r ; i ++ ) } } for ( int j = 0 ; j < c ; j ++ ) if ( v [ i ] [ j ] == ' S ' ) if ( v [ i - 1 ] [ j ] == ' W ' && i - 1 >= 0 ) flag = 0 ; if ( v [ i + 1 ] [ j ] == ' W ' && i + 1 < r ) flag = 0 ; if ( v [ i ] [ j + 1 ] == ' W ' && j + 1 < c ) flag = 0 ; if ( v [ i ] [ j - 1 ] == ' W ' && j - 1 >= 0 ) flag = 0 ; if ( flag == 0 ) } } } cout << \" NO \" << endl ; else cout << \" YES \" << endl ; for ( int i = 0 ; i < r ; i ++ ) for ( int j = 0 ; j < c ; j ++ ) { cout << v [ i ] [ j ] ; } cout << endl ; long long a , b ; } } }"}}
{"translation": {"en": "create char s [ 1000 ] [ 1000 ] [ENDL] read a and b [ENDL] for i = 0 to a exclusive [ENDL] for j = 0 to b exclusive , read cin > > s [ i ] [ j ] [ENDL] for i = 0 to a exclusive [ENDL] for j = 0 to b exclusive [ENDL] if s [ i ] [ j ] = S [ENDL] if s [ i ] [ j + 1 ] = W [ENDL] print NO [ENDL] if s [ i ] [ j - 1 ] equal to W [ENDL] print NO [ENDL] s [ i + 1 ] [ j ] = W [ENDL] print NO [ENDL] if s [ i - 1 ] [ j ] = W [ENDL] print NO and a newline [ENDL] print YES [ENDL] for i = 0 to a exclusive [ENDL] for j = 0 to b exclusive [ENDL] if s [ i ] [ j ] = . , set s [ i ] [ j ] to D [ENDL] print s [ i ] [ j ] [ENDL] print a newline [ENDL] declare int array freq with size 1005", "c++": "char s [ 1000 ] [ 1000 ] ; cin >> a >> b ; int main() { for ( int i = 0 ; i < a ; i ++ ) for ( int j = 0 ; j < b ; j ++ ) { cin >> s [ i ] [ j ] ; } for ( int i = 0 ; i < a ; i ++ ) } for ( int j = 0 ; j < b ; j ++ ) if ( s [ i ] [ j ] == ' S ' ) if ( s [ i ] [ j + 1 ] == ' W ' ) cout << \" NO \" << endl ; if ( s [ i ] [ j - 1 ] == ' W ' ) return 0; } cout << \" NO \" << endl ; if ( s [ i + 1 ] [ j ] == ' W ' ) return 0; } cout << \" NO \" << endl ; if ( s [ i - 1 ] [ j ] == ' W ' ) return 0; } cout << \" NO \" << endl ; cout << \" YES \" << endl ; return 0; } } } } for ( int i = 0 ; i < a ; i ++ ) for ( int j = 0 ; j < b ; j ++ ) if ( s [ i ] [ j ] == ' . ' ) { s [ i ] [ j ] = ' D ' ; } cout << s [ i ] [ j ] ; cout << endl ; } int freq [ 1005 ] ; } }"}}
{"translation": {"en": "declare int variables hh and mm [ENDL] declare double variables h , d , c and n [ENDL] declare doubles cost1 and cost2 [ENDL] read hh and mm [ENDL] read input to h , d , c and n [ENDL] declare int time = ( hh * 60 ) + mm [ENDL] declare int buns = 0 [ENDL] declare int hunger = h [ENDL] while hunger > 0 [ENDL] subtract n from hunger [ENDL] increment buns [ENDL] assign buns * c to cost1 [ENDL] if time is less than 1200 [ENDL] set hunger to h + ( ( 1200 - time ) * d ) [ENDL] else [ENDL] change hunger to h [ENDL] change buns to 0 [ENDL] while hunger > 0 [ENDL] decrease hunger by n [ENDL] increment buns [ENDL] decrease c by c * ( 20 . 0 / 100 ) [ENDL] change cost2 to c * buns [ENDL] change decimal precision of the output to 5 , set showpoint and fixed flags and print the min of cost2 and cost1 [ENDL] create vector integer v", "c++": "int hh , mm ; int main() { double h , d , c , n ; double cost1 , cost2 ; cin >> hh >> mm ; cin >> h >> d >> c >> n ; int time = ( hh * 60 ) + mm ; int buns = 0 ; int hunger = h ; while ( hunger > 0 ) hunger -= n ; buns ++ ; cost1 = buns * c ; } if ( time < 1200 ) hunger = h + ( ( 1200 - time ) * d ) ; else hunger = h ; buns = 0 ; while ( hunger > 0 ) hunger -= n ; buns ++ ; c -= c * ( 20.0 / 100 ) ; } cost2 = c * buns ; cout << setprecision ( 5 ) << showpoint << fixed << min ( cost2 , cost1 ) << endl ; vector < int > v ; }"}}
{"translation": {"en": "create integer arrays num , value , with num size 51 , value size 51 [ENDL] create integers n , index with index = 1 [ENDL] read n [ENDL] for i = 0 to n exclusive , read num [ i ] [ENDL] add element num [ n - 1 ] to end of v [ENDL] for i = n - 2 to 0 inclusive , decrementing i [ENDL] create integers j , flag with j = 0 , flag = 0 [ENDL] while j is less than size of v [ENDL] if num [ i ] is v [ j ] [ENDL] set flag to 1 [ENDL] break loop [ENDL] increment j [ENDL] if not flag , add element num [ i ] to end of v [ENDL] print size of v print newline [ENDL] print v [ size of v - 1 ] [ENDL] for i = size of v - 2 to 0 inclusive , decrementing i , print \" \" print v [ i ] [ENDL] print newline [ENDL] create integer array a with size 555", "c++": "int num [ 51 ] , value [ 51 ] ; int n , index = 1 ; int main() { cin >> n ; for ( int i = 0 ; i < n ; i ++ ) { cin >> num [ i ] ; } v . push_back ( num [ n - 1 ] ) ; for ( int i = n - 2 ; i >= 0 ; i -- ) int j = 0 , flag = 0 ; while ( j < v . size ( ) ) if ( num [ i ] == v [ j ] ) flag = 1 ; break ; j ++ ; } if ( ! flag ) v . push_back ( num [ i ] ) ; } cout << v . size ( ) << endl ; } cout << v [ v . size ( ) - 1 ] ; for ( int i = v . size ( ) - 2 ; i >= 0 ; i -- ) cout << \"   \" << v [ i ] ; cout << endl ; int a [ 55 ] ; }"}}
{"translation": {"en": "create boolean array vis with size 1005 [ENDL] create integer vector s [ENDL] create integer n , tot with tot = 0 [ENDL] read n [ENDL] for i = 0 to n exclusive , read a [ i ] [ENDL] for i = n - 1 to 0 inclusive , decrementing i [ENDL] if vis [ a [ i ] ] is false [ENDL] add element a [ i ] to end of s [ENDL] set vis [ a [ i ] ] to true [ENDL] create integer len with len = size of s [ENDL] print len print newline [ENDL] for i = len - 1 to 0 exclusive , decrementing i , print s [ i ] print \" \" [ENDL] print s [ 0 ] print newline [ENDL] create integer array num of size 100", "c++": "bool vis [ 1005 ] ; vector < int > s ; int n , tot = 0 ; int main() { cin >> n ; for ( int i = 0 ; i < n ; i ++ ) cin >> a [ i ] ; for ( int i = n - 1 ; i >= 0 ; i -- ) if ( ! vis [ a [ i ] ] ) s . push_back ( a [ i ] ) ; vis [ a [ i ] ] = true ; int len = s . size ( ) ; } } cout << len << endl ; for ( int i = len - 1 ; i > 0 ; i -- ) cout << s [ i ] << \"   \" ; cout << s [ 0 ] << endl ; int num [ 100 ] ; return 0; }"}}
{"translation": {"en": "create integer array nn of size 100 [ENDL] create integer cnt with cnt = 0 [ENDL] create integer cc1 with cc1 = 0 [ENDL] declare num_find with integer in as argument , returning boolean [ENDL] for i = 0 to cnt exclusive [ENDL] if num [ i ] is in , return true from function [ENDL] return false from function [ENDL] create integer N [ENDL] read N [ENDL] for i = 0 to N exclusive [ENDL] read nn [ cc1 ] [ENDL] increment cc1 [ENDL] for i = N - 1 to 0 inclusive , decrement i [ENDL] create integer tmp [ENDL] set tmp to nn [ i ] [ENDL] if result of num_find with tmp as argument is false [ENDL] set num [ cnt ] is tmp [ENDL] increment cnt [ENDL] print cnt print newlien [ENDL] for i = cnt - 1 to 0 exclusive , decrementing i , print num [ i ] print \" \" [ENDL] print num [ 0 ] print newline [ENDL] declare integers n and t , integer arrays a and b with 100 elements and an array of integers visit with 1010 elements", "c++": "int nn [ 100 ] ; int cnt = 0 ; int cc1 = 0 ; bool num_find ( int in ) for ( int i = 0 ; i < cnt ; i ++ ) if ( num [ i ] == in ) return true ; return false ; } int N ; } int main() { cin >> N ; for ( int i = 0 ; i < N ; i ++ ) cin >> nn [ cc1 ] ; cc1 ++ ; for ( int i = N - 1 ; i >= 0 ; i -- ) } int tmp ; tmp = nn [ i ] ; if ( ! num_find ( tmp ) ) num [ cnt ] = tmp ; cnt ++ ; cout << cnt << endl ; } } for ( int i = cnt - 1 ; i > 0 ; i -- ) cout << num [ i ] << \"   \" ; cout << num [ 0 ] << endl ; int n , a [ 100 ] , b [ 100 ] , visit [ 1010 ] , t ; }"}}
{"translation": {"en": "while reading n [ENDL] call memset with arguments a , 0 and sizeof ( a ) [ENDL] call memset with arguments b , 0 and sizeof ( b ) [ENDL] call memset with arguments visit , 0 and sizeof ( visit ) [ENDL] t = 0 [ENDL] for i = 0 to n exclusive read a [ i ] [ENDL] declare integer variable p = n [ENDL] for i = n - 1 to 0 inclusive counting down [ENDL] if visit [ a [ i ] ] is greater than 0 [ENDL] decrement p [ENDL] continue the loop [ENDL] set b [ t ] to a [ i ] and increment t [ENDL] increase visit [ a [ i ] ] [ENDL] print p [ENDL] for i = t - 1 to 0 inclusive counting down [ENDL] print b [ i ] [ENDL] if i ! = 0 , print \" \" [ENDL] print new line [ENDL] create integer arrays a , b with a size 5000 , b size 5000", "c++": "while ( cin >> n ) int main() { memset ( a , 0 , sizeof ( a ) ) ; memset ( b , 0 , sizeof ( b ) ) ; memset ( visit , 0 , sizeof ( visit ) ) ; t = 0 ; for ( int i = 0 ; i < n ; i ++ ) cin >> a [ i ] ; int p = n ; for ( int i = n - 1 ; i >= 0 ; i -- ) if ( visit [ a [ i ] ] > 0 ) p -- ; continue ; b [ t ++ ] = a [ i ] ; } visit [ a [ i ] ] ++ ; cout << p << endl ; } for ( int i = t - 1 ; i >= 0 ; i -- ) cout << b [ i ] ; if ( i != 0 ) cout << \"   \" ; cout << endl ; } int a [ 5000 ] , b [ 5000 ] ; } }"}}
{"translation": {"en": "create integer array flag of size 5000 [ENDL] set bytes from flag to size of flag to value true [ENDL] create integer n [ENDL] read n [ENDL] for i = 0 to n exclusive , read a [ i ] [ENDL] create integer len with len = 0 [ENDL] for i = n - 1 to 0 inclusive , decrementing i [ENDL] if flag [ a [ i ] ] is true [ENDL] increment len [ENDL] set b [ len ] to a [ i ] [ENDL] set flag [ a [ i ] ] to false [ENDL] print len print newline [ENDL] for i = len to 1 inclusive , decrementing i [ENDL] if i is not 1 [ENDL] print b [ i ] print ' ' [ENDL] else [ENDL] print b [ i ] print newline [ENDL] let n be integer", "c++": "int main() { int flag [ 5000 ] ; memset ( flag , true , sizeof ( flag ) ) ; int n ; cin >> n ; for ( int i = 0 ; i < n ; i ++ ) { cin >> a [ i ] ; } int len = 0 ; for ( int i = n - 1 ; i >= 0 ; i -- ) if ( flag [ a [ i ] ] ) len ++ ; b [ len ] = a [ i ] ; flag [ a [ i ] ] = false ; cout << len << endl ; } } for ( int i = len ; i >= 1 ; i -- ) if ( i != 1 ) cout << b [ i ] << '   ' ; else cout << b [ i ] << endl ; int n ; return 0; }"}}
{"translation": {"en": "A = array of integers of size 60 [ENDL] let sum be integer [ENDL] let B be an array of integers of size 60 [ENDL] read n [ENDL] sum = n [ENDL] create integer t with value 0 [ENDL] read n elements from the input to A [ENDL] for integer i = 0 to n exclusive [ENDL] for integer x = i + 1 to n exclusive [ENDL] if A [ i ] = A [ x ] [ENDL] assign value of 0 to the A [ i ] [ENDL] assign value of i to the B [ t ] [ENDL] increase t [ENDL] stop the loop [ENDL] for i = t - 1 to 0 [ENDL] decrease sum by one [ENDL] for integer x = B [ i ] to n exclusive [ENDL] A [ x ] = A [ x + 1 ] [ENDL] A [ x + 1 ] = 0 [ENDL] print sum and a new line [ENDL] for i = 0 to sum exclusive [ENDL] print A [ i ] [ENDL] if i ! = sum - 1 , print \" \" [ENDL] print new line [ENDL] let n and sum be integers , with sum = 0 ; a and b are arrays of integers with size 50 and v is an array of integers with size 1001 filled with 0", "c++": "int A [ 60 ] ; int sum ; int B [ 60 ] ; cin >> n ; int main() { sum = n ; int t = 0 ; for ( int i = 0 ; i < n ; i ++ ) { cin >> A [ i ] ; } for ( int i = 0 ; i < n ; i ++ ) for ( int x = i + 1 ; x < n ; x ++ ) if ( A [ i ] == A [ x ] ) A [ i ] = 0 ; B [ t ] = i ; t ++ ; break ; for ( int i = t - 1 ; i >= 0 ; i -- ) } } } sum -- ; for ( int x = B [ i ] ; x < n ; x ++ ) A [ x ] = A [ x + 1 ] ; A [ x + 1 ] = 0 ; cout << sum << endl ; } } for ( int i = 0 ; i < sum ; i ++ ) cout << A [ i ] ; if ( i != sum - 1 ) { cout << \"   \" ; } cout << endl ; } int a [ 50 ] , b [ 50 ] , v [ 1001 ] = { 0 } , n , sum = 0 ; }"}}
{"translation": {"en": "read n [ENDL] read n elements into a [ENDL] for integer i = n - 1 to 0 inclusive counting down [ENDL] if v [ a [ i ] ] is 0 [ENDL] set value of v [ a [ i ] ] to 1 [ENDL] set value of b [ sum ] to a [ i ] [ENDL] increment sum [ENDL] print sum and a new line [ENDL] for i = sum - 1 to 0 exclusive counting down , print b [ i ] and ' ' [ENDL] print b [ 0 ] and a new line [ENDL] create constant integer Max with Max = 1e3 + 10", "c++": "int main() { cin >> n ; for ( int i = 0 ; i < n ; i ++ ) cin >> a [ i ] ; for ( int i = n - 1 ; i >= 0 ; i -- ) if ( ! v [ a [ i ] ] ) v [ a [ i ] ] = 1 ; b [ sum ] = a [ i ] ; sum ++ ; cout << sum << endl ; } for ( int i = sum - 1 ; i > 0 ; i -- ) cout << b [ i ] << '   ' ; cout << b [ 0 ] << endl ; const int Max = 1e3 + 10 ; return 0; }"}}
{"translation": {"en": "create integer arrays a , ans , flag , with a size Max , ans size Max , flag size Max [ENDL] create integers n , tot with tot = 0 [ENDL] read n [ENDL] for i = 1 to n inclusive , read a [ i ] [ENDL] for i = n to 1 inclusive , decrementing i [ENDL] if not flag [ a [ i ] ] [ENDL] set flag [ a [ i ] ] to 1 [ENDL] set ans [ increment tot ] to a [ i ] [ENDL] print tot print newline [ENDL] for i = tot - 1 to 0 inclusive , decrementing i [ENDL] print ans [ i ] [ENDL] if i is not 0 print \" \" [ENDL] print newline [ENDL] create long long integer n", "c++": "int a [ Max ] , ans [ Max ] , flag [ Max ] ; int n , tot = 0 ; int main() { cin >> n ; for ( int i = 1 ; i <= n ; i ++ ) cin >> a [ i ] ; for ( int i = n ; i >= 1 ; i -- ) if ( ! flag [ a [ i ] ] ) flag [ a [ i ] ] = 1 ; ans [ tot ++ ] = a [ i ] ; cout << tot << endl ; } } for ( int i = tot - 1 ; i >= 0 ; i -- ) cout << ans [ i ] ; if ( i != 0 ) cout << \"   \" ; cout << endl ; } long long int n ; return 0; }"}}
{"translation": {"en": "while read n [ENDL] if n is 0 [ENDL] print 0 print newline [ENDL] else if ( n + 1 ) % 2 is 0 [ENDL] print ( n + 1 ) / 2 print newline [ENDL] else [ENDL] print n + 1 print newline [ENDL] create long long int n", "c++": "int main() { while ( cin >> n ) if ( n == 0 ) cout << 0 << endl ; else if ( ( n + 1 ) % 2 == 0 ) cout << ( n + 1 ) / 2 << endl ; else cout << n + 1 << endl ; long long int n ; } return 0; }"}}
{"translation": {"en": "read n [ENDL] if n = 0 [ENDL] print n and a newline [ENDL] else [ENDL] if n is even [ENDL] print n + 1 and a newline [ENDL] otherwise [ENDL] print ( n + 1 ) / 2 and a newline [ENDL] declare int64_t N", "c++": "int main() { cin >> n ; if ( n == 0 ) cout << n << \" \\n \" ; else if ( n % 2 == 0 ) cout << n + 1 << \" \\n \" ; else cout << ( n + 1 ) / 2 << \" \\n \" ; int64_t N ; } } }"}}
{"translation": {"en": "read N [ENDL] declare int64_t ans = 0 if N = 0 , ( N + 1 ) / 2 if N is even , or N + 1 if N is odd [ENDL] print ans [ENDL] create long long n", "c++": "int main() { cin >> N ; int64_t ans = N == 0 ? 0 : ( N % 2 ? ( N + 1 ) / 2 : N + 1 ) ; cout << ans << endl ; long long n ; return 0; }"}}
{"translation": {"en": "read n [ENDL] if n = 0 [ENDL] print 0 [ENDL] else if n is even [ENDL] print n + 1 [ENDL] otherwise [ENDL] print ( n + 1 ) / 2 and a newline [ENDL] n = integer", "c++": "cin >> n ; int main() { if ( n == 0 ) cout << 0 << endl ; else if ( n % 2 == 0 ) cout << n + 1 << endl ; else cout << ( n + 1 ) / 2 << endl ; long long n ; return 0; }"}}
{"translation": {"en": "Read n [ENDL] if ( n + 1 ) modulo 2 is equal to 0 [ENDL] print ( n + 1 ) / 2 and a new line [ENDL] else do the following [ENDL] if n is equal to 0 [ENDL] print 0 and a new line [ENDL] else do the following [ENDL] print n + 1 and a new line [ENDL] let n be a unsigned long integer", "c++": "int main() { cin >> n ; if ( ( n + 1 ) % 2 == 0 ) cout << ( n + 1 ) / 2 << endl ; else if ( n == 0 ) cout << 0 << endl ; else cout << n + 1 << endl ; unsigned long long int n ; } } }"}}
{"translation": {"en": "read n [ENDL] increase n value by 1 [ENDL] if ( n modulus 2 is equal to 0 ) [ENDL] print n / 2 and newline [ENDL] else if ( n is equal to 1 ) [ENDL] print 0 and newline [ENDL] else do the following [ENDL] print n and newline [ENDL] integer function gcd with integer arguments a and b", "c++": "int main() { cin >> n ; n ++ ; if ( n % 2 == 0 ) cout << n / 2 << endl ; else if ( n == 1 ) cout << 0 << endl ; else cout << n << endl ; int gcd ( int a , int b ) }"}}
{"translation": {"en": "if b = 0 [ENDL] return a [ENDL] else [ENDL] call gcd with arguments b and a % b [ENDL] declare long long integer variable n [ENDL] read n and keep looping [ENDL] increase n by one [ENDL] if n = 1 [ENDL] print \" 0 \" [ENDL] else if n is even [ENDL] print n / 2 [ENDL] else [ENDL] print n [ENDL] print new line [ENDL] declare long long n", "c++": "if ( b == 0 ) return a ; else gcd ( b , a % b ) ; long long int n ; } int main() { while ( cin >> n ) n ++ ; if ( n == 1 ) cout << \" 0 \" ; else if ( n % 2 == 0 ) cout << n / 2 ; else cout << n ; cout << endl ; long long n ; } }"}}
{"translation": {"en": "read n [ENDL] if n = 0 [ENDL] print 0 and \" \\ n \" [ENDL] if n = 1 [ENDL] print 1 and \" \\ n \" [ENDL] if odd is greater than even [ENDL] print ( n + 1 ) / 2 and \" \\ n \" [ENDL] else [ENDL] print n + 1 and \" \\ n \" [ENDL] create long long n", "c++": "int main() { cin >> n ; if ( n == 0 ) cout << 0 << \" \\n \" ; if ( n == 1 ) return 0; } cout << 1 << \" \\n \" ; if ( n % 2 == 1 ) return 0; } cout << ( n + 1 ) / 2 << \" \\n \" ; else cout << n + 1 << \" \\n \" ; long long n ; return 0; }"}}
{"translation": {"en": "read n [ENDL] if n is equal to 0 [ENDL] print 0 [ENDL] if n is even [ENDL] print n + 1 and a newline [ENDL] else [ENDL] print ( n + 1 ) / 2 [ENDL] n = long long", "c++": "int main() { cin >> n ; if ( n == 0 ) cout << 0 << endl ; if ( n % 2 == 0 ) return 0; } cout << n + 1 << endl ; else cout << ( n + 1 ) / 2 << endl ; long long n ; return 0; }"}}
{"translation": {"en": "read n [ENDL] print if not n then 0 else if n & 1 then ( n + 1 ) > > 1 else n + 1 [ENDL] create long long int s , n , i , j , p , h , set h to 0", "c++": "int main() { cin >> n ; cout << ( ! n ? 0 : n & 1 ? ( n + 1 ) >> 1 : n + 1 ) << endl ; long long int s , n , i , j , p , h = 0 ; return 0; }"}}
{"translation": {"en": "read n [ENDL] if n equal to 0 [ENDL] print 0 [ENDL] else if n is even [ENDL] print n + 1 [ENDL] else [ENDL] print ( n + 1 ) / 2 and a newline [ENDL] create long longs n , p , b and q", "c++": "int main() { cin >> n ; if ( n == 0 ) cout << \" 0 \" << endl ; else if ( n % 2 == 0 ) cout << n + 1 << endl ; else cout << ( n + 1 ) / 2 << endl ; long long n , p , b , q ; }"}}
{"translation": {"en": "long long function gcd with long long arguments a and b [ENDL] return a if b = 0 [ENDL] return gcd ( b , a % b ) [ENDL] read n [ENDL] decrement n and loop further , while n > 0 [ENDL] read from the input to p , q and b [ENDL] declare long long variable tmp = gcd ( p , q ) [ENDL] divide p by tmp [ENDL] divide q by tmp [ENDL] create long long div = gcd of b and q [ENDL] while div = ( gcd ( b , q ) ! = 1 ) [ENDL] while q % div is 0 , divide q by div [ENDL] if q is 1 [ENDL] print \" Finite \" [ENDL] else [ENDL] print \" Infinite \" [ENDL] long long function gcd with long long arguments a and b", "c++": "long long gcd ( long long a , long long b ) if ( b == 0 ) return a ; return gcd ( b , a % b ) ; cin >> n ; } int main() { while ( n -- ) cin >> p >> q >> b ; long long tmp = gcd ( p , q ) ; p /= tmp ; q /= tmp ; long long div = gcd ( b , q ) ; while ( ( div = gcd ( b , q ) ) != 1 ) while ( q % div == 0 ) q /= div ; if ( q == 1 ) cout << \" Finite \" << endl ; else cout << \" Infinite \" << endl ; long long gcd ( long long a , long long b ) } return 0; }"}}
{"translation": {"en": "while b > 0 [ENDL] a = a modulo b [ENDL] swap a and b [ENDL] return a [ENDL] declare string sy = \" Finite \\ n \" [ENDL] declare string sn = \" Infinite \\ n \" [ENDL] create map m of long long pairs to chars [ENDL] void function solve [ENDL] create int n [ENDL] read n [ENDL] loop i from 0 to n exclusive [ENDL] create long longs p , q and b [ENDL] read input to p , q and b [ENDL] p = p modulo q [ENDL] declare long long g = gcd of p and q [ENDL] divide p by g [ENDL] divide q by g [ENDL] if p = 0 [ENDL] print sy [ENDL] go to the start of the loop [ENDL] if pair { q , b } is present in m [ENDL] if m [ { q , b } ] ! = 0 [ENDL] print sy [ENDL] else [ENDL] print sn [ENDL] continue the loop [ENDL] declare long long q1 = q [ENDL] change g to gcd ( q , b ) [ENDL] while g > 1 [ENDL] while q % g = 0 [ENDL] set g to gcd ( q , b ) [ENDL] if q = 1 [ENDL] assign true to m [ { q1 , b } ] [ENDL] print sy [ENDL] else [ENDL] assign false to m [ { q1 , b } ] [ENDL] print sn [ENDL] initialize random number generator using 555 as a seed [ENDL] invoke function solve [ENDL] n = integer", "c++": "while ( b > 0 ) a %= b ; swap ( a , b ) ; return a ; } string sy = \" Finite\\n \" ; } string sn = \" Infinite\\n \" ; map < pair < long long , long long > , char > m ; void solve ( ) int n ; cin >> n ; for ( int i = 0 ; i < n ; i ++ ) long long p , q , b ; cin >> p >> q >> b ; p %= q ; long long g = gcd ( p , q ) ; p /= g ; q /= g ; if ( p == 0 ) cout << sy ; continue ; if ( m . find ( { q , b } ) != m . end ( ) ) } if ( m [ { q , b } ] ) cout << sy ; else cout << sn ; continue ; long long q1 = q ; } g = gcd ( q , b ) ; while ( g > 1 ) while ( q % g == 0 ) q /= g ; g = gcd ( q , b ) ; if ( q == 1 ) } m [ { q1 , b } ] = true ; cout << sy ; else m [ { q1 , b } ] = false ; cout << sn ; srand ( 555 ) ; } } } int main() { solve ( ) ; int n ; }"}}
{"translation": {"en": "p , q , b = long long [ENDL] read n [ENDL] while decrement n [ENDL] read p , q , b [ENDL] if p modulo q is 0 [ENDL] print Finite [ENDL] continue iteration [ENDL] q = q / gcd of p and q [ENDL] g = long long [ENDL] while 1 [ENDL] g = gcd of q and b [ENDL] if g is 1 , break loop [ENDL] while q modulo g is 0 , q = q / g [ENDL] if q is not 1 [ENDL] print Infinite [ENDL] else [ENDL] print Finite [ENDL] N = integer", "c++": "long long p , q , b ; cin >> n ; int main() { while ( n -- ) cin >> p >> q >> b ; if ( p % q == 0 ) cout << \" Finite\\n \" ; continue ; q /= __gcd ( p , q ) ; } long long g ; while ( 1 ) g = __gcd ( q , b ) ; if ( g == 1 ) break ; while ( q % g == 0 ) q /= g ; if ( q != 1 ) } cout << \" Infinite\\n \" ; else cout << \" Finite\\n \" ; int N ; } }"}}
{"translation": {"en": "P , Q , B = long long [ENDL] in the function gcd that takes long long x , y and returns long long [ENDL] if y is 0 , return x [ENDL] return gcd of y and x modulo y [ENDL] read N [ENDL] while decrement N [ENDL] read P , Q , B [ENDL] P = P modulo Q [ENDL] G = long long with G = gcd of P and Q [ENDL] Q = Q / G [ENDL] C = long long with C = gcd of B and Q [ENDL] while C is not 1 [ENDL] Q = Q / C [ENDL] C = gcd of C and Q [ENDL] if Q is not 1 [ENDL] print Infinite [ENDL] else [ENDL] print Finite [ENDL] declare long longs n , p , q and b", "c++": "long long P , Q , B ; long long gcd ( long long x , long long y ) if ( y == 0 ) return x ; return gcd ( y , x % y ) ; cin >> N ; } int main() { while ( N -- ) cin >> P >> Q >> B ; P %= Q ; long long G = gcd ( P , Q ) ; Q /= G ; long long C = gcd ( B , Q ) ; while ( C != 1 ) Q /= C ; C = gcd ( C , Q ) ; if ( Q != 1 ) } cout << \" Infinite\\n \" ; else cout << \" Finite\\n \" ; long long n , p , q , b ; } return 0; }"}}
{"translation": {"en": "read input to n [ENDL] for integer i = 1 to n inclusive [ENDL] read p , q and b from the input [ENDL] declare long long variable t = __gcd of p and q [ENDL] divide q by t [ENDL] assign b to t [ENDL] while q ! = 1 [ENDL] assign result of __gcd ( q , t ) to t [ENDL] divide q by t [ENDL] break if t = 1 [ENDL] if q = 1 [ENDL] print \" Finite \\ n \" [ENDL] else [ENDL] print \" Infinite \\ n \" [ENDL] in the function freac", "c++": "int main() { cin >> n ; for ( int i = 1 ; i <= n ; i ++ ) cin >> p >> q >> b ; long long t = __gcd ( p , q ) ; q /= t ; t = b ; while ( q != 1 ) t = __gcd ( q , t ) ; q /= t ; if ( t == 1 ) break ; if ( q == 1 ) } cout << \" Finite\\n \" ; else cout << \" Infinite\\n \" ; void freac ( ) { } } }"}}
{"translation": {"en": "DX = array of const integers with DX = + 1 , 0 , - 1 , 0 , + 1 , + 1 , - 1 , - 1 [ENDL] DX = array of const integers with DY = 0 , + 1 , 0 , - 1 , + 1 , - 1 , + 1 , - 1 [ENDL] INF = const integer with INF = cast 1e9 + 123 from integer [ENDL] INFL = const long long with INFL = cast 1e18 + 123 from long long [ENDL] EPS = const double with EPS = 1e - 9 [ENDL] in the function lifestyle [ENDL] call lifestyle [ENDL] call freac [ENDL] n = integer [ENDL] p , q , b = long long [ENDL] read n [ENDL] while decrement n [ENDL] read p , q , b [ENDL] g = long long with g = gcd of p and q [ENDL] q = q / g [ENDL] while b is not 1 [ENDL] while q modulo b is 0 , q = q / b [ENDL] b = gcd of q and b [ENDL] if q is 1 print Finite else print Infinite [ENDL] return false [ENDL] declare int n", "c++": "const int DX [ ] = { + 1 , 0 , - 1 , 0 , + 1 , + 1 , - 1 , - 1 } ; const int DY [ ] = { 0 , + 1 , 0 , - 1 , + 1 , - 1 , + 1 , - 1 } ; const int INF = ( int ) 1e9 + 123 ; const long long INFL = ( long long ) 1e18 + 123 ; const double EPS = 1e-9 ; void lifestyle ( ) { } lifestyle ( ) ; int main() { freac ( ) ; int n ; long long p , q , b ; cin >> n ; while ( n -- ) cin >> p >> q >> b ; long long g = __gcd ( p , q ) ; q /= g ; while ( b != 1 ) while ( q % b == 0 ) q /= b ; b = __gcd ( q , b ) ; cout << ( ( q == 1 ) ? \" Finite \" : \" Infinite \" ) << endl ; } return false ; } int n ; }"}}
{"translation": {"en": "declare long longs p , q , and b [ENDL] declare long long NWD with long long x and long long y [ENDL] if y is 0 [ENDL] return x [ENDL] else [ENDL] return the NWD of y , and x mod y [ENDL] input n [ENDL] loop i between 1 and n inclusive [ENDL] input p , q , and b [ENDL] declare long long blep to be NWD of p and q [ENDL] divide q by q over blep [ENDL] set blep to NWD of q and b [ENDL] while blep is more than 1 [ENDL] while q mod blep is zero , then set q to q over blep [ENDL] set blep to NWD of q and b [ENDL] if q is greater than 1 [ENDL] output \" Infinite \" [ENDL] else [ENDL] output \" Finite \" [ENDL] in function gcd taking two long longs a and b and returning a long long", "c++": "long long p , q , b ; long long NWD ( long long x , long long y ) if ( y == 0 ) return x ; else return NWD ( y , x % y ) ; cin >> n ; } int main() { for ( int i = 1 ; i <= n ; i ++ ) cin >> p >> q >> b ; long long blep = NWD ( p , q ) ; q /= blep ; blep = NWD ( q , b ) ; while ( blep > 1 ) while ( q % blep == 0 ) q /= blep ; blep = NWD ( q , b ) ; if ( q > 1 ) } cout << \" Infinite \" << endl ; else cout << \" Finite \" << endl ; long long gcd ( long long a , long long b ) } return 0; }"}}
{"translation": {"en": "return __gcd of a and b [ENDL] in function solve returning a bool [ENDL] p , q , b = long long [ENDL] read p then q then b [ENDL] if p is 0 then return true [ENDL] gc = long long with gc = gcd of p and q [ENDL] set p to p / gc [ENDL] set q to q / gc [ENDL] x = long long [ENDL] loop while setting x to gcd of q and b and x is greater than 1 [ENDL] loop while q mod x is 0 set q to q / x [ENDL] set x to gcd of q and b [ENDL] return true if q is 1 else return false [ENDL] t = int [ENDL] read t [ENDL] loop t times [ENDL] is = bool with is = solve [ENDL] print \" Finite \" if is is true else print \" Infinte \" [ENDL] create long longs p , q , k", "c++": "return __gcd ( a , b ) ; bool solve ( ) } long long p , q , b ; cin >> p >> q >> b ; if ( p == 0 ) return true ; long long gc = gcd ( p , q ) ; p /= gc ; q /= gc ; long long x ; while ( ( x = gcd ( q , b ) ) > 1 ) while ( q % x == 0 ) q /= x ; x = gcd ( q , b ) ; return q == 1 ; } int t ; } int main() { cin >> t ; while ( t -- ) bool is = solve ( ) ; cout << ( is ? \" Finite \" : \" Infinite \" ) << ' \\n ' ; long long p , q , k ; } return 0; }"}}
{"translation": {"en": "declare gcd with long longs a , b as arguments , returning long long [ENDL] return a if b is 0 , else result of run gcd with b , a % b as arguments [ENDL] declare inline rd with no arguments , returning long long [ENDL] create long longs x , f , with x = 0 , f = 1 [ENDL] create character ch with ch = getchar [ENDL] while ch is greater than ' 9 ' or ch is less than ' 0 ' [ENDL] if ch is ' - ' , set f to - 1 [ENDL] set ch to read character [ENDL] while ch is greater than or equal to ' 0 ' and ch is less than or equal to ' 9 ' [ENDL] set x to ( x bitshift left 1 ) + ( x bitshift left 3 ) + ch - ' 0 ' [ENDL] set ch to read character [ENDL] return x * f from function [ENDL] declare inline solve with no arguments , returning void [ENDL] set p to result of run rd , set q to result of run rd , set k to result of run rd [ENDL] create long long t with t = result of run gcd with p , q as arguments [ENDL] set q to q / t [ENDL] while ( set t to result of run gcd with k , q as arguments ) is not 1 [ENDL] while ( q % t is 0 ) set q to q / t [ENDL] print \" Finite \" if q is 1 , else \" Infinite \" [ENDL] for T = result of run rd to T , decrementing T , run solve [ENDL] in function compare taking two pointers to const void x1 and x2 and returning an int", "c++": "long long gcd ( long long a , long long b ) return b == 0 ? a : gcd ( b , a % b ) ; inline long long rd ( ) } long long x = 0 , f = 1 ; char ch = getchar ( ) ; while ( ch > ' 9 ' || ch < ' 0 ' ) if ( ch == ' - ' ) f = - 1 ; ch = getchar ( ) ; while ( ch >= ' 0 ' && ch <= ' 9 ' ) } x = ( x << 1 ) + ( x << 3 ) + ch - ' 0 ' ; ch = getchar ( ) ; return x * f ; } inline void solve ( ) } p = rd ( ) , q = rd ( ) , k = rd ( ) ; long long t = gcd ( p , q ) ; q /= t ; while ( ( t = gcd ( k , q ) ) != 1 ) while ( q % t == 0 ) q /= t ; puts ( q == 1 ? \" Finite \" : \" Infinite \" ) ; } for ( int T = rd ( ) ; T ; T -- ) solve ( ) ; } int main() { int compare ( const void * x1 , const void * x2 ) return 0; }"}}
{"translation": {"en": "return value of x1 as pointer to in - value of x2 as pointer to int [ENDL] N = int [ENDL] final = int [ENDL] read N [ENDL] massiv = int array of size N [ENDL] d = int [ENDL] R = int [ENDL] for R = 0 to N [ENDL] read d [ENDL] set massiv [ R ] to d [ENDL] call qsort on massiv , N , sizeof of int and compare [ENDL] if N is even [ENDL] set final to massiv [ R / 2 - 1 ] [ENDL] else [ENDL] set final to massiv [ R / 2 ] [ENDL] print final [ENDL] declare long long n and an array of long longs arr with 1001 element", "c++": "return ( * ( int * ) x1 - * ( int * ) x2 ) ; int N ; } int main() { int final ; cin >> N ; int massiv [ N ] ; int d ; int R ; for ( R = 0 ; R < N ; R ++ ) cin >> d ; massiv [ R ] = d ; qsort ( massiv , N , sizeof ( int ) , compare ) ; } if ( N % 2 == 0 ) final = massiv [ R / 2 - 1 ] ; else final = massiv [ R / 2 ] ; cout << final << endl ; } long long n , arr [ 1001 ] ; }"}}
{"translation": {"en": "read n [ENDL] for i from 0 to n exclusive , read arr [ i ] [ENDL] sort arr [ENDL] if n is even [ENDL] print arr [ ( n / 2 ) - 1 ] [ENDL] else [ENDL] print arr [ n / 2 ] [ENDL] create integer array a with size 1005", "c++": "int main() { cin >> n ; for ( int i = 0 ; i < n ; i ++ ) cin >> arr [ i ] ; sort ( arr , arr + n ) ; if ( n % 2 == 0 ) cout << arr [ ( n / 2 ) - 1 ] << endl ; else cout << arr [ n / 2 ] << endl ; int a [ 1005 ] ; return 0; }"}}
{"translation": {"en": "create integer n [ENDL] create integer sum with sum = 0 [ENDL] read n [ENDL] for i = 0 to n exclusive , read a [ i ] [ENDL] sort elements from a to a + n [ENDL] if n % 2 [ENDL] print a [ n / 2 ] print newline [ENDL] else [ENDL] print a [ n / 2 - 1 ] print newline [ENDL] create constant integer N with N = 100010", "c++": "int main() { int n ; int sum = 0 ; cin >> n ; for ( int i = 0 ; i < n ; i ++ ) cin >> a [ i ] ; sort ( a , a + n ) ; if ( n % 2 ) cout << a [ n / 2 ] << endl ; else cout << a [ n / 2 - 1 ] << endl ; const int N = 100010 ; }"}}
{"translation": {"en": "create integer array a with size N [ENDL] create integer N [ENDL] read n [ENDL] for i = 1 to n inclusive , read a [ i ] [ENDL] sort elements from a + 1 to a + n + 1 [ENDL] print a [ ( n + 1 ) / 2 ] print \" \\ n \" [ENDL] n = int", "c++": "int a [ N ] ; int n ; int main() { cin >> n ; for ( int i = 1 ; i <= n ; i ++ ) cin >> a [ i ] ; sort ( a + 1 , a + n + 1 ) ; cout << a [ ( n + 1 ) / 2 ] << \" \\n \" ; int n ; return 0; }"}}
{"translation": {"en": "read n [ENDL] v = vector of int [ENDL] for i = 0 to n exclusive [ENDL] x = int [ENDL] read x [ENDL] add x at end of v [ENDL] sort first n items of v in numeric ascending order [ENDL] turn = 0 [ENDL] while size of v is not 1 [ENDL] if turn is even [ENDL] erase first item of v [ENDL] else [ENDL] pop last item of v [ENDL] turn = ( incremented value of turn ) modulo 2 [ENDL] print first item of v [ENDL] create int n , a [ 1001 ]", "c++": "int main() { cin >> n ; vector < int > v ; for ( int i = 0 ; i < n ; i ++ ) int x ; cin >> x ; v . push_back ( x ) ; sort ( v . begin ( ) , v . begin ( ) + n , greater < int > ( ) ) ; } int turn = 0 ; while ( v . size ( ) != 1 ) if ( turn % 2 == 0 ) v . erase ( v . begin ( ) ) ; else v . pop_back ( ) ; turn = ( ++ turn ) % 2 ; } cout << v . front ( ) << endl ; } int n , a [ 1001 ] ; return 0; }"}}
{"translation": {"en": "read n [ENDL] for i = 1 to n inclusive , read a [ i ] [ENDL] sort elements bewteen a + 1 and a + n + 1 [ENDL] if n is even [ENDL] print a [ n / 2 ] [ENDL] otherwise [ENDL] print a [ n / 2 + 1 ] and a newline [ENDL] create long int array arr with size 1001", "c++": "int main() { cin >> n ; for ( int i = 1 ; i <= n ; i ++ ) cin >> a [ i ] ; sort ( a + 1 , a + n + 1 ) ; if ( n % 2 == 0 ) cout << a [ n / 2 ] << endl ; else cout << a [ n / 2 + 1 ] << endl ; long int arr [ 1001 ] ; }"}}
{"translation": {"en": "create integers n , i and mid [ENDL] read input to n [ENDL] for i from 0 to n exclusive , read arr [ i ] [ENDL] sort arr [ENDL] mid = n / 2 rounded up [ENDL] print arr [ mid - 1 ] [ENDL] maxn = const integer with maxn = 1e3 + 10", "c++": "int n , i , mid ; int main() { cin >> n ; for ( i = 0 ; i < n ; i ++ ) { cin >> arr [ i ] ; } sort ( arr , arr + n ) ; mid = ceil ( ( double ) n / 2 ) ; cout << arr [ mid - 1 ] << endl ; const int maxn = 1e3 + 10 ; }"}}
{"translation": {"en": "n = integer [ENDL] a = integer array of size maxn [ENDL] read n [ENDL] for i = 1 to n , read a [ i ] [ENDL] sort a + 1 and a + n + 1 [ENDL] print a [ ( n + 1 ) / 2 ] [ENDL] declare integer variable n", "c++": "int n ; int main() { int a [ maxn ] ; cin >> n ; for ( int i = 1 ; i <= n ; i ++ ) cin >> a [ i ] ; sort ( a + 1 , a + n + 1 ) ; cout << a [ ( n + 1 ) / 2 ] << endl ; int n ; return 0; }"}}
{"translation": {"en": "read input to n [ENDL] declare vector of integers a with size n [ENDL] for i from 0 to n exclusive , read a [ i ] [ENDL] sort a [ENDL] create integer idx = ( length of a - 1 ) / 2 [ENDL] print a [ idx ] [ENDL] let int n", "c++": "int main() { cin >> n ; vector < int > a ( n ) ; for ( int i = 0 ; i < n ; i ++ ) { cin >> a [ i ] ; } sort ( a . begin ( ) , a . end ( ) ) ; int idx = ( a . size ( ) - 1 ) / 2 ; cout << a [ idx ] << endl ; int n ; return 0; }"}}
{"translation": {"en": "read n [ENDL] create int array a of size n [ENDL] for i = 0 to n exclusive , read a [ i ] [ENDL] for i = 0 to n - 1 exclusive [ENDL] for j = 0 to n - i - 1 exclusive [ENDL] if a [ j ] is greater than a [ j + 1 ] , swap values between a [ j ] and a [ j + 1 ] [ENDL] if n modulo 2 is 0 [ENDL] print a [ n / 2 - 1 ] [ENDL] else [ENDL] print a [ n / 2 ] [ENDL] let int n and int array a of size 1110", "c++": "int main() { cin >> n ; int a [ n ] ; for ( int i = 0 ; i < n ; i ++ ) { cin >> a [ i ] ; } for ( int i = 0 ; i < n - 1 ; i ++ ) for ( int j = 0 ; j < n - i - 1 ; j ++ ) if ( a [ j ] > a [ j + 1 ] ) { swap ( a [ j ] , a [ j + 1 ] ) ; } if ( n % 2 == 0 ) } } cout << a [ n / 2 - 1 ] << endl ; else cout << a [ n / 2 ] << endl ; int n , a [ 1110 ] ; } return 0; }"}}
{"translation": {"en": "read n [ENDL] for i = 0 to n exclusive , read a [ i ] [ENDL] sort array a [ENDL] print a [ ( n - 1 ) / 2 ] [ENDL] create int n", "c++": "int main() { cin >> n ; for ( int i = 0 ; i < n ; i ++ ) { cin >> a [ i ] ; } sort ( a , a + n ) ; cout << a [ ( n - 1 ) / 2 ] << endl ; int n ; return 0; }"}}
